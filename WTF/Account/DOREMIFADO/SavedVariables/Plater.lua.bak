
PlaterDB = {
["captured_spells"] = {
[322450] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["npcID"] = 164517,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2393,
},
[7870] = {
["isChanneled"] = false,
["source"] = "Elervina",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1863,
},
[323149] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Ingra Maloch",
["encounterID"] = 2397,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164567,
},
[324737] = {
["source"] = "Mistveil Defender",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 171772,
},
[456468] = {
["isChanneled"] = false,
["source"] = "Skardyn Husk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213566,
},
[462661] = {
["source"] = "Void Emissary",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 229537,
},
[1604] = {
["type"] = "DEBUFF",
["source"] = "Scavenging Saurid",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223940,
},
[323057] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Ingra Maloch",
["encounterID"] = 2397,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164567,
},
[322486] = {
["isChanneled"] = false,
["source"] = "Tirnenn Villager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164929,
},
[331440] = {
["encounterName"] = "Ingra Maloch",
["type"] = "BUFF",
["source"] = "Ingra Maloch",
["encounterID"] = 2397,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164567,
},
[322709] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["npcID"] = 164517,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2393,
},
[325027] = {
["source"] = "Drust Boughbreaker",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164926,
},
[461870] = {
["isChanneled"] = false,
["source"] = "Xal'atath",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229227,
},
[323250] = {
["encounterName"] = "Ingra Maloch",
["type"] = "DEBUFF",
["source"] = "Droman Oulfarran",
["encounterID"] = 2397,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164804,
},
[463236] = {
["source"] = "Mistveil Defender",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 171772,
},
[324776] = {
["isChanneled"] = false,
["source"] = "Mistveil Shaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166275,
},
[462508] = {
["isChanneled"] = true,
["source"] = "Void Emissary",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229537,
},
[322967] = {
["isChanneled"] = false,
["source"] = "Drust Spiteclaw",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165111,
},
[340208] = {
["isChanneled"] = false,
["source"] = "Mistveil Matriarch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 173655,
},
[322968] = {
["isChanneled"] = false,
["source"] = "Drust Spiteclaw",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165111,
},
[463208] = {
["source"] = "Mistveil Guardian",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166276,
},
[462510] = {
["source"] = "Void Emissary",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 229537,
},
[322557] = {
["isChanneled"] = false,
["source"] = "Drust Soulcleaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164920,
},
[326018] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Spinemaw Larva",
["npcID"] = 167117,
},
[463210] = {
["source"] = "Mistveil Guardian",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166276,
},
[321891] = {
["encounterName"] = "Mistcaller",
["source"] = "Illusionary Vulpin",
["encounterID"] = 2392,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165251,
},
[321669] = {
["encounterName"] = "Mistcaller",
["source"] = "Illusionary Clone",
["encounterID"] = 2392,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165108,
},
[322654] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["npcID"] = 164517,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2393,
},
[325163] = {
["isChanneled"] = false,
["source"] = "Mistveil Defender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 171772,
},
[336752] = {
["encounterName"] = "Mistcaller",
["type"] = "DEBUFF",
["source"] = "Mistcaller",
["encounterID"] = 2392,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164501,
},
[422382] = {
["isChanneled"] = false,
["source"] = "Treant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54983,
},
[326021] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spinemaw Gorger",
["npcID"] = 172312,
},
[325418] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spinemaw Acidgullet",
["npcID"] = 167113,
},
[321005] = {
["isChanneled"] = false,
["source"] = "Ingra Maloch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164567,
},
[456212] = {
["type"] = "DEBUFF",
["source"] = "Webbed Ore Deposit",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 226716,
},
[24331] = {
["type"] = "DEBUFF",
["source"] = "Scavenging Saurid",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223940,
},
[321006] = {
["isChanneled"] = false,
["source"] = "Ingra Maloch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164567,
},
[163177] = {
["type"] = "BUFF",
["source"] = "Black Ox Statue",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 61146,
},
[321893] = {
["encounterName"] = "Mistcaller",
["type"] = "DEBUFF",
["source"] = "Illusionary Vulpin",
["encounterID"] = 2392,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165251,
},
[433622] = {
["type"] = "DEBUFF",
["source"] = "Brann Bronzebeard",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 210759,
},
[463247] = {
["isChanneled"] = false,
["source"] = "Mistveil Defender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 171772,
},
[322563] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["npcID"] = 164517,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2393,
},
[456453] = {
["isChanneled"] = false,
["source"] = "Skardyn Husk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213566,
},
[108446] = {
["isChanneled"] = false,
["source"] = "Unknown",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1860,
},
[341709] = {
["encounterName"] = "Mistcaller",
["source"] = "Mistcaller",
["encounterID"] = 2392,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164501,
},
[166302] = {
["type"] = "BUFF",
["source"] = "Blingtron 5000",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 77789,
},
[321834] = {
["encounterName"] = "Mistcaller",
["source"] = "Mistcaller",
["encounterID"] = 2392,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164501,
},
[463217] = {
["isChanneled"] = false,
["source"] = "Mistveil Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166276,
},
[328756] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Ingra Maloch",
["encounterID"] = 2397,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164567,
},
[5672] = {
["isChanneled"] = false,
["source"] = "Healing Stream Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3527,
},
[317898] = {
["source"] = "Mistveil Stinger",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166304,
},
[323137] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Droman Oulfarran",
["encounterID"] = 2397,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164804,
},
[321772] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Droman Oulfarran",
["encounterID"] = 2397,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164804,
},
[142421] = {
["isChanneled"] = false,
["source"] = "Treant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54983,
},
[326281] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["npcID"] = 164517,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2393,
},
[323138] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Ingra Maloch",
["encounterID"] = 2397,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164567,
},
[323043] = {
["isChanneled"] = false,
["source"] = "Drust Spiteclaw",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165111,
},
[325223] = {
["isChanneled"] = false,
["source"] = "Mistveil Stinger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166304,
},
[386176] = {
["type"] = "BUFF",
["source"] = "Unknown",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17252,
},
[326090] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spinemaw Reaver",
["npcID"] = 167116,
},
[340189] = {
["isChanneled"] = false,
["source"] = "Mistveil Matriarch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 173655,
},
[322614] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["npcID"] = 164517,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2393,
},
[321952] = {
["isChanneled"] = false,
["source"] = "Tirnenn Villager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164929,
},
[463602] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["npcID"] = 164517,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2393,
},
[321010] = {
["isChanneled"] = false,
["source"] = "Ingra Maloch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164567,
},
[322569] = {
["isChanneled"] = false,
["source"] = "Drust Soulcleaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164920,
},
[322550] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["npcID"] = 164517,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2393,
},
[326092] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Spinemaw Reaver",
["npcID"] = 167116,
},
[325224] = {
["isChanneled"] = false,
["source"] = "Mistveil Stinger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166304,
},
[444490] = {
["type"] = "BUFF",
["source"] = "Ancestor",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221177,
},
[460092] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spinemaw Staghorn",
["npcID"] = 167111,
},
[340160] = {
["isChanneled"] = false,
["source"] = "Mistveil Matriarch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 173655,
},
[324909] = {
["isChanneled"] = true,
["source"] = "Drust Boughbreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164926,
},
[454905] = {
["type"] = "DEBUFF",
["source"] = "Kiji the Stomper",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 222720,
},
[321968] = {
["isChanneled"] = false,
["source"] = "Tirnenn Villager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164929,
},
[463248] = {
["isChanneled"] = false,
["source"] = "Mistveil Defender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 171772,
},
[463256] = {
["isChanneled"] = false,
["source"] = "Mistveil Defender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 171772,
},
[324986] = {
["isChanneled"] = false,
["source"] = "Mistveil Stalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166301,
},
[324914] = {
["isChanneled"] = false,
["source"] = "Mistveil Tender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166299,
},
[326319] = {
["isChanneled"] = false,
["source"] = "Drust Harvester",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164921,
},
[463257] = {
["isChanneled"] = false,
["source"] = "Mistveil Defender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 171772,
},
[324859] = {
["source"] = "Mistveil Guardian",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166276,
},
[324923] = {
["isChanneled"] = false,
["source"] = "Drust Boughbreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164926,
},
[340544] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spinemaw Staghorn",
["npcID"] = 167111,
},
[323177] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Droman Oulfarran",
["encounterID"] = 2397,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164804,
},
[324987] = {
["isChanneled"] = false,
["source"] = "Mistveil Stalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166301,
},
[322938] = {
["isChanneled"] = true,
["source"] = "Drust Harvester",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164921,
},
[323146] = {
["encounterName"] = "Ingra Maloch",
["type"] = "DEBUFF",
["source"] = "Ingra Maloch",
["encounterID"] = 2397,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164567,
},
[322939] = {
["source"] = "Drust Harvester",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164921,
},
[336499] = {
["encounterName"] = "Mistcaller",
["source"] = "Mistcaller",
["encounterID"] = 2392,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164501,
},
[321725] = {
["encounterName"] = "Mistcaller",
["type"] = "BUFF",
["source"] = "Illusionary Clone",
["encounterID"] = 2392,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165108,
},
[323020] = {
["isChanneled"] = false,
["source"] = "Drust Spiteclaw",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165111,
},
[325413] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spinemaw Acidgullet",
["npcID"] = 167113,
},
[1459] = {
["type"] = "BUFF",
["source"] = "Meredy Huntswell",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209059,
},
[325021] = {
["source"] = "Mistveil Stalker",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166301,
},
[322767] = {
["isChanneled"] = false,
["source"] = "Drust Harvester",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164921,
},
[1126] = {
["type"] = "BUFF",
["source"] = "Crenna Earth-Daughter",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209072,
},
[322527] = {
["encounterName"] = "Tred'ova",
["type"] = "DEBUFF",
["source"] = "Tred'ova",
["npcID"] = 164517,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2393,
},
},
["profileKeys"] = {
["Yükisan - Dalaran"] = "ClaudioWithin",
["Yükidnapé - Dalaran"] = "Default",
["Pwout - Dalaran"] = "Claudio",
["Canplay - Dalaran"] = "Claudio",
["Yükatechisme - Dalaran"] = "Default",
["Yükringe - Dalaran"] = "Default",
["Yükikstarter - Dalaran"] = "Default",
["Pantoufle - Dalaran"] = "Default",
["Superbarbe - Dalaran"] = "Claudio",
["Peestache - Dalaran"] = "Claudio",
["Yukiwaifu - Dalaran"] = "Default",
["Wifi - Dalaran"] = "Claudio",
["Yükimp - Dalaran"] = "ClaudioWithin",
},
["captured_casts"] = {
[36807] = {
["source"] = "Murkblood Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 17771,
},
[386509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ezrigeth",
["npcID"] = 187666,
},
[398796] = {
["source"] = "Farscale Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 200486,
},
[124800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krik'thik Limbpincer",
["npcID"] = 61181,
},
[413131] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[294362] = {
["npcID"] = 155908,
},
[86405] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rockshell Snapclaw",
["npcID"] = 63369,
},
[327127] = {
["source"] = "Flesh Crafter",
["event"] = "SPELL_CAST_START",
["npcID"] = 165872,
},
[331223] = {
["npcID"] = 162763,
},
[456136] = {
["source"] = "Murkshade",
["event"] = "SPELL_CAST_START",
["npcID"] = 218452,
},
[339415] = {
["encounterName"] = "Xav the Unfallen",
["encounterID"] = 2366,
["npcID"] = 162329,
},
[58053] = {
["npcID"] = 30189,
},
[427469] = {
["source"] = "Fanatical Conjuror",
["event"] = "SPELL_CAST_START",
["npcID"] = 206698,
},
[413135] = {
["source"] = "Forgemaster Kraglin",
["event"] = "SPELL_CAST_START",
["npcID"] = 201625,
},
[456138] = {
["source"] = "Grimlurk",
["event"] = "SPELL_CAST_START",
["npcID"] = 223091,
},
[368085] = {
["npcID"] = 183722,
},
[394706] = {
["source"] = "Unstable Frost",
["event"] = "SPELL_CAST_START",
["npcID"] = 198702,
},
[404945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winglord Iyazael",
["npcID"] = 199401,
},
[275937] = {
["source"] = "Frigidus",
["event"] = "SPELL_CAST_START",
["npcID"] = 204425,
},
[392659] = {
["source"] = "Crazed Alpha",
["event"] = "SPELL_CAST_START",
["npcID"] = 194224,
},
[129921] = {
["isChanneled"] = true,
["source"] = "Maw of Despair",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59237,
},
[228086] = {
["npcID"] = 114584,
},
[320989] = {
["npcID"] = 158870,
},
[347610] = {
["encounterName"] = "So'azmi",
["encounterID"] = 2437,
["npcID"] = 175806,
},
[447950] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Chamber Expeller",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 224368,
},
[376279] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["encounterID"] = 2639,
["event"] = "SPELL_CAST_START",
["npcID"] = 190496,
},
[329181] = {
["encounterName"] = "Sire Denathrius",
["npcID"] = 167406,
},
[384471] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lava Tarantula",
["npcID"] = 191672,
},
[320991] = {
["npcID"] = 162038,
},
[300514] = {
["npcID"] = 150146,
},
[384473] = {
["source"] = "Icegnaw Mantacorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 187826,
},
[392665] = {
["source"] = "Time-Lost Thunderhide",
["event"] = "SPELL_CAST_START",
["npcID"] = 187258,
},
[125315] = {
["isChanneled"] = true,
["source"] = "Bataari War Yeti",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 64185,
},
[349663] = {
["encounterName"] = "The Grand Menagerie",
["encounterID"] = 2441,
["npcID"] = 176556,
},
[419287] = {
["source"] = "Crenna Earth-Daughter",
["event"] = "SPELL_CAST_START",
["npcID"] = 209072,
},
[119684] = {
["encounterName"] = "Xin the Weaponmaster",
["source"] = "Xin the Weaponmaster",
["encounterID"] = 1441,
["event"] = "SPELL_CAST_START",
["npcID"] = 61398,
},
[384476] = {
["source"] = "Nokhud Longbow",
["event"] = "SPELL_CAST_START",
["npcID"] = 192789,
},
[363999] = {
["npcID"] = 183747,
},
[122244] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Engineer",
["npcID"] = 62632,
},
[400859] = {
["source"] = "Skornak",
["event"] = "SPELL_CAST_START",
["npcID"] = 203643,
},
[445910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sporbit",
["npcID"] = 213434,
},
[386526] = {
["source"] = "Nullmagic Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 187246,
},
[331237] = {
["npcID"] = 162763,
},
[31717] = {
["encounterName"] = "The Black Stalker",
["source"] = "The Black Stalker",
["encounterID"] = 1948,
["event"] = "SPELL_CAST_START",
["npcID"] = 17882,
},
[320999] = {
["npcID"] = 164852,
},
[392671] = {
["source"] = "Vicious Ice Borer",
["event"] = "SPELL_CAST_START",
["npcID"] = 186392,
},
[321000] = {
["npcID"] = 161397,
},
[130436] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Mender",
["npcID"] = 66286,
},
[392672] = {
["source"] = "Sundered Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 196927,
},
[427484] = {
["source"] = "Fanatical Conjuror",
["event"] = "SPELL_CAST_START",
["npcID"] = 206698,
},
[382434] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[134920] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["encounterID"] = 1565,
["event"] = "SPELL_CAST_START",
["npcID"] = 67977,
},
[347623] = {
["encounterName"] = "So'azmi",
["encounterID"] = 2437,
["npcID"] = 175806,
},
[382435] = {
["source"] = "Decay Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186191,
},
[376292] = {
["encounterName"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["npcID"] = 184125,
},
[421343] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[310766] = {
["source"] = "Eye of the Depths",
["event"] = "SPELL_CAST_START",
["npcID"] = 159510,
},
[282098] = {
["encounterName"] = "Conclave of the Chosen",
["encounterID"] = 2268,
["npcID"] = 144747,
},
[447966] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Drahga Shadowburner",
["encounterID"] = 1048,
["event"] = "SPELL_CAST_START",
["npcID"] = 40319,
},
[137994] = {
["source"] = "Dark Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 69702,
},
[118663] = {
["source"] = "Snagtooth Hooligan",
["event"] = "SPELL_CAST_START",
["npcID"] = 56462,
},
[372201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Irontorch",
["npcID"] = 189464,
},
[333294] = {
["npcID"] = 169893,
},
[396775] = {
["source"] = "Klozicc the Ascended",
["event"] = "SPELL_CAST_START",
["npcID"] = 187209,
},
[137995] = {
["source"] = "Dark Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 69702,
},
[321009] = {
["encounterName"] = "Kin-Tara",
["encounterID"] = 2357,
["npcID"] = 162059,
},
[323057] = {
["encounterName"] = "Ingra Maloch",
["encounterID"] = 2397,
["npcID"] = 164567,
},
[390633] = {
["npcID"] = 189954,
},
[167688] = {
["encounterName"] = "Nitrogg Thundertower",
["encounterID"] = 1732,
["npcID"] = 82721,
},
[411111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Calibrating Scent Matrix",
["npcID"] = 203606,
},
[323058] = {
["npcID"] = 165609,
},
[392682] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jadzigeth",
["npcID"] = 188447,
},
[411112] = {
["event"] = "SPELL_CAST_START",
["source"] = "Calibrating Scent Matrix",
["npcID"] = 203606,
},
[323059] = {
["encounterName"] = "Ingra Maloch",
["encounterID"] = 2397,
["npcID"] = 164804,
},
[384492] = {
["source"] = "Nokhud Beastmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 192794,
},
[394731] = {
["source"] = "Unstable Earth",
["event"] = "SPELL_CAST_START",
["npcID"] = 198709,
},
[333299] = {
["npcID"] = 169893,
},
[384493] = {
["source"] = "Shikaar Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 184657,
},
[396780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Subjugator",
["npcID"] = 195837,
},
[339444] = {
["npcID"] = 173276,
},
[439784] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[400877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flowfy",
["npcID"] = 203660,
},
[172810] = {
["npcID"] = 81603,
},
[323064] = {
["encounterName"] = "Hakkar, the Soulflayer",
["npcID"] = 164558,
["encounterID"] = 2395,
},
[188169] = {
["encounterName"] = "Rokmora",
["source"] = "Rokmora",
["encounterID"] = 1790,
["event"] = "SPELL_CAST_START",
["npcID"] = 91003,
},
[282110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaldorei Archer",
["npcID"] = 210645,
},
[124297] = {
["source"] = "Yorik Sharpeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 50336,
},
[386546] = {
["source"] = "Arcane Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 186741,
},
[355830] = {
["npcID"] = 179893,
},
[294398] = {
["source"] = "Samara",
["event"] = "SPELL_CAST_START",
["npcID"] = 146164,
},
[386547] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[396786] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Controller",
["npcID"] = 191654,
},
[199433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormfang Bonecaster",
["npcID"] = 187931,
},
[390644] = {
["npcID"] = 189954,
},
[400883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Blazestalker",
["npcID"] = 199828,
},
[382454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Dragonspawn",
["npcID"] = 188802,
},
[445935] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bomb",
["npcID"] = 222265,
},
[316927] = {
["event"] = "SPELL_CAST_START",
["source"] = "Barrow Spider",
["npcID"] = 160394,
},
[118667] = {
["source"] = "Twitchheel Hoarder",
["event"] = "SPELL_CAST_START",
["npcID"] = 56538,
},
[366074] = {
["npcID"] = 183927,
},
[300547] = {
["npcID"] = 150142,
},
[271880] = {
["source"] = "Forgemaster Farthing",
["event"] = "SPELL_CAST_START",
["npcID"] = 134328,
},
[366077] = {
["npcID"] = 183925,
},
[400889] = {
["source"] = "Rampant Tide",
["event"] = "SPELL_CAST_START",
["npcID"] = 201463,
},
[394746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskron the Dazzling",
["npcID"] = 193273,
},
[417272] = {
["source"] = "The Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 205305,
},
[209676] = {
["encounterName"] = "Advisor Melandrus",
["npcID"] = 104218,
["encounterID"] = 1870,
},
[372222] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 186739,
},
[267787] = {
["encounterName"] = "MOTHER",
["encounterID"] = 2141,
["npcID"] = 135452,
},
[450037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Spire",
["npcID"] = 220068,
},
[372223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonetender",
["npcID"] = 189265,
},
[392701] = {
["source"] = "Zerimek",
["event"] = "SPELL_CAST_START",
["npcID"] = 188451,
},
[394749] = {
["source"] = "Unstable Storm",
["event"] = "SPELL_CAST_START",
["npcID"] = 198716,
},
[343556] = {
["encounterName"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["encounterID"] = 2389,
},
[386559] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["encounterID"] = 2617,
["event"] = "SPELL_CAST_START",
["npcID"] = 189727,
},
[396798] = {
["source"] = "Ohn'ir Windcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 199498,
},
[166675] = {
["npcID"] = 80937,
},
[372226] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonetender",
["npcID"] = 189265,
},
[114062] = {
["encounterName"] = "Jandice Barov",
["source"] = "Jandice Barov",
["npcID"] = 59184,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1427,
},
[329224] = {
["npcID"] = 168022,
},
[275983] = {
["npcID"] = 157820,
},
[400896] = {
["source"] = "Rampant Tide",
["event"] = "SPELL_CAST_START",
["npcID"] = 201463,
},
[361989] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 181954,
["encounterID"] = 2546,
},
[275984] = {
["npcID"] = 166936,
},
[450043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Spire",
["npcID"] = 220068,
},
[419327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timeline Marauder",
["npcID"] = 199748,
},
[396802] = {
["source"] = "Ohn'ir Windcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 199498,
},
[447996] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rustcloud Runt",
["npcID"] = 222796,
},
[257802] = {
["source"] = "Clobex",
["event"] = "SPELL_CAST_START",
["npcID"] = 127732,
},
[331275] = {
["npcID"] = 167533,
},
[269843] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Unbound Abomination",
["encounterID"] = 2123,
["event"] = "SPELL_CAST_START",
["npcID"] = 133007,
},
[115087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tigerfly",
["npcID"] = 56283,
},
[364040] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2553,
["npcID"] = 184140,
},
[300560] = {
["npcID"] = 150142,
},
[46029] = {
["source"] = "Sunblade Blood Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 24684,
},
[321038] = {
["npcID"] = 162039,
},
[396805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorger",
["npcID"] = 192759,
},
[409093] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[396807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorger",
["npcID"] = 192759,
},
[157465] = {
["encounterName"] = "Vigilant Kaathar",
["source"] = "Vigilant Kaathar",
["encounterID"] = 1686,
["event"] = "SPELL_CAST_START",
["npcID"] = 75839,
},
[382474] = {
["source"] = "Decay Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186191,
},
[273944] = {
["encounterName"] = "Mythrax",
["encounterID"] = 2135,
["npcID"] = 139381,
},
[341520] = {
["npcID"] = 173973,
},
[400905] = {
["source"] = "Kalecgos",
["event"] = "SPELL_CAST_START",
["npcID"] = 198942,
},
[321043] = {
["npcID"] = 158867,
},
[384524] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[22121] = {
["source"] = "Timberstep Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 194041,
},
[60876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Recalled Ghoul",
["npcID"] = 221434,
},
[439814] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[396812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Scepter",
["npcID"] = 196576,
},
[394765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Morgg",
["npcID"] = 189244,
},
[314903] = {
["source"] = "Ossirat",
["event"] = "SPELL_CAST_START",
["npcID"] = 161746,
},
[154396] = {
["encounterName"] = "High Sage Viryx",
["source"] = "High Sage Viryx",
["encounterID"] = 1701,
["event"] = "SPELL_CAST_START",
["npcID"] = 76266,
},
[278044] = {
["source"] = "Greater Venomsprout",
["event"] = "SPELL_CAST_START",
["npcID"] = 188814,
},
[47310] = {
["source"] = "Coren Direbrew",
["event"] = "SPELL_CAST_START",
["npcID"] = 23872,
},
[396814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Controller",
["npcID"] = 195836,
},
[329239] = {
["npcID"] = 163882,
},
[331288] = {
["npcID"] = 167532,
},
[407055] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Seer Jhatal",
["npcID"] = 199842,
},
[175899] = {
["source"] = "Gorian Runemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 81272,
},
[345623] = {
["npcID"] = 165824,
},
[384531] = {
["encounterName"] = "Gutshot",
["source"] = "Rotfang Hyena",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 194745,
},
[370198] = {
["source"] = "Kauj",
["event"] = "SPELL_CAST_START",
["npcID"] = 186386,
},
[396819] = {
["source"] = "Vorgan the Mangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 190467,
},
[448013] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Drahga Shadowburner",
["encounterID"] = 1048,
["event"] = "SPELL_CAST_START",
["npcID"] = 40319,
},
[384533] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Tuskarr Hero",
["npcID"] = 194731,
},
[372247] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskpaw Hidestitcher",
["npcID"] = 187941,
},
[415250] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invasive Sporecap",
["npcID"] = 207482,
},
[407060] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Seer Jhatal",
["npcID"] = 199842,
},
[443921] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Ethereal",
["npcID"] = 221305,
},
[396823] = {
["source"] = "Vorgan the Mangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 190467,
},
[122259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Engineer",
["npcID"] = 62632,
},
[368155] = {
["npcID"] = 185505,
},
[378394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seaborne Elemental",
["npcID"] = 214549,
},
[198428] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["encounterID"] = 1791,
["event"] = "SPELL_CAST_START",
["npcID"] = 91004,
},
[390681] = {
["npcID"] = 189954,
},
[319010] = {
["npcID"] = 161530,
},
[396825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Controller",
["npcID"] = 195836,
},
[431637] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Nightfall Shadowalker",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 213895,
},
[417303] = {
["source"] = "The Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 205305,
},
[419351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Saboteur",
["npcID"] = 208438,
},
[388635] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Volatile Spark",
["npcID"] = 194999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[456211] = {
["source"] = "Scary Sticker",
["event"] = "SPELL_CAST_START",
["npcID"] = 216948,
},
[378397] = {
["npcID"] = 191095,
},
[282153] = {
["encounterName"] = "Mekkatorque",
["encounterID"] = 2276,
["npcID"] = 144796,
},
[431639] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Saboteur",
["npcID"] = 212715,
},
[321061] = {
["encounterName"] = "The Manastorms",
["npcID"] = 164555,
["encounterID"] = 2394,
},
[445974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bomb",
["npcID"] = 222281,
},
[392733] = {
["source"] = "Greenbelt Turtle",
["event"] = "SPELL_CAST_START",
["npcID"] = 192775,
},
[405020] = {
["source"] = "Enraged Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200407,
},
[392734] = {
["source"] = "Sundered Lookout",
["event"] = "SPELL_CAST_START",
["npcID"] = 196926,
},
[394782] = {
["source"] = "Ty'foon the Ascended",
["event"] = "SPELL_CAST_START",
["npcID"] = 191354,
},
[407069] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[192288] = {
["encounterName"] = "Hyrja",
["source"] = "Olmyr the Enlightened",
["encounterID"] = 1806,
["event"] = "SPELL_CAST_START",
["npcID"] = 97202,
},
[443929] = {
["source"] = "Kaheti Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 218315,
},
[405022] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[368163] = {
["npcID"] = 178229,
},
[329256] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 169271,
},
[364068] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 183666,
["encounterID"] = 2546,
},
[124309] = {
["source"] = "Ashfang Hyena",
["event"] = "SPELL_CAST_START",
["npcID"] = 60932,
},
[370212] = {
["source"] = "Qalashi Ironskin",
["event"] = "SPELL_CAST_START",
["npcID"] = 191524,
},
[331305] = {
["npcID"] = 161599,
},
[431645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Apothecary",
["npcID"] = 219651,
},
[376356] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scout Watu",
["npcID"] = 190025,
},
[388643] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[325163] = {
["npcID"] = 171772,
},
[368166] = {
["npcID"] = 183814,
},
[372262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonesplitter",
["npcID"] = 189467,
},
[439838] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[450077] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["encounterID"] = 1049,
["event"] = "SPELL_CAST_START",
["npcID"] = 40484,
},
[396836] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Glacier",
["npcID"] = 194798,
},
[448030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agile Pursuer",
["npcID"] = 223181,
},
[319022] = {
["npcID"] = 158259,
},
[364073] = {
["npcID"] = 184735,
},
[229151] = {
["encounterName"] = "Viz'aduum the Watcher",
["encounterID"] = 2017,
["npcID"] = 114790,
},
[353835] = {
["encounterName"] = "Myza's Oasis",
["encounterID"] = 2440,
["npcID"] = 176565,
},
[290355] = {
["npcID"] = 148119,
},
[120215] = {
["isChanneled"] = true,
["source"] = "Abomination of Anger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61707,
},
[458271] = {
["source"] = "Sakret'na",
["event"] = "SPELL_CAST_START",
["npcID"] = 215841,
},
[353836] = {
["encounterName"] = "Myza's Oasis",
["encounterID"] = 2440,
["npcID"] = 176565,
},
[310834] = {
["source"] = "Demented Knife-Twister",
["event"] = "SPELL_CAST_START",
["npcID"] = 159417,
},
[362028] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[402985] = {
["source"] = "Gholna",
["event"] = "SPELL_CAST_START",
["npcID"] = 199853,
},
[355887] = {
["npcID"] = 181403,
},
[394795] = {
["source"] = "Stonewrecker Tokara",
["event"] = "SPELL_CAST_START",
["npcID"] = 193442,
},
[355888] = {
["npcID"] = 177807,
},
[260894] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[205605] = {
["npcID"] = 166137,
},
[331316] = {
["npcID"] = 167538,
},
[310839] = {
["source"] = "Occult Shadowmender",
["event"] = "SPELL_CAST_START",
["npcID"] = 159425,
},
[226083] = {
["npcID"] = 161528,
},
[284219] = {
["npcID"] = 150297,
},
[400941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Bones",
["npcID"] = 203472,
},
[394798] = {
["source"] = "Azra's Prized Peony",
["event"] = "SPELL_CAST_START",
["npcID"] = 193135,
},
[183081] = {
["source"] = "Kirin Tor Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 104091,
},
[450088] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["encounterID"] = 1049,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40484,
},
[431659] = {
["source"] = "Clotweave Widow",
["event"] = "SPELL_CAST_START",
["npcID"] = 216193,
},
[384561] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Tuskarr Hero",
["npcID"] = 194731,
},
[394800] = {
["source"] = "Council Earthcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 198500,
},
[394802] = {
["source"] = "Council Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 198502,
},
[445996] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["encounterID"] = 2837,
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[327227] = {
["encounterName"] = "Sire Denathrius",
["encounterID"] = 2407,
["npcID"] = 167406,
},
[405042] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200913,
},
[154415] = {
["encounterName"] = "Soulbinder Nyami",
["source"] = "Soulbinder Nyami",
["event"] = "SPELL_CAST_START",
["npcID"] = 76177,
},
[197418] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["npcID"] = 98696,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[405043] = {
["source"] = "Primal Nightflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 200931,
},
[392757] = {
["source"] = "Stormbound Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 195094,
},
[452142] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obstorn",
["npcID"] = 217082,
},
[9591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatescale Spitter",
["npcID"] = 63490,
},
[77216] = {
["npcID"] = 41182,
},
[450095] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Drahga Shadowburner",
["encounterID"] = 1048,
["event"] = "SPELL_CAST_START",
["npcID"] = 40319,
},
[396854] = {
["source"] = "Brutal Motivator",
["event"] = "SPELL_CAST_START",
["npcID"] = 184453,
},
[325183] = {
["npcID"] = 174941,
},
[355900] = {
["npcID"] = 177807,
},
[323137] = {
["encounterName"] = "Ingra Maloch",
["encounterID"] = 2397,
["npcID"] = 164804,
},
[327233] = {
["npcID"] = 168396,
},
[323138] = {
["encounterName"] = "Ingra Maloch",
["encounterID"] = 2397,
["npcID"] = 164567,
},
[378428] = {
["source"] = "Primal Avalanche",
["event"] = "SPELL_CAST_START",
["npcID"] = 188668,
},
[339521] = {
["npcID"] = 173484,
},
[390715] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 184972,
},
[400954] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volgoth the Flamebringer",
["npcID"] = 209129,
},
[153395] = {
["source"] = "Carrion Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 76057,
},
[366143] = {
["npcID"] = 184651,
},
[197422] = {
["encounterName"] = "Cordana Felsong",
["source"] = "Cordana Felsong",
["npcID"] = 95888,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1818,
},
[239401] = {
["encounterName"] = "Demonic Inquisition",
["source"] = "Belac",
["encounterID"] = 2048,
["event"] = "SPELL_CAST_START",
["npcID"] = 116691,
},
[183088] = {
["source"] = "Mightstone Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 90997,
},
[269900] = {
["npcID"] = 171141,
},
[396861] = {
["source"] = "Arcane Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 190779,
},
[347716] = {
["npcID"] = 176394,
},
[431674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaheti Ambusher",
["npcID"] = 217448,
},
[32363] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Nexus-Prince Shaffar",
["encounterID"] = 1899,
["event"] = "SPELL_CAST_START",
["npcID"] = 18344,
},
[298571] = {
["encounterName"] = "Trixie & Naeno",
["encounterID"] = 2312,
["npcID"] = 153756,
},
[276046] = {
["npcID"] = 138794,
},
[327240] = {
["npcID"] = 165911,
},
[394816] = {
["source"] = "Vorgan the Mangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 190467,
},
[339527] = {
["npcID"] = 173469,
},
[374339] = {
["event"] = "SPELL_CAST_START",
["source"] = "Refti Defender",
["npcID"] = 190340,
},
[75683] = {
["encounterName"] = "Lady Naz'jar",
["npcID"] = 40586,
["encounterID"] = 1045,
},
[360006] = {
["encounterName"] = "Lords of Dread",
["npcID"] = 181398,
["encounterID"] = 2543,
},
[339529] = {
["npcID"] = 173448,
},
[120222] = {
["source"] = "Seething Sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 61610,
},
[129437] = {
["source"] = "Krasari Hissing Wasp",
["event"] = "SPELL_CAST_START",
["npcID"] = 65802,
},
[347721] = {
["npcID"] = 176396,
},
[212784] = {
["npcID"] = 105715,
},
[323149] = {
["encounterName"] = "Ingra Maloch",
["encounterID"] = 2397,
["npcID"] = 164567,
},
[407107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthrender Ku'siva",
["npcID"] = 199840,
},
[392773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rymek",
["npcID"] = 188846,
},
[380487] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["encounterID"] = 2639,
["event"] = "SPELL_CAST_START",
["npcID"] = 190496,
},
[407108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthrender Ku'siva",
["npcID"] = 199840,
},
[126878] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taoshi",
["npcID"] = 62593,
},
[111008] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Zealot",
["npcID"] = 58590,
},
[191284] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["encounterID"] = 1805,
["event"] = "SPELL_CAST_START",
["npcID"] = 94960,
},
[138043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Warscout",
["npcID"] = 69768,
},
[212786] = {
["encounterName"] = "Oakheart",
["encounterID"] = 1837,
["npcID"] = 103344,
},
[321105] = {
["encounterName"] = "General Kaal",
["npcID"] = 168591,
["encounterID"] = 2363,
},
[470591] = {
["source"] = "Nightfall Hopestealer",
["event"] = "SPELL_CAST_START",
["npcID"] = 217517,
},
[142139] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthborn Hatred",
["npcID"] = 70822,
},
[225073] = {
["source"] = "Defiled Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 113089,
},
[125343] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Krosh",
["npcID"] = 56833,
},
[470592] = {
["source"] = "Nightfall Shadeguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 217519,
},
[162617] = {
["encounterName"] = "Rocketspark and Borka",
["encounterID"] = 1715,
["npcID"] = 77816,
},
[470593] = {
["encounterName"] = "Reformed Fury",
["source"] = "Reformed Fury",
["encounterID"] = 2998,
["event"] = "SPELL_CAST_START",
["npcID"] = 218034,
},
[415304] = {
["source"] = "Great Glorious Alliance Paladin",
["event"] = "SPELL_CAST_START",
["npcID"] = 207579,
},
[394827] = {
["source"] = "Windseeker Avash",
["event"] = "SPELL_CAST_START",
["npcID"] = 192045,
},
[456260] = {
["event"] = "SPELL_CAST_START",
["source"] = "You?",
["npcID"] = 226694,
},
[400971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sulfuric Rager",
["npcID"] = 202622,
},
[454213] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["npcID"] = 220314,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2960,
},
[382542] = {
["source"] = "Vicious Ice Slitherer",
["event"] = "SPELL_CAST_START",
["npcID"] = 186391,
},
[376399] = {
["npcID"] = 46915,
},
[394829] = {
["source"] = "Osseous Broodmother",
["event"] = "SPELL_CAST_START",
["npcID"] = 203348,
},
[117665] = {
["encounterName"] = "Sha of Doubt",
["source"] = "Sha of Doubt",
["encounterID"] = 1439,
["event"] = "SPELL_CAST_START",
["npcID"] = 56439,
},
[111010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Zealot",
["npcID"] = 58590,
},
[364114] = {
["encounterName"] = "Rygelon",
["npcID"] = 182777,
["encounterID"] = 2549,
},
[456263] = {
["source"] = "Candleflyer Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 220276,
},
[400974] = {
["source"] = "Flamebringer Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 203700,
},
[386640] = {
["source"] = "Tarasek Looter",
["event"] = "SPELL_CAST_START",
["npcID"] = 187242,
},
[396879] = {
["source"] = "Geothermus",
["event"] = "SPELL_CAST_START",
["npcID"] = 217416,
},
[415309] = {
["source"] = "Great Glorious Alliance Paladin",
["event"] = "SPELL_CAST_START",
["npcID"] = 207579,
},
[370259] = {
["source"] = "Primal Earth Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 187322,
},
[423501] = {
["source"] = "Rank Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 211121,
},
[294493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timeless Causality",
["npcID"] = 186464,
},
[394833] = {
["source"] = "Magmammoth Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 194912,
},
[76711] = {
["source"] = "Twilight Beguiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 40167,
},
[407120] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Axe Thrower",
["npcID"] = 203799,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[400977] = {
["source"] = "Zaqali Firecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 200454,
},
[172860] = {
["npcID"] = 83025,
},
[396882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Air Elemental",
["npcID"] = 196155,
},
[407121] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Warlock",
["npcID"] = 203857,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[378453] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Inferna the Bound",
["npcID"] = 186735,
},
[372310] = {
["source"] = "Jadzigeth",
["event"] = "SPELL_CAST_START",
["npcID"] = 188447,
},
[162622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huezeki Windsong",
["npcID"] = 205497,
},
[384597] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Warden",
["npcID"] = 193293,
},
[378454] = {
["source"] = "Primal Avalanche",
["event"] = "SPELL_CAST_START",
["npcID"] = 187082,
},
[372311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Trainee",
["npcID"] = 189266,
},
[319070] = {
["npcID"] = 163891,
},
[427601] = {
["source"] = "Lightspawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 206710,
},
[355930] = {
["npcID"] = 177816,
},
[407124] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Raider",
["npcID"] = 207969,
},
[450127] = {
["source"] = "Siegehold Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 216016,
},
[329310] = {
["npcID"] = 158813,
},
[374361] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[450128] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["npcID"] = 214263,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2894,
},
[388696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Moth'go Deeploom",
["npcID"] = 193735,
},
[130466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grunt des Flèches jumelles",
["npcID"] = 66269,
},
[409174] = {
["source"] = "Incarnation of Entropy",
["event"] = "SPELL_CAST_START",
["npcID"] = 203811,
},
[452177] = {
["source"] = "Arathi Reserve",
["event"] = "SPELL_CAST_START",
["npcID"] = 215727,
},
[372315] = {
["encounterName"] = "The Primal Council",
["source"] = "Kadros Icewrath",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187771,
},
[284262] = {
["encounterName"] = "Stormwall Blockade",
["encounterID"] = 2280,
["npcID"] = 146251,
},
[355934] = {
["npcID"] = 177817,
},
[382555] = {
["source"] = "Bracken Warscourge",
["event"] = "SPELL_CAST_START",
["npcID"] = 185529,
},
[374365] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[409177] = {
["source"] = "Entropic Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 203809,
},
[403034] = {
["source"] = "Fyrakk",
["event"] = "SPELL_CAST_START",
["npcID"] = 200832,
},
[44504] = {
["encounterName"] = "Selin Fireheart",
["source"] = "Wretched Husk",
["encounterID"] = 1897,
["event"] = "SPELL_CAST_START",
["npcID"] = 24690,
},
[106918] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orchard Wasp",
["npcID"] = 56201,
},
[425561] = {
["source"] = "Pack Mole",
["event"] = "SPELL_CAST_START",
["npcID"] = 211977,
},
[185152] = {
["npcID"] = 157820,
},
[38361] = {
["encounterName"] = "Yor",
["source"] = "Yor",
["encounterID"] = 250,
["event"] = "SPELL_CAST_START",
["npcID"] = 22927,
},
[339557] = {
["npcID"] = 173464,
},
[325223] = {
["npcID"] = 166304,
},
[382561] = {
["event"] = "SPELL_CAST_START",
["source"] = "Karthis Sleetsong",
["npcID"] = 189246,
},
[188225] = {
["source"] = "Fel Touched Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 94916,
},
[362084] = {
["npcID"] = 181324,
},
[82858] = {
["npcID"] = 42333,
},
[125349] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Krosh",
["npcID"] = 56833,
},
[388706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbound Essence",
["npcID"] = 187819,
},
[382563] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[329322] = {
["npcID"] = 155830,
},
[223038] = {
["source"] = "Dreadsoul Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 112261,
},
[366182] = {
["npcID"] = 183498,
},
[386660] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["encounterID"] = 2582,
["event"] = "SPELL_CAST_START",
["npcID"] = 186644,
},
[366183] = {
["npcID"] = 183498,
},
[106920] = {
["source"] = "Regenerating Sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 56763,
},
[355945] = {
["npcID"] = 179940,
},
[183108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Luddy Quicksnap",
["npcID"] = 193292,
},
[450142] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["npcID"] = 214263,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2894,
},
[329325] = {
["npcID"] = 155830,
},
[366185] = {
["npcID"] = 183499,
},
[329326] = {
["npcID"] = 155831,
},
[355947] = {
["npcID"] = 184426,
},
[284276] = {
["encounterName"] = "King Rastakhan",
["encounterID"] = 2272,
["npcID"] = 145616,
},
[390760] = {
["source"] = "Chief Grrlgllmesh",
["event"] = "SPELL_CAST_START",
["npcID"] = 186678,
},
[376426] = {
["npcID"] = 181840,
},
[448098] = {
["isChanneled"] = true,
["source"] = "Black Blood Harvester",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222455,
},
[124839] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seething Fleshripper",
["npcID"] = 61299,
},
[76717] = {
["npcID"] = 40023,
},
[366189] = {
["npcID"] = 183500,
},
[335473] = {
["encounterName"] = "Sludgefist",
["encounterID"] = 2399,
["npcID"] = 164407,
},
[132941] = {
["isChanneled"] = true,
["source"] = "Alliance Swashbuckler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69196,
},
[448100] = {
["source"] = "Black Blood Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 222455,
},
[384620] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[396907] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Yu'lon",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56762,
},
[382573] = {
["isChanneled"] = true,
["source"] = "Earthen Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184131,
},
[314998] = {
["source"] = "Aqir Shadowcrafter",
["event"] = "SPELL_CAST_START",
["npcID"] = 161416,
},
[423529] = {
["source"] = "Anguished Dream Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 210304,
},
[46042] = {
["source"] = "Sunblade Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 24686,
},
[394861] = {
["source"] = "Henlare",
["event"] = "SPELL_CAST_START",
["npcID"] = 193229,
},
[323190] = {
["npcID"] = 163121,
},
[384623] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Blacksmith",
["npcID"] = 189471,
},
[339573] = {
["encounterName"] = "Mordretha",
["encounterID"] = 2404,
["npcID"] = 165946,
},
[341621] = {
["encounterName"] = "Lady Inerva Darkvein",
["encounterID"] = 2406,
["npcID"] = 165521,
},
[228164] = {
["npcID"] = 114584,
},
[450153] = {
["source"] = "Vileroot",
["event"] = "SPELL_CAST_START",
["npcID"] = 214783,
},
[16496] = {
["npcID"] = 32883,
},
[382578] = {
["npcID"] = 184131,
},
[427629] = {
["source"] = "Fervent Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 206694,
},
[76719] = {
["npcID"] = 40021,
},
[366197] = {
["npcID"] = 183500,
},
[386675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Novice Timewalker",
["npcID"] = 189583,
},
[9081] = {
["source"] = "Shadowforge Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 4848,
},
[423536] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[329340] = {
["npcID"] = 165410,
},
[46043] = {
["source"] = "Sunblade Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 24686,
},
[394869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boneshaper Jardak",
["npcID"] = 188693,
},
[423538] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["encounterID"] = 2880,
["event"] = "SPELL_CAST_START",
["npcID"] = 210156,
},
[335485] = {
["npcID"] = 181064,
},
[446064] = {
["encounterName"] = "Leviathan Caller",
["source"] = "Slamming Tentacle",
["encounterID"] = 3002,
["event"] = "SPELL_CAST_START",
["npcID"] = 220741,
},
[87471] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brineshell Snapper",
["npcID"] = 63981,
},
[384633] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[306819] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Ra-den",
["encounterID"] = 2331,
["event"] = "SPELL_CAST_START",
["npcID"] = 156866,
},
[407159] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 198997,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[347775] = {
["npcID"] = 176395,
},
[126379] = {
["isChanneled"] = true,
["source"] = "Prophet Khar'zul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61541,
},
[163665] = {
["encounterName"] = "Grimrail Enforcers",
["encounterID"] = 1748,
["npcID"] = 80805,
},
[405113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shukoro Rapidstamer",
["npcID"] = 198917,
},
[431734] = {
["source"] = "Shadesworn Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 218527,
},
[257862] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "Hadal Darkfathom",
["npcID"] = 128651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2099,
},
[129963] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rothek",
["npcID"] = 62581,
},
[46044] = {
["source"] = "Sunblade Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 24815,
},
[209741] = {
["encounterName"] = "Advisor Melandrus",
["npcID"] = 105754,
["encounterID"] = 1870,
},
[396925] = {
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 197149,
},
[325254] = {
["encounterName"] = "Grand Proctor Beryllia",
["encounterID"] = 2362,
["npcID"] = 162102,
},
[433785] = {
["source"] = "Reinforced Drone",
["event"] = "SPELL_CAST_START",
["npcID"] = 216363,
},
[405117] = {
["source"] = "Lady Shaz'ra",
["event"] = "SPELL_CAST_START",
["npcID"] = 200885,
},
[341637] = {
["npcID"] = 174126,
},
[225100] = {
["npcID"] = 104270,
},
[325256] = {
["npcID"] = 170522,
},
[392832] = {
["event"] = "SPELL_CAST_START",
["source"] = "Degmakh",
["npcID"] = 194251,
},
[370307] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 184972,
},
[317066] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Thought Harvester",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 162933,
},
[417406] = {
["source"] = "Ankura Bloodhewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207589,
},
[325258] = {
["encounterName"] = "Mueh'zala",
["npcID"] = 166608,
["encounterID"] = 2396,
},
[409216] = {
["source"] = "Sundered Manaweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 198872,
},
[398978] = {
["source"] = "Memory of a Fiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 200030,
},
[409217] = {
["source"] = "Sundered Manaweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 198872,
},
[390788] = {
["source"] = "Chief Grrlgllmesh",
["event"] = "SPELL_CAST_START",
["npcID"] = 186678,
},
[6685] = {
["npcID"] = 41182,
},
[388741] = {
["source"] = "Ukhel Gravestirrer",
["event"] = "SPELL_CAST_START",
["npcID"] = 189928,
},
[386694] = {
["source"] = "Stormsurge Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 194897,
},
[290450] = {
["encounterName"] = "King Rastakhan",
["encounterID"] = 2272,
["npcID"] = 146320,
},
[398981] = {
["source"] = "Stalwart Broodwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 198263,
},
[163671] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nar'thalas Nightwatcher",
["npcID"] = 88782,
},
[111024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Redemption",
["npcID"] = 58592,
},
[388743] = {
["source"] = "Risen Bakar",
["event"] = "SPELL_CAST_START",
["npcID"] = 188510,
},
[456319] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aelric Leid",
["npcID"] = 213208,
},
[384648] = {
["source"] = "Gnarls",
["event"] = "SPELL_CAST_START",
["npcID"] = 197354,
},
[360076] = {
["npcID"] = 184767,
},
[388745] = {
["event"] = "SPELL_CAST_START",
["source"] = "Icy Blue Crab",
["npcID"] = 197862,
},
[456321] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aelric Leid",
["npcID"] = 213208,
},
[392841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Degmakh",
["npcID"] = 194251,
},
[337552] = {
["npcID"] = 162853,
},
[125871] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zar'thik Augurer",
["npcID"] = 64454,
},
[398985] = {
["source"] = "Broodguardian Ziruss",
["event"] = "SPELL_CAST_START",
["npcID"] = 198214,
},
[335505] = {
["npcID"] = 181064,
},
[388747] = {
["source"] = "Horned Flysnatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 196641,
},
[257870] = {
["source"] = "Irontide Buccaneer",
["event"] = "SPELL_CAST_START",
["npcID"] = 130011,
},
[394891] = {
["source"] = "Braekkas",
["event"] = "SPELL_CAST_START",
["npcID"] = 196855,
},
[317077] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harpy Snatcher",
["npcID"] = 152571,
},
[122800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yalia Sagewhisper",
["npcID"] = 62825,
},
[331412] = {
["npcID"] = 165349,
},
[46046] = {
["source"] = "Sunblade Physician",
["event"] = "SPELL_CAST_START",
["npcID"] = 24687,
},
[394893] = {
["source"] = "Lookout Mordren",
["event"] = "SPELL_CAST_START",
["npcID"] = 193668,
},
[15801] = {
["encounterName"] = "Revelosh",
["source"] = "Revelosh",
["encounterID"] = 547,
["event"] = "SPELL_CAST_START",
["npcID"] = 6910,
},
[319127] = {
["npcID"] = 169123,
},
[452231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queensguard Zirix",
["npcID"] = 211858,
},
[372369] = {
["source"] = "Shadepaw Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 186490,
},
[407181] = {
["source"] = "Watcher Koranos",
["event"] = "SPELL_CAST_START",
["npcID"] = 200077,
},
[298651] = {
["encounterName"] = "Trixie & Naeno",
["encounterID"] = 2312,
["npcID"] = 153756,
},
[415373] = {
["source"] = "Great Glorious Alliance Footman",
["event"] = "SPELL_CAST_START",
["npcID"] = 207578,
},
[41183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Stormcaller",
["npcID"] = 22846,
},
[364180] = {
["npcID"] = 183596,
},
[174939] = {
["event"] = "SPELL_CAST_START",
["source"] = "Councilor Nouk",
["npcID"] = 81807,
},
[409231] = {
["source"] = "Colossal Draconic Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 203826,
},
[321178] = {
["npcID"] = 162047,
},
[162653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Beast-Tender",
["npcID"] = 80423,
},
[452235] = {
["source"] = "Ashen Stonestalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 217624,
},
[405137] = {
["source"] = "Lady Shaz'ra",
["event"] = "SPELL_CAST_START",
["npcID"] = 200885,
},
[456331] = {
["source"] = "Flickerflame Candlecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 219619,
},
[450188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candlelit Blind-Hound",
["npcID"] = 218213,
},
[337562] = {
["npcID"] = 162875,
},
[384663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgewrought Monstrosity",
["npcID"] = 194816,
},
[394903] = {
["source"] = "Lookout Mordren",
["event"] = "SPELL_CAST_START",
["npcID"] = 193668,
},
[388760] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[374426] = {
["event"] = "SPELL_CAST_START",
["source"] = "Initiate Radiya",
["npcID"] = 190014,
},
[106421] = {
["source"] = "Shado-Pan Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 59741,
},
[106933] = {
["encounterName"] = "Striker Ga'dok",
["source"] = "Striker Ga'dok",
["encounterID"] = 1405,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56589,
},
[125363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scritch",
["npcID"] = 50831,
},
[169824] = {
["source"] = "Spore Image",
["event"] = "SPELL_CAST_START",
["npcID"] = 84984,
},
[456338] = {
["source"] = "Anguishing Nightmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 214415,
},
[417431] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[382620] = {
["source"] = "Bonebolt Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 185534,
},
[450196] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candlelit Blind-Hound",
["npcID"] = 218213,
},
[321188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quilboar Geomancer",
["npcID"] = 150238,
},
[323236] = {
["encounterName"] = "Lord Chamberlain",
["encounterID"] = 2381,
["npcID"] = 164218,
},
[368287] = {
["source"] = "Bonebolt Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 185534,
},
[156515] = {
["source"] = "Whirling Dervish",
["event"] = "SPELL_CAST_START",
["npcID"] = 77605,
},
[356001] = {
["npcID"] = 177808,
},
[308903] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["encounterID"] = 2327,
["event"] = "SPELL_CAST_START",
["npcID"] = 156523,
},
[193375] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["encounterID"] = 1791,
["event"] = "SPELL_CAST_START",
["npcID"] = 91004,
},
[11642] = {
["source"] = "Alliance Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 67902,
},
[333477] = {
["npcID"] = 163621,
},
[403101] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[272046] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Sharkbait",
["encounterID"] = 2093,
["event"] = "SPELL_CAST_START",
["npcID"] = 126841,
},
[333479] = {
["npcID"] = 163620,
},
[82362] = {
["npcID"] = 39987,
},
[347814] = {
["npcID"] = 176396,
},
[407199] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[376483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Charred Cinderling",
["npcID"] = 187404,
},
[386722] = {
["npcID"] = 190482,
},
[298669] = {
["encounterName"] = "Trixie & Naeno",
["encounterID"] = 2312,
["npcID"] = 150712,
},
[101816] = {
["npcID"] = 54691,
},
[368294] = {
["npcID"] = 185752,
},
[452252] = {
["event"] = "SPELL_CAST_START",
["source"] = "Master Machinist Dunstan",
["npcID"] = 217353,
},
[368295] = {
["npcID"] = 183953,
},
[396964] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Flow Control Device",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 198527,
},
[124854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zai the Outcast",
["npcID"] = 50769,
},
[345772] = {
["npcID"] = 175579,
},
[339629] = {
["npcID"] = 173145,
},
[407205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Destroyer",
["npcID"] = 203861,
},
[120759] = {
["encounterName"] = "Commander Vo'jak",
["source"] = "Commander Vo'jak",
["npcID"] = 61634,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1502,
},
[372394] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187768,
},
[448161] = {
["source"] = "Crazed Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 219454,
},
[286389] = {
["npcID"] = 148665,
},
[181094] = {
["encounterName"] = "Hellfire Assault",
["source"] = "Felfire Demolisher",
["encounterID"] = 1778,
["event"] = "SPELL_CAST_START",
["npcID"] = 91103,
},
[333488] = {
["encounterName"] = "Amarth, The Harvester",
["npcID"] = 163157,
["encounterID"] = 2388,
},
[178023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorian Arcanist",
["npcID"] = 82528,
},
[228193] = {
["encounterName"] = "Opera Hall",
["encounterID"] = 1957,
["npcID"] = 114329,
},
[163689] = {
["encounterName"] = "Grimrail Enforcers",
["encounterID"] = 1748,
["npcID"] = 80816,
},
[372397] = {
["source"] = "Shadepaw Skulker",
["event"] = "SPELL_CAST_START",
["npcID"] = 190188,
},
[120760] = {
["encounterName"] = "Commander Vo'jak",
["source"] = "Commander Vo'jak",
["npcID"] = 61634,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1502,
},
[129975] = {
["source"] = "Incarnation of Despair",
["event"] = "SPELL_CAST_START",
["npcID"] = 65872,
},
[337587] = {
["npcID"] = 162880,
},
[384686] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[407212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Dragonhunter",
["npcID"] = 202108,
},
[204646] = {
["encounterName"] = "Oakheart",
["encounterID"] = 1837,
["npcID"] = 103344,
},
[452263] = {
["source"] = "Harvest Warden Izk'tilak",
["event"] = "SPELL_CAST_START",
["npcID"] = 220644,
},
[200551] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[396975] = {
["npcID"] = 191401,
},
[130488] = {
["source"] = "Thunder Hold Lieutenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 66287,
},
[131000] = {
["source"] = "Déchiqueteur garrosh’ar",
["event"] = "SPELL_CAST_START",
["npcID"] = 66327,
},
[41187] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Primalist",
["npcID"] = 68096,
},
[57825] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 70979,
},
[374451] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Chain Caster",
["npcID"] = 195919,
},
[329401] = {
["npcID"] = 159151,
},
[399025] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Revenant",
["npcID"] = 200720,
},
[417455] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[142192] = {
["source"] = "Crypt Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 61783,
},
[106428] = {
["source"] = "Shado-Pan Novice",
["event"] = "SPELL_CAST_START",
["npcID"] = 56395,
},
[329404] = {
["npcID"] = 167464,
},
[462508] = {
["encounterName"] = "Blightbone",
["source"] = "Void Emissary",
["npcID"] = 229537,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2387,
},
[166766] = {
["npcID"] = 184362,
},
[419506] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[439984] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earthen-Ward Sentinel",
["npcID"] = 216221,
},
[118715] = {
["isChanneled"] = true,
["source"] = "Jinanya the Clawblade",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56513,
},
[27891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sludge Belcher",
["npcID"] = 16029,
},
[128954] = {
["source"] = "General Sho Lien",
["event"] = "SPELL_CAST_START",
["npcID"] = 60769,
},
[321216] = {
["npcID"] = 165007,
},
[169839] = {
["source"] = "Putrid Pyromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 84957,
},
[366267] = {
["npcID"] = 185008,
},
[386745] = {
["npcID"] = 189206,
},
[409271] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199703,
},
[50403] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastes Scavenger",
["npcID"] = 28005,
},
[169840] = {
["source"] = "Infested Icecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 84989,
},
[399033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Weyrn Spellslinger",
["npcID"] = 200736,
},
[433845] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Overseer",
["npcID"] = 216364,
},
[419511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chronaxie",
["npcID"] = 206070,
},
[356031] = {
["npcID"] = 177816,
},
[135029] = {
["npcID"] = 78116,
},
[169841] = {
["source"] = "Addled Arcanomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 84990,
},
[106942] = {
["isChanneled"] = true,
["source"] = "Destroying Sha",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56765,
},
[366272] = {
["npcID"] = 185032,
},
[124860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zai the Outcast",
["npcID"] = 50769,
},
[315079] = {
["npcID"] = 161388,
},
[329414] = {
["npcID"] = 169885,
},
[419516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chronaxie",
["npcID"] = 206070,
},
[169843] = {
["source"] = "Putrid Pyromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 84957,
},
[122301] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Sprite",
["npcID"] = 62930,
},
[122813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snow Blossom",
["npcID"] = 62781,
},
[388801] = {
["source"] = "Risen Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 195855,
},
[458425] = {
["source"] = "Gloomsprout",
["event"] = "SPELL_CAST_START",
["npcID"] = 215501,
},
[321226] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["encounterID"] = 2388,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163157,
},
[411328] = {
["source"] = "Diganthor",
["event"] = "SPELL_CAST_START",
["npcID"] = 204434,
},
[366278] = {
["npcID"] = 185032,
},
[388804] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["encounterID"] = 2584,
["event"] = "SPELL_CAST_START",
["npcID"] = 186738,
},
[394948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashbinder Tornecha",
["npcID"] = 192344,
},
[142201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo of Y'Shaarj",
["npcID"] = 71123,
},
[257899] = {
["source"] = "Irontide Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 130012,
},
[313039] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[407236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrinekeeper Qanosh",
["npcID"] = 199839,
},
[394950] = {
["source"] = "Broodweaver Araznae",
["event"] = "SPELL_CAST_START",
["npcID"] = 193220,
},
[341709] = {
["encounterName"] = "Mistcaller",
["encounterID"] = 2392,
["npcID"] = 164501,
},
[419524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loose Time",
["npcID"] = 209170,
},
[169847] = {
["source"] = "Infested Icecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 84989,
},
[329425] = {
["npcID"] = 157824,
},
[126911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Fist",
["npcID"] = 65134,
},
[413385] = {
["source"] = "Minister of Air",
["event"] = "SPELL_CAST_START",
["npcID"] = 45930,
},
[366287] = {
["npcID"] = 185032,
},
[417481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timeline Marauder",
["npcID"] = 199748,
},
[364240] = {
["encounterName"] = "Prototype Pantheon",
["encounterID"] = 2544,
["npcID"] = 181549,
},
[390861] = {
["source"] = "Angen",
["event"] = "SPELL_CAST_START",
["npcID"] = 193341,
},
[360145] = {
["encounterName"] = "Lords of Dread",
["npcID"] = 181399,
["encounterID"] = 2543,
},
[364241] = {
["encounterName"] = "Prototype Pantheon",
["encounterID"] = 2544,
["npcID"] = 181546,
},
[267997] = {
["npcID"] = 135816,
},
[407245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrinekeeper Qanosh",
["npcID"] = 199839,
},
[257904] = {
["source"] = "Ludwig Von Tortollan",
["event"] = "SPELL_CAST_START",
["npcID"] = 129699,
},
[394959] = {
["source"] = "Acequian",
["event"] = "SPELL_CAST_START",
["npcID"] = 187617,
},
[331479] = {
["npcID"] = 167923,
},
[415437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timestream Leech",
["npcID"] = 206066,
},
[329432] = {
["npcID"] = 170740,
},
[388817] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 186616,
},
[300764] = {
["npcID"] = 150165,
},
[331481] = {
["npcID"] = 167948,
},
[284383] = {
["encounterName"] = "Stormwall Blockade",
["encounterID"] = 2280,
["npcID"] = 146253,
},
[397010] = {
["source"] = "Qalashi Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 197147,
},
[286432] = {
["npcID"] = 147571,
},
[121282] = {
["encounterName"] = "Wing Leader Ner'onok",
["source"] = "Wing Leader Ner'onok",
["npcID"] = 62205,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1464,
},
[397011] = {
["source"] = "Qalashi Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 197147,
},
[115139] = {
["encounterName"] = "Thalnos the Soulrender",
["source"] = "Thalnos the Soulrender",
["npcID"] = 59789,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1423,
},
[175997] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Dulhu",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83894,
},
[9532] = {
["npcID"] = 2718,
},
[388822] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[399061] = {
["source"] = "Irontide Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200858,
},
[204666] = {
["encounterName"] = "Oakheart",
["encounterID"] = 1837,
["npcID"] = 103344,
},
[321247] = {
["encounterName"] = "Amarth, The Harvester",
["npcID"] = 163157,
["encounterID"] = 2388,
},
[397014] = {
["source"] = "Qalashi Emissary",
["event"] = "SPELL_CAST_START",
["npcID"] = 197146,
},
[399062] = {
["source"] = "Irontide Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200858,
},
[257908] = {
["source"] = "Irontide Officer",
["event"] = "SPELL_CAST_START",
["npcID"] = 127106,
},
[419540] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten General",
["npcID"] = 207941,
},
[204667] = {
["encounterName"] = "Oakheart",
["encounterID"] = 1837,
["npcID"] = 103344,
},
[321249] = {
["npcID"] = 162051,
},
[115652] = {
["source"] = "Stout Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59519,
},
[327393] = {
["npcID"] = 163618,
},
[399065] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 200858,
},
[411353] = {
["source"] = "Empowered Protector Lynaera",
["event"] = "SPELL_CAST_START",
["npcID"] = 204419,
},
[366303] = {
["npcID"] = 183927,
},
[392924] = {
["source"] = "High Channeler Ryvati",
["event"] = "SPELL_CAST_START",
["npcID"] = 197535,
},
[394972] = {
["source"] = "Qalashi Lavabearer",
["event"] = "SPELL_CAST_START",
["npcID"] = 197148,
},
[409307] = {
["source"] = "Blazing Dreadsquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 202262,
},
[46568] = {
["npcID"] = 25757,
},
[300777] = {
["npcID"] = 150165,
},
[360162] = {
["encounterName"] = "Vigilant Guardian",
["encounterID"] = 2512,
["npcID"] = 180773,
},
[372449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormfang Bonecaster",
["npcID"] = 187931,
},
[128964] = {
["source"] = "Krasari Runekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 65598,
},
[121285] = {
["isChanneled"] = true,
["source"] = "Knucklethump Smasher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59410,
},
[106439] = {
["source"] = "Shado-Pan Novice",
["event"] = "SPELL_CAST_START",
["npcID"] = 56395,
},
[394976] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Voice From Beyond",
["npcID"] = 198757,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2684,
},
[341735] = {
["npcID"] = 174336,
},
[83914] = {
["encounterName"] = "Ozumat",
["npcID"] = 44715,
["encounterID"] = 1047,
},
[444123] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[372452] = {
["source"] = "Primal Drift",
["event"] = "SPELL_CAST_START",
["npcID"] = 186421,
},
[399073] = {
["source"] = "Farscale Tidelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 200488,
},
[403169] = {
["source"] = "Ishyra",
["event"] = "SPELL_CAST_START",
["npcID"] = 200579,
},
[317164] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Mycelial Cyst",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157461,
},
[88010] = {
["npcID"] = 45912,
},
[317165] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Mycelial Cyst",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157461,
},
[288497] = {
["source"] = "Huezeki Windsong",
["event"] = "SPELL_CAST_START",
["npcID"] = 205497,
},
[323309] = {
["npcID"] = 166932,
},
[174981] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Councilor Mal'gris",
["npcID"] = 81811,
},
[83915] = {
["encounterName"] = "Ozumat",
["npcID"] = 44715,
["encounterID"] = 1047,
},
[372456] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[394982] = {
["source"] = "Crystalized Steelshard",
["event"] = "SPELL_CAST_START",
["npcID"] = 188048,
},
[421603] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[382696] = {
["npcID"] = 184131,
},
[167815] = {
["npcID"] = 83390,
},
[329455] = {
["encounterName"] = "Hungering Destroyer",
["encounterID"] = 2383,
["npcID"] = 164261,
},
[399079] = {
["source"] = "Farscale Tidelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 200488,
},
[40938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Fearbringer",
["npcID"] = 22954,
},
[349934] = {
["encounterName"] = "The Grand Menagerie",
["encounterID"] = 2441,
["npcID"] = 176555,
},
[200580] = {
["npcID"] = 95779,
},
[274168] = {
["encounterName"] = "Zul",
["encounterID"] = 2145,
["npcID"] = 138967,
},
[15228] = {
["source"] = "Murkblood Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 17771,
},
[456420] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["encounterID"] = 2898,
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[360176] = {
["encounterName"] = "Vigilant Guardian",
["encounterID"] = 2512,
["npcID"] = 181856,
},
[341747] = {
["npcID"] = 174158,
},
[327413] = {
["npcID"] = 168318,
},
[125384] = {
["source"] = "Adolescent Mushan",
["event"] = "SPELL_CAST_START",
["npcID"] = 56239,
},
[405228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duzalgor",
["npcID"] = 200610,
},
[331510] = {
["npcID"] = 170838,
},
[382704] = {
["source"] = "Spellsworn Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 203736,
},
[319224] = {
["npcID"] = 157725,
},
[386800] = {
["source"] = "Arkhuu",
["event"] = "SPELL_CAST_START",
["npcID"] = 195300,
},
[153485] = {
["source"] = "Carrion Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 76057,
},
[40683] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[417517] = {
["source"] = "Ankura Bloodhewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207589,
},
[386801] = {
["source"] = "Grounded Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 187204,
},
[390897] = {
["source"] = "Scalepiercer",
["event"] = "SPELL_CAST_START",
["npcID"] = 186632,
},
[368373] = {
["npcID"] = 183516,
},
[427758] = {
["source"] = "Envoy of Winter",
["event"] = "SPELL_CAST_START",
["npcID"] = 209929,
},
[382708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Warden",
["npcID"] = 193293,
},
[128969] = {
["isChanneled"] = true,
["source"] = "Crypt Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61783,
},
[339706] = {
["encounterName"] = "Mordretha",
["encounterID"] = 2404,
["npcID"] = 173549,
},
[423664] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[172941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sor the Eradicator",
["npcID"] = 80691,
},
[360185] = {
["npcID"] = 181879,
},
[460525] = {
["source"] = "Bytta",
["event"] = "SPELL_CAST_START",
["npcID"] = 222653,
},
[413427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pendule",
["npcID"] = 206074,
},
[382712] = {
["source"] = "Wilted Oak",
["event"] = "SPELL_CAST_START",
["npcID"] = 186229,
},
[311041] = {
["source"] = "Umbral Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 159219,
},
[121291] = {
["source"] = "Mischievous Snow Sprite",
["event"] = "SPELL_CAST_START",
["npcID"] = 59693,
},
[372474] = {
["source"] = "Shikaar Beastmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 182727,
},
[384761] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[172943] = {
["npcID"] = 84520,
},
[388857] = {
["source"] = "Crag Walker",
["event"] = "SPELL_CAST_START",
["npcID"] = 197647,
},
[347903] = {
["npcID"] = 176395,
},
[339713] = {
["npcID"] = 162586,
},
[392955] = {
["source"] = "Korthrox the Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 183422,
},
[397051] = {
["source"] = "Cyclas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199029,
},
[311046] = {
["source"] = "Umbral Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 159219,
},
[349954] = {
["encounterName"] = "The Grand Menagerie",
["encounterID"] = 2441,
["npcID"] = 176555,
},
[392957] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Vorquin",
["npcID"] = 190216,
},
[388862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Manafiend",
["npcID"] = 196045,
},
[407292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Erupting Shadowflame",
["npcID"] = 199838,
},
[388863] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Manafiend",
["npcID"] = 196045,
},
[199567] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Image of Latosius",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 101028,
},
[390912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Lasher",
["npcID"] = 197219,
},
[106447] = {
["source"] = "Shado-Pan Novice",
["event"] = "SPELL_CAST_START",
["npcID"] = 56395,
},
[178067] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sea Skrog",
["npcID"] = 88094,
},
[407296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Erupting Shadowflame",
["npcID"] = 199838,
},
[311052] = {
["source"] = "Maddened Conscript",
["event"] = "SPELL_CAST_START",
["npcID"] = 159305,
},
[403201] = {
["source"] = "Ishyra",
["event"] = "SPELL_CAST_START",
["npcID"] = 200579,
},
[374533] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[411393] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bogg",
["npcID"] = 201747,
},
[372486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waste Water Elemental",
["npcID"] = 187497,
},
[390916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Salkii",
["npcID"] = 193885,
},
[411394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bogg",
["npcID"] = 201747,
},
[341771] = {
["npcID"] = 170882,
},
[125902] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kor'thik Warsinger",
["npcID"] = 64458,
},
[300818] = {
["npcID"] = 150195,
},
[28280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grobbulus",
["npcID"] = 15931,
},
[421636] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[448257] = {
["source"] = "Foreseer Xix'amon",
["event"] = "SPELL_CAST_START",
["npcID"] = 215435,
},
[131022] = {
["source"] = "Garrosh'ar Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 66398,
},
[411399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bogg",
["npcID"] = 201747,
},
[409352] = {
["source"] = "Blazing Dreadsquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 202262,
},
[172952] = {
["npcID"] = 83026,
},
[323347] = {
["npcID"] = 165137,
},
[325395] = {
["encounterName"] = "Domina Venomblade",
["npcID"] = 166813,
["encounterID"] = 2385,
},
[372494] = {
["source"] = "Stormshackler Rynea",
["event"] = "SPELL_CAST_START",
["npcID"] = 189391,
},
[115153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverstride Jinyu",
["npcID"] = 56289,
},
[372495] = {
["source"] = "Ensnaring Current",
["event"] = "SPELL_CAST_START",
["npcID"] = 191328,
},
[456453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skardyn Husk",
["npcID"] = 213566,
},
[125392] = {
["source"] = "Warbringer Qobi",
["event"] = "SPELL_CAST_START",
["npcID"] = 63528,
},
[390926] = {
["source"] = "Barker",
["event"] = "SPELL_CAST_START",
["npcID"] = 194515,
},
[15869] = {
["source"] = "Drakkari Witch Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 27555,
},
[411404] = {
["source"] = "Shade of Skytalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 204430,
},
[325399] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 166644,
},
[131024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Sharp-Shooter",
["npcID"] = 66288,
},
[306971] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[116178] = {
["source"] = "Sudsy Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59522,
},
[83926] = {
["encounterName"] = "Ozumat",
["npcID"] = 44715,
["encounterID"] = 1047,
},
[411407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Waveshaper",
["npcID"] = 205363,
},
[388882] = {
["source"] = "Infuser Sariya",
["event"] = "SPELL_CAST_START",
["npcID"] = 190405,
},
[390930] = {
["npcID"] = 185784,
},
[411408] = {
["source"] = "Shade of Skytalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 204430,
},
[78807] = {
["encounterName"] = "Ozruk",
["npcID"] = 42188,
["encounterID"] = 1058,
},
[154527] = {
["source"] = "Sargerei Soulbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 77812,
},
[331548] = {
["npcID"] = 167964,
},
[143265] = {
["encounterName"] = "Siegecrafter Blackfuse",
["source"] = "Siegecrafter Blackfuse",
["npcID"] = 71504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1601,
},
[288546] = {
["npcID"] = 148797,
},
[388886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Scepter",
["npcID"] = 196576,
},
[390934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Salkii",
["npcID"] = 193885,
},
[331550] = {
["encounterName"] = "Lady Inerva Darkvein",
["encounterID"] = 2406,
["npcID"] = 170197,
},
[112084] = {
["encounterName"] = "Lorewalker Stonestep",
["source"] = "Zao Sunseeker",
["npcID"] = 58826,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1417,
},
[288548] = {
["npcID"] = 148797,
},
[186269] = {
["source"] = "Blightshard Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 90998,
},
[401175] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebyssian",
["npcID"] = 201707,
},
[272167] = {
["npcID"] = 136404,
},
[319266] = {
["npcID"] = 167033,
},
[390938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggravated Skitterfly",
["npcID"] = 197406,
},
[444180] = {
["isChanneled"] = true,
["source"] = "Xur'khun the Defiled",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221845,
},
[282408] = {
["encounterName"] = "Mekkatorque",
["encounterID"] = 2276,
["npcID"] = 144942,
},
[333602] = {
["npcID"] = 163126,
},
[176032] = {
["npcID"] = 88163,
},
[395035] = {
["source"] = "Soulharvester Duuren",
["event"] = "SPELL_CAST_START",
["npcID"] = 195928,
},
[382749] = {
["source"] = "Queasy Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 194003,
},
[446230] = {
["encounterName"] = "Undersea Abomination",
["source"] = "Undersea Abomination",
["npcID"] = 214348,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2895,
},
[300840] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inhuman Test Subject",
["npcID"] = 202147,
},
[327461] = {
["npcID"] = 161105,
},
[282411] = {
["encounterName"] = "Conclave of the Chosen",
["encounterID"] = 2268,
["npcID"] = 144941,
},
[349987] = {
["encounterName"] = "The Grand Menagerie",
["encounterID"] = 2441,
["npcID"] = 176555,
},
[31865] = {
["source"] = "Seductress",
["event"] = "SPELL_CAST_START",
["npcID"] = 17399,
},
[390943] = {
["npcID"] = 185784,
},
[120789] = {
["encounterName"] = "Commander Vo'jak",
["source"] = "Commander Vo'jak",
["npcID"] = 61634,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1502,
},
[362275] = {
["encounterName"] = "Rygelon",
["npcID"] = 182777,
["encounterID"] = 2549,
},
[196512] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["npcID"] = 95674,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1807,
},
[386849] = {
["source"] = "Unleashed Storm",
["event"] = "SPELL_CAST_START",
["npcID"] = 195846,
},
[388897] = {
["source"] = "Scavenging Hardshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 193605,
},
[374563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazzling Dragonfly",
["npcID"] = 190362,
},
[360229] = {
["encounterName"] = "Lords of Dread",
["npcID"] = 181399,
["encounterID"] = 2543,
},
[452378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Civilian Puppet",
["npcID"] = 219495,
},
[306988] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[325418] = {
["npcID"] = 167113,
},
[319275] = {
["npcID"] = 165323,
},
[181155] = {
["source"] = "Gorebound Felcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 93931,
},
[133033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vol'jin",
["npcID"] = 67414,
},
[240540] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razorjaw Swiftfin",
["npcID"] = 120516,
},
[413473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temporal Deviation",
["npcID"] = 206063,
},
[228254] = {
["npcID"] = 114626,
},
[147368] = {
["source"] = "Ironfur Great Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 72844,
},
[149416] = {
["npcID"] = 183257,
},
[374567] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["encounterID"] = 2582,
["event"] = "SPELL_CAST_START",
["npcID"] = 186644,
},
[272180] = {
["source"] = "Grotesque Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 138187,
},
[202658] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malignant Defiler",
["npcID"] = 102584,
},
[317231] = {
["encounterName"] = "Xav the Unfallen",
["encounterID"] = 2366,
["npcID"] = 162329,
},
[196515] = {
["source"] = "Binder Ashioi",
["event"] = "SPELL_CAST_START",
["npcID"] = 100250,
},
[329518] = {
["encounterName"] = "Sun King's Salvation",
["encounterID"] = 2402,
["npcID"] = 165805,
},
[364330] = {
["npcID"] = 184737,
},
[374569] = {
["source"] = "Monstrous Decay",
["event"] = "SPELL_CAST_START",
["npcID"] = 186227,
},
[384808] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186339,
},
[160680] = {
["encounterName"] = "Nitrogg Thundertower",
["encounterID"] = 1732,
["npcID"] = 79548,
},
[390952] = {
["source"] = "Grand Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 188009,
},
[196516] = {
["source"] = "Ritualist Lesha",
["event"] = "SPELL_CAST_START",
["npcID"] = 100248,
},
[300852] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inhuman Test Subject",
["npcID"] = 202147,
},
[401192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quicksmack Magk",
["npcID"] = 204651,
},
[321330] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkmaul Channeler",
["npcID"] = 157328,
},
[117720] = {
["source"] = "Gormali Incinerator",
["event"] = "SPELL_CAST_START",
["npcID"] = 54703,
},
[401193] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quicksmack Magk",
["npcID"] = 204651,
},
[202661] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel Scorcher",
["npcID"] = 102583,
},
[115161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muck Snapper",
["npcID"] = 56447,
},
[397100] = {
["source"] = "Magmas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199027,
},
[22907] = {
["source"] = "Coilskar Witch",
["event"] = "SPELL_CAST_START",
["npcID"] = 24696,
},
[319286] = {
["npcID"] = 164084,
},
[419626] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ignarion",
["npcID"] = 209360,
},
[331573] = {
["encounterName"] = "Lady Inerva Darkvein",
["encounterID"] = 2406,
["npcID"] = 170199,
},
[388911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Battleaxe",
["npcID"] = 196577,
},
[411437] = {
["source"] = "Sundered Siegemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 198874,
},
[454440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Pillager",
["npcID"] = 135241,
},
[366387] = {
["npcID"] = 182688,
},
[290621] = {
["encounterName"] = "Lady Jaina Proudmoore",
["encounterID"] = 2281,
["npcID"] = 146409,
},
[191401] = {
["source"] = "Valarjar Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 96640,
},
[327481] = {
["encounterName"] = "Kin-Tara",
["encounterID"] = 2357,
["npcID"] = 162059,
},
[386866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorging Stagbeetle",
["npcID"] = 195709,
},
[339768] = {
["npcID"] = 158891,
},
[126937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sra'thik Ambercaller",
["npcID"] = 64917,
},
[395058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pirdan The Blinder",
["npcID"] = 186512,
},
[319292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogre Overseer",
["npcID"] = 156676,
},
[460587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vindictive Technician",
["npcID"] = 220472,
},
[339770] = {
["npcID"] = 173568,
},
[197546] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["npcID"] = 98696,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[397108] = {
["source"] = "Wild Kelp Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 196809,
},
[124378] = {
["source"] = "Den Mother Moof",
["event"] = "SPELL_CAST_START",
["npcID"] = 63518,
},
[319294] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torgok",
["npcID"] = 162817,
},
[395061] = {
["source"] = "Stonewrecker Tokara",
["event"] = "SPELL_CAST_START",
["npcID"] = 193442,
},
[388918] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[333629] = {
["encounterName"] = "Amarth, The Harvester",
["npcID"] = 168246,
["encounterID"] = 2388,
},
[139186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jubeka Shadowbreaker",
["npcID"] = 70166,
},
[397110] = {
["npcID"] = 190008,
},
[280389] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["npcID"] = 129208,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2109,
},
[372538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lava Flare",
["npcID"] = 189470,
},
[325440] = {
["encounterName"] = "Sun King's Salvation",
["encounterID"] = 2402,
["npcID"] = 165764,
},
[409398] = {
["source"] = "Crystalline Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 203831,
},
[372539] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[335680] = {
["npcID"] = 181782,
},
[423734] = {
["source"] = "Doomfiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 210910,
},
[384827] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[388923] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[88032] = {
["npcID"] = 45912,
},
[44276] = {
["source"] = "Zelfan",
["event"] = "SPELL_CAST_START",
["npcID"] = 24556,
},
[113629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boneweaver",
["npcID"] = 59193,
},
[407354] = {
["source"] = "Slaghide Shalewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 202303,
},
[388925] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[401212] = {
["source"] = "Stone Infused Rock Snail",
["event"] = "SPELL_CAST_START",
["npcID"] = 203241,
},
[153524] = {
["source"] = "Plagued Bat",
["event"] = "SPELL_CAST_START",
["npcID"] = 75459,
},
[382783] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obsidian Tyrant",
["npcID"] = 202483,
},
[118749] = {
["isChanneled"] = true,
["source"] = "Frenzyhop",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56514,
},
[246697] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Subjugator",
["npcID"] = 124171,
},
[39413] = {
["source"] = "Murkblood Spearman",
["event"] = "SPELL_CAST_START",
["npcID"] = 17729,
},
[158644] = {
["source"] = "Solar Magnifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 77559,
},
[401214] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Honeypelt",
["npcID"] = 202451,
},
[362308] = {
["npcID"] = 185755,
},
[115678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greenwood Thief",
["npcID"] = 54930,
},
[407359] = {
["source"] = "Slaghide Shalewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 202303,
},
[401216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nevroll",
["npcID"] = 203039,
},
[307020] = {
["encounterName"] = "Vexiona",
["source"] = "Vexiona",
["encounterID"] = 2336,
["event"] = "SPELL_CAST_START",
["npcID"] = 157354,
},
[333641] = {
["npcID"] = 169905,
},
[376644] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[198577] = {
["npcID"] = 135107,
},
[390979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonbane Protector",
["npcID"] = 186600,
},
[450364] = {
["source"] = "Royal Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 222881,
},
[168885] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 82682,
},
[431935] = {
["source"] = "Royal Journalist Ist'iix",
["event"] = "SPELL_CAST_START",
["npcID"] = 226234,
},
[319310] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hrun the Exiled",
["npcID"] = 156900,
},
[405316] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[390982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonbane Shieldcracker",
["npcID"] = 186609,
},
[368457] = {
["npcID"] = 180746,
},
[172982] = {
["npcID"] = 83026,
},
[372553] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hyena Matriarch",
["npcID"] = 187566,
},
[390983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Scaleripper",
["npcID"] = 187602,
},
[393031] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Causality",
["npcID"] = 186672,
},
[337742] = {
["npcID"] = 159151,
},
[390984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver Wurmling",
["npcID"] = 187366,
},
[425796] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harbinger of Incineration",
["npcID"] = 210147,
},
[395080] = {
["source"] = "Enkine the Voracious",
["event"] = "SPELL_CAST_START",
["npcID"] = 193134,
},
[440131] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alleria Windrunner",
["npcID"] = 215014,
},
[403272] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[228273] = {
["npcID"] = 114637,
},
[360270] = {
["npcID"] = 181625,
},
[345936] = {
["encounterName"] = "Shriekwing",
["encounterID"] = 2398,
["npcID"] = 164406,
},
[372557] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hyena Matriarch",
["npcID"] = 187566,
},
[390987] = {
["npcID"] = 46859,
},
[390988] = {
["event"] = "SPELL_CAST_START",
["source"] = "Death's Shadow",
["npcID"] = 190985,
},
[197558] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["encounterID"] = 1807,
["event"] = "SPELL_CAST_START",
["npcID"] = 95674,
},
[388941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Downpour",
["npcID"] = 193815,
},
[200630] = {
["npcID"] = 95769,
},
[388942] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Ravager",
["npcID"] = 196671,
},
[368465] = {
["npcID"] = 180746,
},
[419659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Observational Pollen Guard",
["npcID"] = 210624,
},
[372561] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Hunter",
["npcID"] = 189227,
},
[440137] = {
["source"] = "Lost Lynx",
["event"] = "SPELL_CAST_START",
["npcID"] = 225022,
},
[388944] = {
["npcID"] = 190904,
},
[114658] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[427852] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["encounterID"] = 2883,
["event"] = "SPELL_CAST_START",
["npcID"] = 213119,
},
[382802] = {
["source"] = "Vile Rothexer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187224,
},
[329561] = {
["encounterName"] = "Sun King's Salvation",
["encounterID"] = 2402,
["npcID"] = 165778,
},
[228277] = {
["npcID"] = 114634,
},
[347992] = {
["encounterName"] = "Zo'phex the Sentinel",
["encounterID"] = 2425,
["npcID"] = 175616,
},
[372566] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Hunter",
["npcID"] = 189227,
},
[358232] = {
["npcID"] = 183366,
},
[325469] = {
["npcID"] = 166928,
},
[384854] = {
["source"] = "Fishface",
["event"] = "SPELL_CAST_START",
["npcID"] = 191926,
},
[168894] = {
["source"] = "Spore Image",
["event"] = "SPELL_CAST_START",
["npcID"] = 84386,
},
[298849] = {
["encounterName"] = "Trixie & Naeno",
["encounterID"] = 2312,
["npcID"] = 150712,
},
[228279] = {
["npcID"] = 114632,
},
[417619] = {
["isChanneled"] = true,
["source"] = "Gill'dan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204808,
},
[87527] = {
["source"] = "Dustbelcher Initiate",
["event"] = "SPELL_CAST_START",
["npcID"] = 46694,
},
[388952] = {
["source"] = "Ravenous Riversnapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 192684,
},
[228280] = {
["npcID"] = 114629,
},
[360284] = {
["encounterName"] = "Lords of Dread",
["npcID"] = 181399,
["encounterID"] = 2543,
},
[254901] = {
["npcID"] = 136496,
},
[329569] = {
["npcID"] = 158160,
},
[210875] = {
["source"] = "Stormforged Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 96574,
},
[59638] = {
["npcID"] = 31216,
},
[317284] = {
["npcID"] = 162880,
},
[368478] = {
["npcID"] = 180746,
},
[413529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timestream Anomaly",
["npcID"] = 199749,
},
[374622] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Thundering Ravager",
["npcID"] = 190690,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[139205] = {
["source"] = "Zandalari Prophet",
["event"] = "SPELL_CAST_START",
["npcID"] = 70557,
},
[37113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Warlock",
["npcID"] = 17371,
},
[374623] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frozen Destroyer",
["npcID"] = 190686,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[319334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jugnug",
["npcID"] = 153583,
},
[388958] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Ravager",
["npcID"] = 196671,
},
[374624] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frozen Destroyer",
["npcID"] = 190686,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[196543] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["encounterID"] = 1807,
["event"] = "SPELL_CAST_START",
["npcID"] = 95674,
},
[364386] = {
["encounterName"] = "Rygelon",
["encounterID"] = 2549,
["npcID"] = 182823,
},
[407389] = {
["source"] = "Brimstone Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 202272,
},
[409437] = {
["source"] = "Voracious Magma Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 203825,
},
[450393] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obstorn",
["npcID"] = 217082,
},
[124389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodthirsty Saurok",
["npcID"] = 63279,
},
[335720] = {
["npcID"] = 155812,
},
[193473] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Yaztal",
["encounterID"] = 2684,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192337,
},
[341864] = {
["npcID"] = 174092,
},
[348008] = {
["npcID"] = 176394,
},
[341865] = {
["npcID"] = 174194,
},
[384868] = {
["source"] = "Nokhud Longbow",
["event"] = "SPELL_CAST_START",
["npcID"] = 192789,
},
[187331] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorebound Fanatic",
["npcID"] = 94563,
},
[114663] = {
["source"] = "Brewmaster Blanche",
["event"] = "SPELL_CAST_START",
["npcID"] = 58740,
},
[106984] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Gu Cloudstrike",
["encounterID"] = 1303,
["event"] = "SPELL_CAST_START",
["npcID"] = 56747,
},
[323437] = {
["encounterName"] = "Lord Chamberlain",
["encounterID"] = 2381,
["npcID"] = 164218,
},
[341867] = {
["npcID"] = 165469,
},
[200642] = {
["npcID"] = 95771,
},
[323438] = {
["npcID"] = 169303,
},
[448351] = {
["source"] = "Kobold Snuffercrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 218662,
},
[343916] = {
["npcID"] = 169102,
},
[127462] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jade Colossus",
["npcID"] = 65169,
},
[13952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightsworn Vindicator",
["npcID"] = 22861,
},
[409445] = {
["source"] = "Voracious Magma Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 203825,
},
[374634] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2612,
},
[360300] = {
["encounterName"] = "Lords of Dread",
["npcID"] = 181398,
["encounterID"] = 2543,
},
[395112] = {
["source"] = "Enkine the Voracious",
["event"] = "SPELL_CAST_START",
["npcID"] = 193134,
},
[256957] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Waveshaper",
["npcID"] = 129370,
},
[376683] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[378731] = {
["npcID"] = 190938,
},
[266106] = {
["source"] = "Feral Bloodswarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 133835,
},
[391019] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[401258] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199659,
},
[44538] = {
["source"] = "Ethereum Smuggler",
["event"] = "SPELL_CAST_START",
["npcID"] = 24698,
},
[360304] = {
["encounterName"] = "Lords of Dread",
["npcID"] = 181399,
["encounterID"] = 2543,
},
[307064] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[403309] = {
["source"] = "Expulsion Drone",
["event"] = "SPELL_CAST_START",
["npcID"] = 202592,
},
[111594] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scholomance Acolyte",
["npcID"] = 58757,
},
[317304] = {
["npcID"] = 163084,
},
[79854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyromancer Flamehearth",
["npcID"] = 70709,
},
[388976] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Ravager",
["npcID"] = 196671,
},
[195528] = {
["source"] = "Animated Storm",
["event"] = "SPELL_CAST_START",
["npcID"] = 95920,
},
[207815] = {
["encounterName"] = "Patrol Captain Gerdo",
["npcID"] = 104215,
["encounterID"] = 1868,
},
[411503] = {
["source"] = "Diganthor",
["event"] = "SPELL_CAST_START",
["npcID"] = 204434,
},
[325498] = {
["npcID"] = 168299,
},
[409456] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[405361] = {
["source"] = "Lady Shaz'ra",
["event"] = "SPELL_CAST_START",
["npcID"] = 200885,
},
[382836] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186338,
},
[368502] = {
["npcID"] = 180924,
},
[36604] = {
["source"] = "Verdant Emerald Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 208750,
},
[440175] = {
["source"] = "Mossbloom Hazewalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 219019,
},
[116715] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zhi-Zhi",
["npcID"] = 54924,
},
[321406] = {
["encounterName"] = "Doctor Ickus",
["npcID"] = 169498,
["encounterID"] = 2384,
},
[372600] = {
["encounterName"] = "Sentinel Talondras",
["encounterID"] = 2557,
["npcID"] = 184124,
},
[102381] = {
["encounterName"] = "Murozond",
["encounterID"] = 1271,
["npcID"] = 54432,
},
[368506] = {
["npcID"] = 180924,
},
[405366] = {
["source"] = "Lady Shaz'ra",
["event"] = "SPELL_CAST_START",
["npcID"] = 200885,
},
[327552] = {
["npcID"] = 168573,
},
[325506] = {
["encounterName"] = "Sun King's Salvation",
["encounterID"] = 2402,
["npcID"] = 165764,
},
[126955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu'shan Warden",
["npcID"] = 64061,
},
[427894] = {
["source"] = "Forge Master Damian",
["event"] = "SPELL_CAST_START",
["npcID"] = 212831,
},
[43516] = {
["source"] = "Dragonflayer Prisoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 24255,
},
[51963] = {
["npcID"] = 27829,
},
[79857] = {
["source"] = "Pyromancer Flamehearth",
["event"] = "SPELL_CAST_START",
["npcID"] = 70709,
},
[22272] = {
["isChanneled"] = true,
["source"] = "Ethereal Sorcerer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18313,
},
[360320] = {
["npcID"] = 181652,
},
[413562] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Lurking Tempest",
["encounterID"] = 1043,
["event"] = "SPELL_CAST_START",
["npcID"] = 204337,
},
[427897] = {
["source"] = "Forge Master Damian",
["event"] = "SPELL_CAST_START",
["npcID"] = 212831,
},
[407420] = {
["source"] = "Primalist Runestone",
["event"] = "SPELL_CAST_START",
["npcID"] = 204001,
},
[254920] = {
["npcID"] = 169206,
},
[214989] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Vengeance",
["npcID"] = 100364,
},
[11969] = {
["source"] = "Firemane Ash Tail",
["event"] = "SPELL_CAST_START",
["npcID"] = 4331,
},
[368514] = {
["npcID"] = 183764,
},
[403326] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[391040] = {
["npcID"] = 185784,
},
[376706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Stormcaster",
["npcID"] = 190294,
},
[405375] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200913,
},
[350086] = {
["encounterName"] = "The Grand Menagerie",
["encounterID"] = 2441,
["npcID"] = 176705,
},
[440188] = {
["source"] = "Chitin Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 219725,
},
[384899] = {
["source"] = "Rotbow Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186208,
},
[111599] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scholomance Acolyte",
["npcID"] = 58757,
},
[391043] = {
["npcID"] = 185784,
},
[409473] = {
["source"] = "Voracious Magma Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 203825,
},
[138201] = {
["source"] = "Thunder Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 69821,
},
[372615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tamed Phoenix",
["npcID"] = 189247,
},
[200658] = {
["npcID"] = 95771,
},
[298897] = {
["encounterName"] = "Trixie & Naeno",
["encounterID"] = 2312,
["npcID"] = 150712,
},
[196563] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 91784,
},
[444288] = {
["source"] = "Web Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 218320,
},
[298898] = {
["encounterName"] = "Trixie & Naeno",
["encounterID"] = 2312,
["npcID"] = 153755,
},
[142298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Embercore",
["npcID"] = 70663,
},
[368522] = {
["npcID"] = 183764,
},
[113136] = {
["encounterName"] = "Darkmaster Gandling",
["source"] = "Darkmaster Gandling",
["npcID"] = 59080,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1430,
},
[341902] = {
["npcID"] = 174197,
},
[440195] = {
["source"] = "Wanton Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 225338,
},
[391050] = {
["source"] = "High Channeler Ryvati",
["event"] = "SPELL_CAST_START",
["npcID"] = 197535,
},
[360334] = {
["npcID"] = 181964,
},
[378764] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186120,
},
[325523] = {
["npcID"] = 165515,
},
[22273] = {
["isChanneled"] = true,
["source"] = "Ethereal Sorcerer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18313,
},
[372623] = {
["encounterName"] = "Sentinel Talondras",
["encounterID"] = 2557,
["npcID"] = 184124,
},
[83445] = {
["encounterName"] = "General Husam",
["encounterID"] = 1052,
["npcID"] = 44577,
},
[368528] = {
["npcID"] = 183764,
},
[201686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Restless Spirit",
["npcID"] = 100761,
},
[76790] = {
["npcID"] = 39616,
},
[319383] = {
["npcID"] = 165706,
},
[444296] = {
["source"] = "Arathi Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 206696,
},
[255952] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Skycap'n Kragg",
["encounterID"] = 2093,
["event"] = "SPELL_CAST_START",
["npcID"] = 126832,
},
[391055] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[350101] = {
["encounterName"] = "The Grand Menagerie",
["encounterID"] = 2441,
["npcID"] = 176705,
},
[360340] = {
["npcID"] = 179043,
},
[346006] = {
["encounterName"] = "Zo'phex the Sentinel",
["encounterID"] = 2425,
["npcID"] = 175616,
},
[405391] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200918,
},
[376723] = {
["encounterName"] = "Balakar Khan",
["source"] = "Nokhud Stormcaster",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 190294,
},
[401297] = {
["source"] = "Haleh",
["event"] = "SPELL_CAST_START",
["npcID"] = 199370,
},
[362390] = {
["encounterName"] = "Rygelon",
["encounterID"] = 2549,
["npcID"] = 182777,
},
[79351] = {
["encounterName"] = "High Priestess Azil",
["npcID"] = 42333,
["encounterID"] = 1057,
},
[376725] = {
["encounterName"] = "Balakar Khan",
["source"] = "Nokhud Stormcaster",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 190294,
},
[256979] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Eudora",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 126848,
},
[327581] = {
["npcID"] = 168396,
},
[448399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Taskfinder",
["npcID"] = 204127,
},
[409492] = {
["source"] = "Afflicted Soul",
["event"] = "SPELL_CAST_START",
["npcID"] = 204773,
},
[325535] = {
["npcID"] = 164562,
},
[442257] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Blood Parasite",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 220626,
},
[327584] = {
["npcID"] = 168393,
},
[413590] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["npcID"] = 201788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[333729] = {
["npcID"] = 168949,
},
[450451] = {
["encounterName"] = "Zekvir",
["source"] = "Zekvir",
["encounterID"] = 2987,
["event"] = "SPELL_CAST_START",
["npcID"] = 225204,
},
[436117] = {
["source"] = "Eratus, the Unwoven Paradox",
["event"] = "SPELL_CAST_START",
["npcID"] = 217190,
},
[360351] = {
["npcID"] = 179043,
},
[193502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glayvianna Soulrender",
["npcID"] = 98177,
},
[372638] = {
["encounterName"] = "Shriekwing",
["encounterID"] = 2398,
["npcID"] = 189706,
},
[417689] = {
["source"] = "Meantron 7000",
["event"] = "SPELL_CAST_START",
["npcID"] = 206131,
},
[164834] = {
["source"] = "Everbloom Naturalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 81819,
},
[368544] = {
["npcID"] = 184597,
},
[364449] = {
["npcID"] = 179939,
},
[368545] = {
["npcID"] = 184599,
},
[111606] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[11970] = {
["npcID"] = 176995,
},
[356260] = {
["npcID"] = 179388,
},
[440218] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216649,
},
[335783] = {
["npcID"] = 155812,
},
[374691] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[368548] = {
["npcID"] = 185145,
},
[193505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vileshard Hulk",
["npcID"] = 91000,
},
[382883] = {
["source"] = "Vile Rothexer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187224,
},
[432030] = {
["source"] = "Sureki Screamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 215411,
},
[129013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windward Matriarch",
["npcID"] = 58213,
},
[113143] = {
["encounterName"] = "Darkmaster Gandling",
["source"] = "Darkmaster Gandling",
["npcID"] = 59080,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1430,
},
[73212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkspear Shaman",
["npcID"] = 38326,
},
[368551] = {
["npcID"] = 184605,
},
[401316] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[362410] = {
["npcID"] = 181349,
},
[405413] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2693,
},
[56064] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naxxramas Acolyte",
["npcID"] = 15981,
},
[401318] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[325552] = {
["encounterName"] = "Domina Venomblade",
["npcID"] = 164266,
["encounterID"] = 2385,
},
[401319] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[405415] = {
["source"] = "Lady Shaz'ra",
["event"] = "SPELL_CAST_START",
["npcID"] = 200885,
},
[199652] = {
["source"] = "King Haldor",
["event"] = "SPELL_CAST_START",
["npcID"] = 95843,
},
[270264] = {
["source"] = "Portal Breacher",
["event"] = "SPELL_CAST_START",
["npcID"] = 209821,
},
[362413] = {
["npcID"] = 181344,
},
[413607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Twilight Magus",
["npcID"] = 201223,
},
[228321] = {
["source"] = "Kvaldir Spiritrender",
["event"] = "SPELL_CAST_START",
["npcID"] = 114538,
},
[444324] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[288696] = {
["encounterName"] = "Stormwall Blockade",
["encounterID"] = 2280,
["npcID"] = 146256,
},
[61184] = {
["source"] = "Krasari Huntress",
["event"] = "SPELL_CAST_START",
["npcID"] = 58070,
},
[440231] = {
["source"] = "Dark-Crazed Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 206067,
},
[125432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sra'thik Pool-Tender",
["npcID"] = 63570,
},
[203750] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Chronomaton",
["npcID"] = 111622,
},
[401325] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[386991] = {
["source"] = "Primal Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 184869,
},
[111610] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[88061] = {
["npcID"] = 45915,
},
[386992] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Proto-Drake",
["npcID"] = 191777,
},
[178154] = {
["encounterName"] = "Oshir",
["encounterID"] = 1750,
["npcID"] = 89011,
},
[374706] = {
["source"] = "Flamecaller Aymi",
["event"] = "SPELL_CAST_START",
["npcID"] = 190368,
},
[319417] = {
["npcID"] = 157036,
},
[395184] = {
["source"] = "Blazing Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 185883,
},
[298940] = {
["encounterName"] = "Trixie & Naeno",
["encounterID"] = 2312,
["npcID"] = 153755,
},
[75775] = {
["source"] = "Frostmane Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 41146,
},
[386994] = {
["source"] = "Wild Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 194086,
},
[202728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadlord Mendacius",
["npcID"] = 99649,
},
[221158] = {
["isChanneled"] = true,
["source"] = "Chaotoid",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 111075,
},
[427950] = {
["source"] = "Forge Master Damian",
["event"] = "SPELL_CAST_START",
["npcID"] = 212831,
},
[323515] = {
["encounterName"] = "Gorechop",
["encounterID"] = 2365,
["npcID"] = 162317,
},
[129017] = {
["source"] = "Dojani Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 65626,
},
[448429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Mystic",
["npcID"] = 203878,
},
[370615] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 184972,
},
[83455] = {
["encounterName"] = "Siamat",
["encounterID"] = 1055,
["npcID"] = 44704,
},
[196587] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[321471] = {
["encounterName"] = "Mistcaller",
["encounterID"] = 2392,
["npcID"] = 164501,
},
[298946] = {
["encounterName"] = "Trixie & Naeno",
["encounterID"] = 2312,
["npcID"] = 153755,
},
[268230] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Deckhand",
["npcID"] = 138464,
},
[79872] = {
["source"] = "Kaldorei Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 191112,
},
[427955] = {
["source"] = "Rank Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 211121,
},
[413621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Infiltrator",
["npcID"] = 206214,
},
[405431] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[391098] = {
["source"] = "Galzuda",
["event"] = "SPELL_CAST_START",
["npcID"] = 193330,
},
[245735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Famished Broken",
["npcID"] = 122322,
},
[405433] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[401338] = {
["source"] = "Kob'rok",
["event"] = "SPELL_CAST_START",
["npcID"] = 203462,
},
[129531] = {
["source"] = "Mo Mo",
["event"] = "SPELL_CAST_START",
["npcID"] = 59805,
},
[440246] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[393148] = {
["source"] = "Maneet",
["event"] = "SPELL_CAST_START",
["npcID"] = 188704,
},
[395196] = {
["source"] = "Blazing Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 185883,
},
[421817] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["encounterID"] = 2826,
["event"] = "SPELL_CAST_START",
["npcID"] = 208743,
},
[374719] = {
["source"] = "Stonejaw Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 188128,
},
[387006] = {
["source"] = "Rotting Treant",
["event"] = "SPELL_CAST_START",
["npcID"] = 186361,
},
[389054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Forager",
["npcID"] = 196694,
},
[317383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quilboar Warrior",
["npcID"] = 150237,
},
[401341] = {
["source"] = "Kob'rok",
["event"] = "SPELL_CAST_START",
["npcID"] = 203462,
},
[331718] = {
["npcID"] = 171772,
},
[199663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Councilor",
["npcID"] = 98370,
},
[401342] = {
["source"] = "Crimson Oldblood",
["event"] = "SPELL_CAST_START",
["npcID"] = 201054,
},
[389056] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[432059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candlelit Hexthrower",
["npcID"] = 213685,
},
[384961] = {
["source"] = "Rotbow Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186208,
},
[378818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Thaumaturge",
["npcID"] = 192788,
},
[274383] = {
["source"] = "Vermin Trapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 130404,
},
[12675] = {
["source"] = "Murkblood Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 17771,
},
[374724] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[335817] = {
["encounterName"] = "Devos, Paragon of Loyalty",
["encounterID"] = 2359,
["npcID"] = 162061,
},
[288719] = {
["encounterName"] = "Lady Jaina Proudmoore",
["encounterID"] = 2281,
["npcID"] = 146409,
},
[356295] = {
["npcID"] = 170257,
},
[448444] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[450492] = {
["encounterName"] = "Zekvir",
["source"] = "Zekvir",
["encounterID"] = 2987,
["event"] = "SPELL_CAST_START",
["npcID"] = 225204,
},
[411585] = {
["source"] = "Jalgon Stoutburn",
["event"] = "SPELL_CAST_START",
["npcID"] = 204426,
},
[228334] = {
["encounterName"] = "Shade of Medivh",
["encounterID"] = 1965,
["npcID"] = 114350,
},
[364488] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[276435] = {
["npcID"] = 136499,
},
[458685] = {
["source"] = "Moth'ethk",
["event"] = "SPELL_CAST_START",
["npcID"] = 206203,
},
[226287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vileshard Chunk",
["npcID"] = 101438,
},
[194547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yalia Sagewhisper",
["npcID"] = 62825,
},
[188404] = {
["encounterName"] = "Hymdall",
["source"] = "Storm Drake",
["encounterID"] = 1805,
["event"] = "SPELL_CAST_START",
["npcID"] = 97788,
},
[214001] = {
["source"] = "Risen Lancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 102095,
},
[462782] = {
["source"] = "Malfunctioning Defense Turret",
["event"] = "SPELL_CAST_START",
["npcID"] = 229678,
},
[129534] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mo Mo",
["npcID"] = 59805,
},
[372683] = {
["source"] = "Infused Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 187894,
},
[276439] = {
["encounterName"] = "Vectis",
["encounterID"] = 2134,
["npcID"] = 134442,
},
[378827] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Plunderer",
["npcID"] = 192786,
},
[323538] = {
["encounterName"] = "High Adjudicator Aleez",
["encounterID"] = 2403,
["npcID"] = 165410,
},
[407496] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[376780] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[214003] = {
["source"] = "Risen Swordsman",
["event"] = "SPELL_CAST_START",
["npcID"] = 102094,
},
[446404] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Visage",
["npcID"] = 213686,
},
[15043] = {
["source"] = "Yu'lon Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 57316,
},
[136189] = {
["encounterName"] = "Council of Elders",
["source"] = "Sul the Sandcrawler",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 69078,
},
[405450] = {
["source"] = "Hungry Rock Snail",
["event"] = "SPELL_CAST_START",
["npcID"] = 203260,
},
[417737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Amber Shaper",
["npcID"] = 207918,
},
[387021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Essence",
["npcID"] = 192238,
},
[374735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[356306] = {
["npcID"] = 182214,
},
[391118] = {
["source"] = "Scalebane Lieutenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 191739,
},
[378832] = {
["source"] = "Mistyvale Mauler",
["event"] = "SPELL_CAST_START",
["npcID"] = 193948,
},
[325591] = {
["npcID"] = 166863,
},
[192504] = {
["encounterName"] = "Tirathon Saltheril",
["source"] = "Tirathon Saltheril",
["npcID"] = 95885,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1815,
},
[323544] = {
["encounterName"] = "Hakkar, the Soulflayer",
["npcID"] = 165905,
["encounterID"] = 2395,
},
[440266] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskborn Darkhound",
["npcID"] = 229170,
},
[450505] = {
["encounterName"] = "Zekvir",
["source"] = "Zekvir",
["encounterID"] = 2987,
["event"] = "SPELL_CAST_START",
["npcID"] = 225204,
},
[156669] = {
["encounterName"] = "The Iron Maidens",
["source"] = "Admiral Gar'an",
["npcID"] = 77557,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1695,
},
[116226] = {
["source"] = "Slingtail Stickypaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 55110,
},
[384978] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["encounterID"] = 2584,
["event"] = "SPELL_CAST_START",
["npcID"] = 186738,
},
[378835] = {
["source"] = "Brackenhide Rotflinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 186362,
},
[266209] = {
["source"] = "Fallen Deathspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 134284,
},
[366549] = {
["npcID"] = 185154,
},
[401361] = {
["source"] = "Towering Deepstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 203786,
},
[341977] = {
["npcID"] = 170690,
},
[401362] = {
["source"] = "Half-bound Rageflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 203699,
},
[333787] = {
["npcID"] = 168934,
},
[450509] = {
["source"] = "Nerubian Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 216584,
},
[75272] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["encounterID"] = 1040,
["npcID"] = 39665,
},
[372696] = {
["source"] = "Primal Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 188244,
},
[456654] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathbound Husk",
["npcID"] = 220272,
},
[327646] = {
["encounterName"] = "Mueh'zala",
["npcID"] = 166608,
["encounterID"] = 2396,
},
[446416] = {
["source"] = "Honey-fused Droplet",
["event"] = "SPELL_CAST_START",
["npcID"] = 213697,
},
[142338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Dark Shaman",
["npcID"] = 71245,
},
[417748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Blade Lord",
["npcID"] = 207922,
},
[226296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vileshard Hulk",
["npcID"] = 91000,
},
[331743] = {
["npcID"] = 166276,
},
[456656] = {
["source"] = "Rabaan",
["event"] = "SPELL_CAST_START",
["npcID"] = 228343,
},
[327648] = {
["npcID"] = 168418,
},
[401368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcanic Deepstrider",
["npcID"] = 200808,
},
[378843] = {
["npcID"] = 191713,
},
[446419] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Visage",
["npcID"] = 213686,
},
[360414] = {
["encounterName"] = "Vigilant Guardian",
["encounterID"] = 2512,
["npcID"] = 180773,
},
[372701] = {
["encounterName"] = "Sentinel Talondras",
["encounterID"] = 2557,
["npcID"] = 184124,
},
[450100] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["encounterID"] = 1049,
["event"] = "SPELL_CAST_START",
["npcID"] = 40484,
},
[401370] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Owlbeast",
["npcID"] = 205316,
},
[448057] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["encounterID"] = 1049,
["event"] = "SPELL_CAST_START",
["npcID"] = 40484,
},
[452133] = {
["source"] = "Blackblood Coalescence",
["event"] = "SPELL_CAST_START",
["npcID"] = 215205,
},
[366559] = {
["npcID"] = 185154,
},
[345553] = {
["npcID"] = 174843,
},
[387037] = {
["source"] = "Primal Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 195917,
},
[448219] = {
["source"] = "Colossal Titan Orb",
["event"] = "SPELL_CAST_START",
["npcID"] = 221730,
},
[325605] = {
["npcID"] = 170087,
},
[446253] = {
["isChanneled"] = true,
["source"] = "Congealed Mass",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222461,
},
[378847] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Spinecrusher",
["npcID"] = 192787,
},
[178177] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Flametwister",
["npcID"] = 80676,
},
[122784] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber-Shaper Un'sok",
["npcID"] = 62511,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1499,
},
[401373] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Owlbeast",
["npcID"] = 205316,
},
[387039] = {
["source"] = "Nokhud Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 187299,
},
[307177] = {
["source"] = "Spellbound Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 162716,
},
[197365] = {
["encounterName"] = "Wrath of Azshara",
["source"] = "Wrath of Azshara",
["npcID"] = 96028,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1814,
},
[327655] = {
["npcID"] = 168420,
},
[329703] = {
["npcID"] = 167464,
},
[421852] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashen Gladehart Buck",
["npcID"] = 213781,
},
[391136] = {
["source"] = "Drakonid Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 187240,
},
[319465] = {
["npcID"] = 164184,
},
[378850] = {
["event"] = "SPELL_CAST_START",
["source"] = "Destabilized Elemental",
["npcID"] = 181536,
},
[431612] = {
["source"] = "Venombane Spitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 216192,
},
[458325] = {
["source"] = "Venombite",
["event"] = "SPELL_CAST_START",
["npcID"] = 227632,
},
[458397] = {
["source"] = "Kas'dru",
["event"] = "SPELL_CAST_START",
["npcID"] = 227635,
},
[402888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonesifter Marwak",
["npcID"] = 200681,
},
[449986] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[275927] = {
["npcID"] = 182728,
},
[417759] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Amber Shaper",
["npcID"] = 207918,
},
[329706] = {
["npcID"] = 182293,
},
[415492] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["encounterID"] = 2831,
["event"] = "SPELL_CAST_START",
["npcID"] = 207481,
},
[366566] = {
["npcID"] = 184910,
},
[443842] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[329707] = {
["npcID"] = 158290,
},
[226070] = {
["event"] = "SPELL_CAST_START",
["source"] = "Screeching Spiderling",
["npcID"] = 112039,
},
[114183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Scholar",
["npcID"] = 59372,
},
[40946] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Illidari Fearbringer",
["npcID"] = 22954,
},
[387045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ezrigeth",
["npcID"] = 187666,
},
[372711] = {
["isChanneled"] = true,
["source"] = "Brackenhide Shaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186220,
},
[256969] = {
["encounterName"] = "Chopper Redhook",
["source"] = "Snarling Dockhound",
["encounterID"] = 2098,
["event"] = "SPELL_CAST_START",
["npcID"] = 129640,
},
[163752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Man-at-Arms",
["npcID"] = 78832,
},
[41184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Stormcaller",
["npcID"] = 22846,
},
[448105] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Valiona",
["encounterID"] = 1048,
["event"] = "SPELL_CAST_START",
["npcID"] = 40320,
},
[440288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskborn Darkhound",
["npcID"] = 229170,
},
[417763] = {
["source"] = "Overlord Mechagon",
["event"] = "SPELL_CAST_START",
["npcID"] = 205309,
},
[39671] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Illidari Defiler",
["npcID"] = 22853,
},
[458311] = {
["source"] = "Venombite",
["event"] = "SPELL_CAST_START",
["npcID"] = 227632,
},
[40936] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Illidari Fearbringer",
["npcID"] = 22954,
},
[401382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Past Self",
["npcID"] = 185800,
},
[226304] = {
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 91000,
},
[389096] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alia Sunsoar",
["npcID"] = 196737,
},
[160772] = {
["isChanneled"] = true,
["source"] = "Mereldar Citizen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225601,
},
[327664] = {
["encounterName"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["encounterID"] = 2389,
},
[395240] = {
["source"] = "Enkine the Voracious",
["event"] = "SPELL_CAST_START",
["npcID"] = 193134,
},
[136954] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["encounterID"] = 1576,
["event"] = "SPELL_CAST_START",
["npcID"] = 69427,
},
[399336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarasek Frostclaw",
["npcID"] = 201035,
},
[376811] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 186120,
},
[395241] = {
["source"] = "Primalist Voltweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 198868,
},
[389098] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alia Sunsoar",
["npcID"] = 196737,
},
[366573] = {
["npcID"] = 185154,
},
[401385] = {
["source"] = "Carcaxas",
["event"] = "SPELL_CAST_START",
["npcID"] = 202836,
},
[450483] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[438245] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[374765] = {
["source"] = "Feasting Buzzard",
["event"] = "SPELL_CAST_START",
["npcID"] = 190960,
},
[441791] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[201733] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[137229] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["encounterID"] = 1559,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 68081,
},
[114185] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scarlet Scholar",
["npcID"] = 59372,
},
[385005] = {
["source"] = "Rustpine Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 187405,
},
[362480] = {
["npcID"] = 182322,
},
[389101] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alia Sunsoar",
["npcID"] = 196737,
},
[456125] = {
["source"] = "Agitated Scorpid",
["event"] = "SPELL_CAST_START",
["npcID"] = 215830,
},
[15620] = {
["npcID"] = 18965,
},
[387054] = {
["source"] = "Brinetooth Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 187281,
},
[137230] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["encounterID"] = 1559,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 68081,
},
[450129] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[102411] = {
["npcID"] = 54693,
},
[131968] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Battle-Mender",
["npcID"] = 67093,
},
[444023] = {
["source"] = "Unstable Experiment",
["event"] = "SPELL_CAST_START",
["npcID"] = 221537,
},
[166923] = {
["npcID"] = 81603,
},
[409581] = {
["source"] = "Whisper in the Dark",
["event"] = "SPELL_CAST_START",
["npcID"] = 203806,
},
[272382] = {
["npcID"] = 182820,
},
[284406] = {
["encounterName"] = "Stormwall Blockade",
["encounterID"] = 2280,
["npcID"] = 146436,
},
[136953] = {
["source"] = "Zandalari Water-Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 69455,
},
[131088] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistblade Scale-Lord",
["npcID"] = 63179,
},
[436203] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[141327] = {
["source"] = "Lieutenant Fizzboil",
["event"] = "SPELL_CAST_START",
["npcID"] = 71330,
},
[407535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Destroyer",
["npcID"] = 203861,
},
[443837] = {
["encounterName"] = "Reformed Fury",
["source"] = "Speaker Davenruth",
["encounterID"] = 2998,
["event"] = "SPELL_CAST_START",
["npcID"] = 218022,
},
[446086] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Unnaturaler",
["npcID"] = 216339,
},
[76815] = {
["npcID"] = 41096,
},
[388716] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[131089] = {
["event"] = "SPELL_CAST_START",
["source"] = "Koukou",
["npcID"] = 66213,
},
[436205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Test Subject",
["npcID"] = 216328,
},
[462826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Explosive Bomberbot",
["npcID"] = 229706,
},
[448492] = {
["source"] = "Guard Captain Suleyman",
["event"] = "SPELL_CAST_START",
["npcID"] = 212826,
},
[129033] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Yalia Sagewhisper",
["npcID"] = 62825,
},
[470588] = {
["source"] = "Kobyss Witherer",
["event"] = "SPELL_CAST_START",
["npcID"] = 214251,
},
[438218] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[417215] = {
["source"] = "Blood Horde Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 207585,
},
[131090] = {
["event"] = "SPELL_CAST_START",
["source"] = "Koukou",
["npcID"] = 66213,
},
[354297] = {
["npcID"] = 180431,
},
[405491] = {
["source"] = "Animated Riches",
["event"] = "SPELL_CAST_START",
["npcID"] = 201573,
},
[207881] = {
["encounterName"] = "Talixae Flamewreath",
["npcID"] = 104217,
["encounterID"] = 1869,
},
[445949] = {
["source"] = "Sureki Silkbow",
["event"] = "SPELL_CAST_START",
["npcID"] = 222273,
},
[355782] = {
["npcID"] = 179842,
},
[405492] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200913,
},
[391158] = {
["source"] = "Tomnu",
["event"] = "SPELL_CAST_START",
["npcID"] = 193722,
},
[131091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corporal Jackson Silver",
["npcID"] = 65881,
},
[395254] = {
["source"] = "Primalist Tempestmaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 198878,
},
[268274] = {
["encounterName"] = "Ring of Booty",
["source"] = "Booty Fanatic",
["npcID"] = 136539,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2095,
},
[294349] = {
["npcID"] = 144301,
},
[129034] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Snagtooth Tool-Grabber",
["npcID"] = 56185,
},
[329727] = {
["npcID"] = 159151,
},
[372730] = {
["source"] = "Primal Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 188244,
},
[366409] = {
["npcID"] = 184908,
},
[417781] = {
["source"] = "Overlord Mechagon",
["event"] = "SPELL_CAST_START",
["npcID"] = 205309,
},
[462264] = {
["isChanneled"] = true,
["source"] = "Blood Drainer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229399,
},
[353783] = {
["encounterName"] = "Myza's Oasis",
["encounterID"] = 2440,
["npcID"] = 176565,
},
[134164] = {
["source"] = "Alliance Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 67900,
},
[376827] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[288774] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Malfunctioning Pylon",
["npcID"] = 229739,
},
[348159] = {
["encounterName"] = "Doctor Ickus",
["npcID"] = 164967,
["encounterID"] = 2384,
},
[407544] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[425974] = {
["source"] = "Earth Infused Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 210109,
},
[387067] = {
["source"] = "Forgotten Creation",
["event"] = "SPELL_CAST_START",
["npcID"] = 193214,
},
[348160] = {
["encounterName"] = "Doctor Ickus",
["npcID"] = 164967,
["encounterID"] = 2384,
},
[438200] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[376829] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[399069] = {
["source"] = "Farscale Tidelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 200488,
},
[388544] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[333827] = {
["npcID"] = 167533,
},
[361923] = {
["encounterName"] = "Lords of Dread",
["npcID"] = 183138,
["encounterID"] = 2543,
},
[444172] = {
["isChanneled"] = true,
["source"] = "Xur'khun the Defiled",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221845,
},
[372735] = {
["source"] = "Flashfrost Earthshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187969,
},
[432120] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord",
["npcID"] = 228575,
},
[439873] = {
["source"] = "Royal Whisperer",
["event"] = "SPELL_CAST_START",
["npcID"] = 219723,
},
[323177] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Droman Oulfarran",
["encounterID"] = 2397,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164804,
},
[227339] = {
["encounterName"] = "Attumen the Huntsman",
["encounterID"] = 1960,
["npcID"] = 114264,
},
[246505] = {
["source"] = "Fanatical Pyromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 127724,
},
[448384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamekeeper Graz",
["npcID"] = 219279,
},
[411644] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Tidehunter",
["npcID"] = 205365,
},
[154356] = {
["source"] = "Sargerei Soulpriest",
["event"] = "SPELL_CAST_START",
["npcID"] = 76595,
},
[325361] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 166644,
},
[385024] = {
["source"] = "Salty Salamander",
["event"] = "SPELL_CAST_START",
["npcID"] = 188027,
},
[333831] = {
["npcID"] = 171109,
},
[89105] = {
["npcID"] = 45704,
},
[456696] = {
["source"] = "Twilight Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 224152,
},
[339975] = {
["npcID"] = 173609,
},
[447926] = {
["source"] = "Galvanized Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 224779,
},
[231436] = {
["source"] = "Nightfallen Rebel",
["event"] = "SPELL_CAST_START",
["npcID"] = 114931,
},
[116711] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["npcID"] = 60009,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1390,
},
[393217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Inferno",
["npcID"] = 189043,
},
[123260] = {
["source"] = "Anduin Wrynn",
["event"] = "SPELL_CAST_START",
["npcID"] = 59608,
},
[227341] = {
["encounterName"] = "Opera Hall",
["encounterID"] = 1957,
["npcID"] = 114251,
},
[407552] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200918,
},
[458746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Lich King",
["npcID"] = 224157,
},
[441782] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[307213] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 157254,
},
[374789] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["encounterID"] = 2582,
["event"] = "SPELL_CAST_START",
["npcID"] = 186644,
},
[329740] = {
["npcID"] = 158290,
},
[272402] = {
["source"] = "Cutwater Knife Juggler",
["event"] = "SPELL_CAST_START",
["npcID"] = 129599,
},
[153623] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["encounterID"] = 1688,
["event"] = "SPELL_CAST_START",
["npcID"] = 75829,
},
[146456] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goro'dan",
["npcID"] = 72964,
},
[385029] = {
["source"] = "Fleshripper Vulture",
["event"] = "SPELL_CAST_START",
["npcID"] = 186246,
},
[444414] = {
["source"] = "Blight Swarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 221669,
},
[372743] = {
["isChanneled"] = true,
["source"] = "Flashfrost Chillweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188067,
},
[458582] = {
["source"] = "Sureki Darkblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 222274,
},
[143385] = {
["encounterName"] = "Siegecrafter Blackfuse",
["source"] = "Siegecrafter Blackfuse",
["npcID"] = 71504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1601,
},
[190313] = {
["encounterName"] = "Archimonde",
["source"] = "Archimonde",
["encounterID"] = 1799,
["event"] = "SPELL_CAST_START",
["npcID"] = 91331,
},
[76820] = {
["npcID"] = 41096,
},
[456702] = {
["source"] = "Rampaging Blight",
["event"] = "SPELL_CAST_START",
["npcID"] = 220273,
},
[450134] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aspirant Kiipka",
["npcID"] = 220781,
},
[164887] = {
["source"] = "Everbloom Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 81820,
},
[341441] = {
["npcID"] = 174069,
},
[191508] = {
["source"] = "Valarjar Aspirant",
["event"] = "SPELL_CAST_START",
["npcID"] = 101637,
},
[450519] = {
["encounterName"] = "Zekvir",
["source"] = "Zekvir",
["encounterID"] = 2987,
["event"] = "SPELL_CAST_START",
["npcID"] = 225204,
},
[362507] = {
["npcID"] = 182690,
},
[130062] = {
["source"] = "Adjunct Zet'uk",
["event"] = "SPELL_CAST_START",
["npcID"] = 65478,
},
[333839] = {
["npcID"] = 167534,
},
[439811] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[313362] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[448155] = {
["source"] = "Crazed Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 219454,
},
[191509] = {
["source"] = "Hill Ettin",
["event"] = "SPELL_CAST_START",
["npcID"] = 102886,
},
[319506] = {
["npcID"] = 164232,
},
[395273] = {
["source"] = "Primal Stormsentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 196856,
},
[436200] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[448515] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211290,
},
[363965] = {
["npcID"] = 183747,
},
[387083] = {
["source"] = "Time-Lost Briarback",
["event"] = "SPELL_CAST_START",
["npcID"] = 187264,
},
[386490] = {
["encounterName"] = "Granyth",
["source"] = "Nokhud Saboteur",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 195820,
},
[374797] = {
["source"] = "Windblessed Ohuna",
["event"] = "SPELL_CAST_START",
["npcID"] = 188088,
},
[385036] = {
["source"] = "Primalist Galesinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 190373,
},
[294341] = {
["source"] = "Irate Pa'kura Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 147900,
},
[448230] = {
["source"] = "Colossal Titan Orb",
["event"] = "SPELL_CAST_START",
["npcID"] = 221730,
},
[432135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candlelit Pebblemaker",
["npcID"] = 218658,
},
[106514] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shan'ze Spiritclaw",
["npcID"] = 56596,
},
[388537] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[61964] = {
["npcID"] = 32886,
},
[106877] = {
["encounterName"] = "Sha of Violence",
["source"] = "Sha of Violence",
["encounterID"] = 1305,
["event"] = "SPELL_CAST_START",
["npcID"] = 56719,
},
[124944] = {
["source"] = "Adjunct Ikkess",
["event"] = "SPELL_CAST_START",
["npcID"] = 62074,
},
[470587] = {
["source"] = "Kobyss Witherer",
["event"] = "SPELL_CAST_START",
["npcID"] = 214251,
},
[421898] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["npcID"] = 209333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[333845] = {
["npcID"] = 167534,
},
[409612] = {
["source"] = "Whisper in the Dark",
["event"] = "SPELL_CAST_START",
["npcID"] = 203806,
},
[448213] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[141342] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grit",
["npcID"] = 70605,
},
[456711] = {
["source"] = "Twilight Lavabender",
["event"] = "SPELL_CAST_START",
["npcID"] = 224249,
},
[450568] = {
["encounterName"] = "Zekvir",
["source"] = "Zekvir",
["encounterID"] = 2987,
["event"] = "SPELL_CAST_START",
["npcID"] = 225204,
},
[440222] = {
["source"] = "Dark-Crazed Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 206067,
},
[323608] = {
["encounterName"] = "Mordretha",
["encounterID"] = 2404,
["npcID"] = 165946,
},
[276068] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "Hadal Darkfathom",
["npcID"] = 128651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2099,
},
[450045] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[405332] = {
["source"] = "Gahz'raxes",
["event"] = "SPELL_CAST_START",
["npcID"] = 200537,
},
[462856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nullbot",
["npcID"] = 229729,
},
[456713] = {
["source"] = "Twilight Lavabender",
["event"] = "SPELL_CAST_START",
["npcID"] = 224249,
},
[376851] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[388535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnawbone Chainchewer",
["npcID"] = 196521,
},
[339992] = {
["npcID"] = 173609,
},
[17290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hellfire Imp",
["npcID"] = 17477,
},
[368661] = {
["npcID"] = 179386,
},
[387091] = {
["source"] = "Time-Lost Sunseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 187239,
},
[444000] = {
["source"] = "Woven Threadmancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 218317,
},
[391187] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bisquius",
["npcID"] = 197557,
},
[368662] = {
["npcID"] = 180015,
},
[321564] = {
["npcID"] = 165829,
},
[462859] = {
["source"] = "Fervent Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 206694,
},
[228374] = {
["source"] = "Kvaldir Reefcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 114539,
},
[360472] = {
["npcID"] = 178803,
},
[395284] = {
["source"] = "Groffnar",
["event"] = "SPELL_CAST_START",
["npcID"] = 201537,
},
[61965] = {
["npcID"] = 32886,
},
[301088] = {
["npcID"] = 151657,
},
[385046] = {
["source"] = "Skulking Gutstabber",
["event"] = "SPELL_CAST_START",
["npcID"] = 186242,
},
[450400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Supervisor Radlock",
["npcID"] = 220897,
},
[430097] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213217,
},
[415406] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["encounterID"] = 2831,
["event"] = "SPELL_CAST_START",
["npcID"] = 207481,
},
[9734] = {
["source"] = "Dragonflayer Prisoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 24255,
},
[272422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Spotter",
["npcID"] = 138255,
},
[452014] = {
["source"] = "Faceless One",
["event"] = "SPELL_CAST_START",
["npcID"] = 223119,
},
[448528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitfire Fusetender",
["npcID"] = 211777,
},
[79896] = {
["npcID"] = 184079,
},
[259092] = {
["source"] = "Irontide Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 126919,
},
[442052] = {
["source"] = "Sureki Ironweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 220551,
},
[448179] = {
["source"] = "Crazed Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 219454,
},
[452162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Covert Webmancer",
["npcID"] = 223844,
},
[189469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Vengeance",
["npcID"] = 100364,
},
[394676] = {
["source"] = "Council Icecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 198501,
},
[449965] = {
["source"] = "Vileroot",
["event"] = "SPELL_CAST_START",
["npcID"] = 214783,
},
[200732] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[458228] = {
["source"] = "Sakret'na",
["event"] = "SPELL_CAST_START",
["npcID"] = 215841,
},
[117780] = {
["source"] = "Longfang Howler",
["event"] = "SPELL_CAST_START",
["npcID"] = 56524,
},
[429487] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[376860] = {
["npcID"] = 186854,
},
[388688] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garlic-Breathed Hydra",
["npcID"] = 224751,
},
[397338] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Tectonic Crusher",
["npcID"] = 190588,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[391195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bisquius",
["npcID"] = 197557,
},
[294335] = {
["source"] = "Furious Raptari Druid",
["event"] = "SPELL_CAST_START",
["npcID"] = 147901,
},
[384847] = {
["source"] = "Fishface",
["event"] = "SPELL_CAST_START",
["npcID"] = 191926,
},
[121876] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Sra'thik Amber-Trapper",
["npcID"] = 62405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1498,
},
[415769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Time",
["npcID"] = 206140,
},
[268260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Cannoneer",
["npcID"] = 138465,
},
[378413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Fury",
["npcID"] = 191111,
},
[434137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Venomshell",
["npcID"] = 220730,
},
[415770] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Time",
["npcID"] = 206140,
},
[124948] = {
["source"] = "Adjunct Ikkess",
["event"] = "SPELL_CAST_START",
["npcID"] = 62074,
},
[333241] = {
["npcID"] = 170850,
},
[397341] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[391198] = {
["source"] = "Tserasor the Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190598,
},
[192307] = {
["encounterName"] = "Hyrja",
["source"] = "Hyrja",
["encounterID"] = 1806,
["event"] = "SPELL_CAST_START",
["npcID"] = 95833,
},
[444408] = {
["encounterName"] = "Reformed Fury",
["source"] = "Speaker Davenruth",
["encounterID"] = 2998,
["event"] = "SPELL_CAST_START",
["npcID"] = 218022,
},
[266286] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sewer Vicejaw",
["npcID"] = 134896,
},
[79881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Enforcer",
["npcID"] = 60995,
},
[376865] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[428019] = {
["source"] = "Royal Wicklighter",
["event"] = "SPELL_CAST_START",
["npcID"] = 210812,
},
[445866] = {
["isChanneled"] = true,
["source"] = "Swarm-Maven Donmiss",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216578,
},
[415773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Interval",
["npcID"] = 206065,
},
[413544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timestream Anomaly",
["npcID"] = 199749,
},
[323150] = {
["encounterName"] = "Lord Chamberlain",
["encounterID"] = 2381,
["npcID"] = 165737,
},
[288815] = {
["npcID"] = 147830,
},
[432156] = {
["source"] = "Waxtail Outrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 213095,
},
[124949] = {
["source"] = "Adjunct Ikkess",
["event"] = "SPELL_CAST_START",
["npcID"] = 62074,
},
[288814] = {
["npcID"] = 147830,
},
[274480] = {
["npcID"] = 139842,
},
[171044] = {
["npcID"] = 88512,
},
[462802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Machinist",
["npcID"] = 229695,
},
[329770] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 166644,
},
[208685] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Dominator Tentacle",
["npcID"] = 105304,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1873,
},
[439857] = {
["source"] = "Royal Whisperer",
["event"] = "SPELL_CAST_START",
["npcID"] = 219723,
},
[393251] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frenzied Grovetalon",
["npcID"] = 187507,
},
[395299] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Destroyer",
["npcID"] = 194402,
},
[452127] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 211089,
},
[391204] = {
["source"] = "Uurtus",
["event"] = "SPELL_CAST_START",
["npcID"] = 193724,
},
[220934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azerite Manifestation",
["npcID"] = 222670,
},
[450435] = {
["source"] = "Y'tekhi",
["event"] = "SPELL_CAST_START",
["npcID"] = 215660,
},
[340011] = {
["npcID"] = 173613,
},
[374823] = {
["source"] = "Squallbringer Cyraz",
["event"] = "SPELL_CAST_START",
["npcID"] = 190370,
},
[409635] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[450424] = {
["source"] = "Congealed Wax-hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 223206,
},
[456735] = {
["source"] = "Aquellion",
["event"] = "SPELL_CAST_START",
["npcID"] = 220274,
},
[366633] = {
["npcID"] = 185155,
},
[385063] = {
["source"] = "Primalist Cinderweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190207,
},
[329774] = {
["encounterName"] = "Hungering Destroyer",
["encounterID"] = 2383,
["npcID"] = 164261,
},
[389159] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskanoth",
["npcID"] = 193533,
},
[207906] = {
["encounterName"] = "Talixae Flamewreath",
["npcID"] = 104217,
["encounterID"] = 1869,
},
[452205] = {
["source"] = "Aggregation of Horrors",
["event"] = "SPELL_CAST_START",
["npcID"] = 220999,
},
[444449] = {
["source"] = "Fervent Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 206694,
},
[189227] = {
["source"] = "Crawliac Cinderwitch",
["event"] = "SPELL_CAST_START",
["npcID"] = 95174,
},
[120770] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Needle Sprite",
["npcID"] = 55593,
},
[385065] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[22883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Novice Timewalker",
["npcID"] = 189583,
},
[386993] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cascade Proto-Drake",
["npcID"] = 194939,
},
[427432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet of the Flame",
["npcID"] = 207315,
},
[359856] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[288822] = {
["npcID"] = 147829,
},
[431544] = {
["source"] = "Stalwart Hauler",
["event"] = "SPELL_CAST_START",
["npcID"] = 214935,
},
[448269] = {
["source"] = "Foreseer Xix'amon",
["event"] = "SPELL_CAST_START",
["npcID"] = 215435,
},
[93655] = {
["source"] = "Boiling Springbubble",
["event"] = "SPELL_CAST_START",
["npcID"] = 48768,
},
[175848] = {
["source"] = "Gorian Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 85225,
},
[128023] = {
["source"] = "Dread Remora",
["event"] = "SPELL_CAST_START",
["npcID"] = 63353,
},
[123928] = {
["source"] = "Scar-Shell",
["event"] = "SPELL_CAST_START",
["npcID"] = 63311,
},
[393259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Inferno",
["npcID"] = 189043,
},
[456295] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aelric Leid",
["npcID"] = 213208,
},
[446477] = {
["source"] = "Deepwater Sludger",
["event"] = "SPELL_CAST_START",
["npcID"] = 216515,
},
[333875] = {
["npcID"] = 168942,
},
[450597] = {
["encounterName"] = "Zekvir",
["source"] = "Egg Cocoon",
["encounterID"] = 2987,
["event"] = "SPELL_CAST_START",
["npcID"] = 224077,
},
[106923] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Azure Serpent",
["encounterID"] = 1303,
["event"] = "SPELL_CAST_START",
["npcID"] = 56754,
},
[340019] = {
["npcID"] = 173604,
},
[191527] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blade Dancer Illianna",
["npcID"] = 96657,
},
[292926] = {
["npcID"] = 151127,
},
[386700] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hailbringer Marauder",
["npcID"] = 189228,
},
[227363] = {
["encounterName"] = "Attumen the Huntsman",
["encounterID"] = 1960,
["npcID"] = 114264,
},
[276540] = {
["npcID"] = 136499,
},
[442408] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of Turalyon",
["npcID"] = 214649,
},
[164907] = {
["source"] = "Reanimated Ritual Bones",
["event"] = "SPELL_CAST_START",
["npcID"] = 75715,
},
[397358] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[423979] = {
["source"] = "Void Cursed Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 214419,
},
[118657] = {
["source"] = "Snagtooth Hooligan",
["event"] = "SPELL_CAST_START",
["npcID"] = 56462,
},
[288828] = {
["npcID"] = 147829,
},
[356404] = {
["npcID"] = 180091,
},
[75645] = {
["npcID"] = 39679,
},
[139311] = {
["source"] = "Rotting Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 70224,
},
[456751] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Valiona",
["encounterID"] = 1048,
["event"] = "SPELL_CAST_START",
["npcID"] = 40320,
},
[462892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Pylon",
["npcID"] = 229739,
},
[456745] = {
["source"] = "Dark Proselityzer",
["event"] = "SPELL_CAST_START",
["npcID"] = 224898,
},
[393265] = {
["source"] = "Tombcaller Ganzaya",
["event"] = "SPELL_CAST_START",
["npcID"] = 188509,
},
[387122] = {
["source"] = "Forgotten Creation",
["event"] = "SPELL_CAST_START",
["npcID"] = 193214,
},
[290878] = {
["npcID"] = 146409,
},
[146479] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Goro'dan",
["npcID"] = 72964,
},
[385075] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["encounterID"] = 2584,
["event"] = "SPELL_CAST_START",
["npcID"] = 186738,
},
[156718] = {
["source"] = "Monstrous Corpse Spider",
["event"] = "SPELL_CAST_START",
["npcID"] = 76104,
},
[356407] = {
["npcID"] = 180091,
},
[427428] = {
["source"] = "Greedy Gessie",
["event"] = "SPELL_CAST_START",
["npcID"] = 209936,
},
[458795] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravageant",
["npcID"] = 207826,
},
[343470] = {
["npcID"] = 165919,
},
[113691] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["npcID"] = 59150,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1420,
},
[81439] = {
["npcID"] = 43391,
},
[252637] = {
["source"] = "Slobbering Fiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 127810,
},
[387125] = {
["source"] = "Primalist Thunderbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 195696,
},
[315454] = {
["npcID"] = 183266,
},
[374839] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[288836] = {
["npcID"] = 147835,
},
[456346] = {
["source"] = "Anguishing Nightmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 214415,
},
[241374] = {
["source"] = "Defensive Countermeasure",
["event"] = "SPELL_CAST_START",
["npcID"] = 120449,
},
[228391] = {
["source"] = "Bonespeaker Soulbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 114532,
},
[417843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Listless Nae'dra",
["npcID"] = 211164,
},
[387127] = {
["source"] = "Primalist Thunderbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 195696,
},
[128026] = {
["source"] = "Dread Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 62751,
},
[448560] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["encounterID"] = 2907,
["event"] = "SPELL_CAST_START",
["npcID"] = 216619,
},
[370104] = {
["source"] = "Qalashi Metalshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 190767,
},
[337982] = {
["npcID"] = 162872,
},
[372794] = {
["isChanneled"] = true,
["source"] = "Defier Draghar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 187897,
},
[81440] = {
["npcID"] = 43391,
},
[442418] = {
["source"] = "Royal Journalist Ist'iix",
["event"] = "SPELL_CAST_START",
["npcID"] = 226234,
},
[446405] = {
["encounterName"] = "Undersea Abomination",
["source"] = "Undersea Abomination",
["npcID"] = 214348,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2895,
},
[123931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jol'Grum",
["npcID"] = 63312,
},
[394662] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sky Vixen Shokhari",
["npcID"] = 190761,
},
[124955] = {
["source"] = "Adjunct Ek'vem",
["event"] = "SPELL_CAST_START",
["npcID"] = 62073,
},
[448249] = {
["source"] = "Colossal Titan Orb",
["event"] = "SPELL_CAST_START",
["npcID"] = 221730,
},
[450613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamekeeper Graz",
["npcID"] = 219279,
},
[440372] = {
["source"] = "Scary Skitterer",
["event"] = "SPELL_CAST_START",
["npcID"] = 216944,
},
[376892] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[428086] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["encounterID"] = 2837,
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[389179] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[444145] = {
["source"] = "Frenzied Siege Artillery",
["event"] = "SPELL_CAST_START",
["npcID"] = 224521,
},
[391006] = {
["source"] = "Blisterhide",
["event"] = "SPELL_CAST_START",
["npcID"] = 197353,
},
[200418] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[372800] = {
["source"] = "Expedition Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 187125,
},
[325700] = {
["npcID"] = 165529,
},
[106526] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["npcID"] = 56448,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1418,
},
[432125] = {
["source"] = "Battlefront Hauler",
["event"] = "SPELL_CAST_START",
["npcID"] = 223789,
},
[274507] = {
["encounterName"] = "Council o' Captains",
["source"] = "Bilge Rat Swabby",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 129526,
},
[257063] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Waveshaper",
["npcID"] = 129370,
},
[456259] = {
["source"] = "Candleflyer Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 220276,
},
[226347] = {
["source"] = "Stoneclaw Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 91332,
},
[446519] = {
["source"] = "Shalehorn Impaler",
["event"] = "SPELL_CAST_START",
["npcID"] = 216970,
},
[391230] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bisquius",
["npcID"] = 197557,
},
[431552] = {
["source"] = "Nerubian Webspinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 224149,
},
[387135] = {
["source"] = "Primalist Arcblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 194898,
},
[331846] = {
["npcID"] = 167964,
},
[183345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Necrodark Defiler",
["npcID"] = 104888,
},
[319560] = {
["npcID"] = 158054,
},
[444473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shacklefang Leafnose",
["npcID"] = 223167,
},
[12167] = {
["encounterName"] = "Grimlok",
["source"] = "Grimlok",
["encounterID"] = 553,
["event"] = "SPELL_CAST_START",
["npcID"] = 4854,
},
[81442] = {
["npcID"] = 43391,
},
[147510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Golganarr",
["npcID"] = 72970,
},
[423479] = {
["source"] = "Royal Wicklighter",
["event"] = "SPELL_CAST_START",
["npcID"] = 210812,
},
[427869] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["encounterID"] = 2883,
["event"] = "SPELL_CAST_START",
["npcID"] = 213119,
},
[329170] = {
["encounterName"] = "Lord Chamberlain",
["encounterID"] = 2381,
["npcID"] = 165737,
},
[417184] = {
["source"] = "Eviscerator Kintara",
["event"] = "SPELL_CAST_START",
["npcID"] = 207596,
},
[272464] = {
["npcID"] = 136596,
},
[421665] = {
["encounterName"] = "Ol' Waxbeard",
["source"] = "Ol' Waxbeard",
["encounterID"] = 2829,
["event"] = "SPELL_CAST_START",
["npcID"] = 210149,
},
[292942] = {
["npcID"] = 181800,
},
[442428] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["encounterID"] = 2898,
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[433766] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["npcID"] = 215405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[458634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Flamecoil Serpent",
["npcID"] = 225895,
},
[139319] = {
["source"] = "Zandalari Storm-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 70236,
},
[208944] = {
["encounterName"] = "Grand Magistrix Elisande",
["source"] = "Elisande",
["encounterID"] = 1872,
["event"] = "SPELL_CAST_START",
["npcID"] = 106643,
},
[444095] = {
["source"] = "Chieftain Gillcarver",
["event"] = "SPELL_CAST_START",
["npcID"] = 219633,
},
[105504] = {
["source"] = "Miss Fanny",
["event"] = "SPELL_CAST_START",
["npcID"] = 56192,
},
[404896] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201773,
},
[372147] = {
["source"] = "Balara",
["event"] = "SPELL_CAST_START",
["npcID"] = 193457,
},
[346186] = {
["npcID"] = 167323,
},
[364616] = {
["npcID"] = 183596,
},
[415253] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invasive Sporecap",
["npcID"] = 207482,
},
[192563] = {
["source"] = "Valarjar Purifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 97197,
},
[444479] = {
["encounterName"] = "Reformed Fury",
["source"] = "Reformed Fury",
["encounterID"] = 2998,
["event"] = "SPELL_CAST_START",
["npcID"] = 218034,
},
[372808] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["encounterID"] = 2609,
["event"] = "SPELL_CAST_START",
["npcID"] = 188252,
},
[432117] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[442432] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Broodtwister Ovi'nax",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 214506,
},
[272469] = {
["source"] = "Abyssal Reach",
["event"] = "SPELL_CAST_START",
["npcID"] = 138538,
},
[445984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burrowing Jawcrawler",
["npcID"] = 229821,
},
[419229] = {
["source"] = "Cho'gall",
["event"] = "SPELL_CAST_START",
["npcID"] = 208212,
},
[417860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angered Umbraclaw",
["npcID"] = 211342,
},
[129566] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bataari Fire-Warrior",
["npcID"] = 59083,
},
[397383] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199703,
},
[456362] = {
["source"] = "Boneseer Hookjaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 213805,
},
[390560] = {
["source"] = "Norbett",
["event"] = "SPELL_CAST_START",
["npcID"] = 190968,
},
[387145] = {
["source"] = "Stormcaller Boroo",
["event"] = "SPELL_CAST_START",
["npcID"] = 194317,
},
[446328] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fog Form",
["npcID"] = 213953,
},
[204802] = {
["source"] = "Shadow Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 105069,
},
[75813] = {
["npcID"] = 40634,
},
[370764] = {
["source"] = "Crystal Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 196116,
},
[175842] = {
["source"] = "Gorian Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 85225,
},
[432130] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[188470] = {
["source"] = "Surging Podling",
["event"] = "SPELL_CAST_START",
["npcID"] = 210210,
},
[173112] = {
["npcID"] = 83762,
},
[356431] = {
["npcID"] = 180113,
},
[452164] = {
["source"] = "Swarm-Maven Donmiss",
["event"] = "SPELL_CAST_START",
["npcID"] = 216578,
},
[401482] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[370766] = {
["source"] = "Crystal Thrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 196117,
},
[446533] = {
["source"] = "Mycotic Shalehorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 212704,
},
[456772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Workmaster Nast",
["npcID"] = 213200,
},
[311382] = {
["source"] = "Deresh of the Nothingness",
["event"] = "SPELL_CAST_START",
["npcID"] = 159768,
},
[338003] = {
["npcID"] = 165414,
},
[438343] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[446474] = {
["source"] = "Congealed Wax-hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 223206,
},
[450338] = {
["source"] = "Discordant Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 223118,
},
[446300] = {
["encounterName"] = "Undersea Abomination",
["source"] = "Undersea Abomination",
["npcID"] = 214348,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2895,
},
[450399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Livid Enforcer",
["npcID"] = 227354,
},
[448002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Stormfang",
["npcID"] = 216017,
},
[446430] = {
["source"] = "Disturbed Kelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 215702,
},
[387151] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["encounterID"] = 2583,
["event"] = "SPELL_CAST_START",
["npcID"] = 186737,
},
[374865] = {
["source"] = "Konkhular",
["event"] = "SPELL_CAST_START",
["npcID"] = 194544,
},
[391247] = {
["source"] = "Bazual",
["event"] = "SPELL_CAST_START",
["npcID"] = 193532,
},
[417868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angered Umbraclaw",
["npcID"] = 211342,
},
[323552] = {
["encounterName"] = "High Adjudicator Aleez",
["encounterID"] = 2403,
["npcID"] = 165410,
},
[419870] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[294312] = {
["source"] = "Rioting Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 147779,
},
[275882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eratin the Barber",
["npcID"] = 199947,
},
[162777] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Marksman",
["npcID"] = 80422,
},
[44224] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Kael'thas Sunstrider",
["encounterID"] = 1894,
["event"] = "SPELL_CAST_START",
["npcID"] = 24664,
},
[450182] = {
["source"] = "Disturbed Mudspawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 219897,
},
[434252] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Hauler",
["npcID"] = 217039,
},
[316836] = {
["npcID"] = 174843,
},
[314855] = {
["source"] = "Gryth'ax the Executioner",
["event"] = "SPELL_CAST_START",
["npcID"] = 159224,
},
[456171] = {
["source"] = "Grimlurk",
["event"] = "SPELL_CAST_START",
["npcID"] = 223091,
},
[229429] = {
["npcID"] = 115388,
},
[173116] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beremus the Overgrowth",
["npcID"] = 80700,
},
[397394] = {
["source"] = "Nokhud Thunderfist",
["event"] = "SPELL_CAST_START",
["npcID"] = 193373,
},
[448111] = {
["source"] = "Diu'mik",
["event"] = "SPELL_CAST_START",
["npcID"] = 211564,
},
[385108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Restless Podling",
["npcID"] = 187317,
},
[428111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jani",
["npcID"] = 213536,
},
[352345] = {
["encounterName"] = "Timecap'n Hooktail",
["encounterID"] = 2419,
["npcID"] = 176178,
},
[456780] = {
["source"] = "King Splash",
["event"] = "SPELL_CAST_START",
["npcID"] = 220275,
},
[450637] = {
["source"] = "Deepwalker Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 219035,
},
[338011] = {
["npcID"] = 166318,
},
[123938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodthirsty Saurok",
["npcID"] = 63279,
},
[383062] = {
["source"] = "Decayed Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 189531,
},
[432116] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candleclaw Knight",
["npcID"] = 213833,
},
[432068] = {
["source"] = "Flickerflame Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212548,
},
[441747] = {
["source"] = "Web Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 218320,
},
[9672] = {
["source"] = "Drakkari Frostweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 66707,
},
[393302] = {
["source"] = "Smoldering Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 188673,
},
[346204] = {
["encounterName"] = "Zo'phex the Sentinel",
["encounterID"] = 2425,
["npcID"] = 175616,
},
[198715] = {
["npcID"] = 100876,
},
[446000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deeps Larva",
["npcID"] = 215733,
},
[450176] = {
["source"] = "Nerubian Slasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 208243,
},
[28301] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad Scientist",
["npcID"] = 16020,
},
[438355] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[65301] = {
["encounterName"] = "Yogg-Saron",
["npcID"] = 33134,
["encounterID"] = 1143,
},
[449937] = {
["source"] = "Bloodmaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 219264,
},
[321633] = {
["npcID"] = 175605,
},
[141379] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Bonechiller",
["npcID"] = 70465,
},
[406934] = {
["source"] = "Djaradin Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 202256,
},
[427583] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211290,
},
[193597] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[323682] = {
["npcID"] = 163501,
},
[366685] = {
["npcID"] = 185271,
},
[393306] = {
["source"] = "Primalist Earthwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 193709,
},
[346208] = {
["npcID"] = 177899,
},
[157762] = {
["source"] = "Auchenai Soulpriest",
["event"] = "SPELL_CAST_START",
["npcID"] = 77696,
},
[428089] = {
["source"] = "Lowly Moleherd",
["event"] = "SPELL_CAST_START",
["npcID"] = 210818,
},
[393307] = {
["source"] = "Living Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 184693,
},
[307303] = {
["npcID"] = 153095,
},
[448347] = {
["source"] = "Diu'mik",
["event"] = "SPELL_CAST_START",
["npcID"] = 211564,
},
[456788] = {
["isChanneled"] = true,
["source"] = "King Splash",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220275,
},
[162672] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stubborn Ironhoof",
["npcID"] = 80526,
},
[411738] = {
["source"] = "Rashok",
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[430168] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invading Hurler",
["npcID"] = 214677,
},
[366689] = {
["npcID"] = 185268,
},
[401500] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[391026] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskanoth",
["npcID"] = 193533,
},
[413787] = {
["source"] = "Entropic Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 203809,
},
[448599] = {
["isChanneled"] = true,
["source"] = "Hevo'myk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211591,
},
[446409] = {
["source"] = "Enormous Kelp-Snaggler",
["event"] = "SPELL_CAST_START",
["npcID"] = 221061,
},
[450628] = {
["source"] = "Quartermaster Koratite",
["event"] = "SPELL_CAST_START",
["npcID"] = 209801,
},
[105511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Miss Fanny",
["npcID"] = 56192,
},
[142406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Emberguard",
["npcID"] = 70798,
},
[120869] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tomb Guardian",
["npcID"] = 60912,
},
[448276] = {
["source"] = "Fungarian Sporeflinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 218667,
},
[430171] = {
["source"] = "Wandering Candle",
["event"] = "SPELL_CAST_START",
["npcID"] = 208450,
},
[383073] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["encounterID"] = 2639,
["event"] = "SPELL_CAST_START",
["npcID"] = 190496,
},
[448443] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[123429] = {
["source"] = "Broketooth Sneaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 60195,
},
[323689] = {
["npcID"] = 171381,
},
[430013] = {
["source"] = "Unruly Stormrook",
["event"] = "SPELL_CAST_START",
["npcID"] = 207186,
},
[200768] = {
["npcID"] = 95766,
},
[427616] = {
["source"] = "Unruly Stormrook",
["event"] = "SPELL_CAST_START",
["npcID"] = 207186,
},
[329834] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 169267,
},
[333929] = {
["npcID"] = 171591,
},
[34842] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uncontrolled Voidwalker",
["npcID"] = 16975,
},
[452699] = {
["source"] = "Verdant Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 215813,
},
[390548] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[374885] = {
["source"] = "Astral Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 189555,
},
[376933] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186120,
},
[147354] = {
["source"] = "Ironfur Herdling",
["event"] = "SPELL_CAST_START",
["npcID"] = 72842,
},
[432036] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hairless the Menace",
["npcID"] = 213550,
},
[333931] = {
["npcID"] = 171591,
},
[376934] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 186120,
},
[417893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Walking Nightmare",
["npcID"] = 206627,
},
[372839] = {
["source"] = "Nokhud Spearthrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 191570,
},
[333932] = {
["encounterName"] = "Sire Denathrius",
["npcID"] = 169813,
},
[162602] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Beast-Tender",
["npcID"] = 80423,
},
[362601] = {
["encounterName"] = "Lihuvim, Principal Architect",
["encounterID"] = 2539,
["npcID"] = 182169,
},
[356458] = {
["npcID"] = 180095,
},
[452567] = {
["source"] = "Oath-Eater",
["event"] = "SPELL_CAST_START",
["npcID"] = 206844,
},
[270453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Geolord Grek'og",
["npcID"] = 151091,
},
[329838] = {
["npcID"] = 159027,
},
[198723] = {
["npcID"] = 99358,
},
[342125] = {
["npcID"] = 167538,
},
[427406] = {
["source"] = "Austin Huxworth",
["event"] = "SPELL_CAST_START",
["npcID"] = 209065,
},
[436322] = {
["event"] = "SPELL_CAST_START",
["source"] = "Atik",
["npcID"] = 217533,
},
[105513] = {
["source"] = "Miss Fanny",
["event"] = "SPELL_CAST_START",
["npcID"] = 56192,
},
[432227] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[295028] = {
["event"] = "SPELL_CAST_START",
["source"] = "Livid Enforcer",
["npcID"] = 220476,
},
[28293] = {
["event"] = "SPELL_CAST_START",
["source"] = "Living Monstrosity",
["npcID"] = 16021,
},
[364652] = {
["encounterName"] = "Lihuvim, Principal Architect",
["encounterID"] = 2539,
["npcID"] = 182169,
},
[124967] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["npcID"] = 60410,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1500,
},
[458849] = {
["encounterName"] = "Nerl'athekk the Skulking",
["source"] = "Nerl'athekk the Skulking",
["npcID"] = 220577,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2949,
},
[446483] = {
["source"] = "Deepwater Sludger",
["event"] = "SPELL_CAST_START",
["npcID"] = 216515,
},
[345495] = {
["npcID"] = 175519,
},
[374892] = {
["source"] = "Magmammoth Calf",
["event"] = "SPELL_CAST_START",
["npcID"] = 180705,
},
[409704] = {
["source"] = "Kretchenwrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 201673,
},
[407200] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[448162] = {
["source"] = "Enormous Kelp-Snaggler",
["event"] = "SPELL_CAST_START",
["npcID"] = 221061,
},
[383084] = {
["source"] = "Water Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 190066,
},
[388669] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garlic-Breathed Hydra",
["npcID"] = 224751,
},
[321652] = {
["npcID"] = 175605,
},
[124284] = {
["source"] = "Urang",
["event"] = "SPELL_CAST_START",
["npcID"] = 60725,
},
[333939] = {
["npcID"] = 165206,
},
[295032] = {
["event"] = "SPELL_CAST_START",
["source"] = "Livid Enforcer",
["npcID"] = 220476,
},
[411754] = {
["source"] = "Conduit Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 205478,
},
[458853] = {
["encounterName"] = "Nerl'athekk the Skulking",
["source"] = "Nerl'athekk the Skulking",
["npcID"] = 220577,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2949,
},
[434281] = {
["source"] = "Weeping Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 217268,
},
[376943] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[411755] = {
["source"] = "Conduit Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 205478,
},
[421260] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[301177] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["encounterID"] = 2291,
["npcID"] = 150190,
},
[360562] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[456746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Workmaster Earwax",
["npcID"] = 213195,
},
[456468] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skardyn Husk",
["npcID"] = 213566,
},
[448616] = {
["source"] = "Hevo'myk",
["event"] = "SPELL_CAST_START",
["npcID"] = 211591,
},
[450180] = {
["source"] = "Angry Rocks",
["event"] = "SPELL_CAST_START",
["npcID"] = 220543,
},
[440185] = {
["source"] = "Rustul Titancap",
["event"] = "SPELL_CAST_START",
["npcID"] = 213115,
},
[427402] = {
["source"] = "Cursed Rookguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 207197,
},
[374898] = {
["source"] = "Old Arbhog",
["event"] = "SPELL_CAST_START",
["npcID"] = 196897,
},
[385137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Basrikron",
["npcID"] = 193535,
},
[403567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warden Entrix",
["npcID"] = 200960,
},
[372851] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["encounterID"] = 2609,
["event"] = "SPELL_CAST_START",
["npcID"] = 188252,
},
[342135] = {
["npcID"] = 162744,
},
[75823] = {
["encounterName"] = "Corla, Herald of Twilight",
["encounterID"] = 1038,
["npcID"] = 39679,
},
[395377] = {
["source"] = "Thondrozus",
["event"] = "SPELL_CAST_START",
["npcID"] = 192769,
},
[186274] = {
["source"] = "Iron Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 90284,
},
[146511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sra'thik Amber-Master",
["npcID"] = 72929,
},
[431697] = {
["source"] = "Sureki Eradicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 225408,
},
[43291] = {
["source"] = "Dragonflayer Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 24216,
},
[137227] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["encounterID"] = 1559,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 68081,
},
[142416] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Iyyokuk the Lucid",
["npcID"] = 71160,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[448341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Taskfinder",
["npcID"] = 204127,
},
[129577] = {
["source"] = "Korjan Slavemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 65638,
},
[456198] = {
["source"] = "Scary Sticker",
["event"] = "SPELL_CAST_START",
["npcID"] = 216948,
},
[341395] = {
["npcID"] = 174012,
},
[385141] = {
["source"] = "Primalist Galesinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 190373,
},
[387189] = {
["event"] = "SPELL_CAST_START",
["source"] = "Freed Dracthyr",
["npcID"] = 201086,
},
[445830] = {
["source"] = "Rampaging Deepflayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 218657,
},
[342139] = {
["npcID"] = 167538,
},
[360569] = {
["npcID"] = 180930,
},
[362617] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[153680] = {
["encounterName"] = "Bonemaw",
["source"] = "Bonemaw",
["encounterID"] = 1679,
["event"] = "SPELL_CAST_START",
["npcID"] = 75452,
},
[225042] = {
["source"] = "Corrupted Feeler",
["event"] = "SPELL_CAST_START",
["npcID"] = 113088,
},
[170028] = {
["encounterName"] = "Yalnu",
["source"] = "Lady Baihu",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 84358,
},
[387191] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strunraan",
["npcID"] = 193534,
},
[364666] = {
["npcID"] = 178563,
},
[450197] = {
["source"] = "Skittering Swarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 208245,
},
[135251] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["encounterID"] = 1565,
["event"] = "SPELL_CAST_START",
["npcID"] = 67977,
},
[372858] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["encounterID"] = 2606,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189232,
},
[397431] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 192934,
},
[228171] = {
["encounterName"] = "Odyn",
["source"] = "Hymdall",
["encounterID"] = 1958,
["event"] = "SPELL_CAST_START",
["npcID"] = 114361,
},
[385145] = {
["source"] = "Time-Lost Raptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 187256,
},
[173135] = {
["npcID"] = 83578,
},
[321240] = {
["encounterName"] = "Tunk",
["source"] = "Tunk",
["npcID"] = 157300,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2325,
},
[366716] = {
["npcID"] = 185274,
},
[431494] = {
["source"] = "Nightfall Tactician",
["event"] = "SPELL_CAST_START",
["npcID"] = 213934,
},
[403576] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warden Entrix",
["npcID"] = 200960,
},
[389242] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormed Blackpaw",
["npcID"] = 193827,
},
[392692] = {
["source"] = "Remembered Quilboar",
["event"] = "SPELL_CAST_START",
["npcID"] = 221743,
},
[66532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Recalled Lord Jaraxxus",
["npcID"] = 221861,
},
[428150] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priest Aemya",
["npcID"] = 212827,
},
[440181] = {
["source"] = "Boskroot Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 212736,
},
[458867] = {
["encounterName"] = "Nerl'athekk the Skulking",
["source"] = "Nerl'athekk the Skulking",
["npcID"] = 220577,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2949,
},
[409721] = {
["source"] = "Winglord Dezran",
["event"] = "SPELL_CAST_START",
["npcID"] = 202610,
},
[432113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord",
["npcID"] = 228575,
},
[372862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Waterspout",
["npcID"] = 194219,
},
[5605] = {
["source"] = "Stonevault Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 4852,
},
[417386] = {
["source"] = "Valhalas Vargul",
["event"] = "SPELL_CAST_START",
["npcID"] = 207804,
},
[321669] = {
["encounterName"] = "Mistcaller",
["encounterID"] = 2392,
["npcID"] = 165108,
},
[372863] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189232,
},
[465012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Bloodguard",
["npcID"] = 216338,
},
[360577] = {
["npcID"] = 180930,
},
[346243] = {
["npcID"] = 168233,
},
[331909] = {
["npcID"] = 165473,
},
[183378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felsworn Myrmidon",
["npcID"] = 127596,
},
[409724] = {
["source"] = "Neltharion",
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[272528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Sniper",
["npcID"] = 128967,
},
[389247] = {
["source"] = "Blacktalon Avenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 187187,
},
[456823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand-Heister Bokk",
["npcID"] = 213679,
},
[79922] = {
["npcID"] = 42808,
},
[185425] = {
["source"] = "Steeljaw Grizzly",
["event"] = "SPELL_CAST_START",
["npcID"] = 96677,
},
[323720] = {
["npcID"] = 184465,
},
[122413] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber Monstrosity",
["npcID"] = 62711,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1499,
},
[74613] = {
["source"] = "Riverblade Pathstalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 58858,
},
[125997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Battleworn Paratrooper",
["npcID"] = 63764,
},
[270481] = {
["npcID"] = 135002,
},
[448634] = {
["encounterName"] = "Under-Lord Vik'tis",
["source"] = "Under-Lord Vik'tis",
["encounterID"] = 2989,
["event"] = "SPELL_CAST_START",
["npcID"] = 220158,
},
[352390] = {
["npcID"] = 179334,
},
[452730] = {
["source"] = "Verdant Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 215813,
},
[389250] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktalon Slayer",
["npcID"] = 201831,
},
[431491] = {
["source"] = "Nightfall Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 214762,
},
[458874] = {
["encounterName"] = "Cult Leaders",
["source"] = "Shadeguard Speaker",
["npcID"] = 229855,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3050,
},
[432127] = {
["source"] = "Kix'arak",
["event"] = "SPELL_CAST_START",
["npcID"] = 224710,
},
[389251] = {
["source"] = "Morlash",
["event"] = "SPELL_CAST_START",
["npcID"] = 201549,
},
[442501] = {
["source"] = "Sureki Ironweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 220551,
},
[319628] = {
["npcID"] = 178359,
},
[452169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queensguard Zirix",
["npcID"] = 211858,
},
[235597] = {
["encounterName"] = "Fallen Avatar",
["source"] = "Fallen Avatar",
["encounterID"] = 2038,
["event"] = "SPELL_CAST_START",
["npcID"] = 116939,
},
[81459] = {
["npcID"] = 43537,
},
[393348] = {
["source"] = "Stalwart Broodwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 198263,
},
[387205] = {
["source"] = "Tyrhold Gryphon",
["event"] = "SPELL_CAST_START",
["npcID"] = 198417,
},
[105519] = {
["source"] = "Miss Fanny",
["event"] = "SPELL_CAST_START",
["npcID"] = 56192,
},
[37367] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gurubashi Worshipper",
["npcID"] = 64642,
},
[444546] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[346251] = {
["npcID"] = 168233,
},
[299153] = {
["encounterName"] = "Trixie & Naeno",
["encounterID"] = 2312,
["npcID"] = 150712,
},
[294290] = {
["npcID"] = 144293,
},
[462836] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Remembered Firelord",
["npcID"] = 212088,
},
[42526] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spore",
["npcID"] = 23876,
},
[128046] = {
["source"] = "Adjunct G'kkal",
["event"] = "SPELL_CAST_START",
["npcID"] = 63103,
},
[448640] = {
["source"] = "Cursedforge Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 214264,
},
[456835] = {
["source"] = "Hungerer of the Deeps",
["event"] = "SPELL_CAST_START",
["npcID"] = 221199,
},
[257739] = {
["source"] = "Blacktooth Scrapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 129529,
},
[331919] = {
["npcID"] = 168402,
},
[232142] = {
["encounterName"] = "Opera Hall",
["encounterID"] = 1957,
["npcID"] = 116574,
},
[147546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Golganarr",
["npcID"] = 72970,
},
[288917] = {
["npcID"] = 148199,
},
[452156] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Firelord",
["npcID"] = 212088,
},
[268440] = {
["source"] = "Irontide Crackshot",
["event"] = "SPELL_CAST_START",
["npcID"] = 126918,
},
[360589] = {
["npcID"] = 182114,
},
[451965] = {
["source"] = "Molten Giant",
["event"] = "SPELL_CAST_START",
["npcID"] = 40166,
},
[389258] = {
["source"] = "Piskato",
["event"] = "SPELL_CAST_START",
["npcID"] = 195973,
},
[120195] = {
["encounterName"] = "Trial of the King",
["source"] = "Haiyan the Unstoppable",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61445,
},
[360590] = {
["npcID"] = 182114,
},
[403593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Burster",
["npcID"] = 200801,
},
[405641] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201934,
},
[448644] = {
["encounterName"] = "Overseer Kaskel",
["source"] = "Overseer Kaskel",
["encounterID"] = 2990,
["event"] = "SPELL_CAST_START",
["npcID"] = 220437,
},
[360591] = {
["encounterName"] = "Prototype Pantheon",
["encounterID"] = 2544,
["npcID"] = 182045,
},
[138044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Warscout",
["npcID"] = 69768,
},
[396675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nergazurai",
["npcID"] = 195895,
},
[391308] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boolk",
["npcID"] = 191450,
},
[106546] = {
["source"] = "Bloated Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59518,
},
[148572] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thresher Turret",
["npcID"] = 73742,
},
[115761] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tian Pupil",
["npcID"] = 54944,
},
[222110] = {
["source"] = "Shadow Pounder",
["event"] = "SPELL_CAST_START",
["npcID"] = 111405,
},
[436360] = {
["source"] = "Caller of the Gloom",
["event"] = "SPELL_CAST_START",
["npcID"] = 216955,
},
[379023] = {
["source"] = "Hillside Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 191240,
},
[117809] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Jahesh of Osul",
["npcID"] = 60802,
},
[325782] = {
["npcID"] = 165401,
},
[372529] = {
["source"] = "Shadepaw Bruiser",
["event"] = "SPELL_CAST_START",
["npcID"] = 183343,
},
[230094] = {
["npcID"] = 115765,
},
[422027] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Spirit of the Kaldorei",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 207800,
},
[106547] = {
["source"] = "Shado-Pan Novice",
["event"] = "SPELL_CAST_START",
["npcID"] = 56395,
},
[462983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Automatic Ironstrider",
["npcID"] = 229778,
},
[272542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Sniper",
["npcID"] = 128967,
},
[331927] = {
["npcID"] = 167962,
},
[125480] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amber Searsting",
["npcID"] = 63569,
},
[450697] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Worker",
["npcID"] = 215023,
},
[56063] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naxxramas Acolyte",
["npcID"] = 15981,
},
[299164] = {
["encounterName"] = "Trixie & Naeno",
["encounterID"] = 2312,
["npcID"] = 153756,
},
[456841] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[393361] = {
["source"] = "Nightrot",
["event"] = "SPELL_CAST_START",
["npcID"] = 188707,
},
[122408] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber Monstrosity",
["npcID"] = 62711,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1499,
},
[417725] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fury of N'zoth",
["npcID"] = 205307,
},
[284831] = {
["encounterName"] = "King Rastakhan",
["encounterID"] = 2272,
["npcID"] = 145616,
},
[409744] = {
["source"] = "Kretchenwrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 201673,
},
[288927] = {
["npcID"] = 148195,
},
[389267] = {
["source"] = "Invasive Clearwater Snapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195506,
},
[406911] = {
["source"] = "Sundered Champion",
["event"] = "SPELL_CAST_START",
["npcID"] = 201288,
},
[385172] = {
["source"] = "Wind Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 191645,
},
[272546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Buccaneer",
["npcID"] = 129366,
},
[389268] = {
["source"] = "Expedition Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 187135,
},
[20716] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bronze Shrine Warden",
["npcID"] = 26277,
},
[417937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotted Gladiator",
["npcID"] = 207808,
},
[189531] = {
["source"] = "Mystic Aaran",
["event"] = "SPELL_CAST_START",
["npcID"] = 95603,
},
[389269] = {
["source"] = "Expedition Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 187123,
},
[440376] = {
["source"] = "Scary Skitterer",
["event"] = "SPELL_CAST_START",
["npcID"] = 216944,
},
[384385] = {
["source"] = "Prowling Frigidpelt",
["event"] = "SPELL_CAST_START",
["npcID"] = 193062,
},
[288930] = {
["npcID"] = 148195,
},
[389270] = {
["source"] = "Expedition Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 187123,
},
[325790] = {
["npcID"] = 158629,
},
[147553] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harbinger of Y'Shaarj",
["npcID"] = 73452,
},
[119347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Vanguard",
["npcID"] = 61434,
},
[389271] = {
["source"] = "Invasive Clearwater Snapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195506,
},
[338079] = {
["npcID"] = 164737,
},
[427760] = {
["source"] = "Envoy of Winter",
["event"] = "SPELL_CAST_START",
["npcID"] = 209929,
},
[387224] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Mender",
["npcID"] = 199942,
},
[421616] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["npcID"] = 208478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2737,
},
[422039] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["npcID"] = 209333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[417941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotted Gladiator",
["npcID"] = 207808,
},
[411798] = {
["source"] = "Oozing Sludge",
["event"] = "SPELL_CAST_START",
["npcID"] = 205644,
},
[389273] = {
["source"] = "Wyrmeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 186612,
},
[199772] = {
["source"] = "Valarjar Champion",
["event"] = "SPELL_CAST_START",
["npcID"] = 97087,
},
[319650] = {
["encounterName"] = "Kryxis the Voracious",
["encounterID"] = 2360,
["npcID"] = 162100,
},
[28294] = {
["event"] = "SPELL_CAST_START",
["source"] = "Living Monstrosity",
["npcID"] = 16021,
},
[389274] = {
["npcID"] = 190070,
},
[440468] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216649,
},
[392698] = {
["source"] = "Remembered Quilboar",
["event"] = "SPELL_CAST_START",
["npcID"] = 221743,
},
[180945] = {
["encounterName"] = "Hellfire Assault",
["source"] = "Felfire Demolisher",
["encounterID"] = 1778,
["event"] = "SPELL_CAST_START",
["npcID"] = 91103,
},
[157794] = {
["source"] = "Sargerei Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 76263,
},
[134245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Freed Imp",
["npcID"] = 68173,
},
[138966] = {
["source"] = "Shadowed Voodoo Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 70060,
},
[175879] = {
["source"] = "Gorian Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 85225,
},
[340130] = {
["npcID"] = 162114,
},
[317605] = {
["npcID"] = 167534,
},
[385181] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["event"] = "SPELL_CAST_START",
["npcID"] = 189722,
},
[297128] = {
["npcID"] = 144298,
},
[198750] = {
["encounterName"] = "Odyn",
["source"] = "Stormforged Obliterator",
["encounterID"] = 1809,
["event"] = "SPELL_CAST_START",
["npcID"] = 102019,
},
[456853] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[124980] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jonn-Dar",
["npcID"] = 50351,
},
[136294] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["encounterID"] = 1565,
["event"] = "SPELL_CAST_START",
["npcID"] = 67977,
},
[446615] = {
["source"] = "Nightfall Dark Architect",
["event"] = "SPELL_CAST_START",
["npcID"] = 213885,
},
[448663] = {
["encounterName"] = "The Puppetmaster",
["source"] = "The Puppetmaster?",
["npcID"] = 220510,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3006,
},
[336037] = {
["npcID"] = 181186,
},
[244665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ember of Azzinoth",
["npcID"] = 122712,
},
[128052] = {
["source"] = "Adjunct Pivvika",
["event"] = "SPELL_CAST_START",
["npcID"] = 63104,
},
[120373] = {
["source"] = "Reclaimer Zuan",
["event"] = "SPELL_CAST_START",
["npcID"] = 61305,
},
[79930] = {
["source"] = "Shinfel Blightsworn",
["event"] = "SPELL_CAST_START",
["npcID"] = 99146,
},
[15493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Commander",
["npcID"] = 214363,
},
[389280] = {
["source"] = "Shiverweb Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 185814,
},
[146534] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggron",
["npcID"] = 72981,
},
[344230] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 168112,
},
[126973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu'shan Arcanist",
["npcID"] = 64063,
},
[157797] = {
["source"] = "Sargerei Arbiter",
["event"] = "SPELL_CAST_START",
["npcID"] = 77080,
},
[141421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthborn Hatred",
["npcID"] = 70822,
},
[450714] = {
["encounterName"] = "The Puppetmaster",
["source"] = "The Puppetmaster?",
["npcID"] = 220510,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3006,
},
[193633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Archer",
["npcID"] = 98275,
},
[126005] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jack Arrow",
["npcID"] = 63809,
},
[325802] = {
["npcID"] = 166936,
},
[270513] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragmented Core",
["npcID"] = 223953,
},
[164965] = {
["source"] = "Everbloom Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 81820,
},
[78907] = {
["source"] = "Kaldorei Starcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 183994,
},
[123958] = {
["event"] = "SPELL_CAST_START",
["source"] = "Little Liuyang",
["npcID"] = 63313,
},
[376997] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[395427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Lahar",
["npcID"] = 189235,
},
[411002] = {
["source"] = "Cloud Prince",
["event"] = "SPELL_CAST_START",
["npcID"] = 45917,
},
[366759] = {
["npcID"] = 183498,
},
[442526] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Broodtwister Ovi'nax",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 214506,
},
[422026] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["npcID"] = 209333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[454813] = {
["source"] = "Caustic Skyrazor",
["event"] = "SPELL_CAST_START",
["npcID"] = 225817,
},
[456861] = {
["source"] = "Spore-infused Shalewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 221217,
},
[450718] = {
["source"] = "Siegelord Xerosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 224311,
},
[411811] = {
["source"] = "Bubbling Slime",
["event"] = "SPELL_CAST_START",
["npcID"] = 205651,
},
[405668] = {
["source"] = "Sundered Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 201753,
},
[383143] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Shaman Rotknuckle",
["npcID"] = 197356,
},
[12471] = {
["source"] = "Fixxul Lonelyheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 66281,
},
[125877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Set'thik Windblade",
["npcID"] = 64453,
},
[440207] = {
["source"] = "Voidstone Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[342189] = {
["npcID"] = 174175,
},
[79932] = {
["source"] = "Jubeka Shadowbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 99147,
},
[448485] = {
["source"] = "Guard Captain Suleyman",
["event"] = "SPELL_CAST_START",
["npcID"] = 212826,
},
[28434] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Carrion Spinner",
["npcID"] = 15975,
},
[57376] = {
["encounterName"] = "The Four Horsemen",
["source"] = "Sir Zeliek",
["npcID"] = 16063,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1121,
},
[442530] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "The Bloodbound Horror",
["encounterID"] = 2917,
["event"] = "SPELL_CAST_START",
["npcID"] = 214502,
},
[346286] = {
["encounterName"] = "Mailroom Mayhem",
["encounterID"] = 2424,
["npcID"] = 175646,
},
[422053] = {
["encounterName"] = "Gnarlroot",
["source"] = "Tainted Lasher",
["npcID"] = 210231,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[141391] = {
["source"] = "Lieutenant Boltblaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 71329,
},
[393385] = {
["source"] = "Chalsec of the Earth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193847,
},
[34083] = {
["npcID"] = 2725,
},
[454818] = {
["source"] = "Anub'ilith",
["event"] = "SPELL_CAST_START",
["npcID"] = 222185,
},
[456866] = {
["source"] = "Mother Aza'na",
["event"] = "SPELL_CAST_START",
["npcID"] = 222180,
},
[377004] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[387243] = {
["source"] = "Time-Lost Murhulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 195095,
},
[405673] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overflowing Magma",
["npcID"] = 203277,
},
[334002] = {
["npcID"] = 173943,
},
[427382] = {
["source"] = "Engine Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 212764,
},
[123960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Little Liuyang",
["npcID"] = 63313,
},
[405675] = {
["source"] = "Volcanakk",
["event"] = "SPELL_CAST_START",
["npcID"] = 200911,
},
[456868] = {
["source"] = "Mother Aza'na",
["event"] = "SPELL_CAST_START",
["npcID"] = 222180,
},
[437620] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[272571] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Tempest",
["npcID"] = 129367,
},
[454821] = {
["source"] = "Royal Broker Rez'kal",
["event"] = "SPELL_CAST_START",
["npcID"] = 217693,
},
[384933] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[442536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Covert Webmancer",
["npcID"] = 223844,
},
[201830] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Rider",
["npcID"] = 99875,
},
[464240] = {
["source"] = "High Priest Aemya",
["event"] = "SPELL_CAST_START",
["npcID"] = 212827,
},
[429428] = {
["source"] = "Earth Burst Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 214287,
},
[245857] = {
["source"] = "Antoran Felguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 129050,
},
[428202] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213217,
},
[372565] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Terrasentry",
["npcID"] = 188067,
},
[120377] = {
["source"] = "Nakk'rakas",
["event"] = "SPELL_CAST_START",
["npcID"] = 60572,
},
[450728] = {
["source"] = "Siegelord Xerosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 224311,
},
[15547] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Sentinel",
["npcID"] = 27162,
},
[232153] = {
["encounterName"] = "Opera Hall",
["encounterID"] = 1957,
["npcID"] = 114328,
},
[184065] = {
["source"] = "Gorebound Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 94604,
},
[57377] = {
["encounterName"] = "The Four Horsemen",
["source"] = "Sir Zeliek",
["npcID"] = 16063,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1121,
},
[233556] = {
["encounterName"] = "Fallen Avatar",
["source"] = "Containment Pylon",
["encounterID"] = 2038,
["event"] = "SPELL_CAST_START",
["npcID"] = 117279,
},
[141423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Witch Doctor",
["npcID"] = 70464,
},
[430109] = {
["source"] = "Cursed Thunderer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207198,
},
[192617] = {
["encounterName"] = "Wrath of Azshara",
["source"] = "Wrath of Azshara",
["npcID"] = 96028,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1814,
},
[379033] = {
["source"] = "Loyal Bakar",
["event"] = "SPELL_CAST_START",
["npcID"] = 184656,
},
[413044] = {
["source"] = "Grotesque Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 138187,
},
[28297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightning Totem",
["npcID"] = 16385,
},
[127510] = {
["source"] = "Unga Bird-Haver",
["event"] = "SPELL_CAST_START",
["npcID"] = 62475,
},
[288959] = {
["npcID"] = 148221,
},
[413872] = {
["source"] = "Meredy Huntswell",
["event"] = "SPELL_CAST_START",
["npcID"] = 209059,
},
[448684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sparking Electroscythes",
["npcID"] = 219970,
},
[129081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Child of Chi-Ji",
["npcID"] = 60616,
},
[226406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberhusk Dominator",
["npcID"] = 113537,
},
[221059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gelatinized Decay",
["npcID"] = 111004,
},
[210931] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Eye of Il'gynoth",
["npcID"] = 105906,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1873,
},
[191595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felsworn Infester",
["npcID"] = 96587,
},
[329916] = {
["npcID"] = 171173,
},
[356537] = {
["npcID"] = 179334,
},
[37668] = {
["source"] = "Ethereal Spellbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 18312,
},
[125490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amber Searsting",
["npcID"] = 63569,
},
[329917] = {
["npcID"] = 168578,
},
[162633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Beast-Tender",
["npcID"] = 80423,
},
[374969] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[9739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lost Trainee Druid",
["npcID"] = 210370,
},
[272581] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Tempest",
["npcID"] = 129367,
},
[454831] = {
["source"] = "Caustic Skyrazor",
["event"] = "SPELL_CAST_START",
["npcID"] = 225817,
},
[407733] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200912,
},
[377017] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[303300] = {
["source"] = "Primalist Infuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 186112,
},
[433519] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["encounterID"] = 2898,
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[456883] = {
["source"] = "Gramwharl",
["event"] = "SPELL_CAST_START",
["npcID"] = 220308,
},
[360636] = {
["encounterName"] = "Prototype Pantheon",
["encounterID"] = 2544,
["npcID"] = 181549,
},
[136913] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["encounterID"] = 1579,
["event"] = "SPELL_CAST_START",
["npcID"] = 68397,
},
[348350] = {
["encounterName"] = "Zo'phex the Sentinel",
["encounterID"] = 2425,
["npcID"] = 175616,
},
[207979] = {
["npcID"] = 104273,
},
[192621] = {
["encounterName"] = "Ash'Golm",
["source"] = "Ash'Golm",
["npcID"] = 95886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1816,
},
[417243] = {
["source"] = "Great Glorious Alliance Lieutenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 207581,
},
[340160] = {
["npcID"] = 173655,
},
[448691] = {
["source"] = "Rampaging Deepflayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 218657,
},
[136990] = {
["encounterName"] = "Council of Elders",
["source"] = "Frost King Malakk",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 69131,
},
[324987] = {
["npcID"] = 166301,
},
[141428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonechiller Barafu",
["npcID"] = 70468,
},
[207980] = {
["npcID"] = 104274,
},
[336066] = {
["npcID"] = 182686,
},
[201837] = {
["npcID"] = 99366,
},
[61730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snowplain Disciple",
["npcID"] = 26705,
},
[383165] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Shaman Rotknuckle",
["npcID"] = 197356,
},
[319685] = {
["encounterName"] = "Kryxis the Voracious",
["encounterID"] = 2360,
["npcID"] = 162100,
},
[387261] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[446646] = {
["source"] = "Kaz'vik",
["event"] = "SPELL_CAST_START",
["npcID"] = 219751,
},
[440504] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[336068] = {
["npcID"] = 182686,
},
[272588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Cutthroat",
["npcID"] = 137511,
},
[382576] = {
["isChanneled"] = true,
["source"] = "Earthen Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184131,
},
[407740] = {
["source"] = "Aurantia",
["event"] = "SPELL_CAST_START",
["npcID"] = 203047,
},
[360643] = {
["npcID"] = 182155,
},
[440506] = {
["source"] = "Stream Skipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 213700,
},
[340165] = {
["npcID"] = 161527,
},
[397109] = {
["npcID"] = 190008,
},
[79938] = {
["source"] = "Zinnin Smythe",
["event"] = "SPELL_CAST_START",
["npcID"] = 99145,
},
[201839] = {
["encounterName"] = "Oakheart",
["source"] = "Taintheart Summoner",
["npcID"] = 99366,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[356548] = {
["npcID"] = 178392,
},
[334023] = {
["npcID"] = 167536,
},
[360644] = {
["npcID"] = 184660,
},
[60869] = {
["source"] = "Water Terror",
["event"] = "SPELL_CAST_START",
["npcID"] = 30633,
},
[231532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyrestar Demolisher",
["npcID"] = 114845,
},
[125825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Venomspitter",
["npcID"] = 62575,
},
[303308] = {
["source"] = "Primalist Infuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 186112,
},
[272592] = {
["source"] = "Faceless Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 138281,
},
[323786] = {
["npcID"] = 163524,
},
[12747] = {
["npcID"] = 6519,
},
[327882] = {
["npcID"] = 168153,
},
[119358] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["npcID"] = 60410,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1500,
},
[256106] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Skycap'n Kragg",
["encounterID"] = 2093,
["event"] = "SPELL_CAST_START",
["npcID"] = 126832,
},
[87618] = {
["encounterName"] = "Asaad",
["encounterID"] = 1042,
["npcID"] = 43875,
},
[129085] = {
["source"] = "Imperial Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 60826,
},
[417241] = {
["source"] = "Gill'dan",
["event"] = "SPELL_CAST_START",
["npcID"] = 204808,
},
[405698] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baine Bloodhoof",
["npcID"] = 201362,
},
[244844] = {
["source"] = "Tidecaller Nezara",
["event"] = "SPELL_CAST_START",
["npcID"] = 157734,
},
[417691] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fury of N'zoth",
["npcID"] = 205307,
},
[415556] = {
["source"] = "Margosh the Smoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 207592,
},
[405699] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baine Bloodhoof",
["npcID"] = 201362,
},
[15498] = {
["source"] = "Zandalari Diviner",
["event"] = "SPELL_CAST_START",
["npcID"] = 66700,
},
[327885] = {
["encounterName"] = "Lord Chamberlain",
["encounterID"] = 2381,
["npcID"] = 164218,
},
[404846] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[194675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Imp",
["npcID"] = 98963,
},
[417227] = {
["source"] = "Blood Horde Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 207585,
},
[407122] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Warlock",
["npcID"] = 203857,
},
[444608] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[129018] = {
["source"] = "Dojani Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 65626,
},
[124946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jonn-Dar",
["npcID"] = 50351,
},
[377033] = {
["source"] = "Ripsaw the Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 193153,
},
[444609] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[116725] = {
["event"] = "SPELL_CAST_START",
["source"] = "Husshun",
["npcID"] = 54925,
},
[393419] = {
["source"] = "Penumbrus",
["event"] = "SPELL_CAST_START",
["npcID"] = 189289,
},
[377034] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[156793] = {
["encounterName"] = "Ranjit",
["source"] = "Ranjit",
["encounterID"] = 1698,
["event"] = "SPELL_CAST_START",
["npcID"] = 75964,
},
[138196] = {
["source"] = "Lightning Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 69834,
},
[456897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azerite Manifestation",
["npcID"] = 222670,
},
[456900] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["encounterID"] = 1050,
["event"] = "SPELL_CAST_START",
["npcID"] = 40177,
},
[141438] = {
["source"] = "Lieutenant Parker",
["event"] = "SPELL_CAST_START",
["npcID"] = 71326,
},
[241345] = {
["source"] = "Defensive Countermeasure",
["event"] = "SPELL_CAST_START",
["npcID"] = 120449,
},
[253038] = {
["isChanneled"] = true,
["source"] = "Felblade Shocktrooper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 127725,
},
[15536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bataari Flamecaller",
["npcID"] = 59021,
},
[119360] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["npcID"] = 60410,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1500,
},
[397514] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199659,
},
[82797] = {
["source"] = "Blisterpaw Hyena",
["event"] = "SPELL_CAST_START",
["npcID"] = 5426,
},
[450756] = {
["source"] = "Nightfall Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 214762,
},
[438473] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["npcID"] = 213179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2926,
},
[400747] = {
["source"] = "Damaged Titan Matrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 201441,
},
[325844] = {
["npcID"] = 165401,
},
[101809] = {
["encounterName"] = "Echo of Jaina",
["encounterID"] = 1883,
["npcID"] = 54445,
},
[387277] = {
["source"] = "Primal Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 195917,
},
[438471] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["npcID"] = 213179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2926,
},
[276699] = {
["npcID"] = 142243,
},
[192631] = {
["encounterName"] = "Ash'Golm",
["source"] = "Ash'Golm",
["encounterID"] = 1816,
["event"] = "SPELL_CAST_START",
["npcID"] = 95886,
},
[452806] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[422090] = {
["source"] = "Treant",
["event"] = "SPELL_CAST_START",
["npcID"] = 54983,
},
[456902] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["encounterID"] = 1050,
["event"] = "SPELL_CAST_START",
["npcID"] = 40177,
},
[124289] = {
["source"] = "Yorik Sharpeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 50336,
},
[127552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Sorcerer",
["npcID"] = 65133,
},
[389327] = {
["source"] = "Malsiran",
["event"] = "SPELL_CAST_START",
["npcID"] = 188141,
},
[444055] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Threadling",
["npcID"] = 222730,
},
[137045] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["encounterID"] = 1579,
["event"] = "SPELL_CAST_START",
["npcID"] = 68397,
},
[329943] = {
["encounterName"] = "Sire Denathrius",
["npcID"] = 168156,
},
[178298] = {
["npcID"] = 83763,
},
[424140] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[106563] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["encounterID"] = 1414,
["event"] = "SPELL_CAST_START",
["npcID"] = 59479,
},
[34344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbound Bonemender",
["npcID"] = 68175,
},
[317661] = {
["npcID"] = 163503,
},
[456905] = {
["source"] = "Disturbed Earthgorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 218393,
},
[451939] = {
["source"] = "Twilight Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 224609,
},
[227420] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114266,
["encounterID"] = 1957,
},
[438476] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["npcID"] = 213179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2926,
},
[325850] = {
["npcID"] = 166942,
},
[390834] = {
["source"] = "Sarana",
["event"] = "SPELL_CAST_START",
["npcID"] = 190161,
},
[362710] = {
["npcID"] = 182804,
},
[123791] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 62980,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1507,
},
[224374] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Infernal Imp",
["npcID"] = 112668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[450766] = {
["source"] = "Coalesced Living Honey",
["event"] = "SPELL_CAST_START",
["npcID"] = 217833,
},
[227447] = {
["encounterName"] = "Opera Hall",
["encounterID"] = 1957,
["npcID"] = 114284,
},
[323804] = {
["npcID"] = 163524,
},
[391380] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ohn'ir Windsage",
["npcID"] = 195352,
},
[424148] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[146537] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggron",
["npcID"] = 72981,
},
[463052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Phalanx",
["npcID"] = 229782,
},
[224375] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Infernal Imp",
["npcID"] = 112668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[278755] = {
["source"] = "Befouled Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 133685,
},
[193659] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["encounterID"] = 1808,
["event"] = "SPELL_CAST_START",
["npcID"] = 95675,
},
[235638] = {
["event"] = "SPELL_CAST_START",
["source"] = "Roottender Treant",
["npcID"] = 209280,
},
[456910] = {
["source"] = "Disturbed Earthgorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 218393,
},
[319711] = {
["npcID"] = 166872,
},
[119875] = {
["encounterName"] = "General Pa'valak",
["source"] = "General Pa'valak",
["npcID"] = 61485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1447,
},
[340189] = {
["npcID"] = 173655,
},
[325855] = {
["npcID"] = 165401,
},
[458080] = {
["source"] = "Croakit",
["event"] = "SPELL_CAST_START",
["npcID"] = 214757,
},
[406886] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 198997,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[224378] = {
["source"] = "Celestial Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 112655,
},
[276710] = {
["npcID"] = 142243,
},
[319713] = {
["encounterName"] = "Kryxis the Voracious",
["encounterID"] = 2360,
["npcID"] = 162100,
},
[395480] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gaelzion",
["npcID"] = 193653,
},
[201411] = {
["npcID"] = 100527,
},
[391385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Lava Elemental",
["npcID"] = 182815,
},
[42024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Shaman",
["npcID"] = 68129,
},
[387290] = {
["source"] = "Remembered Bloodpetal",
["event"] = "SPELL_CAST_START",
["npcID"] = 221880,
},
[323810] = {
["encounterName"] = "General Kaal",
["encounterID"] = 2363,
["npcID"] = 166085,
},
[425315] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["encounterID"] = 2831,
["event"] = "SPELL_CAST_START",
["npcID"] = 207481,
},
[393434] = {
["event"] = "SPELL_CAST_START",
["source"] = "Freed Dracthyr",
["npcID"] = 201085,
},
[139228] = {
["source"] = "Zandalari High Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 69906,
},
[316959] = {
["source"] = "Corrosive Digester",
["event"] = "SPELL_CAST_START",
["npcID"] = 162828,
},
[199805] = {
["source"] = "Stormforged Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 96574,
},
[241784] = {
["npcID"] = 114629,
},
[321764] = {
["npcID"] = 164861,
},
[116162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fizzy Brew Alemental",
["npcID"] = 59520,
},
[358624] = {
["npcID"] = 178997,
},
[322936] = {
["encounterName"] = "Halkias, the Sin-Stained Goliath",
["encounterID"] = 2401,
["npcID"] = 165408,
},
[338147] = {
["npcID"] = 169885,
},
[450786] = {
["source"] = "Cinderbee Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 222976,
},
[117708] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Meng the Demented",
["npcID"] = 60708,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[398806] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nimbulatus, Storm's Wrath",
["npcID"] = 199667,
},
[102472] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["encounterID"] = 1884,
["event"] = "SPELL_CAST_START",
["npcID"] = 54544,
},
[364769] = {
["npcID"] = 181360,
},
[334053] = {
["encounterName"] = "Oryphrion",
["encounterID"] = 2358,
["npcID"] = 162060,
},
[396739] = {
["source"] = "The Red Gulper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195974,
},
[119365] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sorcerer Mogu",
["npcID"] = 61250,
},
[386411] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[366818] = {
["npcID"] = 185275,
},
[393439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Ruinstalker",
["npcID"] = 199379,
},
[410978] = {
["source"] = "Djaradin Dragonhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 202108,
},
[196290] = {
["encounterName"] = "Serpentrix",
["source"] = "Stormwake Hydra",
["npcID"] = 91792,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[106055] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["npcID"] = 56448,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1418,
},
[188545] = {
["encounterName"] = "Hellfire Assault",
["source"] = "Gorebound Felcaster",
["encounterID"] = 1778,
["event"] = "SPELL_CAST_START",
["npcID"] = 90409,
},
[387297] = {
["source"] = "Sundered Runebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 186354,
},
[446682] = {
["source"] = "Warped Sapling",
["event"] = "SPELL_CAST_START",
["npcID"] = 220655,
},
[375011] = {
["npcID"] = 191019,
},
[368868] = {
["npcID"] = 184738,
},
[42281] = {
["npcID"] = 23694,
},
[117830] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xiao",
["npcID"] = 54926,
},
[421398] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[426206] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[418016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hand of the Lich King",
["npcID"] = 207386,
},
[387300] = {
["source"] = "Feasting Wyrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 192739,
},
[440162] = {
["source"] = "Boskroot Guardener",
["event"] = "SPELL_CAST_START",
["npcID"] = 212697,
},
[241788] = {
["npcID"] = 114632,
},
[26262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Tendril",
["npcID"] = 65282,
},
[123974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chagan Firehoof",
["npcID"] = 63318,
},
[366823] = {
["npcID"] = 185275,
},
[450781] = {
["source"] = "Flickerflame Sticker",
["event"] = "SPELL_CAST_START",
["npcID"] = 212629,
},
[346346] = {
["npcID"] = 164713,
},
[454877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rhak'ik",
["npcID"] = 221032,
},
[173764] = {
["npcID"] = 86215,
},
[395060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Im'bunata",
["npcID"] = 196199,
},
[201858] = {
["npcID"] = 100539,
},
[146501] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sra'thik Amber-Master",
["npcID"] = 72929,
},
[187074] = {
["encounterName"] = "Hellfire Assault",
["source"] = "Hulking Berserker",
["encounterID"] = 1778,
["event"] = "SPELL_CAST_START",
["npcID"] = 92911,
},
[139402] = {
["isChanneled"] = true,
["source"] = "No'ku Stormsayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 70276,
},
[338157] = {
["npcID"] = 165047,
},
[136904] = {
["encounterName"] = "Council of Elders",
["source"] = "Frost King Malakk",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 69131,
},
[427357] = {
["source"] = "Devout Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[450784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xeph'itik",
["npcID"] = 219984,
},
[193668] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["encounterID"] = 1808,
["event"] = "SPELL_CAST_START",
["npcID"] = 95675,
},
[331379] = {
["npcID"] = 167965,
},
[130630] = {
["isChanneled"] = true,
["source"] = "Gyrocopter Turret",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66299,
},
[209027] = {
["npcID"] = 104246,
},
[417634] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[372971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Blacksmith",
["npcID"] = 189471,
},
[427356] = {
["source"] = "Devout Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[385258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coastal Eel",
["npcID"] = 198782,
},
[119843] = {
["source"] = "Crypt Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 61766,
},
[340208] = {
["npcID"] = 173655,
},
[358638] = {
["npcID"] = 178997,
},
[423260] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[434407] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[112998] = {
["source"] = "Residual Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 58803,
},
[440549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ragefin Executioner",
["npcID"] = 213408,
},
[401642] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[321780] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zolramus Necromancer",
["npcID"] = 163618,
},
[430051] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Screaming Soul",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 214608,
},
[325876] = {
["npcID"] = 165414,
},
[319733] = {
["encounterName"] = "Echelon",
["encounterID"] = 2380,
["npcID"] = 164185,
},
[341349] = {
["npcID"] = 173973,
},
[389360] = {
["source"] = "Ancient Timekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 192516,
},
[325877] = {
["encounterName"] = "Sun King's Salvation",
["encounterID"] = 2402,
["npcID"] = 165805,
},
[393453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dracthyr Stoneclaw",
["npcID"] = 201079,
},
[395501] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 192934,
},
[117833] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Meng the Demented",
["npcID"] = 60708,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[353635] = {
["encounterName"] = "So'leah",
["encounterID"] = 2442,
["npcID"] = 177269,
},
[393454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Battlehorn Pyrhus",
["npcID"] = 190986,
},
[39211] = {
["npcID"] = 22461,
},
[128072] = {
["source"] = "Dread Scarab",
["event"] = "SPELL_CAST_START",
["npcID"] = 63587,
},
[407790] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[270590] = {
["encounterName"] = "Viq'Goth",
["source"] = "Demolishing Terror",
["npcID"] = 137626,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2100,
},
[382303] = {
["encounterName"] = "Bromach",
["encounterID"] = 2556,
["npcID"] = 184018,
},
[454888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Khak'ik",
["npcID"] = 216032,
},
[456936] = {
["source"] = "Manifested Protocol",
["event"] = "SPELL_CAST_START",
["npcID"] = 222946,
},
[120300] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zandalari Shadow-Hunter",
["npcID"] = 60524,
},
[407039] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Sarek Cinderbreath",
["npcID"] = 203812,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2684,
},
[317559] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodbeak",
["npcID"] = 153964,
},
[387315] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Scalecommander Haerothal",
["npcID"] = 201822,
},
[42027] = {
["encounterName"] = "Shade of Akama",
["source"] = "Ashtongue Spiritbinder",
["npcID"] = 23524,
["event"] = "SPELL_CAST_START",
["encounterID"] = 603,
},
[428269] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Void Chunk",
["encounterID"] = 2836,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213684,
},
[463081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Phalanx",
["npcID"] = 229782,
},
[307453] = {
["encounterName"] = "Vexiona",
["source"] = "Vexiona",
["encounterID"] = 2336,
["event"] = "SPELL_CAST_START",
["npcID"] = 157354,
},
[393458] = {
["source"] = "Malifron",
["event"] = "SPELL_CAST_START",
["npcID"] = 190278,
},
[127561] = {
["source"] = "Oku-Oku",
["event"] = "SPELL_CAST_START",
["npcID"] = 62486,
},
[446700] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Voracious Worm",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 219046,
},
[319644] = {
["npcID"] = 161529,
},
[129097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Norvakess",
["npcID"] = 62324,
},
[209033] = {
["npcID"] = 104246,
},
[145552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Coin Counter",
["npcID"] = 202398,
},
[424176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Protector",
["npcID"] = 210637,
},
[311550] = {
["source"] = "Jesh'ra",
["event"] = "SPELL_CAST_START",
["npcID"] = 159764,
},
[403699] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201774,
},
[406874] = {
["source"] = "Contaminated Krolusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 204310,
},
[334076] = {
["npcID"] = 168942,
},
[125002] = {
["source"] = "Adjunct Tzikzi",
["event"] = "SPELL_CAST_START",
["npcID"] = 62076,
},
[142152] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mouth of Terror",
["npcID"] = 70691,
},
[9613] = {
["npcID"] = 48413,
},
[391414] = {
["source"] = "Borzgas",
["event"] = "SPELL_CAST_START",
["npcID"] = 193896,
},
[445808] = {
["source"] = "Heelripper",
["event"] = "SPELL_CAST_START",
["npcID"] = 216555,
},
[79721] = {
["source"] = "Captain Ripflesh",
["event"] = "SPELL_CAST_START",
["npcID"] = 60767,
},
[189554] = {
["source"] = "Sargerei Adjutant",
["event"] = "SPELL_CAST_START",
["npcID"] = 95636,
},
[114182] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Scholar",
["npcID"] = 59372,
},
[368890] = {
["npcID"] = 181408,
},
[144530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yu'lon",
["npcID"] = 71955,
},
[228269] = {
["encounterName"] = "Shade of Medivh",
["encounterID"] = 1965,
["npcID"] = 114350,
},
[387186] = {
["source"] = "Infinite Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 217557,
},
[125865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zar'thik Augurer",
["npcID"] = 64454,
},
[15232] = {
["source"] = "Murkblood Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 17771,
},
[113141] = {
["encounterName"] = "Darkmaster Gandling",
["source"] = "Darkmaster Gandling",
["npcID"] = 59080,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1430,
},
[360075] = {
["npcID"] = 182210,
},
[241799] = {
["npcID"] = 183423,
},
[76369] = {
["source"] = "Twilight Beguiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 40167,
},
[340224] = {
["npcID"] = 161529,
},
[57381] = {
["encounterName"] = "The Four Horsemen",
["source"] = "Lady Blaumeux",
["npcID"] = 16065,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1121,
},
[123918] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scar-Shell",
["npcID"] = 63311,
},
[106853] = {
["encounterName"] = "Master Snowdrift",
["source"] = "Master Snowdrift",
["encounterID"] = 1304,
["event"] = "SPELL_CAST_START",
["npcID"] = 56541,
},
[128075] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadmaw Grouper",
["npcID"] = 63375,
},
[130914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terrorling",
["npcID"] = 66597,
},
[11021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Searing Whelp",
["npcID"] = 4324,
},
[146556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'thik Honor Guard",
["npcID"] = 72954,
},
[368034] = {
["npcID"] = 183722,
},
[366847] = {
["encounterName"] = "Prototype Pantheon",
["encounterID"] = 2544,
["npcID"] = 182144,
},
[385277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver A'tir",
["npcID"] = 186859,
},
[379134] = {
["npcID"] = 191092,
},
[446415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Visage",
["npcID"] = 213686,
},
[288410] = {
["encounterName"] = "Mekkatorque",
["encounterID"] = 2276,
["npcID"] = 144796,
},
[168082] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83892,
},
[329989] = {
["npcID"] = 174069,
},
[270474] = {
["source"] = "Remembered Thornweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 221745,
},
[383231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavamancer",
["npcID"] = 193944,
},
[355675] = {
["npcID"] = 176705,
},
[421672] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["npcID"] = 208478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2737,
},
[115650] = {
["source"] = "Sudsy Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59522,
},
[276749] = {
["npcID"] = 136493,
},
[389376] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grizzlerock",
["npcID"] = 193652,
},
[396629] = {
["source"] = "Territorial Coastling",
["event"] = "SPELL_CAST_START",
["npcID"] = 193163,
},
[454904] = {
["source"] = "Surek'Tak the Sundered",
["event"] = "SPELL_CAST_START",
["npcID"] = 222190,
},
[389245] = {
["source"] = "Blacktalon Assassin",
["event"] = "SPELL_CAST_START",
["npcID"] = 190111,
},
[442618] = {
["source"] = "Siege Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 215601,
},
[331398] = {
["npcID"] = 170147,
},
[107938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wascally Wirmen",
["npcID"] = 59655,
},
[341422] = {
["npcID"] = 174194,
},
[418046] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[411903] = {
["source"] = "Sundered Chemist",
["event"] = "SPELL_CAST_START",
["npcID"] = 205656,
},
[395029] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["encounterID"] = 2606,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 195119,
},
[342280] = {
["encounterName"] = "Lady Inerva Darkvein",
["encounterID"] = 2406,
["npcID"] = 165521,
},
[155327] = {
["encounterName"] = "Soulbinder Nyami",
["source"] = "Soulbinder Nyami",
["event"] = "SPELL_CAST_START",
["npcID"] = 76177,
},
[126354] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Sharp-Shooter",
["npcID"] = 66288,
},
[79886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordo Warbringer",
["npcID"] = 60127,
},
[383236] = {
["source"] = "Beguiled Aquamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 195960,
},
[352520] = {
["npcID"] = 178601,
},
[193682] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[446717] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Shadeweaver",
["npcID"] = 221102,
},
[383237] = {
["source"] = "Primal Lava Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 187321,
},
[418049] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vereesa Windrunner",
["npcID"] = 207816,
},
[411906] = {
["source"] = "Sundered Chemist",
["event"] = "SPELL_CAST_START",
["npcID"] = 205656,
},
[421971] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["npcID"] = 209333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[120706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragon Launcher",
["npcID"] = 62024,
},
[149463] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Berserker",
["npcID"] = 72895,
},
[136297] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Goblin Cannon",
["npcID"] = 67694,
},
[460106] = {
["source"] = "Slatefang",
["event"] = "SPELL_CAST_START",
["npcID"] = 228439,
},
[392530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quarry Infuser",
["npcID"] = 197799,
},
[418051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vereesa Windrunner",
["npcID"] = 207816,
},
[321807] = {
["npcID"] = 163619,
},
[128078] = {
["source"] = "Adjunct Pivvika",
["event"] = "SPELL_CAST_START",
["npcID"] = 63104,
},
[366858] = {
["npcID"] = 183748,
},
[425492] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[272662] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Raider",
["npcID"] = 129369,
},
[126958] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu'shan Warden",
["npcID"] = 64061,
},
[125365] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scritch",
["npcID"] = 50831,
},
[407207] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[411910] = {
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 45919,
},
[463104] = {
["source"] = "Brood Infuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 222167,
},
[319298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torgok",
["npcID"] = 162817,
},
[360717] = {
["encounterName"] = "Lords of Dread",
["npcID"] = 181398,
["encounterID"] = 2543,
},
[420102] = {
["source"] = "Captain Garrick",
["event"] = "SPELL_CAST_START",
["npcID"] = 209057,
},
[147544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Golganarr",
["npcID"] = 72970,
},
[106851] = {
["source"] = "Stout Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59519,
},
[368909] = {
["npcID"] = 185861,
},
[411912] = {
["source"] = "Sundered Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205673,
},
[128079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadspinner Tender",
["npcID"] = 61981,
},
[11829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gai-Cho Cauterizer",
["npcID"] = 62577,
},
[241808] = {
["npcID"] = 183424,
},
[313621] = {
["npcID"] = 177637,
},
[123914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Treant",
["npcID"] = 63467,
},
[111668] = {
["source"] = "Raigonn",
["event"] = "SPELL_CAST_START",
["npcID"] = 56877,
},
[201399] = {
["npcID"] = 100527,
},
[124302] = {
["source"] = "Yorik Sharpeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 50336,
},
[114249] = {
["source"] = "Broketooth Tosser",
["event"] = "SPELL_CAST_START",
["npcID"] = 59416,
},
[317292] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 162480,
},
[241809] = {
["npcID"] = 183424,
},
[311015] = {
["source"] = "Monstrous Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 159303,
},
[126032] = {
["source"] = "Cracklefang",
["event"] = "SPELL_CAST_START",
["npcID"] = 58768,
},
[375056] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[138187] = {
["source"] = "Lightning Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 69834,
},
[387343] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bouldron",
["npcID"] = 193644,
},
[311045] = {
["source"] = "Shath'Yar Scribe",
["event"] = "SPELL_CAST_START",
["npcID"] = 163690,
},
[366866] = {
["npcID"] = 184651,
},
[377105] = {
["source"] = "Vault Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 190510,
},
[362771] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 183463,
["encounterID"] = 2546,
},
[139231] = {
["source"] = "Zandalari Storm-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 69390,
},
[375058] = {
["source"] = "Old Arbhog",
["event"] = "SPELL_CAST_START",
["npcID"] = 196897,
},
[257784] = {
["source"] = "Bilge Rat Brinescale",
["event"] = "SPELL_CAST_START",
["npcID"] = 129600,
},
[156829] = {
["source"] = "Gul'kosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 78437,
},
[223381] = {
["source"] = "Dire Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 112153,
},
[257169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Demolisher",
["npcID"] = 135245,
},
[168092] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83892,
},
[444683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ramolith Curlhorn",
["npcID"] = 221672,
},
[227477] = {
["encounterName"] = "Opera Hall",
["encounterID"] = 1957,
["npcID"] = 114284,
},
[366869] = {
["npcID"] = 184651,
},
[123966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Little Liuyang",
["npcID"] = 63313,
},
[143280] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Skeer the Bloodseeker",
["npcID"] = 71152,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[141381] = {
["source"] = "Lieutenant Boltblaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 71329,
},
[257170] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Raider",
["npcID"] = 129369,
},
[460100] = {
["source"] = "Slatefang",
["event"] = "SPELL_CAST_START",
["npcID"] = 228439,
},
[310614] = {
["encounterName"] = "Drest'agath",
["source"] = "Tentacle of Drest'agath",
["encounterID"] = 2343,
["event"] = "SPELL_CAST_START",
["npcID"] = 157614,
},
[195254] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[411763] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Infinite Keeper",
["npcID"] = 205212,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[184476] = {
["encounterName"] = "Hellfire High Council",
["source"] = "Dia Darkwhisper",
["encounterID"] = 1798,
["event"] = "SPELL_CAST_START",
["npcID"] = 92144,
},
[128022] = {
["source"] = "Dread Kunchong",
["event"] = "SPELL_CAST_START",
["npcID"] = 64717,
},
[120160] = {
["encounterName"] = "Trial of the King",
["source"] = "Haiyan the Unstoppable",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61445,
},
[144546] = {
["npcID"] = 71992,
},
[125010] = {
["source"] = "Adjunct Tzikzi",
["event"] = "SPELL_CAST_START",
["npcID"] = 62076,
},
[444687] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[110945] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Gu Cloudstrike",
["encounterID"] = 1303,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56747,
},
[132942] = {
["isChanneled"] = true,
["source"] = "Alliance Swashbuckler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69196,
},
[360730] = {
["npcID"] = 181115,
},
[63789] = {
["npcID"] = 33820,
},
[373017] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189886,
},
[375065] = {
["source"] = "Fetid Rotsinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 186226,
},
[365901] = {
["npcID"] = 185346,
},
[387352] = {
["source"] = "Life Pools Crasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 187105,
},
[412999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winglord Dezran",
["npcID"] = 201677,
},
[424212] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["encounterID"] = 2826,
["event"] = "SPELL_CAST_START",
["npcID"] = 208743,
},
[374586] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2612,
},
[444692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ramolith Curlhorn",
["npcID"] = 221672,
},
[389401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alora Mistbreeze",
["npcID"] = 189243,
},
[391449] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Borzgas",
["npcID"] = 193896,
},
[426261] = {
["source"] = "Sootsnout",
["event"] = "SPELL_CAST_START",
["npcID"] = 212412,
},
[17174] = {
["source"] = "Captain Ripflesh",
["event"] = "SPELL_CAST_START",
["npcID"] = 60767,
},
[405784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarasek Boarder",
["npcID"] = 203307,
},
[448787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightspawn",
["npcID"] = 206710,
},
[453953] = {
["source"] = "Broodtwister Ovi'nax",
["event"] = "SPELL_CAST_START",
["npcID"] = 214506,
},
[297254] = {
["encounterName"] = "King Gobbamak",
["encounterID"] = 2290,
["npcID"] = 150159,
},
[35377] = {
["npcID"] = 176995,
},
[310842] = {
["source"] = "Occult Shadowmender",
["event"] = "SPELL_CAST_START",
["npcID"] = 159425,
},
[241798] = {
["npcID"] = 183423,
},
[321828] = {
["encounterName"] = "Mistcaller",
["encounterID"] = 2392,
["npcID"] = 164501,
},
[406854] = {
["source"] = "Sundered Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 201736,
},
[301351] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["encounterID"] = 2291,
["npcID"] = 150190,
},
[172193] = {
["npcID"] = 86216,
},
[388424] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[111631] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[373024] = {
["source"] = "Decayed Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 189531,
},
[385310] = {
["source"] = "Primalist Shockcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 195119,
},
[403740] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[153764] = {
["encounterName"] = "Azzakel, Vanguard of the Legion",
["source"] = "Azzakel",
["encounterID"] = 1678,
["event"] = "SPELL_CAST_START",
["npcID"] = 75927,
},
[448791] = {
["source"] = "Ardent Paladin",
["event"] = "SPELL_CAST_START",
["npcID"] = 206704,
},
[417338] = {
["source"] = "The Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 205305,
},
[403741] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[207006] = {
["encounterName"] = "Gul'dan",
["source"] = "Inquisitor Vethriz",
["encounterID"] = 1866,
["event"] = "SPELL_CAST_START",
["npcID"] = 104536,
},
[111667] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Evoker",
["npcID"] = 58756,
},
[409885] = {
["event"] = "SPELL_CAST_START",
["source"] = "Highmountain Seer",
["npcID"] = 201578,
},
[420125] = {
["source"] = "Primal Stonekin",
["event"] = "SPELL_CAST_START",
["npcID"] = 194291,
},
[422172] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[342310] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 166644,
},
[385313] = {
["source"] = "Primalist Shockcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 195119,
},
[444698] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riftwalker Nilara",
["npcID"] = 214644,
},
[129575] = {
["source"] = "Korjan Slavemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 65638,
},
[403459] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201774,
},
[133990] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thane Stonehearth",
["npcID"] = 67636,
},
[321834] = {
["encounterName"] = "Mistcaller",
["encounterID"] = 2392,
["npcID"] = 164501,
},
[405279] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[411439] = {
["source"] = "Sundered Siegemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 198874,
},
[406851] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[121762] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Builder",
["npcID"] = 62633,
},
[460092] = {
["source"] = "Spinemaw Staghorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 167111,
},
[432414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wormcaller Iz'tikrine",
["npcID"] = 214153,
},
[79856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyromancer Flamehearth",
["npcID"] = 70709,
},
[365895] = {
["npcID"] = 184535,
},
[202913] = {
["encounterName"] = "Tirathon Saltheril",
["source"] = "Tirathon Saltheril",
["encounterID"] = 1815,
["event"] = "SPELL_CAST_START",
["npcID"] = 95885,
},
[322892] = {
["npcID"] = 168853,
},
[451900] = {
["source"] = "Stonehead Koboldcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 220792,
},
[305236] = {
["source"] = "Aqir Venomweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 161229,
},
[125506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Commander Lindon",
["npcID"] = 59191,
},
[375079] = {
["source"] = "Squallbringer Cyraz",
["event"] = "SPELL_CAST_START",
["npcID"] = 190370,
},
[194437] = {
["source"] = "Crawliac Cinderwitch",
["event"] = "SPELL_CAST_START",
["npcID"] = 95174,
},
[102998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xiao",
["npcID"] = 54926,
},
[223392] = {
["source"] = "Dire Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 112153,
},
[120810] = {
["source"] = "Tormented Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 60825,
},
[117702] = {
["event"] = "SPELL_CAST_START",
["source"] = "Widow Greenpaw",
["npcID"] = 55368,
},
[215754] = {
["npcID"] = 108655,
},
[128086] = {
["source"] = "Kz'Kzik",
["event"] = "SPELL_CAST_START",
["npcID"] = 62832,
},
[342317] = {
["npcID"] = 181005,
},
[393511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cauldronbearer Blakor",
["npcID"] = 186783,
},
[444705] = {
["source"] = "Zealous Templar",
["event"] = "SPELL_CAST_START",
["npcID"] = 207949,
},
[373034] = {
["source"] = "Time-Lost Mudskipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187540,
},
[191524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blade Dancer Illianna",
["npcID"] = 96657,
},
[131067] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strongarm Medic",
["npcID"] = 65842,
},
[387337] = {
["npcID"] = 191093,
},
[198820] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Latosius",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[399656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Igneous Darkness",
["npcID"] = 202866,
},
[426277] = {
["isChanneled"] = true,
["source"] = "Torchsnarl",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212993,
},
[396774] = {
["npcID"] = 191105,
},
[110117] = {
["source"] = "Ethereal Sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 65414,
},
[342320] = {
["encounterName"] = "Lady Inerva Darkvein",
["encounterID"] = 2406,
["npcID"] = 165521,
},
[228012] = {
["encounterName"] = "Odyn",
["source"] = "Hymdall",
["encounterID"] = 1958,
["event"] = "SPELL_CAST_START",
["npcID"] = 114361,
},
[313652] = {
["encounterName"] = "The Hivemind",
["source"] = "Ka'zir",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 157253,
},
[389423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thieving Conjurer",
["npcID"] = 196388,
},
[342321] = {
["encounterName"] = "Lady Inerva Darkvein",
["encounterID"] = 2406,
["npcID"] = 165521,
},
[79965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Paladin",
["npcID"] = 214148,
},
[169129] = {
["encounterName"] = "Skulloc, Son of Gruul",
["encounterID"] = 1754,
["npcID"] = 84464,
},
[116710] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zhi-Zhi",
["npcID"] = 54924,
},
[350517] = {
["encounterName"] = "Timecap'n Hooktail",
["encounterID"] = 2419,
["npcID"] = 175546,
},
[390463] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[115289] = {
["encounterName"] = "Thalnos the Soulrender",
["source"] = "Thalnos the Soulrender",
["npcID"] = 59789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1423,
},
[215204] = {
["encounterName"] = "Patrol Captain Gerdo",
["npcID"] = 104918,
["encounterID"] = 1868,
},
[440615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ragefin Shadowcaster",
["npcID"] = 213405,
},
[450854] = {
["source"] = "Deathscreamer Iken'tak",
["event"] = "SPELL_CAST_START",
["npcID"] = 211263,
},
[362801] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2553,
["npcID"] = 183501,
},
[282939] = {
["encounterName"] = "Opulence",
["encounterID"] = 2271,
["npcID"] = 145274,
},
[146605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kovok",
["npcID"] = 72927,
},
[272711] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Demolisher",
["npcID"] = 135245,
},
[214181] = {
["source"] = "Putrid Sludge",
["event"] = "SPELL_CAST_START",
["npcID"] = 112251,
},
[446760] = {
["isChanneled"] = true,
["source"] = "Infesting Latcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222572,
},
[183465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarspitter Lurker",
["npcID"] = 91001,
},
[426283] = {
["source"] = "Cursedheart Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 212389,
},
[205486] = {
["encounterName"] = "Star Augur Etraeus",
["source"] = "Star Augur Etraeus",
["encounterID"] = 1863,
["event"] = "SPELL_CAST_START",
["npcID"] = 103758,
},
[399666] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Construct",
["npcID"] = 200598,
},
[146606] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kovok",
["npcID"] = 72927,
},
[287037] = {
["encounterName"] = "Opulence",
["encounterID"] = 2271,
["npcID"] = 145261,
},
[228011] = {
["encounterName"] = "Opera Hall",
["encounterID"] = 1957,
["npcID"] = 114522,
},
[340279] = {
["npcID"] = 173714,
},
[399664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Igneous Darkness",
["npcID"] = 202866,
},
[33844] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rapidly Grown Treant",
["npcID"] = 209218,
},
[396605] = {
["source"] = "Rapid Wooly Ewe",
["event"] = "SPELL_CAST_START",
["npcID"] = 197200,
},
[227493] = {
["encounterName"] = "Attumen the Huntsman",
["encounterID"] = 1960,
["npcID"] = 114262,
},
[444648] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riftwalker Nilara",
["npcID"] = 214644,
},
[385331] = {
["encounterName"] = "Umbrelskul",
["source"] = "Detonating Crystal",
["encounterID"] = 2584,
["event"] = "SPELL_CAST_START",
["npcID"] = 195138,
},
[411952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Timebender",
["npcID"] = 205337,
},
[141488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthborn Hatred",
["npcID"] = 70822,
},
[416048] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[393523] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cracktooth",
["npcID"] = 187528,
},
[32364] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Nexus-Prince Shaffar",
["encounterID"] = 1899,
["event"] = "SPELL_CAST_START",
["npcID"] = 18344,
},
[373046] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["encounterID"] = 2609,
["event"] = "SPELL_CAST_START",
["npcID"] = 188252,
},
[440622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ragefin Shadowcaster",
["npcID"] = 213405,
},
[188587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Understone Demolisher",
["npcID"] = 102253,
},
[128970] = {
["isChanneled"] = true,
["source"] = "Crypt Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61783,
},
[239781] = {
["source"] = "Ghostly Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 120194,
},
[114147] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Fearmaster",
["npcID"] = 59656,
},
[393525] = {
["source"] = "Ceeqa the Peacetaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 188708,
},
[160943] = {
["encounterName"] = "Nitrogg Thundertower",
["encounterID"] = 1732,
["npcID"] = 77483,
},
[389430] = {
["source"] = "Unleashed Storm",
["event"] = "SPELL_CAST_START",
["npcID"] = 195846,
},
[444722] = {
["source"] = "Zealous Templar",
["event"] = "SPELL_CAST_START",
["npcID"] = 207949,
},
[120926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mo Mo",
["npcID"] = 59805,
},
[365887] = {
["npcID"] = 184878,
},
[389431] = {
["source"] = "Bazual",
["event"] = "SPELL_CAST_START",
["npcID"] = 193532,
},
[428345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Scorpid",
["npcID"] = 213696,
},
[393527] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cracktooth",
["npcID"] = 187528,
},
[79884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordo Warbringer",
["npcID"] = 60127,
},
[384316] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[391480] = {
["event"] = "SPELL_CAST_START",
["source"] = "Two-Eye",
["npcID"] = 194522,
},
[229544] = {
["npcID"] = 115401,
},
[411958] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iridikron's Creation",
["npcID"] = 205691,
},
[389433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darktooth Spirit-Caller",
["npcID"] = 195267,
},
[448818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Skullface",
["npcID"] = 203951,
},
[199341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Trapper",
["npcID"] = 96934,
},
[389435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wither Biter",
["npcID"] = 197136,
},
[426295] = {
["source"] = "Sootsnout",
["event"] = "SPELL_CAST_START",
["npcID"] = 212412,
},
[368042] = {
["npcID"] = 178508,
},
[328002] = {
["npcID"] = 168574,
},
[371005] = {
["source"] = "Crystal Thrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 196117,
},
[340289] = {
["npcID"] = 173714,
},
[448820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Skullface",
["npcID"] = 203951,
},
[360767] = {
["npcID"] = 181879,
},
[387388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thieving Conjurer",
["npcID"] = 196388,
},
[51218] = {
["source"] = "Proto-Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 23750,
},
[389040] = {
["source"] = "Thondrozus",
["event"] = "SPELL_CAST_START",
["npcID"] = 192769,
},
[385341] = {
["source"] = "Arcane Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 195335,
},
[403771] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[407640] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[118228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osul Veteran Archer",
["npcID"] = 61886,
},
[217260] = {
["source"] = "Mudfin Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 186679,
},
[201902] = {
["npcID"] = 100539,
},
[417678] = {
["source"] = "Meantron 7000",
["event"] = "SPELL_CAST_START",
["npcID"] = 206131,
},
[107357] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["encounterID"] = 1306,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56884,
},
[137399] = {
["encounterName"] = "Jin'rokh the Breaker",
["source"] = "Jin'rokh the Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 69465,
},
[255144] = {
["npcID"] = 127919,
},
[446776] = {
["source"] = "War Lynx",
["event"] = "SPELL_CAST_START",
["npcID"] = 206699,
},
[399678] = {
["source"] = "Flamebringer Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 203700,
},
[385344] = {
["source"] = "Arcane Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 195335,
},
[314889] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Exposed Synapse",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 159578,
},
[438586] = {
["source"] = "Venommaster Nezarox",
["event"] = "SPELL_CAST_START",
["npcID"] = 219006,
},
[365883] = {
["npcID"] = 181045,
},
[377154] = {
["source"] = "Ripsaw the Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 193153,
},
[55811] = {
["source"] = "Iron Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 29984,
},
[373059] = {
["encounterName"] = "The Primal Council",
["source"] = "Kadros Icewrath",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187771,
},
[383298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Lava Elemental",
["npcID"] = 182815,
},
[116830] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Konk",
["npcID"] = 55509,
},
[51764] = {
["source"] = "Dragonblight Mage Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 26280,
},
[389443] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Nullification Device",
["npcID"] = 196712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[79971] = {
["source"] = "Sunwalker Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 58850,
},
[389446] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Nullification Device",
["npcID"] = 196712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[395586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Destroyer",
["npcID"] = 194402,
},
[198833] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Latosius",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[391491] = {
["source"] = "Sootscale the Indomitable",
["event"] = "SPELL_CAST_START",
["npcID"] = 190307,
},
[360775] = {
["npcID"] = 185511,
},
[221864] = {
["encounterName"] = "Grand Magistrix Elisande",
["source"] = "Recursive Elemental",
["encounterID"] = 1872,
["event"] = "SPELL_CAST_START",
["npcID"] = 105299,
},
[129082] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruqin Elder",
["npcID"] = 59826,
},
[228526] = {
["npcID"] = 183423,
},
[393540] = {
["source"] = "Zhurtan the Riverboiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 188687,
},
[161533] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mandragora Lifedrinker",
["npcID"] = 80699,
},
[355642] = {
["npcID"] = 179841,
},
[432448] = {
["source"] = "Nightfall Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 214761,
},
[116831] = {
["event"] = "SPELL_CAST_START",
["source"] = "Konk",
["npcID"] = 55509,
},
[387398] = {
["source"] = "Mistyvale Stonecarver",
["event"] = "SPELL_CAST_START",
["npcID"] = 196624,
},
[340300] = {
["npcID"] = 173720,
},
[402769] = {
["source"] = "Sundered Flame Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 202260,
},
[385351] = {
["source"] = "Arcane Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 195335,
},
[405812] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["encounterID"] = 2689,
["event"] = "SPELL_CAST_START",
["npcID"] = 202375,
},
[340301] = {
["event"] = "SPELL_CAST_START",
["source"] = "Evolved Sample",
["npcID"] = 202651,
},
[167095] = {
["npcID"] = 83390,
},
[138427] = {
["source"] = "Gurubashi Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 69905,
},
[193716] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[113760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragrant Lotus",
["npcID"] = 56472,
},
[114272] = {
["source"] = "Sha Remnant",
["event"] = "SPELL_CAST_START",
["npcID"] = 59434,
},
[328016] = {
["npcID"] = 168578,
},
[107356] = {
["encounterName"] = "Taran Zhu",
["source"] = "Corrupted Taran Zhu",
["encounterID"] = 1306,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56884,
},
[417497] = {
["source"] = "Rude Crude",
["event"] = "SPELL_CAST_START",
["npcID"] = 206617,
},
[46035] = {
["source"] = "Sunblade Magister",
["event"] = "SPELL_CAST_START",
["npcID"] = 24685,
},
[372568] = {
["isChanneled"] = true,
["source"] = "Flashfrost Earthshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188067,
},
[193717] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[340304] = {
["npcID"] = 173720,
},
[136881] = {
["source"] = "Zandalari Water-Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 69455,
},
[396600] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorger",
["npcID"] = 192759,
},
[450885] = {
["source"] = "Cinderbee Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 222976,
},
[340305] = {
["npcID"] = 173720,
},
[334162] = {
["npcID"] = 166908,
},
[393547] = {
["source"] = "Kraunot",
["event"] = "SPELL_CAST_START",
["npcID"] = 186401,
},
[417808] = {
["source"] = "Haywire Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 205889,
},
[448847] = {
["encounterName"] = "General Umbriss",
["source"] = "General Umbriss",
["encounterID"] = 1051,
["event"] = "SPELL_CAST_START",
["npcID"] = 39625,
},
[285017] = {
["encounterName"] = "Stormwall Blockade",
["encounterID"] = 2280,
["npcID"] = 146256,
},
[377166] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["encounterID"] = 2639,
["event"] = "SPELL_CAST_START",
["npcID"] = 190496,
},
[428360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Firelands Destroyer",
["npcID"] = 210293,
},
[15503] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Eramas Brightblaze",
["encounterID"] = 1895,
["event"] = "SPELL_CAST_START",
["npcID"] = 24554,
},
[427342] = {
["isChanneled"] = true,
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[409931] = {
["source"] = "Djaradin Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 202109,
},
[444743] = {
["source"] = "Risen Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 221760,
},
[31516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Priest",
["npcID"] = 59166,
},
[146621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kovok",
["npcID"] = 72927,
},
[393550] = {
["source"] = "Kraunot",
["event"] = "SPELL_CAST_START",
["npcID"] = 186401,
},
[419123] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[128096] = {
["source"] = "Vor'thik Dreadsworn",
["event"] = "SPELL_CAST_START",
["npcID"] = 62813,
},
[285020] = {
["encounterName"] = "Tussle Tonks",
["npcID"] = 144244,
["encounterID"] = 2257,
},
[120929] = {
["source"] = "Abomination of Anger",
["event"] = "SPELL_CAST_START",
["npcID"] = 61707,
},
[448843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candleclaw Underboss",
["npcID"] = 213831,
},
[227508] = {
["encounterName"] = "Maiden of Virtue",
["encounterID"] = 1954,
["npcID"] = 113971,
},
[331065] = {
["npcID"] = 159192,
},
[147646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crag Stalker",
["npcID"] = 72807,
},
[388623] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[463176] = {
["source"] = "Voracious Stagshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 222145,
},
[30853] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Summoner",
["npcID"] = 17395,
},
[287070] = {
["encounterName"] = "Opulence",
["encounterID"] = 2271,
["npcID"] = 145261,
},
[387410] = {
["source"] = "Boss",
["event"] = "SPELL_CAST_START",
["npcID"] = 194404,
},
[317791] = {
["npcID"] = 163366,
},
[440652] = {
["source"] = "Wandering Candle",
["event"] = "SPELL_CAST_START",
["npcID"] = 208450,
},
[147647] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harbinger of Y'Shaarj",
["npcID"] = 73452,
},
[387411] = {
["source"] = "Soulharvester Duuren",
["event"] = "SPELL_CAST_START",
["npcID"] = 195928,
},
[131071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strongarm Airman",
["npcID"] = 65840,
},
[368983] = {
["npcID"] = 191378,
},
[418128] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Thassarian",
["npcID"] = 207822,
},
[403794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duzalgor",
["npcID"] = 200610,
},
[364891] = {
["npcID"] = 183737,
},
[366938] = {
["npcID"] = 185032,
},
[9232] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["npcID"] = 3977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1425,
},
[123490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enslaved Bonesmasher",
["npcID"] = 63030,
},
[315742] = {
["npcID"] = 158891,
},
[407891] = {
["source"] = "Horde Farseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 204206,
},
[344411] = {
["npcID"] = 154330,
},
[238586] = {
["source"] = "Brutal Punisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 117421,
},
[353588] = {
["npcID"] = 182426,
},
[399701] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenging Slicer",
["npcID"] = 204508,
},
[147649] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crag Stalker",
["npcID"] = 72807,
},
[124359] = {
["source"] = "Den Mother Moof",
["event"] = "SPELL_CAST_START",
["npcID"] = 63518,
},
[463182] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["npcID"] = 129208,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2109,
},
[317792] = {
["npcID"] = 163366,
},
[313400] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Corruptor Tentacle",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158375,
},
[136387] = {
["npcID"] = 23682,
},
[113764] = {
["encounterName"] = "Brother Korloff",
["source"] = "Brother Korloff",
["npcID"] = 59223,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1424,
},
[319843] = {
["npcID"] = 161376,
},
[147650] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crag Stalker",
["npcID"] = 72807,
},
[168040] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83893,
},
[223417] = {
["source"] = "Grisly Trapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 112162,
},
[397386] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199703,
},
[377179] = {
["npcID"] = 190230,
},
[118105] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["npcID"] = 60710,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[274792] = {
["npcID"] = 140149,
},
[396641] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harat the Ancient",
["npcID"] = 196246,
},
[450899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Forager",
["npcID"] = 222976,
},
[321891] = {
["encounterName"] = "Mistcaller",
["encounterID"] = 2392,
["npcID"] = 165251,
},
[373087] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189886,
},
[191678] = {
["source"] = "Viletongue Belcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 96480,
},
[368990] = {
["encounterName"] = "Emberon",
["encounterID"] = 2558,
["npcID"] = 184422,
},
[323943] = {
["encounterName"] = "Devos, Paragon of Loyalty",
["encounterID"] = 2359,
["npcID"] = 162061,
},
[405850] = {
["source"] = "Sundered Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 201753,
},
[120788] = {
["source"] = "Imperial Antiquator",
["event"] = "SPELL_CAST_START",
["npcID"] = 61641,
},
[147652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Stalker",
["npcID"] = 72805,
},
[395612] = {
["source"] = "Helmet Missingway",
["event"] = "SPELL_CAST_START",
["npcID"] = 193263,
},
[422233] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["encounterID"] = 2880,
["event"] = "SPELL_CAST_START",
["npcID"] = 210156,
},
[448854] = {
["source"] = "Enraged Drunkard",
["event"] = "SPELL_CAST_START",
["npcID"] = 218655,
},
[336228] = {
["npcID"] = 170303,
},
[321894] = {
["encounterName"] = "Nalthor the Rimebinder",
["npcID"] = 162693,
["encounterID"] = 2390,
},
[446807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bomb",
["npcID"] = 222787,
},
[457046] = {
["source"] = "Manifested Protocol",
["event"] = "SPELL_CAST_START",
["npcID"] = 222946,
},
[214692] = {
["npcID"] = 107435,
},
[403625] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[381280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uktulut Trainee",
["npcID"] = 193203,
},
[364900] = {
["npcID"] = 183737,
},
[115754] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tian Pupil",
["npcID"] = 54944,
},
[129636] = {
["event"] = "SPELL_CAST_START",
["source"] = "Student of Chi-Ji",
["npcID"] = 60603,
},
[438618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Engorged Crawler",
["npcID"] = 214840,
},
[407902] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Farseer",
["npcID"] = 204206,
},
[303467] = {
["npcID"] = 176828,
},
[305515] = {
["encounterName"] = "Ravnyr",
["source"] = "Ravnyr",
["npcID"] = 156501,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2326,
},
[115814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greenwood Trickster",
["npcID"] = 54987,
},
[438622] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Engorged Crawler",
["npcID"] = 214840,
},
[116838] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugator Gormal",
["npcID"] = 55016,
},
[144583] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Farseer Wolf Rider",
["npcID"] = 71983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1623,
},
[389474] = {
["npcID"] = 190904,
},
[448859] = {
["source"] = "Enraged Drunkard",
["event"] = "SPELL_CAST_START",
["npcID"] = 218655,
},
[418145] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Thassarian",
["npcID"] = 207822,
},
[387427] = {
["source"] = "Uncontrolled Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 181775,
},
[423491] = {
["source"] = "Raelas Firewind",
["event"] = "SPELL_CAST_START",
["npcID"] = 209152,
},
[285040] = {
["encounterName"] = "Stormwall Blockade",
["encounterID"] = 2280,
["npcID"] = 146736,
},
[192706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Channeler Varisz",
["npcID"] = 100249,
},
[144584] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Farseer Wolf Rider",
["npcID"] = 71983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1623,
},
[274802] = {
["npcID"] = 136495,
},
[365870] = {
["npcID"] = 183404,
},
[139465] = {
["source"] = "Risen Ancestor",
["event"] = "SPELL_CAST_START",
["npcID"] = 69237,
},
[311551] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Dark Inquisitor Xanesh",
["encounterID"] = 2328,
["event"] = "SPELL_CAST_START",
["npcID"] = 156575,
},
[223423] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Tainted Bloodpetal",
["npcID"] = 112118,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1873,
},
[88170] = {
["npcID"] = 45924,
},
[125030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hei Feng",
["npcID"] = 63920,
},
[318771] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Psychophage",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 163947,
},
[389478] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darktooth Spirit-Caller",
["npcID"] = 195267,
},
[324914] = {
["npcID"] = 166299,
},
[229567] = {
["npcID"] = 115407,
},
[323951] = {
["npcID"] = 168448,
},
[307569] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["encounterID"] = 2333,
["event"] = "SPELL_CAST_START",
["npcID"] = 157254,
},
[448864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burly Contender",
["npcID"] = 217646,
},
[30851] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Summoner",
["npcID"] = 17395,
},
[384366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shifting Falcon",
["npcID"] = 195324,
},
[133804] = {
["source"] = "Broodmaster Noshi",
["event"] = "SPELL_CAST_START",
["npcID"] = 67264,
},
[402989] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[106841] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56732,
},
[387433] = {
["source"] = "Cathan the Determined",
["event"] = "SPELL_CAST_START",
["npcID"] = 192224,
},
[422245] = {
["encounterName"] = "Ol' Waxbeard",
["source"] = "Ol' Waxbeard",
["encounterID"] = 2829,
["event"] = "SPELL_CAST_START",
["npcID"] = 210153,
},
[182333] = {
["source"] = "Hatecoil Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 88087,
},
[385386] = {
["source"] = "Menial Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 192702,
},
[382249] = {
["source"] = "Trickclaw Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 185528,
},
[284106] = {
["encounterName"] = "Stormwall Blockade",
["encounterID"] = 2280,
["npcID"] = 146251,
},
[399721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Construct",
["npcID"] = 200598,
},
[139468] = {
["source"] = "No'ku Stormsayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 70276,
},
[171886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Modgud",
["npcID"] = 214869,
},
[274809] = {
["npcID"] = 136496,
},
[384296] = {
["source"] = "Ayanga",
["event"] = "SPELL_CAST_START",
["npcID"] = 192961,
},
[200901] = {
["encounterName"] = "Hyrja",
["source"] = "Solsten",
["encounterID"] = 1806,
["event"] = "SPELL_CAST_START",
["npcID"] = 97219,
},
[372225] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonesplitter",
["npcID"] = 189467,
},
[44503] = {
["source"] = "Wretched Husk",
["event"] = "SPELL_CAST_START",
["npcID"] = 24690,
},
[445746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkwater Tidecrusher",
["npcID"] = 220621,
},
[418153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sans-poil la Menace",
["npcID"] = 213550,
},
[277812] = {
["npcID"] = 142150,
},
[426345] = {
["source"] = "Void Touched Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 212400,
},
[455016] = {
["source"] = "Caustic Skyrazor",
["event"] = "SPELL_CAST_START",
["npcID"] = 225817,
},
[385390] = {
["source"] = "Forge-Keep Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 192699,
},
[417899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Adventurer",
["npcID"] = 205992,
},
[405868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invoq",
["npcID"] = 203627,
},
[207816] = {
["event"] = "SPELL_CAST_START",
["source"] = "Necrodark Defiler",
["npcID"] = 104888,
},
[393582] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cindershard Igniter",
["npcID"] = 198382,
},
[324909] = {
["npcID"] = 164926,
},
[389487] = {
["source"] = "Lookout Mordren",
["event"] = "SPELL_CAST_START",
["npcID"] = 193668,
},
[407917] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[405870] = {
["source"] = "Mage Slayer Phytethil",
["event"] = "SPELL_CAST_START",
["npcID"] = 226298,
},
[387440] = {
["source"] = "Ukhel Beastcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195878,
},
[389488] = {
["npcID"] = 191378,
},
[270515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azerite-Infused Elemental",
["npcID"] = 137905,
},
[393584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gladehorn Armoredon",
["npcID"] = 196555,
},
[441630] = {
["source"] = "Kaheti Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 218316,
},
[130389] = {
["source"] = "Osul Spitfire",
["event"] = "SPELL_CAST_START",
["npcID"] = 66289,
},
[313583] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Meredy Huntswell",
["npcID"] = 156943,
},
[322943] = {
["encounterName"] = "Halkias, the Sin-Stained Goliath",
["encounterID"] = 2401,
["npcID"] = 165408,
},
[277809] = {
["npcID"] = 142150,
},
[129036] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Snagtooth Tool-Grabber",
["npcID"] = 56185,
},
[418122] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Thassarian",
["npcID"] = 207822,
},
[377204] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[111723] = {
["encounterName"] = "Raigonn",
["source"] = "Raigonn",
["encounterID"] = 1419,
["event"] = "SPELL_CAST_START",
["npcID"] = 56877,
},
[128105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oracle Hiss'ir",
["npcID"] = 63998,
},
[204448] = {
["encounterName"] = "Skorpyron",
["source"] = "Skorpyron",
["encounterID"] = 1849,
["event"] = "SPELL_CAST_START",
["npcID"] = 102263,
},
[113503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tomb Guardian",
["npcID"] = 60912,
},
[411236] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[403203] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201773,
},
[448877] = {
["encounterName"] = "General Umbriss",
["source"] = "General Umbriss",
["encounterID"] = 1051,
["event"] = "SPELL_CAST_START",
["npcID"] = 39625,
},
[418161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kirkessen the Zealous",
["npcID"] = 207821,
},
[32369] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Ethereal Apprentice",
["encounterID"] = 1899,
["event"] = "SPELL_CAST_START",
["npcID"] = 18430,
},
[332156] = {
["npcID"] = 167963,
},
[191691] = {
["source"] = "Viletongue Belcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 96480,
},
[372235] = {
["source"] = "Ancient Iskaaran Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 217155,
},
[38204] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbound Corrupter",
["npcID"] = 30868,
},
[401022] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[153794] = {
["encounterName"] = "Rukhran",
["source"] = "Rukhran",
["encounterID"] = 1700,
["event"] = "SPELL_CAST_START",
["npcID"] = 76143,
},
[441626] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[379256] = {
["encounterName"] = "Azureblade",
["source"] = "Draconic Image",
["encounterID"] = 2585,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192955,
},
[389495] = {
["source"] = "Terillod the Devout",
["event"] = "SPELL_CAST_START",
["npcID"] = 193171,
},
[260793] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["encounterID"] = 2118,
["event"] = "SPELL_CAST_START",
["npcID"] = 131817,
},
[129643] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corporal Jackson Silver",
["npcID"] = 65881,
},
[395639] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Horror",
["npcID"] = 194401,
},
[389496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskanoth",
["npcID"] = 193533,
},
[368379] = {
["npcID"] = 183516,
},
[393592] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gethrel the South Wind",
["npcID"] = 193848,
},
[123499] = {
["event"] = "SPELL_CAST_START",
["source"] = "Set'thik Fanatic",
["npcID"] = 63031,
},
[389497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Sand",
["npcID"] = 187475,
},
[167120] = {
["npcID"] = 81279,
},
[278919] = {
["npcID"] = 170737,
},
[452980] = {
["source"] = "Aggregation of Horrors",
["event"] = "SPELL_CAST_START",
["npcID"] = 220999,
},
[463217] = {
["source"] = "Mistveil Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 166276,
},
[448888] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[388383] = {
["source"] = "Iskaara Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 186478,
},
[407198] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[449815] = {
["source"] = "Sandres the Relicbearer",
["event"] = "SPELL_CAST_START",
["npcID"] = 217534,
},
[439576] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[331045] = {
["npcID"] = 170860,
},
[387452] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Commander",
["npcID"] = 190776,
},
[116845] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dook Ookem",
["npcID"] = 55622,
},
[114285] = {
["source"] = "Hateful Ko Ko",
["event"] = "SPELL_CAST_START",
["npcID"] = 59430,
},
[75610] = {
["npcID"] = 39679,
},
[387453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Maxdormu",
["npcID"] = 189668,
},
[360835] = {
["npcID"] = 179006,
},
[326021] = {
["npcID"] = 172312,
},
[393597] = {
["source"] = "Kraunot",
["event"] = "SPELL_CAST_START",
["npcID"] = 186401,
},
[412027] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Infinite Keeper",
["npcID"] = 205212,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[445718] = {
["source"] = "Sparklit Rust Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 212597,
},
[320805] = {
["npcID"] = 166867,
},
[260292] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["encounterID"] = 2118,
["event"] = "SPELL_CAST_START",
["npcID"] = 131817,
},
[63802] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[384577] = {
["encounterName"] = "Gutshot",
["source"] = "Rotfang Hyena",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 194745,
},
[120429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Seedstealer",
["npcID"] = 61302,
},
[129132] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogujia Soul-Caller",
["npcID"] = 59797,
},
[452985] = {
["source"] = "Siege Marshal Tekhzok",
["event"] = "SPELL_CAST_START",
["npcID"] = 215987,
},
[14030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Officer Pomeroy",
["npcID"] = 14438,
},
[134058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Block Warden Carmine",
["npcID"] = 124024,
},
[128339] = {
["source"] = "Ethereal Sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 65414,
},
[395648] = {
["source"] = "Sogglmoggl",
["event"] = "SPELL_CAST_START",
["npcID"] = 188859,
},
[389505] = {
["source"] = "Terillod the Devout",
["event"] = "SPELL_CAST_START",
["npcID"] = 193171,
},
[399744] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Construct",
["npcID"] = 200598,
},
[162500] = {
["encounterName"] = "Rocketspark and Borka",
["encounterID"] = 1715,
["npcID"] = 77803,
},
[426240] = {
["source"] = "Austin Huxworth",
["event"] = "SPELL_CAST_START",
["npcID"] = 209065,
},
[403057] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[407936] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[407125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Raider",
["npcID"] = 207969,
},
[395650] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conjured Nightmare",
["npcID"] = 199014,
},
[335143] = {
["npcID"] = 165222,
},
[399746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warp Crystal",
["npcID"] = 201082,
},
[200913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
[409756] = {
["source"] = "Djaradin Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 202109,
},
[411730] = {
["source"] = "Molten Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 205611,
},
[395652] = {
["source"] = "Sogglmoggl",
["event"] = "SPELL_CAST_START",
["npcID"] = 188859,
},
[64059] = {
["encounterName"] = "Yogg-Saron",
["npcID"] = 33890,
["encounterID"] = 1143,
},
[107120] = {
["encounterName"] = "Commander Ri'mok",
["source"] = "Commander Ri'mok",
["encounterID"] = 1406,
["event"] = "SPELL_CAST_START",
["npcID"] = 56636,
},
[14033] = {
["source"] = "Lorekeeper Vaeldrin",
["event"] = "SPELL_CAST_START",
["npcID"] = 58975,
},
[457085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Firelord",
["npcID"] = 212088,
},
[114516] = {
["source"] = "Grummle Trail Guide",
["event"] = "SPELL_CAST_START",
["npcID"] = 59578,
},
[395653] = {
["source"] = "Leg Chewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 217743,
},
[382233] = {
["source"] = "Batak",
["event"] = "SPELL_CAST_START",
["npcID"] = 193462,
},
[424322] = {
["source"] = "Blazing Fiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 220815,
},
[105301] = {
["source"] = "Miss Fanny",
["event"] = "SPELL_CAST_START",
["npcID"] = 56192,
},
[111216] = {
["encounterName"] = "Armsmaster Harlan",
["source"] = "Armsmaster Harlan",
["npcID"] = 58632,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1421,
},
[111728] = {
["encounterName"] = "Raigonn",
["source"] = "Raigonn",
["encounterID"] = 1419,
["event"] = "SPELL_CAST_START",
["npcID"] = 56877,
},
[120431] = {
["event"] = "SPELL_CAST_START",
["source"] = "Needlebottom",
["npcID"] = 61818,
},
[393607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodclaw",
["npcID"] = 187553,
},
[316890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogre Brute",
["npcID"] = 153239,
},
[438658] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["npcID"] = 216320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2905,
},
[448897] = {
["source"] = "Mi'thk",
["event"] = "SPELL_CAST_START",
["npcID"] = 211582,
},
[319889] = {
["npcID"] = 157036,
},
[387465] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Commander",
["npcID"] = 190776,
},
[308953] = {
["encounterName"] = "Drest'agath",
["source"] = "Eye of Drest'agath",
["encounterID"] = 2343,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157612,
},
[365850] = {
["npcID"] = 181652,
},
[278935] = {
["npcID"] = 170737,
},
[210131] = {
["event"] = "SPELL_CAST_START",
["source"] = "Killclaw the Terrible",
["npcID"] = 153266,
},
[389514] = {
["source"] = "Bazual",
["event"] = "SPELL_CAST_START",
["npcID"] = 193532,
},
[319831] = {
["npcID"] = 167433,
},
[385419] = {
["source"] = "Forge-Keep Custodian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192703,
},
[195234] = {
["source"] = "Hatecoil Wavebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 97170,
},
[389515] = {
["source"] = "Broodweaver Araznae",
["event"] = "SPELL_CAST_START",
["npcID"] = 193220,
},
[105471] = {
["source"] = "Miss Fanny",
["event"] = "SPELL_CAST_START",
["npcID"] = 56192,
},
[129135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimson Lory",
["npcID"] = 60198,
},
[346513] = {
["npcID"] = 171581,
},
[382795] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Qalashi Lavamancer",
["npcID"] = 193944,
},
[424328] = {
["source"] = "Waxtail Browbeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 213000,
},
[328084] = {
["npcID"] = 168240,
},
[404756] = {
["source"] = "Sundered Flame Flamespinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 203686,
},
[316711] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Psychus",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158376,
},
[432520] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Nightfall Darkcaster",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 213893,
},
[412046] = {
["source"] = "Monstrous Magmaclaw Snapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 204214,
},
[348566] = {
["encounterName"] = "Myza's Oasis",
["encounterID"] = 2440,
["npcID"] = 180159,
},
[389518] = {
["source"] = "Koroleth",
["event"] = "SPELL_CAST_START",
["npcID"] = 188180,
},
[416139] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[360850] = {
["npcID"] = 182149,
},
[417683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fury of N'zoth",
["npcID"] = 205307,
},
[331152] = {
["npcID"] = 167164,
},
[326039] = {
["encounterName"] = "Grand Proctor Beryllia",
["encounterID"] = 2362,
["npcID"] = 162102,
},
[393615] = {
["source"] = "Huntmaster Amaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 188715,
},
[169179] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 83846,
},
[120946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Amber-Weaver",
["npcID"] = 61929,
},
[414993] = {
["source"] = "Raelas Firewind",
["event"] = "SPELL_CAST_START",
["npcID"] = 209152,
},
[455052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Supervisor Radlock",
["npcID"] = 220897,
},
[403855] = {
["source"] = "Vakan",
["event"] = "SPELL_CAST_START",
["npcID"] = 199855,
},
[340375] = {
["npcID"] = 168148,
},
[337178] = {
["npcID"] = 170838,
},
[319898] = {
["npcID"] = 168022,
},
[423523] = {
["source"] = "Anguished Dream Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 210304,
},
[446859] = {
["source"] = "Blackblood Coalescence",
["event"] = "SPELL_CAST_START",
["npcID"] = 215205,
},
[328094] = {
["npcID"] = 168627,
},
[208088] = {
["event"] = "SPELL_CAST_START",
["source"] = "Necrodark Greysworn",
["npcID"] = 104565,
},
[138467] = {
["encounterName"] = "Durumu the Forgotten",
["source"] = "Appraising Eye",
["encounterID"] = 1572,
["event"] = "SPELL_CAST_START",
["npcID"] = 67858,
},
[405905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Experiment",
["npcID"] = 203007,
},
[342425] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 168113,
},
[401810] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[196249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadlord Mendacius",
["npcID"] = 99649,
},
[227542] = {
["encounterName"] = "Moroes",
["encounterID"] = 1961,
["npcID"] = 114317,
},
[114291] = {
["source"] = "Hopper",
["event"] = "SPELL_CAST_START",
["npcID"] = 59464,
},
[360856] = {
["npcID"] = 182392,
},
[305567] = {
["encounterName"] = "Ravnyr",
["source"] = "Ravnyr",
["npcID"] = 156501,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2326,
},
[386781] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["encounterID"] = 2583,
["event"] = "SPELL_CAST_START",
["npcID"] = 186737,
},
[448910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darklost Brute",
["npcID"] = 216260,
},
[360857] = {
["npcID"] = 182149,
},
[418031] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vereesa Windrunner",
["npcID"] = 207816,
},
[405908] = {
["source"] = "Kartoros",
["event"] = "SPELL_CAST_START",
["npcID"] = 202977,
},
[228567] = {
["npcID"] = 114794,
},
[369049] = {
["encounterName"] = "Emberon",
["encounterID"] = 2558,
["npcID"] = 186107,
},
[395670] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Horror",
["npcID"] = 194401,
},
[418200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Riftmage",
["npcID"] = 208698,
},
[448912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Adept",
["npcID"] = 216263,
},
[369050] = {
["npcID"] = 191224,
},
[152801] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["encounterID"] = 1688,
["event"] = "SPELL_CAST_START",
["npcID"] = 75829,
},
[356764] = {
["npcID"] = 181408,
},
[383385] = {
["source"] = "Filth Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 185656,
},
[438677] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[387481] = {
["source"] = "Brinetooth Bruiser",
["event"] = "SPELL_CAST_START",
["npcID"] = 187285,
},
[463248] = {
["source"] = "Mistveil Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 171772,
},
[405914] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201934,
},
[385434] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[347414] = {
["encounterName"] = "So'azmi",
["encounterID"] = 2437,
["npcID"] = 175806,
},
[227545] = {
["encounterName"] = "Moroes",
["encounterID"] = 1961,
["npcID"] = 114316,
},
[113641] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["npcID"] = 59150,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1420,
},
[418202] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Riftmage",
["npcID"] = 208698,
},
[297382] = {
["encounterName"] = "King Gobbamak",
["encounterID"] = 2290,
["npcID"] = 153172,
},
[340385] = {
["npcID"] = 168147,
},
[416152] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[459155] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Lich King",
["npcID"] = 224157,
},
[395675] = {
["source"] = "Embar Firepath",
["event"] = "SPELL_CAST_START",
["npcID"] = 187767,
},
[130163] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gunship Turret",
["npcID"] = 66183,
},
[444820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Elf Riftwalker",
["npcID"] = 215475,
},
[369055] = {
["source"] = "Qalashi Crustshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 186638,
},
[418208] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Prophet",
["npcID"] = 206474,
},
[332196] = {
["npcID"] = 167963,
},
[428130] = {
["source"] = "Verlann Timbercrush",
["event"] = "SPELL_CAST_START",
["npcID"] = 207554,
},
[319910] = {
["npcID"] = 158771,
},
[157355] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Channeller",
["npcID"] = 78135,
},
[389534] = {
["source"] = "Korthrox the Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 183422,
},
[228571] = {
["npcID"] = 114794,
},
[393634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rakkesh of the Flow",
["npcID"] = 193849,
},
[395678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Brute",
["npcID"] = 184456,
},
[397726] = {
["source"] = "Shrieking Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 188100,
},
[375201] = {
["source"] = "Ruby Peafowl",
["event"] = "SPELL_CAST_START",
["npcID"] = 193609,
},
[369061] = {
["encounterName"] = "Emberon",
["encounterID"] = 2558,
["npcID"] = 184422,
},
[32417] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zan'thik Manipulator",
["npcID"] = 65274,
},
[205462] = {
["npcID"] = 166137,
},
[81530] = {
["npcID"] = 43537,
},
[88186] = {
["npcID"] = 45922,
},
[412062] = {
["source"] = "Lead Researcher Sytorian",
["event"] = "SPELL_CAST_START",
["npcID"] = 203067,
},
[455065] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arax'ne",
["npcID"] = 217465,
},
[444829] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[385442] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["event"] = "SPELL_CAST_START",
["npcID"] = 189722,
},
[453894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ren'khat",
["npcID"] = 222152,
},
[299437] = {
["npcID"] = 151301,
},
[129496] = {
["source"] = "Lupello",
["event"] = "SPELL_CAST_START",
["npcID"] = 56357,
},
[434589] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overfiend",
["npcID"] = 217429,
},
[165093] = {
["source"] = "Verdant Mandragora",
["event"] = "SPELL_CAST_START",
["npcID"] = 81983,
},
[299438] = {
["npcID"] = 150249,
},
[118903] = {
["source"] = "Glintrok Hexxer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61216,
},
[278961] = {
["source"] = "Diseased Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 133870,
},
[289200] = {
["npcID"] = 148488,
},
[405922] = {
["source"] = "Kartoros",
["event"] = "SPELL_CAST_START",
["npcID"] = 202977,
},
[424352] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["npcID"] = 209333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[114807] = {
["encounterName"] = "Brother Korloff",
["source"] = "Brother Korloff",
["npcID"] = 59223,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1424,
},
[366297] = {
["npcID"] = 184911,
},
[53824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Undertide Deepfisher",
["npcID"] = 226961,
},
[116343] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nahassa",
["npcID"] = 60203,
},
[410019] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2693,
},
[395685] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Brute",
["npcID"] = 184456,
},
[405924] = {
["source"] = "Krono Sandtongue",
["event"] = "SPELL_CAST_START",
["npcID"] = 205622,
},
[360875] = {
["npcID"] = 180722,
},
[139498] = {
["source"] = "Corpse Spider",
["event"] = "SPELL_CAST_START",
["npcID"] = 68248,
},
[419790] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Moon",
["npcID"] = 210686,
},
[387497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Destroyer",
["npcID"] = 187244,
},
[14034] = {
["source"] = "Stonevault Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 4853,
},
[120951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cho Cho the Wicked",
["npcID"] = 60090,
},
[321968] = {
["npcID"] = 164929,
},
[81020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackscale Raider",
["npcID"] = 45984,
},
[121182] = {
["encounterName"] = "Gekkan",
["source"] = "Harthak Flameseeker",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61392,
},
[360876] = {
["npcID"] = 185755,
},
[115320] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Infiltrator",
["npcID"] = 56303,
},
[409477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadeisethal",
["npcID"] = 203411,
},
[201959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberhusk Dominator",
["npcID"] = 113536,
},
[263502] = {
["source"] = "Animated Offering",
["event"] = "SPELL_CAST_START",
["npcID"] = 210405,
},
[352347] = {
["encounterName"] = "Hylbrande",
["encounterID"] = 2426,
["npcID"] = 176551,
},
[63038] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Guardian of Yogg-Saron",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33136,
},
[451843] = {
["source"] = "Stormguard Gorren",
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[344496] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 168113,
},
[338353] = {
["npcID"] = 173016,
},
[405929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Crecheguard",
["npcID"] = 203368,
},
[261773] = {
["npcID"] = 136596,
},
[459171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Val'kyr Shadowguard",
["npcID"] = 227940,
},
[227985] = {
["encounterName"] = "Opera Hall",
["encounterID"] = 1957,
["npcID"] = 114328,
},
[381357] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hunting Ottuk",
["npcID"] = 190267,
},
[118905] = {
["npcID"] = 61245,
},
[196838] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["encounterID"] = 1807,
["event"] = "SPELL_CAST_START",
["npcID"] = 99868,
},
[395692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Brute",
["npcID"] = 184456,
},
[157931] = {
["source"] = "Sargerei Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 76263,
},
[198888] = {
["source"] = "Storm Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 97068,
},
[328117] = {
["encounterName"] = "Sire Denathrius",
["encounterID"] = 2407,
["npcID"] = 167406,
},
[395695] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sleeping Whelp",
["npcID"] = 196073,
},
[340404] = {
["npcID"] = 168147,
},
[375216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nergazurai",
["npcID"] = 195895,
},
[369073] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Dreamcrusher",
["npcID"] = 211057,
},
[338357] = {
["npcID"] = 172981,
},
[409261] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[317880] = {
["npcID"] = 174843,
},
[396552] = {
["source"] = "Magmas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199027,
},
[210150] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["npcID"] = 91005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1792,
},
[348597] = {
["npcID"] = 167744,
},
[32674] = {
["source"] = "Recalled Reanimated Crusader",
["event"] = "SPELL_CAST_START",
["npcID"] = 226096,
},
[418025] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hand of the Lich King",
["npcID"] = 207386,
},
[433411] = {
["source"] = "Nerubian Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 208242,
},
[463272] = {
["source"] = "Caustic Skyrazor",
["event"] = "SPELL_CAST_START",
["npcID"] = 229918,
},
[285118] = {
["encounterName"] = "Stormwall Blockade",
["encounterID"] = 2280,
["npcID"] = 146256,
},
[118906] = {
["isChanneled"] = true,
["source"] = "Reclaimer Zuan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61305,
},
[152814] = {
["source"] = "Shadowmoon Bone-Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 75713,
},
[142576] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Ka'roz the Locust",
["npcID"] = 71154,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[138480] = {
["encounterName"] = "Dark Animus",
["source"] = "Large Anima Golem",
["encounterID"] = 1576,
["event"] = "SPELL_CAST_START",
["npcID"] = 69700,
},
[278976] = {
["npcID"] = 142802,
},
[362934] = {
["npcID"] = 182326,
},
[334266] = {
["encounterName"] = "Hungering Destroyer",
["encounterID"] = 2383,
["npcID"] = 164261,
},
[120442] = {
["isChanneled"] = true,
["source"] = "Shek'zeer Bladesworn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62563,
},
[433410] = {
["source"] = "Chittering Fearmonger",
["event"] = "SPELL_CAST_START",
["npcID"] = 216583,
},
[387508] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Destroyer",
["npcID"] = 187244,
},
[178412] = {
["npcID"] = 83761,
},
[418226] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vorus'arak",
["npcID"] = 205862,
},
[418225] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vorus'arak",
["npcID"] = 205862,
},
[403891] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[347404] = {
["npcID"] = 181782,
},
[366288] = {
["npcID"] = 184911,
},
[385462] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rellen, The Learned",
["npcID"] = 190949,
},
[199915] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Faceless Voidcaster",
["npcID"] = 99651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[63147] = {
["encounterName"] = "Yogg-Saron",
["npcID"] = 33134,
["encounterID"] = 1143,
},
[46036] = {
["source"] = "Sunblade Magister",
["event"] = "SPELL_CAST_START",
["npcID"] = 24685,
},
[157652] = {
["source"] = "Auchenai Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 77694,
},
[432565] = {
["source"] = "Manifested Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 211341,
},
[364986] = {
["npcID"] = 181360,
},
[448944] = {
["source"] = "Kobold Snuffercrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 218662,
},
[323825] = {
["encounterName"] = "Mordretha",
["encounterID"] = 2404,
["npcID"] = 165994,
},
[395214] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver A'tir",
["npcID"] = 186859,
},
[389560] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obsidian Tyrant",
["npcID"] = 202483,
},
[309698] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Basher Tentacle",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158367,
},
[229608] = {
["npcID"] = 115486,
},
[389564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slavering Snapdragon",
["npcID"] = 195668,
},
[299460] = {
["npcID"] = 150250,
},
[49987] = {
["source"] = "Defendo-tank 66D",
["event"] = "SPELL_CAST_START",
["npcID"] = 25758,
},
[359688] = {
["npcID"] = 181626,
},
[117372] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muck Sifter",
["npcID"] = 65790,
},
[113999] = {
["encounterName"] = "Rattlegore",
["source"] = "Rattlegore",
["npcID"] = 59153,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1428,
},
[391610] = {
["source"] = "Gusting Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190401,
},
[319941] = {
["encounterName"] = "Echelon",
["encounterID"] = 2380,
["npcID"] = 164185,
},
[405016] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201774,
},
[128123] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oracle Hiss'ir",
["npcID"] = 63998,
},
[191726] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Lightning Elemental",
["npcID"] = 97022,
},
[377277] = {
["npcID"] = 192221,
},
[395707] = {
["source"] = "Raszageth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199031,
},
[430519] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Doomshadow",
["npcID"] = 208029,
},
[159382] = {
["encounterName"] = "Rukhran",
["source"] = "Rukhran",
["encounterID"] = 1700,
["event"] = "SPELL_CAST_START",
["npcID"] = 76143,
},
[418233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vorus'arak",
["npcID"] = 205862,
},
[313798] = {
["source"] = "Abyssal Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 161173,
},
[124028] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Gatewatcher",
["npcID"] = 63564,
},
[391613] = {
["source"] = "Subterranean Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190404,
},
[396877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Air Elemental",
["npcID"] = 196155,
},
[125564] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Maki Waterblade",
["npcID"] = 64280,
},
[373184] = {
["source"] = "Dying Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 189769,
},
[331044] = {
["npcID"] = 170860,
},
[229611] = {
["npcID"] = 115486,
},
[355979] = {
["npcID"] = 181044,
},
[389567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slavering Snapdragon",
["npcID"] = 195668,
},
[120445] = {
["isChanneled"] = true,
["source"] = "Shek'zeer Bladesworn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62563,
},
[459191] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Lich King",
["npcID"] = 224157,
},
[412093] = {
["source"] = "Contaminated Titan Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 203834,
},
[400641] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[227981] = {
["npcID"] = 114541,
},
[418237] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet Skitra",
["npcID"] = 208491,
},
[375237] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Commander",
["npcID"] = 190776,
},
[147704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Berserker",
["npcID"] = 72895,
},
[175763] = {
["source"] = "Night-Twisted Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 85241,
},
[75907] = {
["encounterName"] = "Lady Naz'jar",
["npcID"] = 40633,
["encounterID"] = 1045,
},
[144631] = {
["source"] = "Xuen",
["event"] = "SPELL_CAST_START",
["npcID"] = 71953,
},
[342474] = {
["npcID"] = 165759,
},
[360213] = {
["npcID"] = 178750,
},
[147703] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Berserker",
["npcID"] = 72895,
},
[427260] = {
["source"] = "Cursed Rooktender",
["event"] = "SPELL_CAST_START",
["npcID"] = 207199,
},
[332234] = {
["npcID"] = 167967,
},
[334282] = {
["npcID"] = 154330,
},
[80003] = {
["source"] = "Captain Ripflesh",
["event"] = "SPELL_CAST_START",
["npcID"] = 60767,
},
[277774] = {
["npcID"] = 142149,
},
[389572] = {
["source"] = "Time-Lost Devilsaur",
["event"] = "SPELL_CAST_START",
["npcID"] = 187262,
},
[146680] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crawler Mine",
["npcID"] = 72986,
},
[418241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet Skitra",
["npcID"] = 208491,
},
[373194] = {
["source"] = "Windyfin Windbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187432,
},
[124030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Gatewatcher",
["npcID"] = 63564,
},
[457149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shipwright Isaebela",
["npcID"] = 219801,
},
[321999] = {
["npcID"] = 164705,
},
[121165] = {
["encounterName"] = "Gekkan",
["source"] = "Harthak Flameseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 61392,
},
[324046] = {
["encounterName"] = "Oryphrion",
["encounterID"] = 2358,
["npcID"] = 162060,
},
[440768] = {
["source"] = "Black Blood Container",
["event"] = "SPELL_CAST_START",
["npcID"] = 220002,
},
[227568] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114261,
["encounterID"] = 1957,
},
[289235] = {
["npcID"] = 148607,
},
[299474] = {
["npcID"] = 150154,
},
[191732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Lightning Elemental",
["npcID"] = 97022,
},
[451008] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tephratennae",
["npcID"] = 221126,
},
[387528] = {
["source"] = "Mountain Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 186329,
},
[455104] = {
["source"] = "Abductor Arzda",
["event"] = "SPELL_CAST_START",
["npcID"] = 222836,
},
[317905] = {
["npcID"] = 165323,
},
[455932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Old Grim",
["npcID"] = 213403,
},
[140539] = {
["source"] = "Memory of a Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 200527,
},
[364447] = {
["encounterName"] = "Vigilant Guardian",
["encounterID"] = 2512,
["npcID"] = 184522,
},
[378112] = {
["event"] = "SPELL_CAST_START",
["source"] = "Encroaching Hornswog",
["npcID"] = 189314,
},
[360909] = {
["npcID"] = 182150,
},
[144635] = {
["source"] = "Xuen",
["event"] = "SPELL_CAST_START",
["npcID"] = 71953,
},
[413387] = {
["source"] = "Executor of the Caliph",
["event"] = "SPELL_CAST_START",
["npcID"] = 45928,
},
[198496] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["encounterID"] = 1791,
["event"] = "SPELL_CAST_START",
["npcID"] = 91004,
},
[328146] = {
["encounterName"] = "Blightbone",
["npcID"] = 164702,
["encounterID"] = 2387,
},
[198641] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Kur'talos Ravencrest",
["npcID"] = 98965,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[174328] = {
["source"] = "Soulbinder Nyami",
["event"] = "SPELL_CAST_START",
["npcID"] = 76177,
},
[167966] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83893,
},
[319956] = {
["npcID"] = 167055,
},
[294884] = {
["npcID"] = 152009,
},
[405962] = {
["source"] = "Bronogg the Bully",
["event"] = "SPELL_CAST_START",
["npcID"] = 203386,
},
[125568] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maki Waterblade",
["npcID"] = 64280,
},
[319957] = {
["npcID"] = 161537,
},
[436679] = {
["source"] = "Scarab Captain Vul'akan",
["event"] = "SPELL_CAST_START",
["npcID"] = 218306,
},
[365008] = {
["encounterName"] = "Anduin Wrynn",
["encounterID"] = 2546,
["npcID"] = 183033,
},
[191735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felsworn Myrmidon",
["npcID"] = 98954,
},
[125056] = {
["npcID"] = 165189,
},
[46406] = {
["npcID"] = 25756,
},
[365009] = {
["npcID"] = 184409,
},
[388349] = {
["source"] = "Deepwater Eel",
["event"] = "SPELL_CAST_START",
["npcID"] = 215680,
},
[389583] = {
["source"] = "Arcane Manipulator",
["event"] = "SPELL_CAST_START",
["npcID"] = 188172,
},
[7978] = {
["npcID"] = 46772,
},
[103555] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Widow Greenpaw",
["npcID"] = 55368,
},
[375249] = {
["source"] = "Jadethroat Mallard",
["event"] = "SPELL_CAST_START",
["npcID"] = 190708,
},
[415436] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Moment",
["npcID"] = 206064,
},
[406778] = {
["source"] = "Wild Blaze Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 202279,
},
[129502] = {
["source"] = "Lupello",
["event"] = "SPELL_CAST_START",
["npcID"] = 56357,
},
[410873] = {
["source"] = "Gust Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 45477,
},
[369107] = {
["npcID"] = 185272,
},
[173307] = {
["npcID"] = 83390,
},
[198904] = {
["npcID"] = 99358,
},
[375251] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[423531] = {
["source"] = "Anguished Dream Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 210304,
},
[424087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Devastator",
["npcID"] = 207089,
},
[118914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Guard",
["npcID"] = 61252,
},
[391634] = {
["source"] = "Glacial Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190403,
},
[459210] = {
["source"] = "Void Bound Despoiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 212765,
},
[443636] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Elf Riftwalker",
["npcID"] = 215475,
},
[10733] = {
["source"] = "Remembered Mechano-Tank",
["event"] = "SPELL_CAST_START",
["npcID"] = 213785,
},
[59395] = {
["source"] = "Memory of a Torturer",
["event"] = "SPELL_CAST_START",
["npcID"] = 202555,
},
[369110] = {
["encounterName"] = "Emberon",
["encounterID"] = 2558,
["npcID"] = 184422,
},
[153234] = {
["encounterName"] = "Azzakel, Vanguard of the Legion",
["source"] = "Azzakel",
["encounterID"] = 1678,
["event"] = "SPELL_CAST_START",
["npcID"] = 75927,
},
[385068] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Colossal Stormfiend",
["npcID"] = 197145,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[401867] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Obsidian Guard",
["npcID"] = 200836,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[341742] = {
["npcID"] = 174336,
},
[107140] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Azure Serpent",
["encounterID"] = 1303,
["event"] = "SPELL_CAST_START",
["npcID"] = 56754,
},
[409041] = {
["source"] = "Failed Prototype",
["event"] = "SPELL_CAST_START",
["npcID"] = 203927,
},
[124546] = {
["source"] = "Apothecary Cheng",
["event"] = "SPELL_CAST_START",
["npcID"] = 63812,
},
[418258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 208500,
},
[420306] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Chainmaster",
["npcID"] = 211058,
},
[227575] = {
["encounterName"] = "Moroes",
["encounterID"] = 1961,
["npcID"] = 114316,
},
[199726] = {
["source"] = "King Ranulf",
["event"] = "SPELL_CAST_START",
["npcID"] = 97083,
},
[393686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turboris",
["npcID"] = 187886,
},
[400631] = {
["source"] = "Rampant Tide",
["event"] = "SPELL_CAST_START",
["npcID"] = 201463,
},
[50092] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shek'zeer Needler",
["npcID"] = 64714,
},
[144642] = {
["source"] = "Xuen",
["event"] = "SPELL_CAST_START",
["npcID"] = 71953,
},
[279013] = {
["encounterName"] = "Mythrax",
["encounterID"] = 2135,
["npcID"] = 134546,
},
[412117] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200912,
},
[397783] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["encounterID"] = 1418,
["event"] = "SPELL_CAST_START",
["npcID"] = 56448,
},
[394487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Death's Shadow",
["npcID"] = 190985,
},
[41032] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[173311] = {
["npcID"] = 83390,
},
[418262] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Treasure Wraith",
["npcID"] = 208728,
},
[10452] = {
["source"] = "Earthen Sculptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 7012,
},
[451026] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["encounterID"] = 2837,
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[430549] = {
["isChanneled"] = true,
["source"] = "Foul Offering",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214994,
},
[389594] = {
["source"] = "Horace \"Scalding\" Stern",
["event"] = "SPELL_CAST_START",
["npcID"] = 186430,
},
[412081] = {
["source"] = "Colossal Draconic Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 203826,
},
[409975] = {
["source"] = "Djaradin Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 202109,
},
[407504] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[272609] = {
["source"] = "Faceless Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 138281,
},
[383452] = {
["source"] = "Imbu Bakar",
["event"] = "SPELL_CAST_START",
["npcID"] = 190745,
},
[371984] = {
["source"] = "Flashfrost Chillweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 188067,
},
[260879] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[165122] = {
["encounterName"] = "Grimrail Enforcers",
["encounterID"] = 1748,
["npcID"] = 80816,
},
[390389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taranthiza",
["npcID"] = 196970,
},
[418265] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uther",
["npcID"] = 207818,
},
[362976] = {
["npcID"] = 185944,
},
[355577] = {
["npcID"] = 178171,
},
[344546] = {
["npcID"] = 162880,
},
[196508] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Deranged Mindflayer",
["npcID"] = 99657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[201983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberhusk Dominator",
["npcID"] = 113537,
},
[169613] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 83846,
},
[228603] = {
["npcID"] = 114804,
},
[365026] = {
["npcID"] = 182318,
},
[172771] = {
["npcID"] = 86809,
},
[381408] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shiverweb Crawler",
["npcID"] = 192591,
},
[408029] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Loszkeleth",
["npcID"] = 201790,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[88201] = {
["npcID"] = 45919,
},
[436698] = {
["source"] = "Scarab Captain Vul'akan",
["event"] = "SPELL_CAST_START",
["npcID"] = 218306,
},
[457183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowspinner Azarak",
["npcID"] = 222612,
},
[299502] = {
["npcID"] = 155094,
},
[418269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 208500,
},
[364495] = {
["npcID"] = 181625,
},
[378886] = {
["source"] = "Turi Flickerflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 199740,
},
[224510] = {
["source"] = "Duskwatch Battle-Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 112671,
},
[129669] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glade Singer",
["npcID"] = 58766,
},
[128134] = {
["source"] = "Ilikkax",
["event"] = "SPELL_CAST_START",
["npcID"] = 62833,
},
[46153] = {
["encounterName"] = "Selin Fireheart",
["source"] = "Selin Fireheart",
["encounterID"] = 1897,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24723,
},
[424414] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 207946,
},
[328170] = {
["npcID"] = 162057,
},
[300687] = {
["npcID"] = 150168,
},
[438749] = {
["encounterName"] = "The Silken Court",
["source"] = "Shattershell Scarab",
["encounterID"] = 2921,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218884,
},
[326123] = {
["npcID"] = 159665,
},
[290045] = {
["npcID"] = 147495,
},
[412129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lerai, Timesworn Maiden",
["npcID"] = 205152,
},
[156301] = {
["npcID"] = 80935,
},
[228606] = {
["npcID"] = 114803,
},
[164102] = {
["npcID"] = 81235,
},
[359668] = {
["npcID"] = 181484,
},
[260349] = {
["source"] = "Ten'gor",
["event"] = "SPELL_CAST_START",
["npcID"] = 130713,
},
[154442] = {
["encounterName"] = "Ner'zhul",
["source"] = "Ner'zhul",
["encounterID"] = 1682,
["event"] = "SPELL_CAST_START",
["npcID"] = 76407,
},
[459229] = {
["source"] = "Kaz'vik",
["event"] = "SPELL_CAST_START",
["npcID"] = 219751,
},
[419052] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Future Self",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 208959,
},
[365033] = {
["encounterName"] = "The Jailer",
["npcID"] = 180990,
["encounterID"] = 2537,
},
[457959] = {
["source"] = "Geothermus",
["event"] = "SPELL_CAST_START",
["npcID"] = 217416,
},
[369129] = {
["source"] = "Modak Flamespit",
["event"] = "SPELL_CAST_START",
["npcID"] = 186509,
},
[387559] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[111752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scholomance Neophyte",
["npcID"] = 58823,
},
[424419] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 207946,
},
[411837] = {
["source"] = "Fragment of Fire",
["event"] = "SPELL_CAST_START",
["npcID"] = 205971,
},
[346605] = {
["npcID"] = 182296,
},
[272888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Destroyer",
["npcID"] = 137517,
},
[424420] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Taener Duelmal",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211289,
},
[224515] = {
["source"] = "Nobleborn Warpcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 112676,
},
[403943] = {
["source"] = "Veltrax",
["event"] = "SPELL_CAST_START",
["npcID"] = 200904,
},
[332272] = {
["npcID"] = 170039,
},
[424421] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Taener Duelmal",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211289,
},
[328177] = {
["npcID"] = 168572,
},
[420326] = {
["source"] = "Flamebound Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 206900,
},
[397801] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["encounterID"] = 1418,
["event"] = "SPELL_CAST_START",
["npcID"] = 56448,
},
[366309] = {
["npcID"] = 180917,
},
[397134] = {
["encounterName"] = "The Primal Council",
["source"] = "Opalfang",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187772,
},
[412136] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valow, Timesworn Keeper",
["npcID"] = 201222,
},
[414184] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[424423] = {
["source"] = "Sergeant Shaynemail",
["event"] = "SPELL_CAST_START",
["npcID"] = 211291,
},
[451044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amber Honeyslime",
["npcID"] = 222846,
},
[387564] = {
["source"] = "Conjured Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 196102,
},
[162058] = {
["encounterName"] = "Skylord Tovra",
["encounterID"] = 1736,
["npcID"] = 80005,
},
[440806] = {
["encounterName"] = "Nerl'athekk the Skulking",
["source"] = "Nerl'athekk the Skulking",
["encounterID"] = 2946,
["event"] = "SPELL_CAST_START",
["npcID"] = 219676,
},
[385517] = {
["source"] = "Rotbow Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 187021,
},
[395756] = {
["source"] = "Qalashi Flamemuzzler",
["event"] = "SPELL_CAST_START",
["npcID"] = 194222,
},
[340467] = {
["npcID"] = 173756,
},
[334324] = {
["npcID"] = 171376,
},
[161035] = {
["source"] = "Frenzied Animus",
["event"] = "SPELL_CAST_START",
["npcID"] = 96579,
},
[136462] = {
["source"] = "Horde Squallshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 71367,
},
[264603] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[317943] = {
["npcID"] = 163457,
},
[192135] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Hatecoil Shellbreaker",
["npcID"] = 97264,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[274213] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["encounterID"] = 2112,
["event"] = "SPELL_CAST_START",
["npcID"] = 131383,
},
[114571] = {
["encounterName"] = "Lorewalker Stonestep",
["source"] = "Strife",
["encounterID"] = 1417,
["event"] = "SPELL_CAST_START",
["npcID"] = 59051,
},
[334326] = {
["npcID"] = 171376,
},
[413147] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[356133] = {
["npcID"] = 180015,
},
[178442] = {
["npcID"] = 89144,
},
[319995] = {
["npcID"] = 158771,
},
[128137] = {
["source"] = "Ilikkax",
["event"] = "SPELL_CAST_START",
["npcID"] = 62833,
},
[214278] = {
["encounterName"] = "Grand Magistrix Elisande",
["source"] = "Elisande",
["encounterID"] = 1872,
["event"] = "SPELL_CAST_START",
["npcID"] = 106643,
},
[365044] = {
["npcID"] = 182318,
},
[276991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogre Overseer",
["npcID"] = 156676,
},
[319994] = {
["npcID"] = 168216,
},
[44202] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Phoenix",
["encounterID"] = 1894,
["event"] = "SPELL_CAST_START",
["npcID"] = 24674,
},
[200969] = {
["source"] = "King Tor",
["event"] = "SPELL_CAST_START",
["npcID"] = 97084,
},
[334329] = {
["npcID"] = 171376,
},
[459242] = {
["source"] = "Nix'k the Wicked",
["event"] = "SPELL_CAST_START",
["npcID"] = 219749,
},
[387571] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[414192] = {
["source"] = "Partially Teleported Murloc",
["event"] = "SPELL_CAST_START",
["npcID"] = 226666,
},
[424431] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211290,
},
[80015] = {
["source"] = "Blackmane Tracker",
["event"] = "SPELL_CAST_START",
["npcID"] = 60434,
},
[395763] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Magmacrafter",
["npcID"] = 187867,
},
[121994] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber-Shaper Un'sok",
["npcID"] = 62511,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1499,
},
[407796] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[319997] = {
["npcID"] = 164510,
},
[188053] = {
["source"] = "Fel Hellweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 94806,
},
[381430] = {
["npcID"] = 190388,
},
[369901] = {
["source"] = "Smoldering Feather",
["event"] = "SPELL_CAST_START",
["npcID"] = 186965,
},
[377335] = {
["source"] = "Kob'rok",
["event"] = "SPELL_CAST_START",
["npcID"] = 203462,
},
[320008] = {
["encounterName"] = "The Manastorms",
["npcID"] = 164556,
["encounterID"] = 2394,
},
[431333] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Nightfall Darkcaster",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 213893,
},
[331634] = {
["encounterName"] = "The Council of Blood",
["encounterID"] = 2412,
["npcID"] = 166970,
},
[459246] = {
["source"] = "The Broken Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 214368,
},
[411809] = {
["source"] = "Pahi'rys",
["event"] = "SPELL_CAST_START",
["npcID"] = 205540,
},
[323640] = {
["npcID"] = 165473,
},
[407097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthrender Ku'siva",
["npcID"] = 199840,
},
[418292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Treasure Wraith",
["npcID"] = 208728,
},
[157331] = {
["npcID"] = 77942,
},
[227592] = {
["encounterName"] = "Shade of Medivh",
["encounterID"] = 1965,
["npcID"] = 114350,
},
[372441] = {
["source"] = "Hyenamaster Durgun",
["event"] = "SPELL_CAST_START",
["npcID"] = 186515,
},
[377338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqualing",
["npcID"] = 190406,
},
[418295] = {
["event"] = "SPELL_CAST_START",
["source"] = "Treasure Wraith",
["npcID"] = 208728,
},
[455153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abyssal Devourer",
["npcID"] = 216031,
},
[116364] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["npcID"] = 60009,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1390,
},
[284781] = {
["encounterName"] = "King Rastakhan",
["encounterID"] = 2272,
["npcID"] = 146326,
},
[247049] = {
["isChanneled"] = true,
["source"] = "Oenia Skyhorn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 104849,
},
[299525] = {
["npcID"] = 150250,
},
[326146] = {
["npcID"] = 157558,
},
[385531] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["event"] = "SPELL_CAST_START",
["npcID"] = 189722,
},
[451064] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amber Honeyslime",
["npcID"] = 222846,
},
[416996] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[401248] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[377341] = {
["source"] = "Aqua Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 190407,
},
[338434] = {
["npcID"] = 162875,
},
[340482] = {
["npcID"] = 162711,
},
[409921] = {
["source"] = "Djaradin Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 202109,
},
[360960] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["encounterID"] = 2540,
["npcID"] = 181224,
},
[197251] = {
["encounterName"] = "Cordana Felsong",
["source"] = "Cordana Felsong",
["encounterID"] = 1818,
["event"] = "SPELL_CAST_START",
["npcID"] = 95888,
},
[381438] = {
["source"] = "Serene Fallingwater",
["event"] = "SPELL_CAST_START",
["npcID"] = 196467,
},
[343276] = {
["npcID"] = 173178,
},
[37965] = {
["source"] = "Underbog Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 17871,
},
[453110] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Puppetmaster?",
["npcID"] = 220507,
},
[374544] = {
["source"] = "Fetid Rotsinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 186226,
},
[375296] = {
["npcID"] = 187131,
},
[377344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Territorial Eagle",
["npcID"] = 192329,
},
[420347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaldorei Archdruid",
["npcID"] = 211066,
},
[324103] = {
["npcID"] = 162133,
},
[257288] = {
["encounterName"] = "Chopper Redhook",
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Cleaver",
["npcID"] = 129879,
},
[385536] = {
["isChanneled"] = true,
["source"] = "Primalist Flamedancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190206,
},
[294491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timeling",
["npcID"] = 186479,
},
[382791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavamancer",
["npcID"] = 193944,
},
[16006] = {
["encounterName"] = "Revelosh",
["source"] = "Revelosh",
["encounterID"] = 547,
["event"] = "SPELL_CAST_START",
["npcID"] = 6910,
},
[403671] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[387585] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[416256] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron's Creation",
["npcID"] = 204918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[367108] = {
["npcID"] = 184413,
},
[125069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amber-Ridden Mushan",
["npcID"] = 63568,
},
[337131] = {
["npcID"] = 162872,
},
[381444] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186122,
},
[317963] = {
["npcID"] = 163458,
},
[369157] = {
["source"] = "Primal Tarasek",
["event"] = "SPELL_CAST_START",
["npcID"] = 188372,
},
[414945] = {
["source"] = "Fungal Rotcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 207459,
},
[307725] = {
["encounterName"] = "Prophet Skitra",
["source"] = "Prophet Skitra",
["encounterID"] = 2334,
["event"] = "SPELL_CAST_START",
["npcID"] = 157238,
},
[432638] = {
["source"] = "Void Ascendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 212793,
},
[393731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Charfang",
["npcID"] = 187751,
},
[136473] = {
["source"] = "Admiral Hodgson",
["event"] = "SPELL_CAST_START",
["npcID"] = 71327,
},
[449021] = {
["source"] = "Tij'allet",
["event"] = "SPELL_CAST_START",
["npcID"] = 215600,
},
[301583] = {
["npcID"] = 155465,
},
[444925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drifting Sporebloom",
["npcID"] = 214961,
},
[173180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mire Basilisk",
["npcID"] = 85694,
},
[195284] = {
["source"] = "Restless Tides",
["event"] = "SPELL_CAST_START",
["npcID"] = 97173,
},
[411862] = {
["source"] = "Animation Fluid",
["event"] = "SPELL_CAST_START",
["npcID"] = 203939,
},
[410848] = {
["source"] = "Neltharion",
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[312674] = {
["npcID"] = 161388,
},
[227965] = {
["npcID"] = 114544,
},
[328206] = {
["encounterName"] = "Echelon",
["encounterID"] = 2380,
["npcID"] = 164185,
},
[196883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Etheldrin Ravencrest",
["npcID"] = 98521,
},
[407775] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200913,
},
[198931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Mystic",
["npcID"] = 207026,
},
[383496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strunraan",
["npcID"] = 193534,
},
[391081] = {
["source"] = "Tserasor the Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190598,
},
[136475] = {
["npcID"] = 23682,
},
[365067] = {
["npcID"] = 182318,
},
[168929] = {
["encounterName"] = "Skulloc, Son of Gruul",
["encounterID"] = 1754,
["npcID"] = 83612,
},
[403978] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["encounterID"] = 2689,
["event"] = "SPELL_CAST_START",
["npcID"] = 202375,
},
[395784] = {
["source"] = "Raszageth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199031,
},
[106823] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56732,
},
[408798] = {
["isChanneled"] = true,
["source"] = "Spitfire Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204548,
},
[372719] = {
["encounterName"] = "Sentinel Talondras",
["encounterID"] = 2557,
["npcID"] = 184124,
},
[363021] = {
["encounterName"] = "Anduin Wrynn",
["encounterID"] = 2546,
["npcID"] = 183463,
},
[195595] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 99300,
},
[342544] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 168113,
},
[320019] = {
["npcID"] = 167022,
},
[379406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavabearer",
["npcID"] = 189472,
},
[257656] = {
["source"] = "Unfinished Stone Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 201586,
},
[416264] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[423131] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrathion",
["npcID"] = 210077,
},
[387596] = {
["source"] = "Risen Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 195877,
},
[124048] = {
["source"] = "Osul Sharphorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 60647,
},
[407285] = {
["source"] = "Djaradin Skullcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 202258,
},
[23337] = {
["source"] = "Gadgetzan Bruiser",
["event"] = "SPELL_CAST_START",
["npcID"] = 9460,
},
[363024] = {
["encounterName"] = "Anduin Wrynn",
["encounterID"] = 2546,
["npcID"] = 183671,
},
[198934] = {
["source"] = "Valarjar Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 95834,
},
[434697] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[37967] = {
["source"] = "Underbog Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 17871,
},
[76325] = {
["npcID"] = 39708,
},
[315927] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[449031] = {
["source"] = "Nerubian Slashjaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 218654,
},
[385551] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["event"] = "SPELL_CAST_START",
["npcID"] = 189722,
},
[422414] = {
["source"] = "Shuffling Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 208456,
},
[111762] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scholomance Neophyte",
["npcID"] = 58823,
},
[292910] = {
["npcID"] = 181061,
},
[308455] = {
["encounterName"] = "Tunk",
["source"] = "Tunk",
["npcID"] = 157300,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2325,
},
[142623] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hekima the Wise",
["npcID"] = 70544,
},
[115013] = {
["source"] = "Borokhula the Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 58739,
},
[408080] = {
["source"] = "Kob'rok",
["event"] = "SPELL_CAST_START",
["npcID"] = 203462,
},
[385553] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Stormseeker Acolyte",
["npcID"] = 194990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[453129] = {
["source"] = "Caustic Bomber",
["event"] = "SPELL_CAST_START",
["npcID"] = 224970,
},
[300525] = {
["npcID"] = 150142,
},
[449034] = {
["source"] = "Nerubian Slashjaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 218654,
},
[418318] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless One",
["npcID"] = 206463,
},
[338456] = {
["npcID"] = 172981,
},
[332313] = {
["encounterName"] = "Domina Venomblade",
["npcID"] = 164266,
["encounterID"] = 2385,
},
[424462] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Taener Duelmal",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211289,
},
[388316] = {
["source"] = "Oppressive Artificer",
["event"] = "SPELL_CAST_START",
["npcID"] = 184444,
},
[329808] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 168113,
},
[315932] = {
["source"] = "Iron-Willed Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 162718,
},
[326171] = {
["encounterName"] = "Mueh'zala",
["npcID"] = 166608,
["encounterID"] = 2396,
},
[320028] = {
["npcID"] = 161105,
},
[412177] = {
["source"] = "Carcaxas",
["event"] = "SPELL_CAST_START",
["npcID"] = 202836,
},
[406760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Master",
["npcID"] = 200827,
},
[221464] = {
["source"] = "Chaos Mage Beleron",
["event"] = "SPELL_CAST_START",
["npcID"] = 111225,
},
[332318] = {
["encounterName"] = "Sludgefist",
["encounterID"] = 2399,
["npcID"] = 164407,
},
[321399] = {
["npcID"] = 163084,
},
[428563] = {
["source"] = "Kobold Flametender",
["event"] = "SPELL_CAST_START",
["npcID"] = 213913,
},
[449038] = {
["encounterName"] = "Overseer Kaskel",
["source"] = "Overseer Kaskel",
["encounterID"] = 2990,
["event"] = "SPELL_CAST_START",
["npcID"] = 220437,
},
[385558] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[346654] = {
["encounterName"] = "The Council of Blood",
["encounterID"] = 2412,
["npcID"] = 166969,
},
[178461] = {
["npcID"] = 86144,
},
[426524] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["npcID"] = 208459,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[393750] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taresh",
["npcID"] = 188711,
},
[444944] = {
["source"] = "Light-Bathed Eagle",
["event"] = "SPELL_CAST_START",
["npcID"] = 223191,
},
[438801] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[382593] = {
["source"] = "Cruel Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 186206,
},
[385569] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[387608] = {
["isChanneled"] = true,
["source"] = "Ukhel Corruptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 195842,
},
[346657] = {
["encounterName"] = "The Council of Blood",
["encounterID"] = 2412,
["npcID"] = 166969,
},
[317985] = {
["npcID"] = 163520,
},
[393752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vadne Bleakheart",
["npcID"] = 195764,
},
[428564] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Molten Scorpid",
["npcID"] = 210290,
},
[206459] = {
["encounterName"] = "Cordana Felsong",
["source"] = "Avatar of Shadow",
["npcID"] = 104293,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1818,
},
[418329] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queen Angerboda",
["npcID"] = 207823,
},
[381470] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186125,
},
[453142] = {
["source"] = "Web Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 219034,
},
[377383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alpha Eagle",
["npcID"] = 192333,
},
[453144] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tephratennae",
["npcID"] = 221126,
},
[360538] = {
["npcID"] = 182120,
},
[39592] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Searing Totem",
["npcID"] = 22895,
},
[451097] = {
["source"] = "Sureki Militant",
["event"] = "SPELL_CAST_START",
["npcID"] = 213932,
},
[375331] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187768,
},
[116886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dook Ookem",
["npcID"] = 55622,
},
[453140] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["encounterID"] = 2837,
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[315947] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[265445] = {
["npcID"] = 161527,
},
[106646] = {
["source"] = "Flying Snow",
["event"] = "SPELL_CAST_START",
["npcID"] = 56473,
},
[387613] = {
["source"] = "Ukhel Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 195842,
},
[438807] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Colossal Spider",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 219045,
},
[375327] = {
["source"] = "Subterranean Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190404,
},
[228637] = {
["npcID"] = 114802,
},
[387614] = {
["source"] = "Ukhel Deathspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 195851,
},
[451099] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Sureki Militant",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 213932,
},
[361001] = {
["encounterName"] = "Vigilant Guardian",
["encounterID"] = 2512,
["npcID"] = 184522,
},
[227616] = {
["encounterName"] = "Moroes",
["encounterID"] = 1961,
["npcID"] = 114319,
},
[363042] = {
["npcID"] = 181958,
},
[385574] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[11990] = {
["isChanneled"] = true,
["source"] = "Firemane Flamecaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4334,
},
[168227] = {
["encounterName"] = "Skulloc, Son of Gruul",
["encounterID"] = 1754,
["npcID"] = 83612,
},
[444953] = {
["source"] = "Xur'khun the Defiled",
["event"] = "SPELL_CAST_START",
["npcID"] = 221845,
},
[334381] = {
["npcID"] = 171384,
},
[329711] = {
["encounterName"] = "Sire Denathrius",
["npcID"] = 169196,
},
[418333] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queen Angerboda",
["npcID"] = 207823,
},
[130198] = {
["source"] = "Heavy Mook",
["event"] = "SPELL_CAST_START",
["npcID"] = 67399,
},
[198944] = {
["source"] = "Valarjar Shieldmaiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 95832,
},
[249114] = {
["source"] = "Garothi Worldbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 122450,
},
[451098] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Sureki Militant",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 213932,
},
[387618] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primalist Infuser",
["npcID"] = 196043,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[332329] = {
["npcID"] = 170486,
},
[334377] = {
["npcID"] = 171805,
},
[418335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queen Angerboda",
["npcID"] = 207823,
},
[455879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragmented Core",
["npcID"] = 223953,
},
[369197] = {
["source"] = "Dragonbane Firebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 186599,
},
[406737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Betrayer",
["npcID"] = 200828,
},
[163121] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Taskmaster",
["npcID"] = 80708,
},
[395811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Pillager",
["npcID"] = 190983,
},
[34984] = {
["source"] = "Fen Ray",
["event"] = "SPELL_CAST_START",
["npcID"] = 17731,
},
[15254] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Ethereal Beacon",
["encounterID"] = 1899,
["event"] = "SPELL_CAST_START",
["npcID"] = 18431,
},
[431309] = {
["source"] = "Nightfall Shadowmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 213892,
},
[453149] = {
["source"] = "Web Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 219034,
},
[115010] = {
["encounterName"] = "Taran Zhu",
["source"] = "Gripping Hatred",
["encounterID"] = 1306,
["event"] = "SPELL_CAST_START",
["npcID"] = 59804,
},
[131379] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tisse-malheur gatrul’lon",
["npcID"] = 66267,
},
[451102] = {
["source"] = "Ascendant Vis'coxria",
["event"] = "SPELL_CAST_START",
["npcID"] = 211261,
},
[264757] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[227615] = {
["encounterName"] = "Shade of Medivh",
["encounterID"] = 1965,
["npcID"] = 114350,
},
[432673] = {
["source"] = "Kobold Looter",
["event"] = "SPELL_CAST_START",
["npcID"] = 216303,
},
[377384] = {
["source"] = "Aqua Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 190407,
},
[118940] = {
["source"] = "Glintrok Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 61239,
},
[455881] = {
["isChanneled"] = true,
["source"] = "Glintwick",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219797,
},
[388305] = {
["source"] = "Glacial Giantess",
["event"] = "SPELL_CAST_START",
["npcID"] = 193075,
},
[434722] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["npcID"] = 216619,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2907,
},
[202019] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[332335] = {
["npcID"] = 170488,
},
[212258] = {
["encounterName"] = "Gul'dan",
["source"] = "Gul'dan",
["encounterID"] = 1866,
["event"] = "SPELL_CAST_START",
["npcID"] = 104154,
},
[435403] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["encounterID"] = 2898,
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[395816] = {
["source"] = "Qalashi Ironskin",
["event"] = "SPELL_CAST_START",
["npcID"] = 191524,
},
[455201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Blood",
["npcID"] = 223951,
},
[277047] = {
["npcID"] = 136493,
},
[385578] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 186739,
},
[328248] = {
["encounterName"] = "Sun King's Salvation",
["encounterID"] = 2402,
["npcID"] = 165763,
},
[324146] = {
["encounterName"] = "Ventunax",
["encounterID"] = 2356,
["npcID"] = 162058,
},
[222501] = {
["npcID"] = 147827,
},
[451107] = {
["source"] = "Sureki Webmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 210966,
},
[412200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Aerobot",
["npcID"] = 205723,
},
[455203] = {
["event"] = "SPELL_CAST_START",
["source"] = "XT-Minecrusher 8700",
["npcID"] = 216034,
},
[391723] = {
["source"] = "Flamegullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 197697,
},
[377389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alpha Eagle",
["npcID"] = 192333,
},
[395819] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Scaleripper",
["npcID"] = 187908,
},
[406058] = {
["source"] = "Tentacle",
["event"] = "SPELL_CAST_START",
["npcID"] = 203406,
},
[301629] = {
["npcID"] = 150297,
},
[393772] = {
["source"] = "Hihveer",
["event"] = "SPELL_CAST_START",
["npcID"] = 188717,
},
[387629] = {
["source"] = "Desecrated Ohuna",
["event"] = "SPELL_CAST_START",
["npcID"] = 195876,
},
[438823] = {
["source"] = "Diabolic Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 219161,
},
[208165] = {
["encounterName"] = "Talixae Flamewreath",
["npcID"] = 104217,
["encounterID"] = 1869,
},
[258672] = {
["source"] = "Irontide Crackshot",
["event"] = "SPELL_CAST_START",
["npcID"] = 126918,
},
[356929] = {
["npcID"] = 179837,
},
[79174] = {
["source"] = "Azure Prickly Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 60437,
},
[391726] = {
["source"] = "Thunderhead",
["event"] = "SPELL_CAST_START",
["npcID"] = 197698,
},
[298212] = {
["encounterName"] = "Gunker",
["npcID"] = 150222,
["encounterID"] = 2292,
},
[387631] = {
["source"] = "Ergburk",
["event"] = "SPELL_CAST_START",
["npcID"] = 194409,
},
[285250] = {
["npcID"] = 146553,
},
[389686] = {
["source"] = "Crystal Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 196116,
},
[328254] = {
["encounterName"] = "Sun King's Salvation",
["encounterID"] = 2402,
["npcID"] = 168700,
},
[143666] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Iyyokuk the Lucid",
["npcID"] = 71160,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[438826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Atik",
["npcID"] = 217533,
},
[412215] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spurlok, Timesworn Sentinel",
["npcID"] = 205158,
},
[123033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lao-Chin the Iron Belly",
["npcID"] = 62804,
},
[453161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Bloodguard",
["npcID"] = 216338,
},
[397881] = {
["source"] = "Corrupt Living Water",
["event"] = "SPELL_CAST_START",
["npcID"] = 59873,
},
[159021] = {
["source"] = "Durag the Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 77890,
},
[451114] = {
["source"] = "Animated Darkness",
["event"] = "SPELL_CAST_START",
["npcID"] = 213905,
},
[431304] = {
["source"] = "Manifested Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 211341,
},
[388301] = {
["source"] = "Shadeslash Trakken",
["event"] = "SPELL_CAST_START",
["npcID"] = 193271,
},
[375348] = {
["source"] = "Gusting Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190401,
},
[285255] = {
["npcID"] = 146553,
},
[444972] = {
["source"] = "Saurolisk Ambusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 224725,
},
[102410] = {
["encounterName"] = "Echo of Jaina",
["encounterID"] = 1883,
["npcID"] = 54693,
},
[361023] = {
["npcID"] = 181005,
},
[303678] = {
["npcID"] = 155793,
},
[453164] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tephratennae",
["npcID"] = 221126,
},
[404027] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[394443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primordial Wrath",
["npcID"] = 190579,
},
[393780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Guardian",
["npcID"] = 192764,
},
[141621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frost Totem",
["npcID"] = 70982,
},
[372279] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187768,
},
[257315] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Irontide Grenadier",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 129758,
},
[393781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Guardian",
["npcID"] = 192764,
},
[194682] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Imp",
["npcID"] = 98963,
},
[275012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hunting Worg",
["npcID"] = 152998,
},
[449071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Taskfinder",
["npcID"] = 204127,
},
[451119] = {
["source"] = "Deathscreamer Iken'tak",
["event"] = "SPELL_CAST_START",
["npcID"] = 211263,
},
[148785] = {
["event"] = "SPELL_CAST_START",
["source"] = "War Master Kragg",
["npcID"] = 73775,
},
[111772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scholomance Acolyte",
["npcID"] = 58757,
},
[397886] = {
["source"] = "Corrupt Droplet",
["event"] = "SPELL_CAST_START",
["npcID"] = 62358,
},
[393783] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iskakx",
["npcID"] = 192761,
},
[451128] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sparking Haulbot",
["npcID"] = 219497,
},
[153905] = {
["source"] = "Whirling Dervish",
["event"] = "SPELL_CAST_START",
["npcID"] = 77605,
},
[211571] = {
["source"] = "Felsworn Chaos-Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 113012,
},
[377402] = {
["source"] = "Infuser Sariya",
["event"] = "SPELL_CAST_START",
["npcID"] = 190405,
},
[420405] = {
["source"] = "Tempest Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 207041,
},
[299588] = {
["npcID"] = 150251,
},
[404821] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Echo",
["npcID"] = 203051,
},
[434740] = {
["source"] = "Nightfall Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 217518,
},
[395833] = {
["source"] = "Mara'nar the Thunderous",
["event"] = "SPELL_CAST_START",
["npcID"] = 196913,
},
[340544] = {
["isChanneled"] = true,
["source"] = "Spinemaw Staghorn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167111,
},
[457266] = {
["source"] = "Greenhorn Extra",
["event"] = "SPELL_CAST_START",
["npcID"] = 228307,
},
[131381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mande-flammes gatrul’lon",
["npcID"] = 66268,
},
[395834] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonebolt Hunter",
["npcID"] = 197121,
},
[141620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonechiller Barafu",
["npcID"] = 70468,
},
[133432] = {
["source"] = "Domination Point Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 67671,
},
[393787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iskakx",
["npcID"] = 192761,
},
[169265] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 83846,
},
[359629] = {
["npcID"] = 181359,
},
[423109] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["encounterID"] = 2826,
["event"] = "SPELL_CAST_START",
["npcID"] = 208743,
},
[320069] = {
["encounterName"] = "An Affront of Challengers",
["encounterID"] = 2391,
["npcID"] = 164451,
},
[346690] = {
["encounterName"] = "The Council of Blood",
["encounterID"] = 2412,
["npcID"] = 166971,
},
[365120] = {
["encounterName"] = "Anduin Wrynn",
["encounterID"] = 2546,
["npcID"] = 181954,
},
[334404] = {
["encounterName"] = "Huntsman Altimor",
["encounterID"] = 2418,
["npcID"] = 165066,
},
[46164] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Kael'thas Sunstrider",
["encounterID"] = 1894,
["event"] = "SPELL_CAST_START",
["npcID"] = 24664,
},
[137528] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["encounterID"] = 1573,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69712,
},
[131385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Démoniste de Gangrorage",
["npcID"] = 66270,
},
[399933] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tukkaraq's Boat",
["npcID"] = 201121,
},
[412226] = {
["source"] = "Sluggish Slug",
["event"] = "SPELL_CAST_START",
["npcID"] = 205754,
},
[275027] = {
["npcID"] = 140393,
},
[111774] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scholomance Acolyte",
["npcID"] = 58757,
},
[257320] = {
["source"] = "Animated Offering",
["event"] = "SPELL_CAST_START",
["npcID"] = 210405,
},
[361027] = {
["npcID"] = 181093,
},
[444985] = {
["source"] = "Bloatrot Stinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 216065,
},
[420419] = {
["source"] = "Tempest Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 207041,
},
[394439] = {
["source"] = "Acequian",
["event"] = "SPELL_CAST_START",
["npcID"] = 187617,
},
[320081] = {
["npcID"] = 160747,
},
[115358] = {
["event"] = "SPELL_CAST_START",
["source"] = "Needle Sprite",
["npcID"] = 55593,
},
[397888] = {
["source"] = "Fallen Waterspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 200126,
},
[64163] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Yogg-Saron",
["encounterID"] = 1143,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 33288,
},
[377411] = {
["source"] = "Amberfur Prowler",
["event"] = "SPELL_CAST_START",
["npcID"] = 187455,
},
[395841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bracken Warscourge",
["npcID"] = 197120,
},
[397889] = {
["source"] = "Fallen Waterspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 200126,
},
[322767] = {
["npcID"] = 164921,
},
[270929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harpy Boltcaller",
["npcID"] = 152843,
},
[140600] = {
["source"] = "Cavern Burrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 70589,
},
[111775] = {
["encounterName"] = "Lilian Voss",
["source"] = "Lilian Voss",
["npcID"] = 58722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1429,
},
[389364] = {
["source"] = "Ancient Timekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 192516,
},
[451132] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sparking Haulbot",
["npcID"] = 219497,
},
[289360] = {
["npcID"] = 148615,
},
[114848] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["npcID"] = 3977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1425,
},
[163126] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Taskmaster",
["npcID"] = 80708,
},
[236142] = {
["encounterName"] = "The Desolate Host",
["source"] = "Engine of Souls",
["encounterID"] = 2054,
["event"] = "SPELL_CAST_START",
["npcID"] = 118460,
},
[346698] = {
["encounterName"] = "The Council of Blood",
["encounterID"] = 2412,
["npcID"] = 166971,
},
[397892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imacu'tya",
["npcID"] = 104275,
},
[367176] = {
["npcID"] = 184409,
},
[393797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Charfang",
["npcID"] = 187751,
},
[428609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Sentinel",
["npcID"] = 207024,
},
[381517] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190485,
},
[340057] = {
["npcID"] = 174336,
},
[393804] = {
["source"] = "Whirglgurgl",
["event"] = "SPELL_CAST_START",
["npcID"] = 188860,
},
[371273] = {
["encounterName"] = "Hungering Destroyer",
["encounterID"] = 2383,
["npcID"] = 188302,
},
[198963] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["encounterID"] = 1792,
["event"] = "SPELL_CAST_START",
["npcID"] = 91005,
},
[350796] = {
["encounterName"] = "So'leah",
["encounterID"] = 2442,
["npcID"] = 177269,
},
[300650] = {
["npcID"] = 150169,
},
[121503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Norvakess",
["npcID"] = 62324,
},
[376200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgewrought Monstrosity",
["npcID"] = 194816,
},
[427200] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[196916] = {
["source"] = "Lady Velandras Ravencrest",
["event"] = "SPELL_CAST_START",
["npcID"] = 98538,
},
[33111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Warlock",
["npcID"] = 17371,
},
[381512] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190485,
},
[408141] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["npcID"] = 201788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[377419] = {
["npcID"] = 189914,
},
[420422] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[397897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jazshariu",
["npcID"] = 104273,
},
[194611] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Hunter",
["npcID"] = 98926,
},
[320716] = {
["npcID"] = 160415,
},
[152893] = {
["source"] = "Herald of Sunrise",
["event"] = "SPELL_CAST_START",
["npcID"] = 78933,
},
[381516] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190485,
},
[257326] = {
["encounterName"] = "Chopper Redhook",
["source"] = "Chopper Redhook",
["npcID"] = 128650,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2098,
},
[393803] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trakhan",
["npcID"] = 193783,
},
[412233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Rocketeer",
["npcID"] = 205727,
},
[397899] = {
["source"] = "Sha-Touched Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 200131,
},
[326230] = {
["npcID"] = 165829,
},
[114849] = {
["isChanneled"] = true,
["source"] = "Sha of Despair",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59651,
},
[363088] = {
["encounterName"] = "Lihuvim, Principal Architect",
["encounterID"] = 2539,
["npcID"] = 182169,
},
[373327] = {
["encounterName"] = "Eranog",
["source"] = "Primal Flame",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 187593,
},
[159035] = {
["source"] = "Shaadum",
["event"] = "SPELL_CAST_START",
["npcID"] = 78728,
},
[397904] = {
["source"] = "Sha-Touched Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 200131,
},
[118434] = {
["source"] = "Ik'thik Precursor",
["event"] = "SPELL_CAST_START",
["npcID"] = 58367,
},
[340564] = {
["npcID"] = 169206,
},
[399949] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Tempest",
["npcID"] = 200673,
},
[393806] = {
["source"] = "Stoneheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 187387,
},
[227638] = {
["encounterName"] = "Attumen the Huntsman",
["encounterID"] = 1960,
["npcID"] = 114262,
},
[373329] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[277085] = {
["npcID"] = 136510,
},
[395860] = {
["source"] = "The Red Gulper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195974,
},
[313945] = {
["source"] = "Aqir Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 161218,
},
[381521] = {
["source"] = "Encroaching Downpour",
["event"] = "SPELL_CAST_START",
["npcID"] = 191324,
},
[375384] = {
["source"] = "Primalist Earthshaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 190371,
},
[361044] = {
["encounterName"] = "Prototype Pantheon",
["encounterID"] = 2544,
["npcID"] = 182305,
},
[327130] = {
["npcID"] = 165872,
},
[166204] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorian Arcanist",
["npcID"] = 82528,
},
[33624] = {
["npcID"] = 18971,
},
[384194] = {
["source"] = "Primalist Cinderweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190207,
},
[395857] = {
["source"] = "Qalashi Stonebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 189834,
},
[438860] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["npcID"] = 216658,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2909,
},
[126625] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Violence",
["npcID"] = 64656,
},
[393810] = {
["source"] = "Shiverweb Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 186064,
},
[361052] = {
["npcID"] = 180722,
},
[307805] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["encounterID"] = 2327,
["event"] = "SPELL_CAST_START",
["npcID"] = 156523,
},
[285280] = {
["npcID"] = 146552,
},
[393811] = {
["source"] = "Maiden of Diligence",
["event"] = "SPELL_CAST_START",
["npcID"] = 192718,
},
[395859] = {
["source"] = "Haunting Sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 59555,
},
[397907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baalgar the Watchful",
["npcID"] = 104274,
},
[131390] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invocateur de Gangrorage",
["npcID"] = 66271,
},
[393812] = {
["source"] = "Whirglgurgl",
["event"] = "SPELL_CAST_START",
["npcID"] = 188860,
},
[115363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Puckish Sprite",
["npcID"] = 56349,
},
[139895] = {
["source"] = "Soul-Fed Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 70308,
},
[445021] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Summoned Acolyte",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 221863,
},
[393813] = {
["source"] = "Shiverweb Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 186064,
},
[387670] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Chieftain",
["npcID"] = 187266,
},
[331845] = {
["npcID"] = 165687,
},
[440912] = {
["source"] = "Festering Sporemass",
["event"] = "SPELL_CAST_START",
["npcID"] = 217963,
},
[369241] = {
["source"] = "Searing Flame Harchek",
["event"] = "SPELL_CAST_START",
["npcID"] = 191476,
},
[453199] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vanishing Nightmare",
["npcID"] = 224922,
},
[307809] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[375385] = {
["source"] = "Steam Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190700,
},
[328287] = {
["npcID"] = 165265,
},
[453200] = {
["source"] = "Cragmund",
["event"] = "SPELL_CAST_START",
["npcID"] = 220269,
},
[102569] = {
["encounterName"] = "Murozond",
["encounterID"] = 1271,
["npcID"] = 54432,
},
[301667] = {
["npcID"] = 150292,
},
[287333] = {
["encounterName"] = "King Rastakhan",
["encounterID"] = 2272,
["npcID"] = 145644,
},
[81576] = {
["npcID"] = 43537,
},
[381530] = {
["source"] = "Nokhud Thunderfist",
["event"] = "SPELL_CAST_START",
["npcID"] = 193373,
},
[381525] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190484,
},
[377435] = {
["source"] = "Time-Lost Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187265,
},
[412247] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitator Zoralek",
["npcID"] = 199305,
},
[117924] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orbiss",
["npcID"] = 60857,
},
[375388] = {
["npcID"] = 190900,
},
[381537] = {
["source"] = "Vicious Ice Borer",
["event"] = "SPELL_CAST_START",
["npcID"] = 186392,
},
[55715] = {
["source"] = "Earthen Elite",
["event"] = "SPELL_CAST_START",
["npcID"] = 29980,
},
[397914] = {
["source"] = "Depraved Mistweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 200137,
},
[332084] = {
["npcID"] = 167965,
},
[227646] = {
["encounterName"] = "Moroes",
["npcID"] = 114318,
["encounterID"] = 1961,
},
[161090] = {
["encounterName"] = "Rocketspark and Borka",
["encounterID"] = 1715,
["npcID"] = 77816,
},
[63138] = {
["encounterName"] = "Yogg-Saron",
["npcID"] = 33134,
["encounterID"] = 1143,
},
[295536] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["encounterID"] = 2291,
["npcID"] = 150190,
},
[393820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sturdy Gladehorn",
["npcID"] = 196655,
},
[387677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathling Destroyer",
["npcID"] = 190214,
},
[389725] = {
["source"] = "Bazual",
["event"] = "SPELL_CAST_START",
["npcID"] = 193532,
},
[134470] = {
["source"] = "Bow Fly Swarm",
["event"] = "SPELL_CAST_START",
["npcID"] = 68222,
},
[157001] = {
["source"] = "Durag the Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 77890,
},
[361066] = {
["encounterName"] = "Prototype Pantheon",
["encounterID"] = 2544,
["npcID"] = 181551,
},
[381535] = {
["npcID"] = 190388,
},
[126628] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Violence",
["npcID"] = 64656,
},
[395878] = {
["source"] = "The Talking Fish",
["event"] = "SPELL_CAST_START",
["npcID"] = 59546,
},
[63830] = {
["encounterName"] = "Yogg-Saron",
["npcID"] = 33134,
["encounterID"] = 1143,
},
[434786] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trilling Attendant",
["npcID"] = 216293,
},
[164168] = {
["npcID"] = 81212,
},
[451160] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[395871] = {
["source"] = "Qalashi Stonebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 189834,
},
[56919] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaz'tik the Manipulator",
["npcID"] = 64013,
},
[367807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldbreaker Escapee",
["npcID"] = 185626,
},
[434779] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["npcID"] = 216619,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2907,
},
[395872] = {
["source"] = "The Talking Fish",
["event"] = "SPELL_CAST_START",
["npcID"] = 59546,
},
[115878] = {
["event"] = "SPELL_CAST_START",
["source"] = "Silkwood Stalker",
["npcID"] = 56070,
},
[140619] = {
["source"] = "Cavern Burrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 70589,
},
[322756] = {
["npcID"] = 165137,
},
[140620] = {
["source"] = "Fungal Growth",
["event"] = "SPELL_CAST_START",
["npcID"] = 70153,
},
[414303] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[336499] = {
["encounterName"] = "Mistcaller",
["encounterID"] = 2392,
["npcID"] = 164501,
},
[131414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Casseur des Flèches jumelles",
["npcID"] = 66273,
},
[387683] = {
["source"] = "Frozen Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 187203,
},
[438877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nakt",
["npcID"] = 218324,
},
[436841] = {
["source"] = "Desecrated Ohuna",
["event"] = "SPELL_CAST_START",
["npcID"] = 195876,
},
[459355] = {
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[453212] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["encounterID"] = 2837,
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[455260] = {
["source"] = "Deathspore Lashroom",
["event"] = "SPELL_CAST_START",
["npcID"] = 221424,
},
[359016] = {
["encounterName"] = "Cragpie",
["source"] = "Cragpie",
["npcID"] = 220008,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3001,
},
[131402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nécrogarde des Flèches jumelles",
["npcID"] = 66272,
},
[394426] = {
["source"] = "Council Flamecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 198503,
},
[324205] = {
["encounterName"] = "Ventunax",
["encounterID"] = 2356,
["npcID"] = 162058,
},
[393855] = {
["source"] = "Web-Queen Ashkaz",
["event"] = "SPELL_CAST_START",
["npcID"] = 192983,
},
[377447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osoria",
["npcID"] = 192220,
},
[130728] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rankbite Ancient",
["npcID"] = 66462,
},
[409745] = {
["source"] = "Kretchenwrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 201673,
},
[301681] = {
["npcID"] = 150292,
},
[393830] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gragza the Dragon-Breaker",
["npcID"] = 191507,
},
[86699] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Guard",
["npcID"] = 61252,
},
[410223] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[167239] = {
["npcID"] = 83028,
},
[279157] = {
["encounterName"] = "Mythrax",
["encounterID"] = 2135,
["npcID"] = 138324,
},
[371306] = {
["source"] = "Arcane Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 186741,
},
[420476] = {
["source"] = "Crustbreaker Conduit",
["event"] = "SPELL_CAST_START",
["npcID"] = 207038,
},
[126633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Hatred",
["npcID"] = 64742,
},
[393832] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sturdy Gladehorn",
["npcID"] = 196655,
},
[412262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Rocketeer",
["npcID"] = 205727,
},
[124071] = {
["isChanneled"] = true,
["source"] = "Osul Marauder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60692,
},
[167240] = {
["npcID"] = 83028,
},
[320114] = {
["encounterName"] = "Xav the Unfallen",
["encounterID"] = 2366,
["npcID"] = 162329,
},
[385652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Crag",
["npcID"] = 195243,
},
[117931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arconiss",
["npcID"] = 60824,
},
[126631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Anger",
["npcID"] = 64684,
},
[391798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rebel Incinerator",
["npcID"] = 195062,
},
[173384] = {
["npcID"] = 83392,
},
[328318] = {
["npcID"] = 166875,
},
[142668] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Kaz'tik the Manipulator",
["npcID"] = 71156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[393835] = {
["source"] = "Shiverweb Cloaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 195397,
},
[420469] = {
["source"] = "Austin Huxworth",
["event"] = "SPELL_CAST_START",
["npcID"] = 209065,
},
[397931] = {
["source"] = "Minion of Doubt",
["event"] = "SPELL_CAST_START",
["npcID"] = 57109,
},
[285305] = {
["npcID"] = 146552,
},
[229698] = {
["npcID"] = 115417,
},
[449136] = {
["isChanneled"] = true,
["source"] = "Flickerflame Overseer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212542,
},
[124072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Set'thik Gustwing",
["npcID"] = 63592,
},
[326847] = {
["npcID"] = 167876,
},
[37979] = {
["source"] = "Murkblood Healer",
["event"] = "SPELL_CAST_START",
["npcID"] = 17730,
},
[442998] = {
["source"] = "Mother Aza'na",
["event"] = "SPELL_CAST_START",
["npcID"] = 222180,
},
[365169] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[391790] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seismic Stomps",
["npcID"] = 197829,
},
[434793] = {
["isChanneled"] = true,
["source"] = "Trilling Attendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216293,
},
[371313] = {
["npcID"] = 2734,
},
[289417] = {
["npcID"] = 148611,
},
[391791] = {
["source"] = "Furious Deluge",
["event"] = "SPELL_CAST_START",
["npcID"] = 197220,
},
[320120] = {
["encounterName"] = "An Affront of Challengers",
["encounterID"] = 2391,
["npcID"] = 164463,
},
[121513] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Big Gladiator Chief",
["npcID"] = 60170,
},
[191823] = {
["encounterName"] = "Tirathon Saltheril",
["source"] = "Tirathon Saltheril",
["npcID"] = 95885,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1815,
},
[359028] = {
["encounterName"] = "Myza's Oasis",
["encounterID"] = 2440,
["npcID"] = 176563,
},
[119981] = {
["encounterName"] = "Trial of the King",
["source"] = "Ming the Cunning",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61444,
},
[346742] = {
["encounterName"] = "Mailroom Mayhem",
["encounterID"] = 2424,
["npcID"] = 175646,
},
[455273] = {
["source"] = "The Abominable Wavecrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 216526,
},
[449130] = {
["source"] = "Forge Loader",
["event"] = "SPELL_CAST_START",
["npcID"] = 213343,
},
[393841] = {
["source"] = "Web-Queen Ashkaz",
["event"] = "SPELL_CAST_START",
["npcID"] = 192983,
},
[377473] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[373364] = {
["npcID"] = 189878,
},
[277120] = {
["npcID"] = 141749,
},
[84799] = {
["encounterName"] = "Lockmaw",
["encounterID"] = 1054,
["npcID"] = 45379,
},
[197961] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["encounterID"] = 1809,
["event"] = "SPELL_CAST_START",
["npcID"] = 95676,
},
[455275] = {
["source"] = "Shurrai",
["event"] = "SPELL_CAST_START",
["npcID"] = 221224,
},
[451758] = {
["source"] = "Kobyss Shadeshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 215653,
},
[410225] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[289420] = {
["npcID"] = 148607,
},
[373943] = {
["source"] = "Wilted Oak",
["event"] = "SPELL_CAST_START",
["npcID"] = 186229,
},
[399987] = {
["source"] = "Zaqali Firecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 200454,
},
[114859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bored Student",
["npcID"] = 59614,
},
[445038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Trickster",
["npcID"] = 214343,
},
[455277] = {
["source"] = "Tidelord Teethwretch",
["event"] = "SPELL_CAST_START",
["npcID"] = 216527,
},
[318078] = {
["encounterName"] = "Shad'har the Insatiable",
["source"] = "Living Miasma",
["encounterID"] = 2335,
["event"] = "SPELL_CAST_START",
["npcID"] = 157229,
},
[160079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackrock Forge Specialist",
["npcID"] = 79200,
},
[395893] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[316031] = {
["encounterName"] = "Shad'har the Insatiable",
["source"] = "Shad'har the Insatiable",
["encounterID"] = 2335,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157231,
},
[449135] = {
["source"] = "Flickerflame Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212542,
},
[102573] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Azure Serpent",
["encounterID"] = 1303,
["event"] = "SPELL_CAST_START",
["npcID"] = 56754,
},
[140626] = {
["source"] = "Fungal Growth",
["event"] = "SPELL_CAST_START",
["npcID"] = 70153,
},
[41053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Champion",
["npcID"] = 22880,
},
[391799] = {
["source"] = "Root of Decay",
["event"] = "SPELL_CAST_START",
["npcID"] = 185326,
},
[434802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ixin",
["npcID"] = 217531,
},
[443003] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Broodtwister Ovi'nax",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 214506,
},
[373370] = {
["npcID"] = 189878,
},
[187725] = {
["source"] = "Cattwen",
["event"] = "SPELL_CAST_START",
["npcID"] = 94618,
},
[434803] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["encounterID"] = 2902,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215657,
},
[82608] = {
["npcID"] = 3255,
},
[455281] = {
["source"] = "Tidelord Teethwretch",
["event"] = "SPELL_CAST_START",
["npcID"] = 216527,
},
[367228] = {
["npcID"] = 184767,
},
[285889] = {
["encounterName"] = "Conclave of the Chosen",
["encounterID"] = 2268,
["npcID"] = 144767,
},
[391821] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snowhide Shaman",
["npcID"] = 189654,
},
[422518] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[375420] = {
["source"] = "Riverbend Chomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 190886,
},
[328322] = {
["encounterName"] = "Echelon",
["encounterID"] = 2380,
["npcID"] = 164363,
},
[140628] = {
["source"] = "Eternal Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 70586,
},
[393859] = {
["npcID"] = 187689,
},
[328331] = {
["npcID"] = 168717,
},
[442997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Elf Riftwalker",
["npcID"] = 215597,
},
[387708] = {
["source"] = "Tyrhold Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 192696,
},
[320144] = {
["encounterName"] = "The Manastorms",
["npcID"] = 164555,
["encounterID"] = 2394,
},
[375422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Im'bunata",
["npcID"] = 196199,
},
[410234] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[140629] = {
["source"] = "Eternal Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 70586,
},
[62042] = {
["event"] = "SPELL_CAST_START",
["source"] = "Recalled Thorim",
["npcID"] = 221923,
},
[375423] = {
["npcID"] = 181310,
},
[334493] = {
["npcID"] = 164862,
},
[412283] = {
["source"] = "Alcanon",
["event"] = "SPELL_CAST_START",
["npcID"] = 203515,
},
[365185] = {
["npcID"] = 184659,
},
[174422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Breaker Ritualist",
["npcID"] = 86330,
},
[32863] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Warlock",
["npcID"] = 17371,
},
[412284] = {
["source"] = "Captain Reykal",
["event"] = "SPELL_CAST_START",
["npcID"] = 203355,
},
[455287] = {
["encounterName"] = "Rasha'nan",
["source"] = "Infested Spawn",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 219739,
},
[183633] = {
["source"] = "Rockbound Pelter",
["event"] = "SPELL_CAST_START",
["npcID"] = 91008,
},
[426619] = {
["source"] = "Torchsnarl",
["event"] = "SPELL_CAST_START",
["npcID"] = 212993,
},
[152917] = {
["source"] = "Solar Magnifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 77559,
},
[449154] = {
["source"] = "Forge Loader",
["event"] = "SPELL_CAST_START",
["npcID"] = 213343,
},
[114864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bored Student",
["npcID"] = 59614,
},
[328328] = {
["npcID"] = 167853,
},
[289421] = {
["npcID"] = 148624,
},
[381570] = {
["npcID"] = 190388,
},
[326281] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["encounterID"] = 2393,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164517,
},
[418430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Empowered Imp",
["npcID"] = 208545,
},
[84037] = {
["encounterName"] = "Ozumat",
["npcID"] = 40792,
["encounterID"] = 1047,
},
[260425] = {
["source"] = "Muddy Riverbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 130757,
},
[381582] = {
["source"] = "Brutal Motivator",
["event"] = "SPELL_CAST_START",
["npcID"] = 184453,
},
[375439] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[445052] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[434824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ixin",
["npcID"] = 217531,
},
[408193] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[402050] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[420490] = {
["source"] = "Crustbreaker Conduit",
["event"] = "SPELL_CAST_START",
["npcID"] = 207038,
},
[334485] = {
["encounterName"] = "Ventunax",
["encounterID"] = 2356,
["npcID"] = 162058,
},
[122542] = {
["source"] = "Hawkmaster Nurong",
["event"] = "SPELL_CAST_START",
["npcID"] = 62574,
},
[320141] = {
["encounterName"] = "The Manastorms",
["npcID"] = 164556,
["encounterID"] = 2394,
},
[346762] = {
["encounterName"] = "The Council of Blood",
["encounterID"] = 2412,
["npcID"] = 166969,
},
[377490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderspine Crasher",
["npcID"] = 191057,
},
[334476] = {
["encounterName"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["encounterID"] = 2389,
},
[131424] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dalgan",
["npcID"] = 66274,
},
[422541] = {
["source"] = "Shuffling Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 208456,
},
[381575] = {
["source"] = "Rustpine Immolator",
["event"] = "SPELL_CAST_START",
["npcID"] = 187396,
},
[425149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Juggernaut",
["npcID"] = 210172,
},
[457354] = {
["event"] = "SPELL_CAST_START",
["source"] = "ELIZA",
["npcID"] = 224060,
},
[389779] = {
["npcID"] = 186150,
},
[332430] = {
["npcID"] = 171179,
},
[437417] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[418436] = {
["event"] = "SPELL_CAST_START",
["source"] = "Empowered Imp",
["npcID"] = 208545,
},
[418449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Claw",
["npcID"] = 210684,
},
[340622] = {
["npcID"] = 173798,
},
[320168] = {
["encounterName"] = "The Manastorms",
["npcID"] = 164555,
["encounterID"] = 2394,
},
[393864] = {
["source"] = "Trap-Layer Kerwal",
["event"] = "SPELL_CAST_START",
["npcID"] = 186516,
},
[346766] = {
["encounterName"] = "Hylbrande",
["encounterID"] = 2426,
["npcID"] = 175663,
},
[340623] = {
["npcID"] = 173798,
},
[424581] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[377483] = {
["source"] = "Shadeslash Trakken",
["event"] = "SPELL_CAST_START",
["npcID"] = 193271,
},
[341969] = {
["npcID"] = 174210,
},
[449167] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213216,
},
[345267] = {
["npcID"] = 162937,
},
[328338] = {
["npcID"] = 167493,
},
[406165] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[381580] = {
["source"] = "Sundered Flame Brawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 202248,
},
[365744] = {
["npcID"] = 184651,
},
[262277] = {
["encounterName"] = "Fetid Devourer",
["encounterID"] = 2128,
["npcID"] = 133298,
},
[129711] = {
["encounterName"] = "Elegon",
["source"] = "Celestial Protector",
["npcID"] = 60793,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1500,
},
[427176] = {
["encounterName"] = "The Darkness",
["source"] = "Wriggling Darkspawn",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 213008,
},
[457348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Firelord",
["npcID"] = 212088,
},
[377486] = {
["npcID"] = 184335,
},
[441510] = {
["source"] = "Deadly Sprout",
["event"] = "SPELL_CAST_START",
["npcID"] = 220316,
},
[340627] = {
["npcID"] = 173798,
},
[342675] = {
["npcID"] = 170882,
},
[143709] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Ka'roz the Locust",
["npcID"] = 71154,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[210261] = {
["npcID"] = 104251,
},
[373392] = {
["source"] = "Nokhud Longbow",
["event"] = "SPELL_CAST_START",
["npcID"] = 192789,
},
[31664] = {
["source"] = "Frenzied Gargoyle",
["event"] = "SPELL_CAST_START",
["npcID"] = 27691,
},
[377488] = {
["source"] = "Rune Seal Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187155,
},
[157020] = {
["source"] = "Blinding Solar Flare",
["event"] = "SPELL_CAST_START",
["npcID"] = 79462,
},
[377500] = {
["npcID"] = 184335,
},
[387740] = {
["source"] = "Tyrhold Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 192696,
},
[427175] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[451222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hollows Resident",
["npcID"] = 219983,
},
[260432] = {
["source"] = "Dark Tendril",
["event"] = "SPELL_CAST_START",
["npcID"] = 125136,
},
[428695] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[410254] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[387729] = {
["source"] = "Stone Infused Rock Snail",
["event"] = "SPELL_CAST_START",
["npcID"] = 203241,
},
[340631] = {
["npcID"] = 173800,
},
[391825] = {
["npcID"] = 190900,
},
[393298] = {
["source"] = "Smoldering Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 188673,
},
[453258] = {
["source"] = "Sikran",
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[381519] = {
["source"] = "Tarasek Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 191047,
},
[432781] = {
["source"] = "Radiating Voidstone",
["event"] = "SPELL_CAST_START",
["npcID"] = 212739,
},
[434829] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["npcID"] = 216619,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2907,
},
[165213] = {
["source"] = "Everbloom Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 81985,
},
[8858] = {
["source"] = "Dark Iron Excavator",
["event"] = "SPELL_CAST_START",
["npcID"] = 47276,
},
[316072] = {
["npcID"] = 169476,
},
[373932] = {
["encounterName"] = "Azureblade",
["source"] = "Draconic Image",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 190187,
},
[387732] = {
["npcID"] = 186150,
},
[122034] = {
["source"] = "Shek'zeer Clutch-Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 64559,
},
[375446] = {
["source"] = "Sunhide Stomphoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 187960,
},
[393876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gragza the Dragon-Breaker",
["npcID"] = 191507,
},
[12058] = {
["source"] = "Iron Dwarf Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 29979,
},
[357029] = {
["npcID"] = 180335,
},
[277155] = {
["npcID"] = 136507,
},
[285878] = {
["encounterName"] = "Conclave of the Chosen",
["encounterID"] = 2268,
["npcID"] = 144941,
},
[330397] = {
["npcID"] = 157732,
},
[320171] = {
["encounterName"] = "Amarth, The Harvester",
["npcID"] = 163157,
["encounterID"] = 2388,
},
[350875] = {
["encounterName"] = "So'leah",
["encounterID"] = 2442,
["npcID"] = 177269,
},
[118963] = {
["source"] = "Glintrok Skulker",
["event"] = "SPELL_CAST_START",
["npcID"] = 61240,
},
[184675] = {
["encounterName"] = "Hellfire High Council",
["source"] = "Dia Darkwhisper",
["encounterID"] = 1798,
["event"] = "SPELL_CAST_START",
["npcID"] = 92144,
},
[381592] = {
["source"] = "Brutal Motivator",
["event"] = "SPELL_CAST_START",
["npcID"] = 184453,
},
[457359] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beebiter",
["npcID"] = 222284,
},
[361644] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["encounterID"] = 2540,
["npcID"] = 181224,
},
[395939] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirror Lurker Elder",
["npcID"] = 194666,
},
[381593] = {
["npcID"] = 184300,
},
[122547] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber-Shaper Un'sok",
["npcID"] = 62511,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1499,
},
[164192] = {
["npcID"] = 81236,
},
[420501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildfire Primalist",
["npcID"] = 209200,
},
[365212] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[391833] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sherath",
["npcID"] = 188710,
},
[443027] = {
["source"] = "Siege Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 215601,
},
[136548] = {
["encounterName"] = "Lei Shen",
["source"] = "Ball Lightning",
["encounterID"] = 1579,
["event"] = "SPELL_CAST_START",
["npcID"] = 69232,
},
[275112] = {
["source"] = "Blisterhide",
["event"] = "SPELL_CAST_START",
["npcID"] = 197353,
},
[408228] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[147811] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Thrall",
["npcID"] = 73483,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1623,
},
[377512] = {
["source"] = "Lava Snail",
["event"] = "SPELL_CAST_START",
["npcID"] = 191628,
},
[373405] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[334498] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 168113,
},
[459422] = {
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[412313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberdusk",
["npcID"] = 203664,
},
[340642] = {
["npcID"] = 172076,
},
[424600] = {
["source"] = "Fungal Podling",
["event"] = "SPELL_CAST_START",
["npcID"] = 211063,
},
[377502] = {
["source"] = "Time-Lost Murloc",
["event"] = "SPELL_CAST_START",
["npcID"] = 190584,
},
[362405] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 181954,
["encounterID"] = 2546,
},
[338606] = {
["npcID"] = 167731,
},
[391837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emerald Healer",
["npcID"] = 207048,
},
[377503] = {
["source"] = "Rune Seal Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187155,
},
[106681] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragrant Lotus",
["npcID"] = 56472,
},
[340655] = {
["npcID"] = 172077,
},
[391849] = {
["npcID"] = 191406,
},
[393886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aizir the Inflamed",
["npcID"] = 191306,
},
[395934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trickclaw Mystic",
["npcID"] = 197119,
},
[174434] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorian High Sorcerer",
["npcID"] = 86256,
},
[375457] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Juvenile Frost Proto-Dragon",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191222,
},
[451224] = {
["source"] = "Twilight Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 224271,
},
[398501] = {
["source"] = "Hunting Rock Viper",
["event"] = "SPELL_CAST_START",
["npcID"] = 203783,
},
[340646] = {
["npcID"] = 173802,
},
[391840] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taresh",
["npcID"] = 188711,
},
[125623] = {
["npcID"] = 50783,
},
[395936] = {
["source"] = "Riverbeast Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 191687,
},
[381602] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190484,
},
[375459] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderspine Rumbler",
["npcID"] = 192941,
},
[320170] = {
["encounterName"] = "Amarth, The Harvester",
["npcID"] = 162692,
["encounterID"] = 2388,
},
[330409] = {
["npcID"] = 158420,
},
[427169] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[391842] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormfang Shaman",
["npcID"] = 187552,
},
[147815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thrall",
["npcID"] = 73483,
},
[424614] = {
["source"] = "Fungal Stabber",
["event"] = "SPELL_CAST_START",
["npcID"] = 207450,
},
[341163] = {
["npcID"] = 171396,
},
[17843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Novice Timewalker",
["npcID"] = 189583,
},
[160102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackrock Enforcer",
["npcID"] = 79208,
},
[428703] = {
["source"] = "Rock Smasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 213954,
},
[381605] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190484,
},
[322232] = {
["encounterName"] = "Stradama Margrave",
["npcID"] = 164267,
["encounterID"] = 2386,
},
[393892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aizir the Inflamed",
["npcID"] = 191306,
},
[114999] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["encounterID"] = 1306,
["event"] = "SPELL_CAST_START",
["npcID"] = 56884,
},
[294064] = {
["npcID"] = 151658,
},
[346800] = {
["encounterName"] = "The Council of Blood",
["encounterID"] = 2412,
["npcID"] = 166970,
},
[328365] = {
["npcID"] = 167493,
},
[395941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirror Lurker Elder",
["npcID"] = 194666,
},
[395947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Speaker",
["npcID"] = 197124,
},
[334509] = {
["npcID"] = 163083,
},
[147817] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimsonscale Firestorm",
["npcID"] = 72876,
},
[389804] = {
["source"] = "Unstable Curator",
["event"] = "SPELL_CAST_START",
["npcID"] = 187154,
},
[430754] = {
["source"] = "Corrupted Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 214439,
},
[326319] = {
["npcID"] = 164921,
},
[326827] = {
["npcID"] = 162040,
},
[80572] = {
["event"] = "SPELL_CAST_START",
["source"] = "Energized Harvest Reaper",
["npcID"] = 42342,
},
[395948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spiteful Snail",
["npcID"] = 193943,
},
[117945] = {
["encounterName"] = "Elegon",
["source"] = "Celestial Protector",
["npcID"] = 60793,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1500,
},
[114872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bored Student",
["npcID"] = 59614,
},
[447143] = {
["encounterName"] = "Researcher Ven'kex",
["source"] = "Researcher Ven'kex",
["encounterID"] = 2991,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219856,
},
[406183] = {
["source"] = "Krono Sandtongue",
["event"] = "SPELL_CAST_START",
["npcID"] = 205622,
},
[142699] = {
["source"] = "Horde Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 71445,
},
[62415] = {
["npcID"] = 32882,
},
[330417] = {
["npcID"] = 169696,
},
[211299] = {
["npcID"] = 105715,
},
[85692] = {
["source"] = "Doomguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 11859,
},
[138607] = {
["source"] = "Amani'shi Flame Chanter",
["event"] = "SPELL_CAST_START",
["npcID"] = 69909,
},
[395946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Rotsinger",
["npcID"] = 197129,
},
[174440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorian High Sorcerer",
["npcID"] = 86256,
},
[451241] = {
["source"] = "Twilight Flamerender",
["event"] = "SPELL_CAST_START",
["npcID"] = 224240,
},
[369828] = {
["npcID"] = 184023,
},
[428711] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213216,
},
[447141] = {
["source"] = "Repurposed Loaderbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 222923,
},
[375475] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Juvenile Frost Proto-Dragon",
["npcID"] = 191222,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[114873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Slate",
["npcID"] = 59613,
},
[264892] = {
["isChanneled"] = true,
["source"] = "Hakkari Ritualist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214913,
},
[228700] = {
["npcID"] = 114338,
},
[440999] = {
["source"] = "Venommaster Nezarox",
["event"] = "SPELL_CAST_START",
["npcID"] = 219006,
},
[418474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Empowered Felhunter",
["npcID"] = 208791,
},
[115510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan'ze Spiritclaw",
["npcID"] = 55291,
},
[68799] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apothecary Frye",
["npcID"] = 36272,
},
[369328] = {
["isChanneled"] = true,
["source"] = "Runic Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184107,
},
[457880] = {
["source"] = "Kobold Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 203878,
},
[406686] = {
["source"] = "Djaradin Magmashaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 202257,
},
[174442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorian High Sorcerer",
["npcID"] = 86256,
},
[391855] = {
["source"] = "Korthrox the Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 183422,
},
[330919] = {
["npcID"] = 169912,
},
[395951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spiteful Snail",
["npcID"] = 193943,
},
[340662] = {
["npcID"] = 170739,
},
[391856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tenmod",
["npcID"] = 194763,
},
[377522] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Raging Ember",
["npcID"] = 192464,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2611,
},
[395952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonecrusher",
["npcID"] = 197125,
},
[143974] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Korven the Prime",
["npcID"] = 71155,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[424621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sergeant Shaynemail",
["npcID"] = 211291,
},
[418478] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Claw",
["npcID"] = 210684,
},
[400542] = {
["source"] = "Kalecgos",
["event"] = "SPELL_CAST_START",
["npcID"] = 193460,
},
[223590] = {
["source"] = "Dreadsoul Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 112261,
},
[400050] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepflayer Hunter",
["npcID"] = 221198,
},
[443052] = {
["source"] = "Siege Hopebreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 216019,
},
[334051] = {
["npcID"] = 168942,
},
[373429] = {
["npcID"] = 189878,
},
[334522] = {
["encounterName"] = "Hungering Destroyer",
["encounterID"] = 2383,
["npcID"] = 164261,
},
[393907] = {
["source"] = "Discordant Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 189149,
},
[436910] = {
["source"] = "Woven Threadmancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 218317,
},
[449687] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["encounterID"] = 1050,
["event"] = "SPELL_CAST_START",
["npcID"] = 40177,
},
[163182] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Smith",
["npcID"] = 80719,
},
[369335] = {
["npcID"] = 184107,
},
[371383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hailbringer Theurgist",
["npcID"] = 189229,
},
[453294] = {
["source"] = "Aggregation of Horrors",
["event"] = "SPELL_CAST_START",
["npcID"] = 220999,
},
[400052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenging Slicer",
["npcID"] = 204508,
},
[387748] = {
["source"] = "Overseer Zambul",
["event"] = "SPELL_CAST_START",
["npcID"] = 191145,
},
[395957] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Horror",
["npcID"] = 194401,
},
[389814] = {
["npcID"] = 189955,
},
[459925] = {
["source"] = "Palace Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 222305,
},
[180327] = {
["npcID"] = 115009,
},
[350916] = {
["encounterName"] = "Myza's Oasis",
["encounterID"] = 2440,
["npcID"] = 179269,
},
[225635] = {
["source"] = "Lunar Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 120721,
},
[367290] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[250213] = {
["npcID"] = 161527,
},
[461487] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[392724] = {
["source"] = "Jadzigeth",
["event"] = "SPELL_CAST_START",
["npcID"] = 188447,
},
[400055] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenging Slicer",
["npcID"] = 203384,
},
[147826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huolon",
["npcID"] = 73167,
},
[117948] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Qiang the Merciless",
["npcID"] = 60709,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[41572] = {
["source"] = "Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 23689,
},
[391866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Putrifier",
["npcID"] = 192057,
},
[426677] = {
["source"] = "Sootsnout",
["event"] = "SPELL_CAST_START",
["npcID"] = 212412,
},
[387668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Crag",
["npcID"] = 195243,
},
[126139] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha Harbinger",
["npcID"] = 66426,
},
[400057] = {
["source"] = "Volcanic Deepstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 200808,
},
[377532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderspine Crasher",
["npcID"] = 191057,
},
[459923] = {
["source"] = "Exalted Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 222368,
},
[138609] = {
["encounterName"] = "Dark Animus",
["source"] = "Massive Anima Golem",
["encounterID"] = 1576,
["event"] = "SPELL_CAST_START",
["npcID"] = 69699,
},
[375485] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Dragonspawn Flamebender",
["npcID"] = 191230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[320196] = {
["npcID"] = 168266,
},
[121532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dread Shadow",
["npcID"] = 62307,
},
[319775] = {
["npcID"] = 166872,
},
[131429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dalgan",
["npcID"] = 66274,
},
[147828] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huolon",
["npcID"] = 73167,
},
[157043] = {
["source"] = "Sargerei Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 77130,
},
[324293] = {
["npcID"] = 165919,
},
[410776] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Protector",
["npcID"] = 204658,
},
[335187] = {
["npcID"] = 182282,
},
[321565] = {
["npcID"] = 165829,
},
[382787] = {
["source"] = "Disease Slasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 187315,
},
[457398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beebiter",
["npcID"] = 222284,
},
[427157] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["encounterID"] = 2788,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208747,
},
[394466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primordial Hail",
["npcID"] = 189039,
},
[391871] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskpaw Tendontearer",
["npcID"] = 197820,
},
[309961] = {
["encounterName"] = "Il'gynoth, Corruption Reborn",
["source"] = "Il'gynoth",
["encounterID"] = 2345,
["event"] = "SPELL_CAST_START",
["npcID"] = 158328,
},
[320200] = {
["encounterName"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["encounterID"] = 2389,
},
[395967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vicious Hyena",
["npcID"] = 197123,
},
[340678] = {
["npcID"] = 161455,
},
[400063] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underlight Queen",
["npcID"] = 203593,
},
[227365] = {
["encounterName"] = "Attumen the Huntsman",
["encounterID"] = 1960,
["npcID"] = 114264,
},
[302682] = {
["encounterName"] = "Trixie & Naeno",
["encounterID"] = 2312,
["npcID"] = 150712,
},
[133496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shieldwall Rifleman",
["npcID"] = 67297,
},
[212031] = {
["encounterName"] = "Patrol Captain Gerdo",
["npcID"] = 105705,
["encounterID"] = 1868,
},
[50276] = {
["source"] = "Ilsa Direbrew",
["event"] = "SPELL_CAST_START",
["npcID"] = 26764,
},
[393443] = {
["source"] = "Veshrak of the North",
["event"] = "SPELL_CAST_START",
["npcID"] = 188713,
},
[72014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkspear Shaman",
["npcID"] = 38326,
},
[350919] = {
["encounterName"] = "Myza's Oasis",
["encounterID"] = 2440,
["npcID"] = 176563,
},
[374343] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[400066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Preying Dustmoth",
["npcID"] = 201068,
},
[438973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pit Lord",
["npcID"] = 228574,
},
[241004] = {
["source"] = "Volatile Corruption",
["event"] = "SPELL_CAST_START",
["npcID"] = 120158,
},
[51219] = {
["npcID"] = 46859,
},
[258199] = {
["source"] = "Irontide Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 130400,
},
[406210] = {
["source"] = "Sundered Naturalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 201746,
},
[459449] = {
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[451261] = {
["source"] = "Twilight Earthcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 224219,
},
[394838] = {
["source"] = "Henlare",
["event"] = "SPELL_CAST_START",
["npcID"] = 193229,
},
[413133] = {
["source"] = "Forgemaster Kraglin",
["event"] = "SPELL_CAST_START",
["npcID"] = 201625,
},
[350922] = {
["encounterName"] = "Myza's Oasis",
["encounterID"] = 2440,
["npcID"] = 179269,
},
[387783] = {
["source"] = "Windseeker Avash",
["event"] = "SPELL_CAST_START",
["npcID"] = 192045,
},
[338636] = {
["npcID"] = 167731,
},
[438976] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[162066] = {
["encounterName"] = "Skylord Tovra",
["encounterID"] = 1736,
["npcID"] = 80005,
},
[445123] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[119487] = {
["source"] = "Sha of Anger",
["event"] = "SPELL_CAST_START",
["npcID"] = 60491,
},
[395943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spiteful Snail",
["npcID"] = 193943,
},
[193611] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[320208] = {
["encounterName"] = "Surgeon Stitchflesh",
["npcID"] = 164578,
["encounterID"] = 2389,
},
[152953] = {
["source"] = "Solar Familiar",
["event"] = "SPELL_CAST_START",
["npcID"] = 76097,
},
[83877] = {
["npcID"] = 44926,
},
[455364] = {
["source"] = "Kx",
["event"] = "SPELL_CAST_START",
["npcID"] = 216582,
},
[328400] = {
["npcID"] = 164737,
},
[157049] = {
["source"] = "Grom'tash the Destructor",
["event"] = "SPELL_CAST_START",
["npcID"] = 77889,
},
[406215] = {
["source"] = "Remembered Diemetradon",
["event"] = "SPELL_CAST_START",
["npcID"] = 221883,
},
[398483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nimbulatus, Storm's Wrath",
["npcID"] = 199667,
},
[33895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gan'arg Sapper",
["npcID"] = 18827,
},
[152954] = {
["encounterName"] = "Vigilant Kaathar",
["source"] = "Vigilant Kaathar",
["encounterID"] = 1686,
["event"] = "SPELL_CAST_START",
["npcID"] = 75839,
},
[38759] = {
["encounterName"] = "Pandemonius",
["source"] = "Pandemonius",
["encounterID"] = 1900,
["event"] = "SPELL_CAST_START",
["npcID"] = 18341,
},
[424646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flametouched Enforcer",
["npcID"] = 210150,
},
[188046] = {
["npcID"] = 198489,
},
[412360] = {
["source"] = "Spinmarrow",
["event"] = "SPELL_CAST_START",
["npcID"] = 203480,
},
[400078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deeplung Glowsplasher",
["npcID"] = 204013,
},
[120512] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osul Veteran Archer",
["npcID"] = 61886,
},
[451268] = {
["source"] = "Rotbark the Unfelled",
["event"] = "SPELL_CAST_START",
["npcID"] = 217670,
},
[445125] = {
["source"] = "Cindersting",
["event"] = "SPELL_CAST_START",
["npcID"] = 220238,
},
[275162] = {
["npcID"] = 161528,
},
[383693] = {
["source"] = "Nokhud Beastmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 192794,
},
[164218] = {
["npcID"] = 81407,
},
[404171] = {
["source"] = "Vakan",
["event"] = "SPELL_CAST_START",
["npcID"] = 199855,
},
[332500] = {
["npcID"] = 162593,
},
[422614] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[361169] = {
["npcID"] = 182466,
},
[328411] = {
["npcID"] = 182266,
},
[162171] = {
["encounterName"] = "Rocketspark and Borka",
["encounterID"] = 1715,
["npcID"] = 77803,
},
[400077] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deeplung Glowsplasher",
["npcID"] = 204013,
},
[361170] = {
["npcID"] = 182523,
},
[161150] = {
["npcID"] = 80936,
},
[120001] = {
["encounterName"] = "Vizier Jin'bak",
["source"] = "Vizier Jin'bak",
["npcID"] = 61567,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1465,
},
[342741] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 172858,
},
[317959] = {
["npcID"] = 163458,
},
[126257] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amani Outrider",
["npcID"] = 64639,
},
[365272] = {
["encounterName"] = "Prototype Pantheon",
["encounterID"] = 2544,
["npcID"] = 181551,
},
[328857] = {
["encounterName"] = "Shriekwing",
["encounterID"] = 2398,
["npcID"] = 164406,
},
[441483] = {
["source"] = "Deathpetal",
["event"] = "SPELL_CAST_START",
["npcID"] = 206184,
},
[157053] = {
["source"] = "Durag the Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 77890,
},
[116018] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["npcID"] = 60009,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1390,
},
[396432] = {
["source"] = "Ancient Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 189798,
},
[393937] = {
["source"] = "Discordant Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 189149,
},
[328413] = {
["npcID"] = 157463,
},
[422606] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volgoth the Flamebringer",
["npcID"] = 209129,
},
[269029] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["npcID"] = 129208,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2109,
},
[369365] = {
["npcID"] = 184132,
},
[412368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underlight Queen",
["npcID"] = 203593,
},
[91335] = {
["source"] = "Zandalari Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 61842,
},
[257397] = {
["source"] = "Irontide Bonesaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 129788,
},
[451276] = {
["source"] = "Rotbark the Unfelled",
["event"] = "SPELL_CAST_START",
["npcID"] = 217670,
},
[404178] = {
["source"] = "Veltrax",
["event"] = "SPELL_CAST_START",
["npcID"] = 200904,
},
[260466] = {
["source"] = "Shadow of the Darkness",
["event"] = "SPELL_CAST_START",
["npcID"] = 132090,
},
[399024] = {
["source"] = "Farscale Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 200486,
},
[324323] = {
["npcID"] = 165919,
},
[455815] = {
["source"] = "Crazed Cabbage Smacker",
["event"] = "SPELL_CAST_START",
["npcID"] = 206514,
},
[199034] = {
["source"] = "Valarjar Aspirant",
["event"] = "SPELL_CAST_START",
["npcID"] = 101637,
},
[396430] = {
["source"] = "Arcane Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 190779,
},
[377559] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 186120,
},
[412371] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underlight Queen",
["npcID"] = 203593,
},
[332509] = {
["npcID"] = 164555,
},
[38760] = {
["encounterName"] = "Pandemonius",
["source"] = "Pandemonius",
["encounterID"] = 1900,
["event"] = "SPELL_CAST_START",
["npcID"] = 18341,
},
[328414] = {
["npcID"] = 165270,
},
[338653] = {
["npcID"] = 173044,
},
[422611] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[334558] = {
["npcID"] = 171448,
},
[451280] = {
["source"] = "Rotbark the Unfelled",
["event"] = "SPELL_CAST_START",
["npcID"] = 217670,
},
[395991] = {
["source"] = "Raging Torrent",
["event"] = "SPELL_CAST_START",
["npcID"] = 197221,
},
[127280] = {
["source"] = "Viletongue Skirmisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 58738,
},
[455377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ahg'zagall",
["npcID"] = 214151,
},
[361180] = {
["npcID"] = 182150,
},
[126256] = {
["source"] = "Amani Outrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 64639,
},
[406231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lingering Wrath",
["npcID"] = 201758,
},
[342751] = {
["npcID"] = 171596,
},
[414425] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[152962] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["encounterID"] = 1688,
["event"] = "SPELL_CAST_START",
["npcID"] = 75829,
},
[381659] = {
["source"] = "Augmented Flood",
["event"] = "SPELL_CAST_START",
["npcID"] = 192457,
},
[342752] = {
["npcID"] = 173633,
},
[391903] = {
["source"] = "Ruby Egg Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 190171,
},
[427159] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[111813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Guard",
["npcID"] = 58822,
},
[198959] = {
["source"] = "Valarjar Runecarver",
["event"] = "SPELL_CAST_START",
["npcID"] = 96664,
},
[46184] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Zelfan",
["encounterID"] = 1895,
["event"] = "SPELL_CAST_START",
["npcID"] = 24556,
},
[451288] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "Lost Watcher",
["encounterID"] = 2917,
["event"] = "SPELL_CAST_START",
["npcID"] = 221667,
},
[455380] = {
["source"] = "Malfunctioning Railbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 218251,
},
[318181] = {
["npcID"] = 157277,
},
[385757] = {
["source"] = "Mender Eskros",
["event"] = "SPELL_CAST_START",
["npcID"] = 195303,
},
[412378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Timebender",
["npcID"] = 205337,
},
[375950] = {
["source"] = "Primalist Icecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 190377,
},
[249210] = {
["source"] = "Blazing Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 125545,
},
[320230] = {
["encounterName"] = "Dealer Xy'exa",
["npcID"] = 164450,
["encounterID"] = 2400,
},
[152964] = {
["source"] = "Void Spawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 75652,
},
[381663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apex Blazewing",
["npcID"] = 193291,
},
[404188] = {
["source"] = "Static Charge",
["event"] = "SPELL_CAST_START",
["npcID"] = 202847,
},
[372027] = {
["encounterName"] = "The Primal Council",
["source"] = "Embar Firepath",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187767,
},
[428762] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Scavenger",
["npcID"] = 46183,
},
[79050] = {
["encounterName"] = "High Priestess Azil",
["npcID"] = 42333,
["encounterID"] = 1057,
},
[128708] = {
["source"] = "Bubbling Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59521,
},
[459479] = {
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[412383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossian",
["npcID"] = 204093,
},
[451295] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hollows Resident",
["npcID"] = 219983,
},
[334567] = {
["npcID"] = 171448,
},
[257402] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[322281] = {
["npcID"] = 159505,
},
[430812] = {
["source"] = "Coalescing Void Diffuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 214421,
},
[142727] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Xaril the Poisoned Mind",
["npcID"] = 71157,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[361189] = {
["npcID"] = 182152,
},
[396001] = {
["source"] = "The Songbird Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 59553,
},
[323393] = {
["encounterName"] = "Lord Chamberlain",
["npcID"] = 164218,
["encounterID"] = 2381,
},
[457434] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riled Dirtdiver",
["npcID"] = 225905,
},
[330403] = {
["npcID"] = 168153,
},
[285319] = {
["npcID"] = 146831,
},
[373477] = {
["source"] = "Bound Shoresnapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 190193,
},
[249211] = {
["source"] = "Feltouched Skitterer",
["event"] = "SPELL_CAST_START",
["npcID"] = 125547,
},
[227463] = {
["encounterName"] = "Moroes",
["encounterID"] = 1961,
["npcID"] = 114320,
},
[281329] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Jolly",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 126845,
},
[418531] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2709,
},
[449245] = {
["source"] = "Tij'allet",
["event"] = "SPELL_CAST_START",
["npcID"] = 215600,
},
[398012] = {
["npcID"] = 191093,
},
[256589] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Raoul",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 126847,
},
[3636] = {
["source"] = "Jadespine Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 4863,
},
[449246] = {
["event"] = "SPELL_CAST_START",
["source"] = "General Emmerich",
["npcID"] = 215371,
},
[328429] = {
["npcID"] = 168022,
},
[49309] = {
["npcID"] = 2718,
},
[332525] = {
["npcID"] = 171396,
},
[391910] = {
["source"] = "Mordigan Ironjaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 187353,
},
[102601] = {
["npcID"] = 54920,
},
[412388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underlight Queen",
["npcID"] = 203593,
},
[332526] = {
["npcID"] = 171396,
},
[285428] = {
["encounterName"] = "Jadefire Masters",
["encounterID"] = 2285,
["npcID"] = 144692,
},
[371358] = {
["source"] = "Unstable Curator",
["event"] = "SPELL_CAST_START",
["npcID"] = 187154,
},
[396007] = {
["source"] = "The Songbird Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 59553,
},
[391913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnawbone Splintershield",
["npcID"] = 197847,
},
[381681] = {
["source"] = "Rustpine Immolator",
["event"] = "SPELL_CAST_START",
["npcID"] = 187396,
},
[436971] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[453345] = {
["source"] = "Manifested Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 211341,
},
[373483] = {
["source"] = "Soggymaw Wavebringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187263,
},
[457441] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Firelord",
["npcID"] = 212088,
},
[284393] = {
["encounterName"] = "Stormwall Blockade",
["encounterID"] = 2280,
["npcID"] = 146253,
},
[373897] = {
["source"] = "Decayed Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 189531,
},
[439012] = {
["source"] = "Venommaster Nezarox",
["event"] = "SPELL_CAST_START",
["npcID"] = 219006,
},
[449251] = {
["source"] = "Nerubian Threadmancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 208244,
},
[360373] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[355048] = {
["npcID"] = 178139,
},
[160140] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Firemender",
["npcID"] = 87841,
},
[391915] = {
["source"] = "Grounded Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 187204,
},
[365299] = {
["npcID"] = 184539,
},
[114890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osul Invader",
["npcID"] = 60455,
},
[365295] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 181954,
["encounterID"] = 2546,
},
[342770] = {
["npcID"] = 173604,
},
[377991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Sentry",
["npcID"] = 192680,
},
[346866] = {
["npcID"] = 174175,
},
[375943] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[326389] = {
["encounterName"] = "Echelon",
["encounterID"] = 2380,
["npcID"] = 164185,
},
[328437] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 166644,
},
[404207] = {
["source"] = "Lieutenant Narlena",
["event"] = "SPELL_CAST_START",
["npcID"] = 202244,
},
[389870] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Colossal Stormfiend",
["npcID"] = 197145,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[289937] = {
["npcID"] = 148667,
},
[418539] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Banehollow",
["npcID"] = 204243,
},
[305913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogre Shadowcaster",
["npcID"] = 153242,
},
[365298] = {
["npcID"] = 184539,
},
[457447] = {
["source"] = "Ixlorb the Spinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 218426,
},
[418540] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Banehollow",
["npcID"] = 204243,
},
[152973] = {
["source"] = "Defense Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 76087,
},
[260480] = {
["source"] = "Dark Tendril",
["event"] = "SPELL_CAST_START",
["npcID"] = 125136,
},
[457448] = {
["source"] = "Deepwater Snapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 214550,
},
[459496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Lich King",
["npcID"] = 224157,
},
[16568] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Alliance Priest",
["npcID"] = 214152,
},
[85710] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Snowstalker",
["npcID"] = 70463,
},
[9053] = {
["npcID"] = 7034,
},
[410351] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199659,
},
[387826] = {
["source"] = "Ukhel Beastcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195878,
},
[381683] = {
["source"] = "Nokhud Warspear",
["event"] = "SPELL_CAST_START",
["npcID"] = 192791,
},
[457450] = {
["source"] = "Recalled Orinoko Tuskbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 221719,
},
[426734] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["encounterID"] = 2837,
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[396018] = {
["source"] = "The Crybaby Hozen",
["event"] = "SPELL_CAST_START",
["npcID"] = 59552,
},
[357512] = {
["npcID"] = 180495,
},
[285440] = {
["encounterName"] = "Machinist's Garden",
["npcID"] = 144248,
["encounterID"] = 2259,
},
[418544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Banehollow",
["npcID"] = 204243,
},
[396019] = {
["source"] = "The Golden Beetle",
["event"] = "SPELL_CAST_START",
["npcID"] = 59545,
},
[366406] = {
["npcID"] = 184908,
},
[365847] = {
["npcID"] = 183229,
},
[369399] = {
["npcID"] = 186420,
},
[412402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flowfy",
["npcID"] = 203660,
},
[199050] = {
["source"] = "Valarjar Shieldmaiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 95832,
},
[356602] = {
["npcID"] = 180164,
},
[361209] = {
["npcID"] = 182466,
},
[412275] = {
["source"] = "Captain Reykal",
["event"] = "SPELL_CAST_START",
["npcID"] = 203355,
},
[260483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Necrogg the Darkspeaker",
["npcID"] = 104890,
},
[391898] = {
["source"] = "Mistyvale Firestarter",
["event"] = "SPELL_CAST_START",
["npcID"] = 193969,
},
[215433] = {
["source"] = "Valarjar Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 95834,
},
[393609] = {
["source"] = "Krojek The Shoreprowler",
["event"] = "SPELL_CAST_START",
["npcID"] = 187645,
},
[357115] = {
["npcID"] = 177915,
},
[227917] = {
["npcID"] = 114526,
},
[356942] = {
["npcID"] = 179837,
},
[396023] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 184972,
},
[194956] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[196787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel-Infused Fury",
["npcID"] = 99956,
},
[377594] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[206219] = {
["encounterName"] = "Gul'dan",
["source"] = "Gul'dan",
["encounterID"] = 1866,
["event"] = "SPELL_CAST_START",
["npcID"] = 104154,
},
[124107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ban Bearheart",
["npcID"] = 61819,
},
[375547] = {
["npcID"] = 191286,
},
[404695] = {
["event"] = "SPELL_CAST_START",
["source"] = "First Mate Ovdah",
["npcID"] = 201182,
},
[404216] = {
["source"] = "Lieutenant Narlena",
["event"] = "SPELL_CAST_START",
["npcID"] = 202244,
},
[143765] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Kaz'tik the Manipulator",
["npcID"] = 71156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[457458] = {
["source"] = "Siegelord Xerosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 224311,
},
[118988] = {
["encounterName"] = "Gekkan",
["source"] = "Gekkan",
["encounterID"] = 2129,
["event"] = "SPELL_CAST_START",
["npcID"] = 61243,
},
[412408] = {
["source"] = "Field Despair Bot K156",
["event"] = "SPELL_CAST_START",
["npcID"] = 205612,
},
[463602] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["encounterID"] = 2393,
["event"] = "SPELL_CAST_START",
["npcID"] = 164517,
},
[120524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osul Veteran Archer",
["npcID"] = 61886,
},
[402170] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vengeful Research",
["npcID"] = 201490,
},
[334488] = {
["encounterName"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["encounterID"] = 2389,
},
[365851] = {
["npcID"] = 183404,
},
[457460] = {
["source"] = "Ixlorb the Spinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 218426,
},
[369411] = {
["npcID"] = 184301,
},
[445174] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "Forgotten Harbinger",
["encounterID"] = 2917,
["event"] = "SPELL_CAST_START",
["npcID"] = 221945,
},
[381694] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186124,
},
[249224] = {
["source"] = "Riftworld Assistant",
["event"] = "SPELL_CAST_START",
["npcID"] = 125535,
},
[184720] = {
["source"] = "Darkcaster Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 93295,
},
[404220] = {
["source"] = "Lieutenant Narlena",
["event"] = "SPELL_CAST_START",
["npcID"] = 202244,
},
[398463] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Burster",
["npcID"] = 200801,
},
[193936] = {
["source"] = "Frenzied Animus",
["event"] = "SPELL_CAST_START",
["npcID"] = 96579,
},
[369409] = {
["npcID"] = 184130,
},
[340207] = {
["npcID"] = 161528,
},
[307977] = {
["encounterName"] = "Prophet Skitra",
["source"] = "Prophet Skitra",
["encounterID"] = 2334,
["event"] = "SPELL_CAST_START",
["npcID"] = 157238,
},
[87761] = {
["npcID"] = 45928,
},
[117960] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["npcID"] = 60410,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1500,
},
[412413] = {
["source"] = "Skornak",
["event"] = "SPELL_CAST_START",
["npcID"] = 203643,
},
[391939] = {
["npcID"] = 189206,
},
[328069] = {
["npcID"] = 168240,
},
[41069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Deathshaper",
["npcID"] = 22882,
},
[449277] = {
["event"] = "SPELL_CAST_START",
["source"] = "General Emmerich",
["npcID"] = 215371,
},
[392318] = {
["source"] = "Ohn'ir Initiate",
["event"] = "SPELL_CAST_START",
["npcID"] = 193985,
},
[326409] = {
["npcID"] = 164557,
},
[418558] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Banehollow",
["npcID"] = 204243,
},
[406282] = {
["source"] = "Sundered Naturalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 201746,
},
[463609] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nether Phantom",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 218429,
},
[414473] = {
["source"] = "Greaves",
["event"] = "SPELL_CAST_START",
["npcID"] = 207278,
},
[118990] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mortbreath Skulker",
["npcID"] = 60202,
},
[387843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spectral Invoker",
["npcID"] = 196202,
},
[439037] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ravenous Spawn",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 216205,
},
[87762] = {
["npcID"] = 45930,
},
[287882] = {
["source"] = "Princess Talanji",
["event"] = "SPELL_CAST_START",
["npcID"] = 148407,
},
[184724] = {
["source"] = "Shadowheart Fiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 93298,
},
[381701] = {
["npcID"] = 190933,
},
[342794] = {
["npcID"] = 174336,
},
[418561] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Banehollow",
["npcID"] = 204243,
},
[148888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Shredder",
["npcID"] = 73767,
},
[54431] = {
["source"] = "Dojani Surveyor",
["event"] = "SPELL_CAST_START",
["npcID"] = 58068,
},
[142745] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Hound",
["npcID"] = 70702,
},
[369416] = {
["npcID"] = 182168,
},
[453749] = {
["source"] = "Kelpmire",
["event"] = "SPELL_CAST_START",
["npcID"] = 220287,
},
[68821] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apothecary Baxter",
["npcID"] = 36565,
},
[386173] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[328462] = {
["npcID"] = 168845,
},
[200637] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[373513] = {
["npcID"] = 190128,
},
[364942] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[377609] = {
["source"] = "Obsidian Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 186919,
},
[376272] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Tarasek Earthreaver",
["npcID"] = 191225,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[324368] = {
["encounterName"] = "Kin-Tara",
["encounterID"] = 2357,
["npcID"] = 163077,
},
[391944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnawbone Splintershield",
["npcID"] = 197847,
},
[443138] = {
["source"] = "Royal Scribe",
["event"] = "SPELL_CAST_START",
["npcID"] = 221035,
},
[387849] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[324372] = {
["isChanneled"] = true,
["source"] = "Skeletal Monstrosity",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165197,
},
[200084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Retainer",
["npcID"] = 98366,
},
[344847] = {
["npcID"] = 178226,
},
[396041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cracked Concretion",
["npcID"] = 197074,
},
[194966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Etheldrin Ravencrest",
["npcID"] = 98521,
},
[391948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steam Coalescence",
["npcID"] = 190110,
},
[377612] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[359960] = {
["encounterName"] = "Lords of Dread",
["npcID"] = 181398,
["encounterID"] = 2543,
},
[445191] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitfire Charger",
["npcID"] = 213577,
},
[137427] = {
["npcID"] = 32969,
},
[449290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chasm Maker",
["npcID"] = 233021,
},
[367379] = {
["npcID"] = 178778,
},
[122064] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Sra'thik Amber-Trapper",
["npcID"] = 62405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1498,
},
[367375] = {
["npcID"] = 178778,
},
[147868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackfuse Engineer",
["npcID"] = 73095,
},
[396044] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["encounterID"] = 2609,
["event"] = "SPELL_CAST_START",
["npcID"] = 188252,
},
[174489] = {
["source"] = "Solar Magnifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 77559,
},
[369788] = {
["source"] = "Qalashi Djaradin",
["event"] = "SPELL_CAST_START",
["npcID"] = 195032,
},
[327296] = {
["npcID"] = 158870,
},
[7855] = {
["source"] = "Mjordin Water Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 30632,
},
[414475] = {
["source"] = "Greaves",
["event"] = "SPELL_CAST_START",
["npcID"] = 207278,
},
[256401] = {
["source"] = "Shadow-Blind Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 206096,
},
[208279] = {
["source"] = "Igrul the Scalebane",
["event"] = "SPELL_CAST_START",
["npcID"] = 105159,
},
[287877] = {
["encounterName"] = "Mekkatorque",
["encounterID"] = 2276,
["npcID"] = 148450,
},
[414476] = {
["source"] = "Greaves",
["event"] = "SPELL_CAST_START",
["npcID"] = 207278,
},
[310041] = {
["npcID"] = 166071,
},
[453392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Eradicator",
["npcID"] = 225408,
},
[449285] = {
["source"] = "Shyalude",
["event"] = "SPELL_CAST_START",
["npcID"] = 223834,
},
[414477] = {
["source"] = "Greaves",
["event"] = "SPELL_CAST_START",
["npcID"] = 207278,
},
[310042] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Basher Tentacle",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158367,
},
[90325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Gargantuan",
["npcID"] = 109154,
},
[328475] = {
["npcID"] = 164737,
},
[340759] = {
["npcID"] = 161455,
},
[400144] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vraken the Hunter",
["npcID"] = 200584,
},
[184730] = {
["source"] = "Slavering Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 93303,
},
[449295] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["npcID"] = 204188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2878,
},
[359547] = {
["npcID"] = 182392,
},
[367381] = {
["npcID"] = 178778,
},
[136985] = {
["npcID"] = 69435,
},
[273185] = {
["npcID"] = 150251,
},
[67289] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaz'tik the Manipulator",
["npcID"] = 64013,
},
[257426] = {
["source"] = "Irontide Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 129602,
},
[336666] = {
["npcID"] = 158891,
},
[60781] = {
["npcID"] = 30205,
},
[373526] = {
["source"] = "Shimmerwing Monarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 210767,
},
[393411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rakkesh of the Flow",
["npcID"] = 193849,
},
[384161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Irontorch",
["npcID"] = 189464,
},
[38556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaskala Defender",
["npcID"] = 25764,
},
[289572] = {
["npcID"] = 148613,
},
[375575] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Dragonspawn Flamebender",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191230,
},
[75992] = {
["npcID"] = 40634,
},
[374112] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Frostbreath Arachnid",
["npcID"] = 189234,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[357146] = {
["npcID"] = 177938,
},
[391958] = {
["source"] = "Relentless Gust",
["event"] = "SPELL_CAST_START",
["npcID"] = 194159,
},
[41072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Blood Mage",
["npcID"] = 22945,
},
[385170] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wind Serpent",
["npcID"] = 191645,
},
[375580] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[391959] = {
["source"] = "Ganmat the Wise",
["event"] = "SPELL_CAST_START",
["npcID"] = 192226,
},
[426771] = {
["source"] = "Void Bound Despoiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 212765,
},
[113364] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["npcID"] = 59150,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1420,
},
[203163] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felspite Dominator",
["npcID"] = 102788,
},
[324387] = {
["npcID"] = 165197,
},
[131492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mande-flammes gatrul’lon",
["npcID"] = 66268,
},
[445205] = {
["source"] = "Drained Cinderbee",
["event"] = "SPELL_CAST_START",
["npcID"] = 224080,
},
[256405] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["encounterID"] = 2095,
["event"] = "SPELL_CAST_START",
["npcID"] = 126969,
},
[449298] = {
["isChanneled"] = true,
["source"] = "Mi'thk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211582,
},
[320293] = {
["encounterName"] = "An Affront of Challengers",
["encounterID"] = 2391,
["npcID"] = 164461,
},
[330875] = {
["npcID"] = 169893,
},
[241049] = {
["source"] = "Lylth the Silent",
["event"] = "SPELL_CAST_START",
["npcID"] = 120808,
},
[334625] = {
["encounterName"] = "Devos, Paragon of Loyalty",
["encounterID"] = 2359,
["npcID"] = 162061,
},
[324079] = {
["encounterName"] = "Mordretha",
["encounterID"] = 2404,
["npcID"] = 165946,
},
[445207] = {
["source"] = "Void Bound Howler",
["event"] = "SPELL_CAST_START",
["npcID"] = 221979,
},
[455443] = {
["source"] = "Waxx",
["event"] = "SPELL_CAST_START",
["npcID"] = 226267,
},
[86830] = {
["npcID"] = 43391,
},
[369781] = {
["encounterName"] = "The Lost Dwarves",
["encounterID"] = 2555,
["npcID"] = 184582,
},
[314149] = {
["source"] = "Dark Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 161286,
},
[441452] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[412444] = {
["source"] = "Brullo the Strong",
["event"] = "SPELL_CAST_START",
["npcID"] = 203621,
},
[82137] = {
["npcID"] = 39665,
},
[330532] = {
["npcID"] = 164510,
},
[207261] = {
["encounterName"] = "Patrol Captain Gerdo",
["npcID"] = 104215,
["encounterID"] = 1868,
},
[62318] = {
["npcID"] = 32883,
},
[445210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitfire Charger",
["npcID"] = 213577,
},
[289578] = {
["npcID"] = 148614,
},
[406304] = {
["source"] = "Memory of a Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 200527,
},
[366701] = {
["npcID"] = 185268,
},
[131733] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Plongeur hozen",
["npcID"] = 66148,
},
[371489] = {
["isChanneled"] = true,
["source"] = "Primal Terrasentry",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188067,
},
[289585] = {
["npcID"] = 148582,
},
[359203] = {
["npcID"] = 181857,
},
[369442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infused Proto-Drake",
["npcID"] = 189515,
},
[424737] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["encounterID"] = 2861,
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[406302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Caster",
["npcID"] = 200824,
},
[392304] = {
["source"] = "Khomuur",
["event"] = "SPELL_CAST_START",
["npcID"] = 194438,
},
[443162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devouring Shade",
["npcID"] = 217870,
},
[437019] = {
["source"] = "Kaheti Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 218316,
},
[390256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaighan Keeper",
["npcID"] = 190680,
},
[326441] = {
["npcID"] = 164557,
},
[400165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Twilight Magus",
["npcID"] = 201223,
},
[152998] = {
["encounterName"] = "High Sage Viryx",
["source"] = "Grand Defense Construct",
["encounterID"] = 1701,
["event"] = "SPELL_CAST_START",
["npcID"] = 76145,
},
[324394] = {
["npcID"] = 165197,
},
[441116] = {
["isChanneled"] = true,
["source"] = "Regurgitating Monstrosity",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220138,
},
[385827] = {
["source"] = "Rageclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 187192,
},
[412448] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepflayer Broodmatron",
["npcID"] = 200115,
},
[119511] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tak Tak",
["npcID"] = 59958,
},
[142760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Dire Soldier",
["npcID"] = 70665,
},
[320300] = {
["encounterName"] = "An Affront of Challengers",
["encounterID"] = 2391,
["npcID"] = 164461,
},
[404258] = {
["source"] = "Reisa the Drowned",
["event"] = "SPELL_CAST_START",
["npcID"] = 200600,
},
[447261] = {
["encounterName"] = "General Umbriss",
["source"] = "General Umbriss",
["encounterID"] = 1051,
["event"] = "SPELL_CAST_START",
["npcID"] = 39625,
},
[396751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Moth'go Deeploom",
["npcID"] = 193735,
},
[64152] = {
["encounterName"] = "Yogg-Saron",
["npcID"] = 33985,
["encounterID"] = 1143,
},
[404259] = {
["source"] = "Pyrachniss",
["event"] = "SPELL_CAST_START",
["npcID"] = 200978,
},
[191900] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 91784,
},
[375591] = {
["source"] = "Bubbling Sapling",
["event"] = "SPELL_CAST_START",
["npcID"] = 191313,
},
[368984] = {
["source"] = "Qalashi Flameshatter",
["event"] = "SPELL_CAST_START",
["npcID"] = 191136,
},
[76508] = {
["npcID"] = 39982,
},
[396073] = {
["source"] = "The Nodding Tiger",
["event"] = "SPELL_CAST_START",
["npcID"] = 59544,
},
[318255] = {
["npcID"] = 164143,
},
[326450] = {
["npcID"] = 164562,
},
[289587] = {
["npcID"] = 148614,
},
[422691] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[457503] = {
["source"] = "Cogchewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212617,
},
[385832] = {
["source"] = "Rageclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 187192,
},
[445217] = {
["source"] = "Cinderbee Worker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215023,
},
[289914] = {
["npcID"] = 148673,
},
[420647] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashendir Hartwood",
["npcID"] = 211258,
},
[375919] = {
["npcID"] = 182008,
},
[265016] = {
["source"] = "Chosen Blood Matron",
["event"] = "SPELL_CAST_START",
["npcID"] = 131436,
},
[133548] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkhatched Sorcerer",
["npcID"] = 67748,
},
[396071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayed Elder",
["npcID"] = 197142,
},
[303924] = {
["npcID"] = 155911,
},
[412455] = {
["source"] = "Alcanon",
["event"] = "SPELL_CAST_START",
["npcID"] = 203515,
},
[453733] = {
["source"] = "Shurrai",
["event"] = "SPELL_CAST_START",
["npcID"] = 221224,
},
[138668] = {
["source"] = "Drakkari Frost Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 69910,
},
[394348] = {
["source"] = "Mordigan Ironjaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 187353,
},
[173480] = {
["npcID"] = 83389,
},
[373549] = {
["source"] = "Dismay Fly",
["event"] = "SPELL_CAST_START",
["npcID"] = 193370,
},
[80195] = {
["npcID"] = 42692,
},
[451364] = {
["source"] = "Twilight Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 224152,
},
[265019] = {
["source"] = "Chosen Blood Matron",
["event"] = "SPELL_CAST_START",
["npcID"] = 131436,
},
[414506] = {
["source"] = "Ashen Emberwing",
["event"] = "SPELL_CAST_START",
["npcID"] = 209098,
},
[424744] = {
["source"] = "Voracious Mikanji",
["event"] = "SPELL_CAST_START",
["npcID"] = 210508,
},
[347249] = {
["encounterName"] = "So'azmi",
["encounterID"] = 2437,
["npcID"] = 175806,
},
[375596] = {
["isChanneled"] = true,
["source"] = "Arcane Tender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196115,
},
[447270] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 207946,
},
[449318] = {
["source"] = "Nerubian Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 208242,
},
[360412] = {
["encounterName"] = "Vigilant Guardian",
["encounterID"] = 2512,
["npcID"] = 180773,
},
[322358] = {
["encounterName"] = "Doctor Ickus",
["npcID"] = 164967,
["encounterID"] = 2384,
},
[340788] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 166644,
},
[391982] = {
["source"] = "Magmatalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 189538,
},
[373869] = {
["source"] = "Scorchling",
["event"] = "SPELL_CAST_START",
["npcID"] = 190205,
},
[396078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Destroyer",
["npcID"] = 193288,
},
[373084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontorch Commander",
["npcID"] = 189466,
},
[326455] = {
["encounterName"] = "Sun King's Salvation",
["encounterID"] = 2402,
["npcID"] = 165805,
},
[189865] = {
["source"] = "Tidecaller Nezara",
["event"] = "SPELL_CAST_START",
["npcID"] = 157734,
},
[153002] = {
["encounterName"] = "Vigilant Kaathar",
["source"] = "Vigilant Kaathar",
["encounterID"] = 1686,
["event"] = "SPELL_CAST_START",
["npcID"] = 75839,
},
[308026] = {
["npcID"] = 157824,
},
[449321] = {
["isChanneled"] = true,
["source"] = "Mi'thk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211582,
},
[418605] = {
["source"] = "Future Self",
["event"] = "SPELL_CAST_START",
["npcID"] = 208887,
},
[115418] = {
["source"] = "Krik'thik Wind Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 59801,
},
[316218] = {
["npcID"] = 169476,
},
[401205] = {
["source"] = "Carcaxas",
["event"] = "SPELL_CAST_START",
["npcID"] = 202836,
},
[141750] = {
["source"] = "Huntmaster S'thoc",
["event"] = "SPELL_CAST_START",
["npcID"] = 71259,
},
[375605] = {
["npcID"] = 185272,
},
[389951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strunraan",
["npcID"] = 193534,
},
[359222] = {
["encounterName"] = "Myza's Oasis",
["encounterID"] = 2440,
["npcID"] = 176561,
},
[402225] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vengeful Research",
["npcID"] = 201490,
},
[378420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Provoked Geode",
["npcID"] = 189040,
},
[377658] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[200105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Protector",
["npcID"] = 98368,
},
[377962] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gloomfur Sasquatch",
["npcID"] = 190723,
},
[324417] = {
["npcID"] = 162133,
},
[130265] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Soldier",
["npcID"] = 66291,
},
[326460] = {
["npcID"] = 160654,
},
[294180] = {
["npcID"] = 151773,
},
[396084] = {
["npcID"] = 190933,
},
[287565] = {
["encounterName"] = "Lady Jaina Proudmoore",
["encounterID"] = 2281,
["npcID"] = 146409,
},
[394344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Death's Shadow",
["npcID"] = 190985,
},
[394037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbound Attendant",
["npcID"] = 187036,
},
[418621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Fanatic",
["npcID"] = 207896,
},
[332605] = {
["npcID"] = 170572,
},
[334653] = {
["npcID"] = 165076,
},
[369465] = {
["npcID"] = 186420,
},
[420659] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["encounterID"] = 2787,
["event"] = "SPELL_CAST_START",
["npcID"] = 208745,
},
[141746] = {
["source"] = "Viletongue Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 58737,
},
[326463] = {
["npcID"] = 165912,
},
[262983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nazeshi Tempest-Wielder",
["npcID"] = 128604,
},
[355132] = {
["npcID"] = 178141,
},
[130266] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Soldier",
["npcID"] = 66200,
},
[326464] = {
["npcID"] = 165912,
},
[262984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nazeshi Tempest-Wielder",
["npcID"] = 128604,
},
[389949] = {
["source"] = "Nokhud Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 187299,
},
[332608] = {
["npcID"] = 170572,
},
[142771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Elaglo",
["npcID"] = 71030,
},
[451378] = {
["source"] = "Twilight Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 224221,
},
[322370] = {
["npcID"] = 157660,
},
[330565] = {
["npcID"] = 164506,
},
[248233] = {
["encounterName"] = "Imonar the Soulhunter",
["source"] = "Imonar the Soulhunter",
["encounterID"] = 2082,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 124158,
},
[451379] = {
["source"] = "Twilight Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 224221,
},
[330562] = {
["npcID"] = 164506,
},
[357183] = {
["npcID"] = 177938,
},
[294195] = {
["npcID"] = 144298,
},
[377661] = {
["npcID"] = 198414,
},
[423051] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[389948] = {
["source"] = "Overseer Zambul",
["event"] = "SPELL_CAST_START",
["npcID"] = 191145,
},
[144969] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Garrosh Hellscream",
["npcID"] = 71865,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1623,
},
[357188] = {
["encounterName"] = "So'azmi",
["encounterID"] = 2437,
["npcID"] = 175806,
},
[412474] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Colossian",
["npcID"] = 204093,
},
[332612] = {
["npcID"] = 170572,
},
[91872] = {
["encounterName"] = "Siamat",
["encounterID"] = 1055,
["npcID"] = 45259,
},
[394045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vadne Bleakheart",
["npcID"] = 195764,
},
[144821] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Garrosh Hellscream",
["npcID"] = 71865,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1623,
},
[332613] = {
["npcID"] = 170577,
},
[391998] = {
["npcID"] = 191403,
},
[449339] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["npcID"] = 204188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2878,
},
[281420] = {
["source"] = "Bilge Rat Brinescale",
["event"] = "SPELL_CAST_START",
["npcID"] = 129600,
},
[406333] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[391999] = {
["source"] = "Nokhud Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 185445,
},
[324425] = {
["npcID"] = 182267,
},
[381765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Glacier",
["npcID"] = 194798,
},
[455480] = {
["source"] = "Take",
["event"] = "SPELL_CAST_START",
["npcID"] = 226272,
},
[303952] = {
["npcID"] = 155910,
},
[131512] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordo Raider",
["npcID"] = 65928,
},
[330568] = {
["npcID"] = 167484,
},
[389953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskanoth",
["npcID"] = 193533,
},
[334664] = {
["npcID"] = 171341,
},
[418622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Scarab",
["npcID"] = 207910,
},
[412479] = {
["source"] = "Dinn",
["event"] = "SPELL_CAST_START",
["npcID"] = 203646,
},
[162231] = {
["source"] = "Bladespire Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 80071,
},
[351047] = {
["npcID"] = 178392,
},
[451387] = {
["source"] = "Twilight Lavabender",
["event"] = "SPELL_CAST_START",
["npcID"] = 224249,
},
[451391] = {
["source"] = "Faceless Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 39392,
},
[324427] = {
["encounterName"] = "Oryphrion",
["encounterID"] = 2358,
["npcID"] = 162060,
},
[320336] = {
["npcID"] = 163126,
},
[418624] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Assassin",
["npcID"] = 207915,
},
[373573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Faerie Dragon",
["npcID"] = 209444,
},
[122078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadling",
["npcID"] = 62306,
},
[432959] = {
["source"] = "Void Ascendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 212793,
},
[424773] = {
["source"] = "Gnarled Reviver",
["event"] = "SPELL_CAST_START",
["npcID"] = 207468,
},
[115423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan'ze Spiritbinder",
["npcID"] = 55279,
},
[199090] = {
["source"] = "Angerhoof Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 96611,
},
[412488] = {
["source"] = "Crawling Goo",
["event"] = "SPELL_CAST_START",
["npcID"] = 205820,
},
[385862] = {
["source"] = "Murloc Hopper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195218,
},
[387910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Algeth'ar Echoknight",
["npcID"] = 196200,
},
[365385] = {
["encounterName"] = "The Jailer",
["npcID"] = 184622,
["encounterID"] = 2537,
},
[392006] = {
["source"] = "Sharpfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 192749,
},
[119007] = {
["event"] = "SPELL_CAST_START",
["source"] = "Student of Chi-Ji",
["npcID"] = 60602,
},
[330574] = {
["npcID"] = 158040,
},
[398150] = {
["source"] = "Shadowmoon Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 76446,
},
[87779] = {
["npcID"] = 45935,
},
[201139] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrathguard Bladelord",
["npcID"] = 98810,
},
[346957] = {
["encounterName"] = "Hylbrande",
["encounterID"] = 2426,
["npcID"] = 175667,
},
[357196] = {
["npcID"] = 180336,
},
[373581] = {
["source"] = "Infected Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 189318,
},
[351057] = {
["encounterName"] = "So'leah",
["encounterID"] = 2442,
["npcID"] = 177269,
},
[412486] = {
["source"] = "Warchanter Ronvath",
["event"] = "SPELL_CAST_START",
["npcID"] = 200128,
},
[381770] = {
["encounterName"] = "Treemouth",
["source"] = "Decaying Slime",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 192481,
},
[342863] = {
["encounterName"] = "Shriekwing",
["encounterID"] = 2398,
["npcID"] = 164406,
},
[435012] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["npcID"] = 215405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[314195] = {
["source"] = "Gnashing Terror",
["event"] = "SPELL_CAST_START",
["npcID"] = 161334,
},
[414535] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[432965] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["encounterID"] = 2898,
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[451395] = {
["source"] = "Faceless Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 39392,
},
[445252] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Old Grim",
["npcID"] = 213403,
},
[406345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remnants of Sindragosa",
["npcID"] = 201089,
},
[227925] = {
["npcID"] = 114526,
},
[116] = {
["npcID"] = 188027,
},
[396107] = {
["source"] = "Shadeslash Trakken",
["event"] = "SPELL_CAST_START",
["npcID"] = 193271,
},
[177731] = {
["encounterName"] = "Witherbark",
["source"] = "Enchanted Waters",
["encounterID"] = 1746,
["event"] = "SPELL_CAST_START",
["npcID"] = 88862,
},
[375630] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Drakonid Stormbringer",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191232,
},
[394060] = {
["source"] = "Productive Pollinator",
["event"] = "SPELL_CAST_START",
["npcID"] = 193809,
},
[289625] = {
["npcID"] = 148624,
},
[386146] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Intinosa",
["npcID"] = 195354,
},
[392013] = {
["source"] = "Unbound Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 187036,
},
[328533] = {
["npcID"] = 163862,
},
[413151] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["encounterID"] = 1043,
["event"] = "SPELL_CAST_START",
["npcID"] = 43878,
},
[384292] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Thunder Caller",
["npcID"] = 194647,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[392014] = {
["source"] = "Rokzul",
["event"] = "SPELL_CAST_START",
["npcID"] = 194458,
},
[381721] = {
["npcID"] = 3272,
},
[412492] = {
["source"] = "Brullo the Strong",
["event"] = "SPELL_CAST_START",
["npcID"] = 203621,
},
[443482] = {
["source"] = "Nightfall Shadeguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 217519,
},
[342869] = {
["npcID"] = 168934,
},
[361300] = {
["encounterName"] = "Prototype Pantheon",
["encounterID"] = 2544,
["npcID"] = 181549,
},
[140220] = {
["npcID"] = 69405,
},
[385812] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 192934,
},
[131520] = {
["source"] = "Farraki Dervish",
["event"] = "SPELL_CAST_START",
["npcID"] = 66169,
},
[418637] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[396859] = {
["npcID"] = 191105,
},
[323166] = {
["encounterName"] = "Hakkar, the Soulflayer",
["npcID"] = 164558,
["encounterID"] = 2395,
},
[424704] = {
["source"] = "Fungal Gutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 207454,
},
[396991] = {
["source"] = "Drakonid Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 187240,
},
[198073] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["npcID"] = 98949,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1834,
},
[275564] = {
["source"] = "Shadowstarved Bullfrog",
["event"] = "SPELL_CAST_START",
["npcID"] = 214406,
},
[361304] = {
["encounterName"] = "Prototype Pantheon",
["encounterID"] = 2544,
["npcID"] = 183421,
},
[336996] = {
["npcID"] = 162744,
},
[330586] = {
["npcID"] = 169927,
},
[257459] = {
["encounterName"] = "Chopper Redhook",
["event"] = "SPELL_CAST_START",
["source"] = "Chopper Redhook",
["npcID"] = 128650,
},
[257458] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[275563] = {
["source"] = "Shadowstarved Bullfrog",
["event"] = "SPELL_CAST_START",
["npcID"] = 214406,
},
[428879] = {
["source"] = "Rock Smasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 213954,
},
[365399] = {
["npcID"] = 183748,
},
[383651] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavamancer",
["npcID"] = 193944,
},
[344922] = {
["npcID"] = 168148,
},
[361568] = {
["encounterName"] = "Prototype Pantheon",
["encounterID"] = 2544,
["npcID"] = 181546,
},
[365400] = {
["npcID"] = 184413,
},
[293729] = {
["npcID"] = 144295,
},
[76008] = {
["encounterName"] = "Lady Naz'jar",
["npcID"] = 40586,
["encounterID"] = 1045,
},
[392284] = {
["source"] = "Ravenous Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 193145,
},
[68841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apothecary Frye",
["npcID"] = 36272,
},
[196027] = {
["source"] = "Hatecoil Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 97171,
},
[361306] = {
["npcID"] = 182152,
},
[324447] = {
["npcID"] = 182267,
},
[406357] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remnants of Sindragosa",
["npcID"] = 201089,
},
[80279] = {
["npcID"] = 42691,
},
[168383] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Dulhu",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83894,
},
[119524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu Archer",
["npcID"] = 61345,
},
[406358] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200912,
},
[196028] = {
["source"] = "Hatecoil Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 97171,
},
[180670] = {
["npcID"] = 90215,
},
[384092] = {
["source"] = "Timetender Athekk",
["event"] = "SPELL_CAST_START",
["npcID"] = 193042,
},
[166465] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 82682,
},
[342878] = {
["npcID"] = 171189,
},
[389981] = {
["npcID"] = 189955,
},
[330593] = {
["npcID"] = 168724,
},
[245303] = {
["encounterName"] = "The Coven of Shivarra",
["source"] = "Asara, Mother of Night",
["encounterID"] = 2073,
["event"] = "SPELL_CAST_START",
["npcID"] = 122467,
},
[174529] = {
["npcID"] = 135077,
},
[385883] = {
["source"] = "Forge-Keep Custodian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192703,
},
[198077] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["encounterID"] = 1809,
["event"] = "SPELL_CAST_START",
["npcID"] = 95676,
},
[332642] = {
["npcID"] = 170577,
},
[297834] = {
["encounterName"] = "Gunker",
["encounterID"] = 2292,
["npcID"] = 150222,
},
[451412] = {
["source"] = "Ulgrax the Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[412505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tyr's Vanguard",
["npcID"] = 205151,
},
[398171] = {
["source"] = "Senegos",
["event"] = "SPELL_CAST_START",
["npcID"] = 199923,
},
[331248] = {
["npcID"] = 171745,
},
[443222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Memory of Turalyon",
["npcID"] = 214616,
},
[371551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormfang Dustcaller",
["npcID"] = 187551,
},
[398172] = {
["source"] = "Stellagosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 200099,
},
[359265] = {
["npcID"] = 182799,
},
[320358] = {
["encounterName"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["encounterID"] = 2389,
},
[318312] = {
["npcID"] = 170026,
},
[357218] = {
["source"] = "Smoldering Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 188673,
},
[196031] = {
["source"] = "Hatecoil Wavebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 97170,
},
[166464] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 82682,
},
[346980] = {
["encounterName"] = "Hylbrande",
["encounterID"] = 2426,
["npcID"] = 176551,
},
[332646] = {
["npcID"] = 162872,
},
[375649] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Tender",
["npcID"] = 196115,
},
[166335] = {
["npcID"] = 82579,
},
[297835] = {
["encounterName"] = "Gunker",
["encounterID"] = 2292,
["npcID"] = 150222,
},
[406366] = {
["source"] = "Primal Nightflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 200931,
},
[277358] = {
["npcID"] = 141267,
},
[329383] = {
["npcID"] = 167331,
},
[131524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farraki Sand-Stormer",
["npcID"] = 63673,
},
[375652] = {
["source"] = "Arcane Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 196115,
},
[91263] = {
["encounterName"] = "General Husam",
["encounterID"] = 1052,
["npcID"] = 44577,
},
[328799] = {
["npcID"] = 182268,
},
[144839] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Hisek the Swarmkeeper",
["npcID"] = 71153,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[334942] = {
["encounterName"] = "Huntsman Altimor",
["encounterID"] = 2418,
["npcID"] = 165067,
},
[424798] = {
["source"] = "Infected Beast",
["event"] = "SPELL_CAST_START",
["npcID"] = 210478,
},
[428894] = {
["source"] = "Cursedforge Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 214264,
},
[289647] = {
["npcID"] = 148569,
},
[406369] = {
["source"] = "Primal Nightflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 200931,
},
[375653] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Drakonid Stormbringer",
["npcID"] = 191232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[133542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vol'jin",
["npcID"] = 67414,
},
[161222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Prowler",
["npcID"] = 145736,
},
[240006] = {
["npcID"] = 182863,
},
[310969] = {
["npcID"] = 159011,
},
[300129] = {
["npcID"] = 152009,
},
[289649] = {
["npcID"] = 148625,
},
[378012] = {
["source"] = "Lavacaller Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 186823,
},
[383846] = {
["event"] = "SPELL_CAST_START",
["source"] = "Destructive Fire Elemental",
["npcID"] = 194179,
},
[331274] = {
["npcID"] = 167923,
},
[314942] = {
["npcID"] = 166869,
},
[357226] = {
["npcID"] = 180429,
},
[337556] = {
["npcID"] = 162853,
},
[328558] = {
["npcID"] = 159027,
},
[384823] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189886,
},
[139841] = {
["encounterName"] = "Megaera",
["source"] = "Frozen Head",
["encounterID"] = 1578,
["event"] = "SPELL_CAST_START",
["npcID"] = 70235,
},
[310129] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["encounterID"] = 2327,
["event"] = "SPELL_CAST_START",
["npcID"] = 156523,
},
[227776] = {
["encounterName"] = "Opera Hall",
["encounterID"] = 1957,
["npcID"] = 114251,
},
[283507] = {
["encounterName"] = "Opulence",
["encounterID"] = 2271,
["npcID"] = 145273,
},
[283509] = {
["source"] = "Helmet Missingway",
["event"] = "SPELL_CAST_START",
["npcID"] = 193263,
},
[408422] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[131532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha Shooter",
["npcID"] = 66928,
},
[332657] = {
["npcID"] = 164587,
},
[141771] = {
["source"] = "Viletongue Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 58737,
},
[191941] = {
["encounterName"] = "Tirathon Saltheril",
["source"] = "Tirathon Saltheril",
["npcID"] = 95885,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1815,
},
[169418] = {
["source"] = "Twisted Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 84767,
},
[265081] = {
["source"] = "Chosen Blood Matron",
["event"] = "SPELL_CAST_START",
["npcID"] = 131436,
},
[227777] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114260,
["encounterID"] = 1957,
},
[173514] = {
["npcID"] = 83389,
},
[389999] = {
["npcID"] = 189955,
},
[371565] = {
["source"] = "Ohn'ir Windcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 191244,
},
[79085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osul Mist-Shaman",
["npcID"] = 60697,
},
[119586] = {
["source"] = "Sha of Anger",
["event"] = "SPELL_CAST_START",
["npcID"] = 60491,
},
[451428] = {
["isChanneled"] = true,
["source"] = "Xeph'itik",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219984,
},
[202181] = {
["source"] = "Rockback Gnasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 91006,
},
[373614] = {
["source"] = "Blazebound Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190034,
},
[130791] = {
["source"] = "Garrosh'ar Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 66398,
},
[131534] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rothek",
["npcID"] = 62581,
},
[265084] = {
["source"] = "Devout Blood Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 131492,
},
[320376] = {
["encounterName"] = "Surgeon Stitchflesh",
["npcID"] = 164578,
["encounterID"] = 2389,
},
[334708] = {
["encounterName"] = "Huntsman Altimor",
["encounterID"] = 2418,
["npcID"] = 171557,
},
[125160] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Mage",
["npcID"] = 214167,
},
[387950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caldera Stomper",
["npcID"] = 187919,
},
[227779] = {
["encounterName"] = "Shade of Medivh",
["encounterID"] = 1965,
["npcID"] = 114350,
},
[359282] = {
["npcID"] = 185415,
},
[171580] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Mauler",
["npcID"] = 85748,
},
[330614] = {
["npcID"] = 163086,
},
[128232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Evangelist",
["npcID"] = 58685,
},
[433002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodstained Assistant",
["npcID"] = 216333,
},
[225732] = {
["source"] = "Lady Velandras Ravencrest",
["event"] = "SPELL_CAST_START",
["npcID"] = 98538,
},
[64156] = {
["encounterName"] = "Yogg-Saron",
["npcID"] = 33985,
["encounterID"] = 1143,
},
[373618] = {
["npcID"] = 190174,
},
[449385] = {
["source"] = "Wanderer Ida",
["event"] = "SPELL_CAST_START",
["npcID"] = 220953,
},
[426860] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 211089,
},
[428908] = {
["source"] = "Meredy Huntswell",
["event"] = "SPELL_CAST_START",
["npcID"] = 209059,
},
[114646] = {
["source"] = "Haunting Sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 59555,
},
[273282] = {
["encounterName"] = "Mythrax",
["encounterID"] = 2135,
["npcID"] = 134546,
},
[392273] = {
["source"] = "Ergburk",
["event"] = "SPELL_CAST_START",
["npcID"] = 194409,
},
[265089] = {
["source"] = "Devout Blood Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 131492,
},
[357238] = {
["npcID"] = 180429,
},
[212423] = {
["npcID"] = 99541,
},
[451435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidwraith",
["npcID"] = 224466,
},
[387955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Restorer",
["npcID"] = 196203,
},
[128233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Evangelist",
["npcID"] = 58685,
},
[351096] = {
["encounterName"] = "So'leah",
["encounterID"] = 2442,
["npcID"] = 177269,
},
[330611] = {
["npcID"] = 155795,
},
[265091] = {
["source"] = "Devout Blood Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 131492,
},
[384474] = {
["source"] = "Icegnaw Mantacorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 187826,
},
[299432] = {
["npcID"] = 151640,
},
[130848] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ga’trul",
["npcID"] = 66276,
},
[322429] = {
["npcID"] = 162057,
},
[174541] = {
["event"] = "SPELL_CAST_START",
["source"] = "Councilor Daglat",
["npcID"] = 81810,
},
[375671] = {
["npcID"] = 190900,
},
[443247] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Memory of Turalyon",
["npcID"] = 214616,
},
[443640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Elf Riftwalker",
["npcID"] = 215475,
},
[211401] = {
["npcID"] = 104295,
},
[367481] = {
["source"] = "Cruel Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 186206,
},
[394102] = {
["source"] = "Terillod the Devout",
["event"] = "SPELL_CAST_START",
["npcID"] = 193171,
},
[283422] = {
["encounterName"] = "Tussle Tonks",
["npcID"] = 145185,
["encounterID"] = 2257,
},
[357243] = {
["npcID"] = 180433,
},
[383864] = {
["npcID"] = 191403,
},
[385912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shiverweb Crawler",
["npcID"] = 192591,
},
[387960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caldera Stomper",
["npcID"] = 187919,
},
[332671] = {
["npcID"] = 170480,
},
[322433] = {
["npcID"] = 162057,
},
[41084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Houndmaster",
["npcID"] = 23018,
},
[428916] = {
["source"] = "Devout Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[124139] = {
["source"] = "Shado-Pan Gatewatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 63564,
},
[367484] = {
["source"] = "Claw Fighter",
["event"] = "SPELL_CAST_START",
["npcID"] = 185508,
},
[426869] = {
["source"] = "Flickerflame Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212548,
},
[185806] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contracted Engineer",
["npcID"] = 93813,
},
[425035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Core Hound",
["npcID"] = 210288,
},
[367485] = {
["isChanneled"] = true,
["source"] = "Claw Fighter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 185508,
},
[355057] = {
["npcID"] = 178139,
},
[361343] = {
["npcID"] = 178963,
},
[324483] = {
["npcID"] = 182267,
},
[257478] = {
["source"] = "Irontide Mastiff",
["event"] = "SPELL_CAST_START",
["npcID"] = 128551,
},
[385916] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 186616,
},
[265088] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 133219,
},
[260550] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uul'gyneth",
["npcID"] = 126001,
},
[392007] = {
["source"] = "Shadepaw Bruiser",
["event"] = "SPELL_CAST_START",
["npcID"] = 183343,
},
[118049] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["npcID"] = 60710,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[387965] = {
["source"] = "Time-Lost Bladewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 187232,
},
[124140] = {
["source"] = "Shado-Pan Gatewatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 63564,
},
[117485] = {
["encounterName"] = "Will of the Emperor",
["source"] = "Emperor's Courage",
["npcID"] = 60398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1407,
},
[320390] = {
["npcID"] = 174095,
},
[371584] = {
["npcID"] = 46859,
},
[399086] = {
["source"] = "Zaqali Firecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 200454,
},
[385824] = {
["source"] = "Rageclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 187192,
},
[111854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
},
[327891] = {
["encounterName"] = "Mueh'zala",
["npcID"] = 169506,
["encounterID"] = 2396,
},
[398206] = {
["source"] = "Exhumed Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 75979,
},
[383872] = {
["source"] = "Swelling Fire Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 188667,
},
[369072] = {
["source"] = "Olphis the Molten",
["event"] = "SPELL_CAST_START",
["npcID"] = 181875,
},
[396159] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver Wurmling",
["npcID"] = 187366,
},
[211406] = {
["npcID"] = 104295,
},
[422776] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[291928] = {
["encounterName"] = "King Mechagon",
["npcID"] = 150396,
["encounterID"] = 2260,
},
[391051] = {
["source"] = "Uurtus",
["event"] = "SPELL_CAST_START",
["npcID"] = 193724,
},
[406399] = {
["source"] = "Sundered Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 201736,
},
[131545] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Seething Hatred",
["npcID"] = 66940,
},
[302166] = {
["npcID"] = 150190,
},
[105762] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grookin Wildtail",
["npcID"] = 56309,
},
[324490] = {
["encounterName"] = "Globgrog",
["npcID"] = 164255,
["encounterID"] = 2382,
},
[118510] = {
["isChanneled"] = true,
["source"] = "Ahgunoss",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62765,
},
[377732] = {
["npcID"] = 184319,
},
[373279] = {
["npcID"] = 189988,
},
[340874] = {
["npcID"] = 162657,
},
[425030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Juggernaut",
["npcID"] = 210172,
},
[49241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruby Watcher",
["npcID"] = 27542,
},
[328880] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 166644,
},
[332683] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 169835,
},
[363400] = {
["npcID"] = 178159,
},
[387974] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spellbound Scepter",
["npcID"] = 196202,
},
[420737] = {
["source"] = "Sister Sylasta",
["event"] = "SPELL_CAST_START",
["npcID"] = 210642,
},
[275347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zarizz",
["npcID"] = 193140,
},
[375687] = {
["source"] = "Decay Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 190426,
},
[344971] = {
["npcID"] = 170301,
},
[445311] = {
["source"] = "Strange Shore Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 219365,
},
[406378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remnants of Sindragosa",
["npcID"] = 201089,
},
[420933] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["npcID"] = 208478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2737,
},
[407332] = {
["source"] = "Agitated Dustmoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 202316,
},
[333997] = {
["npcID"] = 165206,
},
[406405] = {
["event"] = "SPELL_CAST_START",
["source"] = "Calibrating Scent Matrix",
["npcID"] = 203606,
},
[29120] = {
["event"] = "SPELL_CAST_START",
["source"] = "Honor Hold Archer",
["npcID"] = 16896,
},
[426883] = {
["source"] = "Kobold Taskworker",
["event"] = "SPELL_CAST_START",
["npcID"] = 212383,
},
[383866] = {
["npcID"] = 194526,
},
[357260] = {
["npcID"] = 180431,
},
[392075] = {
["source"] = "Arkhuu",
["event"] = "SPELL_CAST_START",
["npcID"] = 195300,
},
[425027] = {
["source"] = "Earth Infused Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 210109,
},
[15585] = {
["source"] = "Murkblood Healer",
["event"] = "SPELL_CAST_START",
["npcID"] = 17730,
},
[20801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diablotin serviteur",
["npcID"] = 12922,
},
[367500] = {
["source"] = "Bracken Warscourge",
["event"] = "SPELL_CAST_START",
["npcID"] = 185529,
},
[344975] = {
["npcID"] = 175331,
},
[322450] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["encounterID"] = 2393,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164517,
},
[355641] = {
["npcID"] = 179841,
},
[351119] = {
["encounterName"] = "So'leah",
["encounterID"] = 2442,
["npcID"] = 177716,
},
[124654] = {
["source"] = "Water Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 63519,
},
[453507] = {
["source"] = "Royal Quartermaster Ze'erik",
["event"] = "SPELL_CAST_START",
["npcID"] = 215988,
},
[277403] = {
["npcID"] = 140594,
},
[167385] = {
["npcID"] = 174491,
},
[80117] = {
["source"] = "Groundbreaker Brojai",
["event"] = "SPELL_CAST_START",
["npcID"] = 58224,
},
[404364] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 202789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[392283] = {
["source"] = "Wild Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 191413,
},
[375694] = {
["npcID"] = 181310,
},
[377927] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Feather",
["npcID"] = 192690,
},
[453509] = {
["isChanneled"] = true,
["source"] = "Royal Quartermaster Ze'erik",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215988,
},
[365458] = {
["npcID"] = 184651,
},
[359313] = {
["npcID"] = 182350,
},
[116977] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stone Quilen",
["npcID"] = 60576,
},
[420746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaldorei Sentinel",
["npcID"] = 207117,
},
[372296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontorch Commander",
["npcID"] = 189466,
},
[367505] = {
["npcID"] = 181059,
},
[340446] = {
["npcID"] = 167898,
},
[131642] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gyro-Mechanic Lavenderp",
["npcID"] = 65883,
},
[16033] = {
["source"] = "Injured Warsong Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 27108,
},
[351124] = {
["encounterName"] = "So'leah",
["encounterID"] = 2442,
["npcID"] = 177269,
},
[121073] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malevolent Fury",
["npcID"] = 61333,
},
[192985] = {
["encounterName"] = "Wrath of Azshara",
["source"] = "Wrath of Azshara",
["encounterID"] = 1814,
["event"] = "SPELL_CAST_START",
["npcID"] = 96028,
},
[130288] = {
["isChanneled"] = true,
["source"] = "Sha of Despair",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59651,
},
[392080] = {
["source"] = "Mature Riverbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 194145,
},
[114419] = {
["isChanneled"] = true,
["source"] = "Stonebound Colossus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56595,
},
[396355] = {
["source"] = "Ritual Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 186787,
},
[367502] = {
["npcID"] = 181059,
},
[457787] = {
["isChanneled"] = true,
["source"] = "Wickbreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215077,
},
[201176] = {
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 98792,
},
[334747] = {
["npcID"] = 166302,
},
[283551] = {
["encounterName"] = "King Mechagon",
["npcID"] = 144249,
["encounterID"] = 2260,
},
[102132] = {
["npcID"] = 54552,
},
[131553] = {
["source"] = "Farraki Sand-Stormer",
["event"] = "SPELL_CAST_START",
["npcID"] = 63673,
},
[382101] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo of Loss",
["npcID"] = 190259,
},
[443232] = {
["source"] = "Nightfall Lookout",
["event"] = "SPELL_CAST_START",
["npcID"] = 217485,
},
[278934] = {
["npcID"] = 142801,
},
[287648] = {
["encounterName"] = "Opulence",
["encounterID"] = 2271,
["npcID"] = 145273,
},
[169851] = {
["encounterName"] = "Archmage Sol",
["source"] = "Addled Arcanomancer",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 84990,
},
[20802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Putrifier",
["npcID"] = 186363,
},
[408466] = {
["source"] = "Drogbar Crystal-collector",
["event"] = "SPELL_CAST_START",
["npcID"] = 204407,
},
[40832] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[355225] = {
["npcID"] = 178142,
},
[316322] = {
["event"] = "SPELL_CAST_START",
["source"] = "Foreman Magrok",
["npcID"] = 145978,
},
[433040] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Trickster",
["npcID"] = 214343,
},
[174558] = {
["event"] = "SPELL_CAST_START",
["source"] = "Councilor Magknor",
["npcID"] = 81808,
},
[273316] = {
["encounterName"] = "Zul",
["encounterID"] = 2145,
["npcID"] = 139051,
},
[195037] = {
["source"] = "Hatecoil Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 95861,
},
[336967] = {
["npcID"] = 168093,
},
[410516] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199659,
},
[118518] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mutated Silkworm",
["npcID"] = 59002,
},
[141794] = {
["source"] = "Champion Sithiss",
["event"] = "SPELL_CAST_START",
["npcID"] = 59632,
},
[392087] = {
["source"] = "Queasy Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 194003,
},
[40064] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Technician",
["npcID"] = 17414,
},
[336804] = {
["npcID"] = 184606,
},
[227800] = {
["encounterName"] = "Maiden of Virtue",
["encounterID"] = 1954,
["npcID"] = 113971,
},
[400279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Flamewalker",
["npcID"] = 199826,
},
[369563] = {
["encounterName"] = "The Lost Dwarves",
["encounterID"] = 2555,
["npcID"] = 184581,
},
[189917] = {
["source"] = "Sargerei Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 95632,
},
[324513] = {
["source"] = "Experimental Misstep",
["event"] = "SPELL_CAST_START",
["npcID"] = 199859,
},
[142819] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summit Guster",
["npcID"] = 71277,
},
[451474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Purgle-lurgle",
["npcID"] = 214544,
},
[334757] = {
["encounterName"] = "Huntsman Altimor",
["encounterID"] = 2418,
["npcID"] = 169457,
},
[349087] = {
["npcID"] = 176705,
},
[120052] = {
["isChanneled"] = true,
["source"] = "Adolescent Mushan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56239,
},
[357281] = {
["npcID"] = 180432,
},
[400283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Preserver",
["npcID"] = 199972,
},
[332706] = {
["npcID"] = 170490,
},
[396189] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Rotsinger",
["npcID"] = 197129,
},
[322470] = {
["npcID"] = 166875,
},
[163379] = {
["encounterName"] = "Grimrail Enforcers",
["encounterID"] = 1748,
["npcID"] = 80875,
},
[373662] = {
["isChanneled"] = true,
["source"] = "Spiteful Shade",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186420,
},
[130803] = {
["event"] = "SPELL_CAST_START",
["source"] = "Charognard hozen",
["npcID"] = 66153,
},
[325386] = {
["npcID"] = 167119,
},
[375716] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Primalist Mage",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191206,
},
[332708] = {
["npcID"] = 167532,
},
[125212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Initiate Oman",
["npcID"] = 205818,
},
[76026] = {
["encounterName"] = "Commander Ulthok",
["npcID"] = 40765,
["encounterID"] = 1044,
},
[355234] = {
["npcID"] = 178142,
},
[375871] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[310184] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Psychus",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158376,
},
[131559] = {
["source"] = "Drakkari Frostweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 66707,
},
[365632] = {
["npcID"] = 184742,
},
[371618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cindershard Igniter",
["npcID"] = 198382,
},
[367522] = {
["npcID"] = 181059,
},
[277424] = {
["npcID"] = 140594,
},
[388000] = {
["source"] = "Bertinuat",
["event"] = "SPELL_CAST_START",
["npcID"] = 196288,
},
[357284] = {
["npcID"] = 180432,
},
[336809] = {
["npcID"] = 162873,
},
[114935] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grummle Trail Guide",
["npcID"] = 59593,
},
[388001] = {
["source"] = "Bertinuat",
["event"] = "SPELL_CAST_START",
["npcID"] = 196288,
},
[329172] = {
["encounterName"] = "Lord Chamberlain",
["encounterID"] = 2381,
["npcID"] = 165737,
},
[400288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Pain",
["npcID"] = 201290,
},
[408483] = {
["source"] = "Elder Magma Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 203846,
},
[388002] = {
["source"] = "Bertinuat",
["event"] = "SPELL_CAST_START",
["npcID"] = 196288,
},
[365477] = {
["npcID"] = 181797,
},
[433053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Old Grim",
["npcID"] = 213403,
},
[385955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Intinosa",
["npcID"] = 195354,
},
[51584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ice Revenant",
["npcID"] = 26283,
},
[347045] = {
["npcID"] = 176131,
},
[300102] = {
["npcID"] = 152009,
},
[377765] = {
["npcID"] = 189205,
},
[169445] = {
["source"] = "Twisted Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 84767,
},
[439198] = {
["isChanneled"] = true,
["source"] = "Venommaster Nezarox",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219006,
},
[453683] = {
["source"] = "Nexus-Princess Ky'veza",
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[345002] = {
["npcID"] = 168977,
},
[326574] = {
["encounterName"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["encounterID"] = 2389,
},
[369573] = {
["encounterName"] = "The Lost Dwarves",
["encounterID"] = 2555,
["npcID"] = 184581,
},
[375719] = {
["source"] = "Steam Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190700,
},
[385958] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[404388] = {
["source"] = "Hatching Egg",
["event"] = "SPELL_CAST_START",
["npcID"] = 202897,
},
[289906] = {
["encounterName"] = "Opulence",
["encounterID"] = 2271,
["npcID"] = 145274,
},
[318383] = {
["encounterName"] = "Il'gynoth, Corruption Reborn",
["source"] = "Clotted Corruption",
["encounterID"] = 2345,
["event"] = "SPELL_CAST_START",
["npcID"] = 163678,
},
[385959] = {
["source"] = "Defense Orb",
["event"] = "SPELL_CAST_START",
["npcID"] = 195184,
},
[116472] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Angry Monkey Totem",
["npcID"] = 60370,
},
[324527] = {
["encounterName"] = "Globgrog",
["npcID"] = 164255,
["encounterID"] = 2382,
},
[345004] = {
["npcID"] = 175347,
},
[40066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Wrangler",
["npcID"] = 22877,
},
[428963] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Burning Colossus",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 207796,
},
[392097] = {
["source"] = "Diluu",
["event"] = "SPELL_CAST_START",
["npcID"] = 195431,
},
[392105] = {
["source"] = "Haleh",
["event"] = "SPELL_CAST_START",
["npcID"] = 199370,
},
[153067] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["encounterID"] = 1688,
["event"] = "SPELL_CAST_START",
["npcID"] = 75829,
},
[322486] = {
["npcID"] = 164929,
},
[57984] = {
["npcID"] = 61029,
},
[400296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Preserver",
["npcID"] = 199972,
},
[404396] = {
["source"] = "Pyrachniss",
["event"] = "SPELL_CAST_START",
["npcID"] = 200978,
},
[422964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[227809] = {
["encounterName"] = "Maiden of Virtue",
["encounterID"] = 1954,
["npcID"] = 113971,
},
[441252] = {
["source"] = "Horrid Effusia",
["event"] = "SPELL_CAST_START",
["npcID"] = 211866,
},
[131565] = {
["source"] = "Farraki Assassin",
["event"] = "SPELL_CAST_START",
["npcID"] = 66570,
},
[447400] = {
["source"] = "Queen Rickiticka",
["event"] = "SPELL_CAST_START",
["npcID"] = 215772,
},
[336958] = {
["npcID"] = 162853,
},
[449444] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["encounterID"] = 1050,
["event"] = "SPELL_CAST_START",
["npcID"] = 40177,
},
[410537] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalecommander Sarkareth",
["npcID"] = 199984,
},
[420776] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dreadfire Shalewing",
["npcID"] = 208662,
},
[455588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodscar",
["npcID"] = 223955,
},
[449584] = {
["source"] = "Sunless Tidemarshal",
["event"] = "SPELL_CAST_START",
["npcID"] = 219602,
},
[128282] = {
["source"] = "Shek'zeer Clutch-Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 64559,
},
[420777] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dreadfire Shalewing",
["npcID"] = 208662,
},
[461870] = {
["source"] = "Xal'atath",
["event"] = "SPELL_CAST_START",
["npcID"] = 229227,
},
[375727] = {
["encounterName"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["npcID"] = 184125,
},
[131635] = {
["event"] = "SPELL_CAST_START",
["source"] = "Morgus Grimhatchet",
["npcID"] = 65880,
},
[420778] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dreadfire Shalewing",
["npcID"] = 208662,
},
[373680] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["encounterID"] = 2609,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188252,
},
[449447] = {
["source"] = "Overseer Roskarrag",
["event"] = "SPELL_CAST_START",
["npcID"] = 221071,
},
[293954] = {
["source"] = "Eclipsing Grasp",
["event"] = "SPELL_CAST_START",
["npcID"] = 218693,
},
[396206] = {
["source"] = "Nokhud Apprentice",
["event"] = "SPELL_CAST_START",
["npcID"] = 200948,
},
[398254] = {
["source"] = "Winterpelt Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 200362,
},
[392111] = {
["source"] = "Shiverweb Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 185814,
},
[277813] = {
["npcID"] = 142207,
},
[157165] = {
["source"] = "Sargerei Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 77132,
},
[289725] = {
["npcID"] = 148613,
},
[369400] = {
["npcID"] = 184132,
},
[199210] = {
["source"] = "Valarjar Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 96640,
},
[396208] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbow Stalker",
["npcID"] = 197126,
},
[166380] = {
["npcID"] = 82597,
},
[408495] = {
["source"] = "Elder Magma Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 203846,
},
[76031] = {
["encounterName"] = "Beauty",
["encounterID"] = 1037,
["npcID"] = 39700,
},
[404400] = {
["source"] = "Pyrachniss",
["event"] = "SPELL_CAST_START",
["npcID"] = 200978,
},
[362316] = {
["npcID"] = 184425,
},
[449451] = {
["isChanneled"] = true,
["source"] = "Mi'thk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211582,
},
[388008] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["encounterID"] = 2583,
["event"] = "SPELL_CAST_START",
["npcID"] = 186737,
},
[289727] = {
["npcID"] = 148442,
},
[128249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Evoker",
["npcID"] = 58756,
},
[424879] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2854,
},
[382179] = {
["source"] = "Arcane Manipulator Tharohn",
["event"] = "SPELL_CAST_START",
["npcID"] = 188171,
},
[129785] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistblade Scale-Lord",
["npcID"] = 63179,
},
[131570] = {
["source"] = "Zandalari Champion",
["event"] = "SPELL_CAST_START",
["npcID"] = 66261,
},
[449453] = {
["source"] = "Overseer Roskarrag",
["event"] = "SPELL_CAST_START",
["npcID"] = 221071,
},
[304063] = {
["npcID"] = 155909,
},
[404403] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[199146] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gildedfur Stag",
["npcID"] = 96609,
},
[327887] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 166644,
},
[385974] = {
["encounterName"] = "Vexamus",
["source"] = "Professor Maxdormu",
["npcID"] = 189668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[461741] = {
["source"] = "Sir Finley Mrrgglton",
["event"] = "SPELL_CAST_START",
["npcID"] = 228030,
},
[126202] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Soul-Caller",
["npcID"] = 63611,
},
[449455] = {
["source"] = "Ghastly Voidsoul",
["event"] = "SPELL_CAST_START",
["npcID"] = 212453,
},
[121114] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Amber-Weaver",
["npcID"] = 61929,
},
[314304] = {
["npcID"] = 154638,
},
[404394] = {
["source"] = "Reisa the Drowned",
["event"] = "SPELL_CAST_START",
["npcID"] = 200600,
},
[293827] = {
["npcID"] = 144294,
},
[394167] = {
["source"] = "Cygenoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 185660,
},
[273350] = {
["encounterName"] = "Zul",
["encounterID"] = 2145,
["npcID"] = 139057,
},
[316353] = {
["source"] = "Arathi Avenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 221980,
},
[138739] = {
["source"] = "Farraki Sand Conjurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 69899,
},
[439341] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["npcID"] = 216658,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2909,
},
[195046] = {
["source"] = "Hatecoil Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 95861,
},
[422837] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[320571] = {
["npcID"] = 163128,
},
[172818] = {
["npcID"] = 184073,
},
[420782] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Lavatongue",
["npcID"] = 208661,
},
[373692] = {
["source"] = "Blazebound Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190034,
},
[404409] = {
["source"] = "Reisa the Drowned",
["event"] = "SPELL_CAST_START",
["npcID"] = 200600,
},
[385980] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strunraan",
["npcID"] = 193534,
},
[157170] = {
["source"] = "Sargerei Soulbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 77812,
},
[373693] = {
["source"] = "Blazebound Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190034,
},
[424888] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["encounterID"] = 2854,
["event"] = "SPELL_CAST_START",
["npcID"] = 210108,
},
[112893] = {
["source"] = "Zouchin Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 62247,
},
[408509] = {
["source"] = "Portalkeeper Cimbra",
["event"] = "SPELL_CAST_START",
["npcID"] = 202613,
},
[16588] = {
["source"] = "Krasari Runekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 65598,
},
[196078] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[112894] = {
["source"] = "Zouchin Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 62247,
},
[289737] = {
["npcID"] = 148443,
},
[265168] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 133219,
},
[318406] = {
["encounterName"] = "Gorechop",
["encounterID"] = 2365,
["npcID"] = 162317,
},
[28099] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tesla Coil",
["npcID"] = 16218,
},
[48530] = {
["source"] = "7th Legion Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 27162,
},
[80158] = {
["npcID"] = 42696,
},
[118525] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Tideweaver",
["npcID"] = 59181,
},
[287691] = {
["encounterName"] = "Mekkatorque",
["encounterID"] = 2276,
["npcID"] = 144796,
},
[16102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Summoner",
["npcID"] = 17395,
},
[414652] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[424891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Speartender",
["npcID"] = 207456,
},
[193008] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Huln Highmountain",
["npcID"] = 104825,
},
[273359] = {
["encounterName"] = "Zul",
["encounterID"] = 2145,
["npcID"] = 138967,
},
[373698] = {
["source"] = "Brackenhide Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 186220,
},
[318409] = {
["source"] = "Shath'Yar Scribe",
["event"] = "SPELL_CAST_START",
["npcID"] = 163690,
},
[41093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Houndmaster",
["npcID"] = 23018,
},
[404415] = {
["source"] = "Damned Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 202922,
},
[256489] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["encounterID"] = 2095,
["event"] = "SPELL_CAST_START",
["npcID"] = 126969,
},
[334792] = {
["encounterName"] = "Huntsman Altimor",
["encounterID"] = 2418,
["npcID"] = 165066,
},
[116990] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stone Quilen",
["npcID"] = 60576,
},
[330697] = {
["npcID"] = 170690,
},
[142840] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo of Y'Shaarj",
["npcID"] = 71123,
},
[326602] = {
["npcID"] = 165400,
},
[197105] = {
["source"] = "Hatecoil Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 97171,
},
[314316] = {
["npcID"] = 161370,
},
[259562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tidemistress Nazesh",
["npcID"] = 128712,
},
[269266] = {
["encounterName"] = "Viq'Goth",
["source"] = "Demolishing Terror",
["npcID"] = 137614,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2100,
},
[328651] = {
["npcID"] = 167493,
},
[330699] = {
["npcID"] = 168402,
},
[408620] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Obsidian Guard",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 200836,
},
[457660] = {
["source"] = "Recalled Enormos",
["event"] = "SPELL_CAST_START",
["npcID"] = 225274,
},
[166341] = {
["npcID"] = 82579,
},
[125720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osul Mist-Shaman",
["npcID"] = 60697,
},
[199143] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[320462] = {
["npcID"] = 163128,
},
[435136] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[461757] = {
["source"] = "Reno Jackson",
["event"] = "SPELL_CAST_START",
["npcID"] = 228044,
},
[227823] = {
["encounterName"] = "Maiden of Virtue",
["encounterID"] = 1954,
["npcID"] = 113971,
},
[334797] = {
["encounterName"] = "Huntsman Altimor",
["encounterID"] = 2418,
["npcID"] = 169457,
},
[320463] = {
["npcID"] = 167078,
},
[392106] = {
["source"] = "Diluu",
["event"] = "SPELL_CAST_START",
["npcID"] = 195431,
},
[330703] = {
["npcID"] = 174210,
},
[326607] = {
["npcID"] = 167612,
},
[320464] = {
["source"] = "Zolramus Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 163128,
},
[314321] = {
["npcID"] = 161371,
},
[443430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Silkbinder",
["npcID"] = 220195,
},
[408767] = {
["source"] = "Ritualmaster Skarna",
["event"] = "SPELL_CAST_START",
["npcID"] = 202274,
},
[32903] = {
["source"] = "Jungle Skitterer",
["event"] = "SPELL_CAST_START",
["npcID"] = 58067,
},
[412614] = {
["source"] = "Viridian King",
["event"] = "SPELL_CAST_START",
["npcID"] = 201029,
},
[283606] = {
["encounterName"] = "Opulence",
["encounterID"] = 2271,
["npcID"] = 145273,
},
[283598] = {
["encounterName"] = "Champion of the Light",
["encounterID"] = 2265,
["npcID"] = 144683,
},
[378003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Sentry",
["npcID"] = 192680,
},
[199151] = {
["source"] = "Angerhoof Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 96611,
},
[326707] = {
["encounterName"] = "Sire Denathrius",
["encounterID"] = 2407,
["npcID"] = 167406,
},
[359374] = {
["npcID"] = 181862,
},
[139772] = {
["isChanneled"] = true,
["source"] = "Shan'ze Celestial Shaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 70240,
},
[119552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subetai the Swift",
["npcID"] = 61427,
},
[256494] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["encounterID"] = 2095,
["event"] = "SPELL_CAST_START",
["npcID"] = 126969,
},
[424903] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["encounterID"] = 2854,
["event"] = "SPELL_CAST_START",
["npcID"] = 210108,
},
[157173] = {
["source"] = "Felguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 79507,
},
[385359] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[201488] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Deranged Mindflayer",
["npcID"] = 99657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[377140] = {
["source"] = "River Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 191618,
},
[131575] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monk Trainee",
["npcID"] = 66947,
},
[314326] = {
["source"] = "Crushing Tendril",
["event"] = "SPELL_CAST_START",
["npcID"] = 161312,
},
[347091] = {
["npcID"] = 164047,
},
[228852] = {
["encounterName"] = "Attumen the Huntsman",
["encounterID"] = 1960,
["npcID"] = 114262,
},
[119553] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subetai the Swift",
["npcID"] = 61427,
},
[388046] = {
["source"] = "Stinkbreath",
["event"] = "SPELL_CAST_START",
["npcID"] = 187033,
},
[118297] = {
["npcID"] = 61029,
},
[118529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu'shan Secret-Keeper",
["npcID"] = 61131,
},
[121601] = {
["source"] = "Harthak Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 61946,
},
[189944] = {
["source"] = "Mystic Velruun",
["event"] = "SPELL_CAST_START",
["npcID"] = 95602,
},
[383953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bakar Companion",
["npcID"] = 194255,
},
[441289] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["npcID"] = 216320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2905,
},
[408614] = {
["source"] = "Sundered Devastator",
["event"] = "SPELL_CAST_START",
["npcID"] = 198869,
},
[330711] = {
["encounterName"] = "Shriekwing",
["encounterID"] = 2398,
["npcID"] = 164406,
},
[406566] = {
["source"] = "Primal Lava Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 202264,
},
[449481] = {
["source"] = "Overseer Roskarrag",
["event"] = "SPELL_CAST_START",
["npcID"] = 221071,
},
[396327] = {
["source"] = "Glacias",
["event"] = "SPELL_CAST_START",
["npcID"] = 199028,
},
[123649] = {
["source"] = "Kargesh Ribcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 61947,
},
[371812] = {
["npcID"] = 46859,
},
[387473] = {
["source"] = "Brinetooth Bruiser",
["event"] = "SPELL_CAST_START",
["npcID"] = 187285,
},
[435148] = {
["source"] = "Risen Footman",
["event"] = "SPELL_CAST_START",
["npcID"] = 212835,
},
[328667] = {
["npcID"] = 163126,
},
[126209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Soul-Caller",
["npcID"] = 63611,
},
[293854] = {
["npcID"] = 144294,
},
[271329] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pathfinder Tacha",
["npcID"] = 200263,
},
[119554] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subetai the Swift",
["npcID"] = 61427,
},
[166397] = {
["npcID"] = 82590,
},
[326619] = {
["npcID"] = 166873,
},
[193018] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["encounterID"] = 1812,
["event"] = "SPELL_CAST_START",
["npcID"] = 91797,
},
[314333] = {
["npcID"] = 154638,
},
[137729] = {
["encounterName"] = "Megaera",
["source"] = "Flaming Head",
["encounterID"] = 1578,
["event"] = "SPELL_CAST_START",
["npcID"] = 70212,
},
[119575] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ookin Shaman",
["npcID"] = 59435,
},
[336859] = {
["npcID"] = 162873,
},
[420817] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaldorei Sentinel",
["npcID"] = 207117,
},
[412626] = {
["source"] = "General Zskorro",
["event"] = "SPELL_CAST_START",
["npcID"] = 203592,
},
[400333] = {
["source"] = "Cliffkeeper Bouldani",
["event"] = "SPELL_CAST_START",
["npcID"] = 202612,
},
[310329] = {
["encounterName"] = "Drest'agath",
["source"] = "Drest'agath",
["encounterID"] = 2343,
["event"] = "SPELL_CAST_START",
["npcID"] = 157602,
},
[76572] = {
["npcID"] = 39980,
},
[447439] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207946,
},
[200185] = {
["encounterName"] = "Shade of Xavius",
["encounterID"] = 1839,
["npcID"] = 99192,
},
[412366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subterrax",
["npcID"] = 203662,
},
[156963] = {
["encounterName"] = "Teron'gor",
["source"] = "Teron'gor",
["encounterID"] = 1714,
["event"] = "SPELL_CAST_START",
["npcID"] = 77734,
},
[263144] = {
["npcID"] = 127869,
},
[343005] = {
["encounterName"] = "Shriekwing",
["encounterID"] = 2398,
["npcID"] = 164406,
},
[271411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Block Warden Carmine",
["npcID"] = 124024,
},
[314337] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["encounterID"] = 2327,
["event"] = "SPELL_CAST_START",
["npcID"] = 156523,
},
[154113] = {
["encounterName"] = "Araknath",
["source"] = "Araknath",
["encounterID"] = 1699,
["event"] = "SPELL_CAST_START",
["npcID"] = 76141,
},
[375770] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frozion",
["npcID"] = 193655,
},
[426964] = {
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_START",
["npcID"] = 206705,
},
[323683] = {
["encounterName"] = "Mordretha",
["encounterID"] = 2404,
["npcID"] = 165946,
},
[33417] = {
["npcID"] = 18949,
},
[293861] = {
["npcID"] = 151613,
},
[361016] = {
["npcID"] = 183983,
},
[406481] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[451612] = {
["source"] = "Twilight Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 224609,
},
[193941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Embershard Scorpion",
["npcID"] = 98406,
},
[386012] = {
["source"] = "Stormcaller Boroo",
["event"] = "SPELL_CAST_START",
["npcID"] = 194317,
},
[119556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Weeping Horror",
["npcID"] = 57649,
},
[461850] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Ringing Death",
["npcID"] = 214162,
},
[453588] = {
["source"] = "Coalesced Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 220266,
},
[209404] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Arcanist",
["npcID"] = 104247,
},
[388060] = {
["source"] = "Stinkbreath",
["event"] = "SPELL_CAST_START",
["npcID"] = 187033,
},
[404442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vraken the Hunter",
["npcID"] = 200584,
},
[123648] = {
["source"] = "Harthak Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 61946,
},
[318534] = {
["source"] = "Umbral Gatekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 163708,
},
[123652] = {
["source"] = "Kargesh Ribcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 61947,
},
[283626] = {
["encounterName"] = "Champion of the Light",
["encounterID"] = 2265,
["npcID"] = 147895,
},
[386015] = {
["source"] = "Primalist Stormspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 194894,
},
[336868] = {
["npcID"] = 184606,
},
[461781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seacurse",
["npcID"] = 220762,
},
[392159] = {
["source"] = "Norbett",
["event"] = "SPELL_CAST_START",
["npcID"] = 190968,
},
[102151] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["encounterID"] = 1884,
["event"] = "SPELL_CAST_START",
["npcID"] = 54544,
},
[451543] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hollows Resident",
["npcID"] = 219983,
},
[453591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Congealed Slime",
["npcID"] = 225494,
},
[283628] = {
["npcID"] = 147895,
},
[32197] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tisse-malheur gatrul’lon",
["npcID"] = 66267,
},
[443353] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infesting Cindermite",
["npcID"] = 222276,
},
[273470] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["npcID"] = 129208,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2109,
},
[369193] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Dusttwister",
["npcID"] = 192371,
},
[392239] = {
["source"] = "Plainswalker Mammoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 187938,
},
[159085] = {
["npcID"] = 85775,
},
[336947] = {
["npcID"] = 162853,
},
[330037] = {
["npcID"] = 168361,
},
[139771] = {
["source"] = "Shan'ze Celestial Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 70240,
},
[408605] = {
["source"] = "Sundered Devastator",
["event"] = "SPELL_CAST_START",
["npcID"] = 198869,
},
[461785] = {
["source"] = "Sargassum Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 212582,
},
[406493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spinmarrow",
["npcID"] = 203480,
},
[373733] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[435165] = {
["source"] = "Sir Braunpyke",
["event"] = "SPELL_CAST_START",
["npcID"] = 217658,
},
[361447] = {
["npcID"] = 185510,
},
[390115] = {
["source"] = "Sarana",
["event"] = "SPELL_CAST_START",
["npcID"] = 190161,
},
[355306] = {
["npcID"] = 179778,
},
[418784] = {
["source"] = "Supreme General Pa'valak",
["event"] = "SPELL_CAST_START",
["npcID"] = 208211,
},
[299475] = {
["npcID"] = 150254,
},
[186883] = {
["encounterName"] = "Hellfire Assault",
["source"] = "Felfire Flamebelcher",
["encounterID"] = 1778,
["event"] = "SPELL_CAST_START",
["npcID"] = 90432,
},
[163334] = {
["encounterName"] = "Grimrail Enforcers",
["encounterID"] = 1748,
["npcID"] = 80808,
},
[361448] = {
["npcID"] = 182368,
},
[123654] = {
["encounterName"] = "Trial of the King",
["source"] = "Ming the Cunning",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61444,
},
[324589] = {
["encounterName"] = "Mordretha",
["encounterID"] = 2404,
["npcID"] = 166524,
},
[175621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Flame Binder",
["npcID"] = 87515,
},
[298025] = {
["npcID"] = 158160,
},
[445407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wandering Gutter",
["npcID"] = 214551,
},
[386024] = {
["source"] = "Primalist Stormspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 194894,
},
[383975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Windlord",
["npcID"] = 200390,
},
[13860] = {
["source"] = "Priest of Sseratus",
["event"] = "SPELL_CAST_START",
["npcID"] = 28035,
},
[265206] = {
["encounterName"] = "Vectis",
["encounterID"] = 2134,
["npcID"] = 135016,
},
[142894] = {
["source"] = "Admiral Hodgson",
["event"] = "SPELL_CAST_START",
["npcID"] = 71327,
},
[199172] = {
["source"] = "Grimguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 99728,
},
[328687] = {
["npcID"] = 166079,
},
[132646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkhatched Oracle",
["npcID"] = 67256,
},
[114965] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tortue nacrée",
["npcID"] = 59084,
},
[138763] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["encounterID"] = 1576,
["event"] = "SPELL_CAST_START",
["npcID"] = 69427,
},
[361452] = {
["npcID"] = 179006,
},
[115015] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terracotta Warrior",
["npcID"] = 59758,
},
[455649] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodscar",
["npcID"] = 223955,
},
[408551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalline Walker",
["npcID"] = 201063,
},
[443363] = {
["source"] = "Riled Sandtwister",
["event"] = "SPELL_CAST_START",
["npcID"] = 225900,
},
[404456] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[441316] = {
["isChanneled"] = true,
["source"] = "Frenzied Leaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222214,
},
[416743] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hungering Ghoul",
["npcID"] = 206016,
},
[418791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Supreme General Pa'valak",
["npcID"] = 208211,
},
[445412] = {
["source"] = "Shadowcrested Snapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 216963,
},
[443510] = {
["source"] = "Nightfall Executor",
["event"] = "SPELL_CAST_START",
["npcID"] = 217516,
},
[373960] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[386028] = {
["source"] = "Primalist Thunderbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 195696,
},
[373742] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[122120] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadling",
["npcID"] = 62306,
},
[383981] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rising Tempest",
["npcID"] = 194575,
},
[87622] = {
["encounterName"] = "Asaad",
["encounterID"] = 1042,
["npcID"] = 43875,
},
[461842] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["npcID"] = 216320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2905,
},
[332788] = {
["npcID"] = 165566,
},
[374038] = {
["encounterName"] = "The Primal Council",
["source"] = "Embar Firepath",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187767,
},
[209413] = {
["npcID"] = 104270,
},
[322550] = {
["encounterName"] = "Tred'ova",
["encounterID"] = 2393,
["npcID"] = 164517,
},
[198595] = {
["source"] = "Valarjar Thundercaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 95842,
},
[126227] = {
["source"] = "Adjunct Ek'vem",
["event"] = "SPELL_CAST_START",
["npcID"] = 62073,
},
[393539] = {
["source"] = "Champion Choruk",
["event"] = "SPELL_CAST_START",
["npcID"] = 186592,
},
[453607] = {
["source"] = "Shurrai",
["event"] = "SPELL_CAST_START",
["npcID"] = 221224,
},
[455655] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodscar",
["npcID"] = 223955,
},
[269310] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Titan Keeper Hezrel",
["encounterID"] = 2123,
["event"] = "SPELL_CAST_START",
["npcID"] = 134419,
},
[418796] = {
["source"] = "Supreme General Pa'valak",
["event"] = "SPELL_CAST_START",
["npcID"] = 208211,
},
[396346] = {
["source"] = "Warmonger Kharad",
["event"] = "SPELL_CAST_START",
["npcID"] = 190932,
},
[199176] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["encounterID"] = 1792,
["event"] = "SPELL_CAST_START",
["npcID"] = 91005,
},
[228868] = {
["source"] = "Kvaldir Tide Witch",
["event"] = "SPELL_CAST_START",
["npcID"] = 114813,
},
[345078] = {
["npcID"] = 170026,
},
[390169] = {
["source"] = "Magmaclaw Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 187218,
},
[332792] = {
["npcID"] = 165566,
},
[330784] = {
["npcID"] = 174197,
},
[76047] = {
["encounterName"] = "Commander Ulthok",
["npcID"] = 40765,
["encounterID"] = 1044,
},
[338936] = {
["npcID"] = 168216,
},
[318449] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[416751] = {
["source"] = "Vargul Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 207805,
},
[377844] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186122,
},
[404465] = {
["source"] = "Galakhad",
["event"] = "SPELL_CAST_START",
["npcID"] = 200717,
},
[326046] = {
["npcID"] = 167111,
},
[340975] = {
["npcID"] = 165344,
},
[412693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magtembo",
["npcID"] = 200111,
},
[328288] = {
["npcID"] = 168718,
},
[211464] = {
["npcID"] = 104278,
},
[330958] = {
["npcID"] = 177729,
},
[322557] = {
["npcID"] = 172991,
},
[338939] = {
["npcID"] = 167055,
},
[314400] = {
["source"] = "Living Blood",
["event"] = "SPELL_CAST_START",
["npcID"] = 159312,
},
[334988] = {
["npcID"] = 171596,
},
[201226] = {
["npcID"] = 100531,
},
[9573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Incendosaur",
["npcID"] = 9318,
},
[406516] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[295939] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["encounterID"] = 2291,
["npcID"] = 150190,
},
[336893] = {
["npcID"] = 162873,
},
[445492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wandering Gutter",
["npcID"] = 214551,
},
[320512] = {
["npcID"] = 163892,
},
[427025] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 208747,
},
[40076] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Wrangler",
["npcID"] = 22877,
},
[412661] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invoq",
["npcID"] = 203627,
},
[324608] = {
["encounterName"] = "Oryphrion",
["encounterID"] = 2358,
["npcID"] = 162060,
},
[200218] = {
["npcID"] = 101462,
},
[10277] = {
["npcID"] = 18970,
},
[271371] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogre Taskmaster",
["npcID"] = 156986,
},
[324609] = {
["npcID"] = 166396,
},
[449522] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drone Abductor",
["npcID"] = 219655,
},
[361469] = {
["npcID"] = 185800,
},
[404472] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200912,
},
[420881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Ashwarden",
["npcID"] = 208659,
},
[102158] = {
["npcID"] = 54553,
},
[287751] = {
["encounterName"] = "Mekkatorque",
["encounterID"] = 2276,
["npcID"] = 144796,
},
[404473] = {
["source"] = "Galakhad",
["event"] = "SPELL_CAST_START",
["npcID"] = 200717,
},
[174608] = {
["event"] = "SPELL_CAST_START",
["source"] = "Councilor Gorluk",
["npcID"] = 81809,
},
[200205] = {
["source"] = "Reaves",
["event"] = "SPELL_CAST_START",
["npcID"] = 101462,
},
[328707] = {
["npcID"] = 168992,
},
[330755] = {
["npcID"] = 182690,
},
[320517] = {
["npcID"] = 163894,
},
[171537] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Cleaver",
["npcID"] = 84859,
},
[377854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sky Vixen Shokhari",
["npcID"] = 190761,
},
[310277] = {
["encounterName"] = "Drest'agath",
["source"] = "Drest'agath",
["encounterID"] = 2343,
["event"] = "SPELL_CAST_START",
["npcID"] = 157602,
},
[271310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pathfinder Tacha",
["npcID"] = 200263,
},
[334852] = {
["encounterName"] = "Huntsman Altimor",
["encounterID"] = 2418,
["npcID"] = 169458,
},
[427001] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 211089,
},
[102156] = {
["npcID"] = 54553,
},
[227851] = {
["encounterName"] = "Moroes",
["encounterID"] = 1961,
["npcID"] = 114312,
},
[196111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seaspray Crab",
["npcID"] = 91793,
},
[387504] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[461814] = {
["source"] = "Daughter of Alizabal",
["event"] = "SPELL_CAST_START",
["npcID"] = 214142,
},
[406581] = {
["source"] = "Primal Lava Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 202264,
},
[386026] = {
["source"] = "Unstable Squall",
["event"] = "SPELL_CAST_START",
["npcID"] = 194895,
},
[326745] = {
["npcID"] = 170016,
},
[265231] = {
["encounterName"] = "Zek'voz",
["encounterID"] = 2136,
["npcID"] = 134445,
},
[211470] = {
["npcID"] = 104300,
},
[200248] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Arcanist",
["npcID"] = 98280,
},
[287757] = {
["encounterName"] = "Mekkatorque",
["encounterID"] = 2276,
["npcID"] = 144796,
},
[408576] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200918,
},
[365572] = {
["npcID"] = 184733,
},
[75539] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["encounterID"] = 1040,
["npcID"] = 39665,
},
[453616] = {
["source"] = "Doomguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 225493,
},
[404480] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebon Lieutenant",
["npcID"] = 201647,
},
[125716] = {
["event"] = "SPELL_CAST_START",
["source"] = "Set'thik Tempest",
["npcID"] = 64358,
},
[424958] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["encounterID"] = 2861,
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[197137] = {
["source"] = "Hatecoil Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 100216,
},
[410625] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2685,
},
[355349] = {
["npcID"] = 184185,
},
[192018] = {
["encounterName"] = "Hyrja",
["source"] = "Hyrja",
["encounterID"] = 1806,
["event"] = "SPELL_CAST_START",
["npcID"] = 95833,
},
[112911] = {
["source"] = "Fragment of Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 58810,
},
[154135] = {
["encounterName"] = "Araknath",
["source"] = "Araknath",
["encounterID"] = 1699,
["event"] = "SPELL_CAST_START",
["npcID"] = 76141,
},
[130317] = {
["source"] = "Osul Spitfire",
["event"] = "SPELL_CAST_START",
["npcID"] = 66289,
},
[265248] = {
["encounterName"] = "Zek'voz",
["encounterID"] = 2136,
["npcID"] = 134445,
},
[160274] = {
["source"] = "Initiate of the Rising Sun",
["event"] = "SPELL_CAST_START",
["npcID"] = 79466,
},
[338955] = {
["npcID"] = 165427,
},
[336910] = {
["npcID"] = 162872,
},
[441343] = {
["isChanneled"] = true,
["source"] = "Frenzied Leaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222214,
},
[40078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Leviathan",
["npcID"] = 22884,
},
[365682] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2553,
["npcID"] = 184140,
},
[390150] = {
["source"] = "Wyrmeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 186612,
},
[265241] = {
["npcID"] = 135190,
},
[312336] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Dark Inquisitor Xanesh",
["encounterID"] = 2328,
["event"] = "SPELL_CAST_START",
["npcID"] = 156575,
},
[320529] = {
["npcID"] = 168886,
},
[390151] = {
["npcID"] = 189955,
},
[412678] = {
["source"] = "Klakatak",
["event"] = "SPELL_CAST_START",
["npcID"] = 203618,
},
[369674] = {
["npcID"] = 184022,
},
[347149] = {
["encounterName"] = "Timecap'n Hooktail",
["encounterID"] = 2419,
["npcID"] = 175546,
},
[20297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dmong Naruuk",
["npcID"] = 60683,
},
[347151] = {
["encounterName"] = "Timecap'n Hooktail",
["npcID"] = 175546,
["encounterID"] = 2419,
},
[369675] = {
["npcID"] = 184022,
},
[338959] = {
["npcID"] = 162114,
},
[267288] = {
["npcID"] = 135671,
},
[363533] = {
["encounterName"] = "Rygelon",
["npcID"] = 182777,
["encounterID"] = 2549,
},
[463956] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Serpent",
["npcID"] = 215770,
},
[259597] = {
["npcID"] = 158110,
},
[197141] = {
["source"] = "Hatecoil Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 100216,
},
[338914] = {
["npcID"] = 177628,
},
[369677] = {
["encounterName"] = "The Lost Dwarves",
["encounterID"] = 2555,
["npcID"] = 184580,
},
[2602] = {
["encounterName"] = "Ancient Stone Keeper",
["source"] = "Earthen Sculptor",
["encounterID"] = 551,
["event"] = "SPELL_CAST_START",
["npcID"] = 7012,
},
[211473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Mistress",
["npcID"] = 104300,
},
[451605] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[443397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Venomblade",
["npcID"] = 220193,
},
[33919] = {
["encounterName"] = "Tavarok",
["source"] = "Tavarok",
["encounterID"] = 1901,
["event"] = "SPELL_CAST_START",
["npcID"] = 18343,
},
[412669] = {
["source"] = "Klakatak",
["event"] = "SPELL_CAST_START",
["npcID"] = 203618,
},
[336888] = {
["npcID"] = 168233,
},
[443436] = {
["event"] = "SPELL_CAST_START",
["source"] = "Herald of Ansurek",
["npcID"] = 220196,
},
[461817] = {
["source"] = "Daughter of Alizabal",
["event"] = "SPELL_CAST_START",
["npcID"] = 214142,
},
[291865] = {
["encounterName"] = "King Mechagon",
["npcID"] = 150396,
["encounterID"] = 2260,
},
[384014] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[404209] = {
["source"] = "Veltrax",
["event"] = "SPELL_CAST_START",
["npcID"] = 200904,
},
[386059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Basrikron",
["npcID"] = 193535,
},
[211477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Legion Hound",
["npcID"] = 104277,
},
[343060] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 168113,
},
[386063] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186338,
},
[396302] = {
["source"] = "Geothermus",
["event"] = "SPELL_CAST_START",
["npcID"] = 217416,
},
[427011] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 208747,
},
[392207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zenet Avis",
["npcID"] = 193209,
},
[40079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Leviathan",
["npcID"] = 22884,
},
[410629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalecommander Sarkareth",
["npcID"] = 199984,
},
[139803] = {
["source"] = "Manchu",
["event"] = "SPELL_CAST_START",
["npcID"] = 70202,
},
[310298] = {
["source"] = "Sinister Soulcarver",
["event"] = "SPELL_CAST_START",
["npcID"] = 162717,
},
[197144] = {
["source"] = "Hatecoil Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 100216,
},
[396304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Rothexer",
["npcID"] = 197135,
},
[115506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Flamethrower",
["npcID"] = 59705,
},
[75543] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["encounterID"] = 1040,
["npcID"] = 39665,
},
[117010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dread Shadow",
["npcID"] = 62307,
},
[404496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sabellian",
["npcID"] = 201383,
},
[193826] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["encounterID"] = 1808,
["event"] = "SPELL_CAST_START",
["npcID"] = 95675,
},
[126737] = {
["source"] = "Kz'Kzik",
["event"] = "SPELL_CAST_START",
["npcID"] = 62832,
},
[357508] = {
["npcID"] = 180495,
},
[445422] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[199193] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[421059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[225814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blade Dancer Illianna",
["npcID"] = 96657,
},
[136737] = {
["source"] = "Shan'ze Gravekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 69235,
},
[322554] = {
["encounterName"] = "Executor Tarvold",
["encounterID"] = 2361,
["npcID"] = 162103,
},
[355118] = {
["npcID"] = 178133,
},
[139797] = {
["source"] = "Manchu",
["event"] = "SPELL_CAST_START",
["npcID"] = 70202,
},
[461836] = {
["source"] = "Flickerflame Candleflyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 219341,
},
[320614] = {
["encounterName"] = "Blightbone",
["npcID"] = 164702,
["encounterID"] = 2387,
},
[124690] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seething Hatred",
["npcID"] = 61054,
},
[394261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gurblbrblr the Invader",
["npcID"] = 197211,
},
[347163] = {
["npcID"] = 170157,
},
[275492] = {
["npcID"] = 140853,
},
[277540] = {
["npcID"] = 141266,
},
[394262] = {
["source"] = "Cygenoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 185660,
},
[330782] = {
["npcID"] = 177729,
},
[130900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ga’trul",
["npcID"] = 66276,
},
[400335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vraken the Hunter",
["npcID"] = 200584,
},
[386072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Intinosa",
["npcID"] = 195354,
},
[445457] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[386096] = {
["event"] = "SPELL_CAST_START",
["source"] = "Screechflight Witherer",
["npcID"] = 183954,
},
[375834] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[394264] = {
["source"] = "Hyenamaster Durgun",
["event"] = "SPELL_CAST_START",
["npcID"] = 186515,
},
[132644] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkhatched Flesh-hunter",
["npcID"] = 67259,
},
[365596] = {
["npcID"] = 180917,
},
[142883] = {
["source"] = "Maragor",
["event"] = "SPELL_CAST_START",
["npcID"] = 71492,
},
[164357] = {
["encounterName"] = "Witherbark",
["source"] = "Witherbark",
["encounterID"] = 1746,
["event"] = "SPELL_CAST_START",
["npcID"] = 81522,
},
[396313] = {
["npcID"] = 189542,
},
[291878] = {
["encounterName"] = "King Mechagon",
["npcID"] = 150396,
["encounterID"] = 2260,
},
[126739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korvexxis",
["npcID"] = 62579,
},
[271401] = {
["npcID"] = 161456,
},
[330786] = {
["npcID"] = 169861,
},
[118535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orachi",
["npcID"] = 59180,
},
[142884] = {
["source"] = "Maragor",
["event"] = "SPELL_CAST_START",
["npcID"] = 71492,
},
[353312] = {
["encounterName"] = "Hylbrande",
["encounterID"] = 2426,
["npcID"] = 175663,
},
[396315] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Stormcaller",
["npcID"] = 201686,
},
[271443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Toadstool Danner",
["npcID"] = 200260,
},
[192005] = {
["encounterName"] = "Serpentrix",
["source"] = "Arcane Hydra Spawn",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 97260,
},
[328740] = {
["npcID"] = 168992,
},
[396316] = {
["source"] = "Nokhud Huntmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 185353,
},
[332836] = {
["npcID"] = 169927,
},
[124692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spiteful Spirit",
["npcID"] = 63839,
},
[386078] = {
["source"] = "Echo of Loss",
["event"] = "SPELL_CAST_START",
["npcID"] = 190259,
},
[396317] = {
["source"] = "Loamas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199030,
},
[209410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Arcanist",
["npcID"] = 104247,
},
[196127] = {
["encounterName"] = "Serpentrix",
["source"] = "Mak'rana Siltwalker",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 91790,
},
[192003] = {
["encounterName"] = "Serpentrix",
["source"] = "Blazing Hydra Spawn",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 97259,
},
[412700] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magtembo",
["npcID"] = 200111,
},
[443433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Herald of Ansurek",
["npcID"] = 220196,
},
[359459] = {
["npcID"] = 182392,
},
[451608] = {
["source"] = "Kobyss Shadeshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 215653,
},
[265376] = {
["source"] = "Fanatical Headhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 133663,
},
[394337] = {
["event"] = "SPELL_CAST_START",
["source"] = "Morchok",
["npcID"] = 187306,
},
[398300] = {
["source"] = "Shambling Infester",
["event"] = "SPELL_CAST_START",
["npcID"] = 200387,
},
[32914] = {
["npcID"] = 57422,
},
[398296] = {
["source"] = "Shambling Infester",
["event"] = "SPELL_CAST_START",
["npcID"] = 200387,
},
[360845] = {
["encounterName"] = "Prototype Pantheon",
["encounterID"] = 2544,
["npcID"] = 181551,
},
[373729] = {
["npcID"] = 190128,
},
[410655] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalecommander Sarkareth",
["npcID"] = 199984,
},
[390111] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["npcID"] = 189727,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2617,
},
[391553] = {
["source"] = "Andantenormu",
["event"] = "SPELL_CAST_START",
["npcID"] = 199609,
},
[128283] = {
["source"] = "Shuffling Mistlurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 65404,
},
[139816] = {
["encounterName"] = "Megaera",
["source"] = "Frozen Head",
["encounterID"] = 1578,
["event"] = "SPELL_CAST_START",
["npcID"] = 70235,
},
[420895] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[398370] = {
["source"] = "Calcifying Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 203342,
},
[336834] = {
["npcID"] = 184606,
},
[394275] = {
["source"] = "Cygenoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 185660,
},
[347094] = {
["encounterName"] = "Hylbrande",
["encounterID"] = 2426,
["npcID"] = 175663,
},
[369602] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Olaf",
["encounterID"] = 2555,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184580,
},
[304093] = {
["npcID"] = 155908,
},
[369703] = {
["encounterName"] = "Bromach",
["encounterID"] = 2556,
["npcID"] = 184018,
},
[265268] = {
["encounterName"] = "Zek'voz",
["encounterID"] = 2136,
["npcID"] = 134445,
},
[124182] = {
["isChanneled"] = true,
["source"] = "Battat",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60728,
},
[400430] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[361513] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["encounterID"] = 2540,
["npcID"] = 181224,
},
[396325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disease Slasher",
["npcID"] = 197138,
},
[316463] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Mindgate",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158374,
},
[449567] = {
["source"] = "Sunless Tidemarshal",
["event"] = "SPELL_CAST_START",
["npcID"] = 219602,
},
[131627] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hantise sha",
["npcID"] = 66423,
},
[404517] = {
["source"] = "Vakan",
["event"] = "SPELL_CAST_START",
["npcID"] = 199855,
},
[330716] = {
["npcID"] = 167998,
},
[449568] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[325205] = {
["npcID"] = 166936,
},
[429091] = {
["source"] = "High Priest Aemya",
["event"] = "SPELL_CAST_START",
["npcID"] = 212827,
},
[195108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Stormweaver",
["npcID"] = 91783,
},
[343086] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 168112,
},
[287797] = {
["encounterName"] = "Mekkatorque",
["encounterID"] = 2276,
["npcID"] = 144796,
},
[132652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkhatched Shaman",
["npcID"] = 67255,
},
[373803] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Infused Whelp",
["encounterID"] = 2609,
["event"] = "SPELL_CAST_START",
["npcID"] = 189893,
},
[424997] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["npcID"] = 208459,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2731,
},
[443427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Silkbinder",
["npcID"] = 220195,
},
[306228] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Flayed Soul",
["encounterID"] = 2328,
["event"] = "SPELL_CAST_START",
["npcID"] = 157005,
},
[195109] = {
["source"] = "Hatecoil Stormweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 91783,
},
[118552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu'shan Secret-Keeper",
["npcID"] = 61131,
},
[377900] = {
["source"] = "Qalashi Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 191833,
},
[396330] = {
["source"] = "Nokhud Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 185357,
},
[304075] = {
["npcID"] = 155812,
},
[441381] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Nx",
["npcID"] = 216648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[331574] = {
["npcID"] = 170217,
},
[289743] = {
["npcID"] = 149556,
},
[300087] = {
["npcID"] = 150251,
},
[334899] = {
["npcID"] = 174802,
},
[328756] = {
["encounterName"] = "Ingra Maloch",
["encounterID"] = 2397,
["npcID"] = 164567,
},
[320465] = {
["npcID"] = 167078,
},
[201203] = {
["event"] = "SPELL_CAST_START",
["source"] = "Necrodark Greysworn",
["npcID"] = 104565,
},
[435138] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[397043] = {
["source"] = "Cyclas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199029,
},
[322614] = {
["encounterName"] = "Tred'ova",
["encounterID"] = 2393,
["npcID"] = 164517,
},
[112896] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Flesh-Eater",
["npcID"] = 70746,
},
[441384] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["npcID"] = 216649,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[426943] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 208747,
},
[119577] = {
["source"] = "Wildscale Herbalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 58216,
},
[118519] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mutated Silkmoth",
["npcID"] = 57422,
},
[441385] = {
["source"] = "Hollow Frostweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 222193,
},
[32330] = {
["source"] = "Lykul Wasp",
["event"] = "SPELL_CAST_START",
["npcID"] = 17732,
},
[404526] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baine Bloodhoof",
["npcID"] = 203204,
},
[392130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Maxdormu",
["npcID"] = 189668,
},
[326712] = {
["npcID"] = 167956,
},
[394288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gurblbrblr the Invader",
["npcID"] = 197211,
},
[355381] = {
["npcID"] = 184185,
},
[382002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apex Blazewing",
["npcID"] = 193291,
},
[316244] = {
["npcID"] = 162056,
},
[42131] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guard Lasiter",
["npcID"] = 4973,
},
[136752] = {
["encounterName"] = "Twin Empyreans",
["source"] = "Lu'lin",
["encounterID"] = 1560,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 68905,
},
[398385] = {
["source"] = "Blaze Hound Matron",
["event"] = "SPELL_CAST_START",
["npcID"] = 204378,
},
[227817] = {
["encounterName"] = "Maiden of Virtue",
["encounterID"] = 1954,
["npcID"] = 113971,
},
[172588] = {
["source"] = "Melded Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 86372,
},
[404529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baine Bloodhoof",
["npcID"] = 203204,
},
[324667] = {
["encounterName"] = "Globgrog",
["npcID"] = 164255,
["encounterID"] = 2382,
},
[334765] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 168112,
},
[345145] = {
["npcID"] = 170303,
},
[259618] = {
["source"] = "Vicious Diemetradon",
["event"] = "SPELL_CAST_START",
["npcID"] = 130756,
},
[36996] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mercurial Guardian",
["npcID"] = 67833,
},
[318525] = {
["source"] = "Shath'Yar Scribe",
["event"] = "SPELL_CAST_START",
["npcID"] = 163690,
},
[386101] = {
["event"] = "SPELL_CAST_START",
["source"] = "Screechflight Bellower",
["npcID"] = 187124,
},
[115997] = {
["source"] = "Dappled Moth",
["event"] = "SPELL_CAST_START",
["npcID"] = 57232,
},
[422961] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200926,
},
[328940] = {
["npcID"] = 162586,
},
[451501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burgle-gurgle",
["npcID"] = 214545,
},
[365678] = {
["npcID"] = 184734,
},
[362849] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2553,
["npcID"] = 183501,
},
[102173] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["encounterID"] = 1884,
["event"] = "SPELL_CAST_START",
["npcID"] = 54544,
},
[377912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Sentry",
["npcID"] = 192680,
},
[289859] = {
["npcID"] = 148442,
},
[64145] = {
["encounterName"] = "Yogg-Saron",
["npcID"] = 33966,
["encounterID"] = 1143,
},
[359483] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["encounterID"] = 2540,
["npcID"] = 181224,
},
[320576] = {
["npcID"] = 168886,
},
[314433] = {
["source"] = "Living Blood",
["event"] = "SPELL_CAST_START",
["npcID"] = 159312,
},
[365627] = {
["npcID"] = 184954,
},
[163376] = {
["encounterName"] = "Grimrail Enforcers",
["npcID"] = 80808,
["encounterID"] = 1748,
},
[373678] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[330816] = {
["npcID"] = 169861,
},
[332650] = {
["npcID"] = 165007,
},
[447395] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["encounterID"] = 1050,
["event"] = "SPELL_CAST_START",
["npcID"] = 40177,
},
[193069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felsworn Infester",
["npcID"] = 96587,
},
[429109] = {
["source"] = "Forgebound Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 213338,
},
[209378] = {
["npcID"] = 104275,
},
[343104] = {
["npcID"] = 170208,
},
[386107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Screechflight Hexclaw",
["npcID"] = 183995,
},
[429110] = {
["source"] = "Forgebound Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 213338,
},
[398394] = {
["source"] = "Deep Krolusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 202738,
},
[392451] = {
["source"] = "Flame Channeler",
["event"] = "SPELL_CAST_START",
["npcID"] = 197985,
},
[361387] = {
["npcID"] = 182466,
},
[443292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devouring Shade",
["npcID"] = 217870,
},
[359334] = {
["npcID"] = 181862,
},
[375870] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[328772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Weaver",
["npcID"] = 200375,
},
[396348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gutchewer Bear",
["npcID"] = 197134,
},
[256551] = {
["encounterName"] = "Ring of Booty",
["source"] = "Sawtooth Shark",
["encounterID"] = 2095,
["event"] = "SPELL_CAST_START",
["npcID"] = 129359,
},
[175665] = {
["isChanneled"] = true,
["source"] = "Gorian Enforcer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 86275,
},
[328773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Weaver",
["npcID"] = 200375,
},
[396349] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fleshripper Vulture",
["npcID"] = 197133,
},
[398397] = {
["source"] = "Magmaclaw Supplicant",
["event"] = "SPELL_CAST_START",
["npcID"] = 203933,
},
[171570] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Dockworker",
["npcID"] = 84841,
},
[367521] = {
["source"] = "Bonebolt Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 185534,
},
[396350] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fleshripper Vulture",
["npcID"] = 197133,
},
[385950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathwingurlugull",
["npcID"] = 195314,
},
[334918] = {
["npcID"] = 162047,
},
[373051] = {
["source"] = "Mudfin Salamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 186669,
},
[461879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxy Globule",
["npcID"] = 213873,
},
[398399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chittering Acidclaw",
["npcID"] = 201093,
},
[196144] = {
["encounterName"] = "Serpentrix",
["source"] = "Mak'rana Siltwalker",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 91790,
},
[131640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ik'thik Whisperer",
["npcID"] = 64622,
},
[420925] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[327995] = {
["npcID"] = 168574,
},
[392257] = {
["source"] = "Broadhoof Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 193385,
},
[377923] = {
["source"] = "Lava Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 186161,
},
[332705] = {
["npcID"] = 170490,
},
[390210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudgatu",
["npcID"] = 197346,
},
[118558] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unga Fish-Getter",
["npcID"] = 60299,
},
[200154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Understone Demolisher",
["npcID"] = 102253,
},
[404796] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baine Bloodhoof",
["npcID"] = 203204,
},
[396180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver Wurmling",
["npcID"] = 187366,
},
[192050] = {
["encounterName"] = "Serpentrix",
["source"] = "Serpentrix",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 91808,
},
[95826] = {
["npcID"] = 68,
},
[412737] = {
["source"] = "Silver Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 198946,
},
[122142] = {
["isChanneled"] = true,
["source"] = "Borokhula the Destroyer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 58739,
},
[186846] = {
["source"] = "Contracted Engineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 93813,
},
[435263] = {
["source"] = "Infinite Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 217557,
},
[334748] = {
["npcID"] = 166302,
},
[426893] = {
["source"] = "Quartermaster Koratite",
["event"] = "SPELL_CAST_START",
["npcID"] = 209801,
},
[34930] = {
["source"] = "Ethereal Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 18331,
},
[328781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Lurker",
["npcID"] = 199126,
},
[408476] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Erratic Remnant",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 202824,
},
[260651] = {
["event"] = "SPELL_CAST_START",
["source"] = "Karkinus the Capsizer",
["npcID"] = 200907,
},
[310352] = {
["encounterName"] = "Drest'agath",
["source"] = "Maw of Drest'agath",
["encounterID"] = 2343,
["event"] = "SPELL_CAST_START",
["npcID"] = 157613,
},
[367503] = {
["source"] = "Decay Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186191,
},
[63891] = {
["encounterName"] = "Yogg-Saron",
["npcID"] = 33134,
["encounterID"] = 1143,
},
[88308] = {
["encounterName"] = "Altairus",
["encounterID"] = 1041,
["npcID"] = 43873,
},
[334926] = {
["npcID"] = 168878,
},
[160312] = {
["source"] = "Sargerei Cleric",
["event"] = "SPELL_CAST_START",
["npcID"] = 77134,
},
[433029] = {
["encounterName"] = "Mirror Master Murkna",
["source"] = "Mirror Master Murkna",
["npcID"] = 219763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2999,
},
[40598] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[381834] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186122,
},
[319906] = {
["npcID"] = 181614,
},
[396360] = {
["source"] = "Ritual Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 186787,
},
[326952] = {
["npcID"] = 168058,
},
[406407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Calibrating Scent Matrix",
["npcID"] = 203606,
},
[336277] = {
["npcID"] = 172265,
},
[385383] = {
["source"] = "Forge-Keep Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 192699,
},
[387049] = {
["source"] = "Wild Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 194087,
},
[334929] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 168112,
},
[377608] = {
["npcID"] = 190938,
},
[314452] = {
["source"] = "Leeching Parasite",
["event"] = "SPELL_CAST_START",
["npcID"] = 159309,
},
[365646] = {
["npcID"] = 184651,
},
[159290] = {
["source"] = "Solar Familiar",
["event"] = "SPELL_CAST_START",
["npcID"] = 76097,
},
[320596] = {
["encounterName"] = "Blightbone",
["npcID"] = 162691,
["encounterID"] = 2387,
},
[227789] = {
["encounterName"] = "Maiden of Virtue",
["encounterID"] = 1954,
["npcID"] = 113971,
},
[260654] = {
["event"] = "SPELL_CAST_START",
["source"] = "Karkinus the Capsizer",
["npcID"] = 200907,
},
[373636] = {
["source"] = "Konkhular",
["event"] = "SPELL_CAST_START",
["npcID"] = 194544,
},
[397112] = {
["source"] = "Ancient Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 189798,
},
[40317] = {
["source"] = "Murkblood Spearman",
["event"] = "SPELL_CAST_START",
["npcID"] = 17729,
},
[265721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terrorachna",
["npcID"] = 200349,
},
[425033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ignit the Firebranded",
["npcID"] = 209620,
},
[328789] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 169062,
},
[298073] = {
["npcID"] = 153451,
},
[365649] = {
["npcID"] = 184734,
},
[357197] = {
["npcID"] = 180336,
},
[139838] = {
["encounterName"] = "Megaera",
["source"] = "Venomous Head",
["encounterID"] = 1578,
["event"] = "SPELL_CAST_START",
["npcID"] = 70247,
},
[396366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimetalon Spellflinger",
["npcID"] = 195756,
},
[390223] = {
["source"] = "Flashfrost Tarasek",
["event"] = "SPELL_CAST_START",
["npcID"] = 187089,
},
[277597] = {
["npcID"] = 140599,
},
[328791] = {
["encounterName"] = "Lord Chamberlain",
["encounterID"] = 2381,
["npcID"] = 164218,
},
[396367] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayed Elder",
["npcID"] = 197142,
},
[227783] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114260,
["encounterID"] = 1957,
},
[392272] = {
["source"] = "Rumbling Blackpaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 191665,
},
[361556] = {
["npcID"] = 181685,
},
[168398] = {
["encounterName"] = "Skulloc, Son of Gruul",
["encounterID"] = 1754,
["npcID"] = 84215,
},
[431180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dripear the Waxy",
["npcID"] = 213883,
},
[425037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Core Hound",
["npcID"] = 210288,
},
[459849] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queensguard An'Jak Shabtir",
["npcID"] = 219665,
},
[191946] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["npcID"] = 91784,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[195129] = {
["source"] = "Hatecoil Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 91782,
},
[204344] = {
["source"] = "Blacktalon Assassin",
["event"] = "SPELL_CAST_START",
["npcID"] = 186634,
},
[459850] = {
["source"] = "Exalted Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 222368,
},
[396370] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Controller",
["npcID"] = 195836,
},
[365426] = {
["npcID"] = 184413,
},
[52118] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iceshatter",
["npcID"] = 27007,
},
[369750] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Scaleripper",
["npcID"] = 187908,
},
[363607] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["encounterID"] = 2540,
["npcID"] = 181244,
},
[154175] = {
["encounterName"] = "Bonemaw",
["source"] = "Bonemaw",
["encounterID"] = 1679,
["event"] = "SPELL_CAST_START",
["npcID"] = 75452,
},
[163390] = {
["encounterName"] = "Grimrail Enforcers",
["encounterID"] = 1748,
["npcID"] = 80808,
},
[369751] = {
["source"] = "Qalashi Djaradin",
["event"] = "SPELL_CAST_START",
["npcID"] = 188296,
},
[453709] = {
["source"] = "Kelpmire",
["event"] = "SPELL_CAST_START",
["npcID"] = 220287,
},
[369754] = {
["encounterName"] = "Bromach",
["encounterID"] = 2556,
["npcID"] = 184018,
},
[162248] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Prowler",
["npcID"] = 145736,
},
[451423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xeph'itik",
["npcID"] = 219984,
},
[76584] = {
["npcID"] = 39990,
},
[341084] = {
["npcID"] = 170472,
},
[293986] = {
["npcID"] = 151476,
},
[330604] = {
["npcID"] = 168724,
},
[198892] = {
["source"] = "Storm Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 97068,
},
[198962] = {
["source"] = "Valarjar Runecarver",
["event"] = "SPELL_CAST_START",
["npcID"] = 96664,
},
[392279] = {
["source"] = "Wild Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 194087,
},
[40088] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Sea-Caller",
["npcID"] = 22875,
},
[393430] = {
["source"] = "Forge-Keep Custodian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192703,
},
[449368] = {
["source"] = "Wanderer Ida",
["event"] = "SPELL_CAST_START",
["npcID"] = 220953,
},
[155201] = {
["encounterName"] = "Blast Furnace",
["source"] = "Furnace Engineer",
["npcID"] = 88820,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1690,
},
[400177] = {
["isChanneled"] = true,
["source"] = "Zaqali Summoner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204826,
},
[461904] = {
["source"] = "Orb of Ascendance",
["event"] = "SPELL_CAST_START",
["npcID"] = 229296,
},
[116004] = {
["source"] = "Water Fiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 56820,
},
[392281] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostdrake",
["npcID"] = 188804,
},
[143939] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Kil'ruk the Wind-Reaver",
["npcID"] = 71161,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[361313] = {
["npcID"] = 182666,
},
[365661] = {
["npcID"] = 184651,
},
[196157] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Shadowmoon Technician",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99645,
},
[435366] = {
["source"] = "Eratus, the Unwoven Paradox",
["event"] = "SPELL_CAST_START",
["npcID"] = 217190,
},
[445524] = {
["source"] = "Shrillwing Hunter En'kilah",
["event"] = "SPELL_CAST_START",
["npcID"] = 222038,
},
[120100] = {
["encounterName"] = "Trial of the King",
["source"] = "Ming the Cunning",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61444,
},
[128803] = {
["source"] = "Shek'zeer Clutch-Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 64559,
},
[138691] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["encounterID"] = 1576,
["event"] = "SPELL_CAST_START",
["npcID"] = 69427,
},
[412761] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[393432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Refti Defender",
["npcID"] = 190340,
},
[425048] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["encounterID"] = 2861,
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[377950] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186125,
},
[328180] = {
["npcID"] = 168627,
},
[133702] = {
["isChanneled"] = true,
["source"] = "Broodmaster Noshi",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 67264,
},
[392021] = {
["source"] = "Mantai",
["event"] = "SPELL_CAST_START",
["npcID"] = 195286,
},
[143941] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Kil'ruk the Wind-Reaver",
["npcID"] = 71161,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[412889] = {
["source"] = "Zakajz",
["event"] = "SPELL_CAST_START",
["npcID"] = 198953,
},
[291946] = {
["encounterName"] = "K.U.-J.0.",
["npcID"] = 144246,
["encounterID"] = 2258,
},
[384095] = {
["source"] = "Ohuna Companion",
["event"] = "SPELL_CAST_START",
["npcID"] = 194254,
},
[394334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matriarch Avethyra",
["npcID"] = 184847,
},
[111398] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scarlet Evangelist",
["npcID"] = 58685,
},
[169341] = {
["npcID"] = 83765,
},
[207806] = {
["encounterName"] = "Patrol Captain Gerdo",
["npcID"] = 104215,
["encounterID"] = 1868,
},
[388374] = {
["source"] = "Towering Deepstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 203786,
},
[194112] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["encounterID"] = 1808,
["event"] = "SPELL_CAST_START",
["npcID"] = 95675,
},
[122149] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Zar'thik Battle-Mender",
["npcID"] = 62408,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1498,
},
[360949] = {
["npcID"] = 184268,
},
[394336] = {
["source"] = "Mordigan Ironjaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 187353,
},
[355429] = {
["npcID"] = 178165,
},
[383823] = {
["source"] = "Nokhud Hornsounder",
["event"] = "SPELL_CAST_START",
["npcID"] = 192796,
},
[200256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Minion",
["npcID"] = 101549,
},
[209471] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Nightmare Ichor",
["npcID"] = 105721,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1873,
},
[125733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swamp Rodent",
["npcID"] = 60733,
},
[275568] = {
["npcID"] = 157728,
},
[432967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sentry Stagshell",
["npcID"] = 216340,
},
[131657] = {
["source"] = "Ik'thik Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 58368,
},
[396386] = {
["source"] = "Melter Igneous",
["event"] = "SPELL_CAST_START",
["npcID"] = 188226,
},
[275569] = {
["npcID"] = 157728,
},
[42870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Invader",
["npcID"] = 24051,
},
[406344] = {
["source"] = "Zaqali Firecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 200454,
},
[445251] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenging Stormfang",
["npcID"] = 218401,
},
[38618] = {
["npcID"] = 182155,
},
[398154] = {
["source"] = "Defiled Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 75451,
},
[424771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harbinger of Incineration",
["npcID"] = 210147,
},
[396388] = {
["source"] = "Glacias",
["event"] = "SPELL_CAST_START",
["npcID"] = 199028,
},
[390245] = {
["source"] = "Embertooth Spearhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 188725,
},
[205231] = {
["npcID"] = 103673,
},
[13608] = {
["event"] = "SPELL_CAST_START",
["source"] = "Recalled Silverbrook Lumberjack",
["npcID"] = 226197,
},
[76588] = {
["npcID"] = 39990,
},
[423010] = {
["source"] = "Zealous Dryad",
["event"] = "SPELL_CAST_START",
["npcID"] = 210813,
},
[207278] = {
["encounterName"] = "Patrol Captain Gerdo",
["npcID"] = 104215,
["encounterID"] = 1868,
},
[323748] = {
["npcID"] = 171381,
},
[55704] = {
["source"] = "Earthen Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 29981,
},
[115421] = {
["isChanneled"] = true,
["source"] = "Krik'thik Wind Shaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59801,
},
[408677] = {
["source"] = "Sundered Scaleguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 198871,
},
[193092] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["encounterID"] = 1805,
["event"] = "SPELL_CAST_START",
["npcID"] = 94960,
},
[389947] = {
["source"] = "Warmonger Kharad",
["event"] = "SPELL_CAST_START",
["npcID"] = 190932,
},
[445236] = {
["source"] = "Agitated Eel",
["event"] = "SPELL_CAST_START",
["npcID"] = 227369,
},
[346947] = {
["encounterName"] = "Mailroom Mayhem",
["encounterID"] = 2424,
["npcID"] = 175646,
},
[41114] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Mystic",
["npcID"] = 22845,
},
[396392] = {
["source"] = "Dueling Student",
["event"] = "SPELL_CAST_START",
["npcID"] = 199377,
},
[365676] = {
["npcID"] = 184734,
},
[182705] = {
["source"] = "Bleeding Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 92041,
},
[193093] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["encounterID"] = 1812,
["event"] = "SPELL_CAST_START",
["npcID"] = 91797,
},
[355438] = {
["encounterName"] = "Myza's Oasis",
["encounterID"] = 2440,
["npcID"] = 176563,
},
[424750] = {
["source"] = "Fungal Rotcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 207459,
},
[425062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Steelshaper",
["npcID"] = 210173,
},
[410728] = {
["source"] = "Sabellian",
["event"] = "SPELL_CAST_START",
["npcID"] = 201411,
},
[392854] = {
["source"] = "Primal Scythid Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 184853,
},
[423015] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[200261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul-Torn Champion",
["npcID"] = 98243,
},
[447271] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Warshell",
["npcID"] = 221103,
},
[445541] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213217,
},
[396615] = {
["source"] = "Sunscale Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193133,
},
[389213] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Guardian",
["npcID"] = 192764,
},
[164426] = {
["encounterName"] = "Fleshrender Nok'gar",
["encounterID"] = 1749,
["npcID"] = 81305,
},
[330868] = {
["npcID"] = 160495,
},
[396075] = {
["source"] = "Raging Torrent",
["event"] = "SPELL_CAST_START",
["npcID"] = 197221,
},
[400492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Cindershaper",
["npcID"] = 199824,
},
[209477] = {
["npcID"] = 105703,
},
[371824] = {
["npcID"] = 46859,
},
[373872] = {
["source"] = "Monstrous Decay",
["event"] = "SPELL_CAST_START",
["npcID"] = 186227,
},
[359538] = {
["npcID"] = 181961,
},
[320631] = {
["encounterName"] = "Blightbone",
["npcID"] = 164702,
["encounterID"] = 2387,
},
[426787] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 211089,
},
[439401] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["npcID"] = 216658,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2909,
},
[373545] = {
["source"] = "Tranquil Tideskipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 192148,
},
[40091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Sea-Caller",
["npcID"] = 22875,
},
[369359] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infused Proto-Drake",
["npcID"] = 189515,
},
[300155] = {
["npcID"] = 164929,
},
[334967] = {
["npcID"] = 171343,
},
[396069] = {
["npcID"] = 191095,
},
[396400] = {
["source"] = "Glacias",
["event"] = "SPELL_CAST_START",
["npcID"] = 199028,
},
[406639] = {
["source"] = "Response Team Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 202318,
},
[402209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vengeful Research",
["npcID"] = 201490,
},
[377971] = {
["source"] = "Spawning Thresher",
["event"] = "SPELL_CAST_START",
["npcID"] = 194342,
},
[457497] = {
["isChanneled"] = true,
["source"] = "Ixlorb the Spinner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218426,
},
[101592] = {
["npcID"] = 54432,
},
[375924] = {
["encounterName"] = "The Lost Dwarves",
["encounterID"] = 2555,
["npcID"] = 184580,
},
[443500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Swarmguard",
["npcID"] = 220197,
},
[388211] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skag the Thrower",
["npcID"] = 193149,
},
[365686] = {
["npcID"] = 184533,
},
[294015] = {
["npcID"] = 151476,
},
[394355] = {
["source"] = "Frigidpelt Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 193063,
},
[273538] = {
["encounterName"] = "Mythrax",
["encounterID"] = 2135,
["npcID"] = 134546,
},
[300159] = {
["npcID"] = 150276,
},
[334971] = {
["encounterName"] = "Huntsman Altimor",
["encounterID"] = 2418,
["npcID"] = 165067,
},
[320637] = {
["encounterName"] = "Blightbone",
["npcID"] = 162691,
["encounterID"] = 2387,
},
[396856] = {
["npcID"] = 191401,
},
[139178] = {
["source"] = "Goda",
["event"] = "SPELL_CAST_START",
["npcID"] = 69998,
},
[293670] = {
["npcID"] = 144299,
},
[193951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Barbed Spiderling",
["npcID"] = 97677,
},
[322000] = {
["npcID"] = 165008,
},
[406644] = {
["source"] = "Response Team Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 202318,
},
[227736] = {
["encounterName"] = "Moroes",
["encounterID"] = 1961,
["npcID"] = 114312,
},
[64877] = {
["npcID"] = 34190,
},
[28089] = {
["encounterName"] = "Thaddius",
["source"] = "Thaddius",
["npcID"] = 15928,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1120,
},
[64153] = {
["encounterName"] = "Yogg-Saron",
["npcID"] = 33985,
["encounterID"] = 1143,
},
[375929] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[176718] = {
["npcID"] = 149591,
},
[318243] = {
["npcID"] = 170803,
},
[164187] = {
["npcID"] = 81407,
},
[173265] = {
["npcID"] = 86620,
},
[106797] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56732,
},
[123691] = {
["source"] = "Kang Bramblestaff",
["event"] = "SPELL_CAST_START",
["npcID"] = 58206,
},
[291973] = {
["encounterName"] = "K.U.-J.0.",
["npcID"] = 144246,
["encounterID"] = 2258,
},
[41071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Deathshaper",
["npcID"] = 22882,
},
[443507] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Swarmguard",
["npcID"] = 220197,
},
[241828] = {
["npcID"] = 114804,
},
[441097] = {
["source"] = "Regurgitating Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 220138,
},
[291613] = {
["encounterName"] = "King Mechagon",
["npcID"] = 150396,
["encounterID"] = 2260,
},
[394362] = {
["source"] = "Rasnar the War Ender",
["event"] = "SPELL_CAST_START",
["npcID"] = 193232,
},
[404601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jamoku",
["npcID"] = 199914,
},
[371471] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 187969,
},
[369423] = {
["npcID"] = 184303,
},
[320644] = {
["encounterName"] = "Xav the Unfallen",
["encounterID"] = 2366,
["npcID"] = 162329,
},
[320063] = {
["encounterName"] = "An Affront of Challengers",
["encounterID"] = 2391,
["npcID"] = 164451,
},
[392337] = {
["npcID"] = 186853,
},
[373201] = {
["source"] = "Windyfin Skybasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 187431,
},
[369791] = {
["encounterName"] = "The Lost Dwarves",
["encounterID"] = 2555,
["npcID"] = 184582,
},
[330884] = {
["npcID"] = 168244,
},
[397093] = {
["source"] = "Wild Kelp Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 196809,
},
[392317] = {
["source"] = "Khomuur",
["event"] = "SPELL_CAST_START",
["npcID"] = 194438,
},
[209485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Manifestation",
["npcID"] = 105704,
},
[445559] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queensguard Zirix",
["npcID"] = 211858,
},
[38557] = {
["npcID"] = 41175,
},
[196175] = {
["encounterName"] = "Serpentrix",
["source"] = "Mak'rana Hardshell",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 95947,
},
[328458] = {
["npcID"] = 168844,
},
[265358] = {
["encounterName"] = "Zek'voz",
["encounterID"] = 2136,
["npcID"] = 135129,
},
[167092] = {
["source"] = "Cackling Pyromaniac",
["event"] = "SPELL_CAST_START",
["npcID"] = 79510,
},
[375937] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[394367] = {
["event"] = "SPELL_CAST_START",
["source"] = "Morchok",
["npcID"] = 187306,
},
[396415] = {
["source"] = "Galestrike Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 187211,
},
[300171] = {
["npcID"] = 150276,
},
[332550] = {
["npcID"] = 169875,
},
[76682] = {
["npcID"] = 40017,
},
[388225] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostfist",
["npcID"] = 192030,
},
[398464] = {
["source"] = "Carcaxas",
["event"] = "SPELL_CAST_START",
["npcID"] = 202836,
},
[269456] = {
["encounterName"] = "Viq'Goth",
["source"] = "Viq'Goth",
["npcID"] = 128652,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2100,
},
[418554] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Banehollow",
["npcID"] = 204243,
},
[401209] = {
["source"] = "Deepbed Longwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 203917,
},
[332937] = {
["encounterName"] = "Sire Denathrius",
["npcID"] = 170710,
},
[326794] = {
["npcID"] = 167876,
},
[63479] = {
["encounterName"] = "The Assembly of Iron",
["npcID"] = 32857,
["encounterID"] = 1140,
},
[360228] = {
["npcID"] = 178750,
},
[228625] = {
["npcID"] = 114796,
},
[384132] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 186739,
},
[396020] = {
["source"] = "The Golden Beetle",
["event"] = "SPELL_CAST_START",
["npcID"] = 59545,
},
[355464] = {
["npcID"] = 178165,
},
[113967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Porc-épic de la clairière",
["npcID"] = 54896,
},
[392455] = {
["source"] = "Uurhilt",
["event"] = "SPELL_CAST_START",
["npcID"] = 194760,
},
[196870] = {
["source"] = "Hatecoil Stormweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 91783,
},
[306319] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Dark Inquisitor Xanesh",
["encounterID"] = 2328,
["event"] = "SPELL_CAST_START",
["npcID"] = 156575,
},
[341131] = {
["npcID"] = 174194,
},
[384134] = {
["source"] = "Nokhud Warspear",
["event"] = "SPELL_CAST_START",
["npcID"] = 192791,
},
[201298] = {
["npcID"] = 100532,
},
[144985] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Garrosh Hellscream",
["npcID"] = 71865,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1623,
},
[300177] = {
["npcID"] = 150276,
},
[102193] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["encounterID"] = 1884,
["event"] = "SPELL_CAST_START",
["npcID"] = 54544,
},
[320655] = {
["encounterName"] = "Blightbone",
["npcID"] = 162691,
["encounterID"] = 2387,
},
[443111] = {
["source"] = "Caller of the Gloom",
["event"] = "SPELL_CAST_START",
["npcID"] = 216955,
},
[341133] = {
["npcID"] = 174090,
},
[375945] = {
["npcID"] = 188292,
},
[112944] = {
["encounterName"] = "Hoptallus",
["source"] = "Hoptallus",
["encounterID"] = 1413,
["event"] = "SPELL_CAST_START",
["npcID"] = 56717,
},
[396423] = {
["source"] = "Galestrike Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 187211,
},
[398471] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nimbulatus, Storm's Wrath",
["npcID"] = 199667,
},
[20791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lost Trainee Warlock",
["npcID"] = 210368,
},
[320657] = {
["npcID"] = 175605,
},
[412806] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Dragon",
["npcID"] = 205804,
},
[455809] = {
["event"] = "SPELL_CAST_START",
["source"] = "Urthgrafr Riftcaller",
["npcID"] = 215233,
},
[277655] = {
["npcID"] = 142004,
},
[140682] = {
["source"] = "Mist Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 70594,
},
[249212] = {
["source"] = "Hungering Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 125549,
},
[413136] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[457858] = {
["source"] = "Deepfiend Azellix",
["event"] = "SPELL_CAST_START",
["npcID"] = 218458,
},
[410760] = {
["source"] = "Wild Vortex",
["event"] = "SPELL_CAST_START",
["npcID"] = 45912,
},
[275175] = {
["npcID"] = 138794,
},
[449242] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["npcID"] = 204188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2878,
},
[229558] = {
["npcID"] = 115402,
},
[369806] = {
["npcID"] = 184020,
},
[142726] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Xaril the Poisoned Mind",
["npcID"] = 71157,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[455812] = {
["source"] = "Crazed Cabbage Smacker",
["event"] = "SPELL_CAST_START",
["npcID"] = 206514,
},
[392332] = {
["source"] = "Zumakh",
["event"] = "SPELL_CAST_START",
["npcID"] = 194624,
},
[157051] = {
["source"] = "Grom'tash the Destructor",
["event"] = "SPELL_CAST_START",
["npcID"] = 77889,
},
[355473] = {
["npcID"] = 179821,
},
[349797] = {
["encounterName"] = "The Grand Menagerie",
["encounterID"] = 2441,
["npcID"] = 176556,
},
[194942] = {
["encounterName"] = "Glazer",
["source"] = "Glazer",
["npcID"] = 95887,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1817,
},
[394381] = {
["source"] = "Root of Decay",
["event"] = "SPELL_CAST_START",
["npcID"] = 185326,
},
[403890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duzalgor",
["npcID"] = 200610,
},
[455814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elemental Rift",
["npcID"] = 217914,
},
[447187] = {
["encounterName"] = "Researcher Ven'kex",
["source"] = "Researcher Ven'kex",
["encounterID"] = 2991,
["event"] = "SPELL_CAST_START",
["npcID"] = 219856,
},
[345236] = {
["npcID"] = 170157,
},
[322711] = {
["encounterName"] = "Halkias, the Sin-Stained Goliath",
["encounterID"] = 2401,
["npcID"] = 165408,
},
[128304] = {
["source"] = "Shado-Pan Disciple",
["event"] = "SPELL_CAST_START",
["npcID"] = 58198,
},
[202108] = {
["source"] = "Blightshard Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 90998,
},
[377029] = {
["source"] = "Primal Scythid Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 184853,
},
[445577] = {
["source"] = "Shrillwing Hunter En'kilah",
["event"] = "SPELL_CAST_START",
["npcID"] = 222038,
},
[365715] = {
["npcID"] = 184659,
},
[392336] = {
["source"] = "Uncontrolled Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 181775,
},
[369811] = {
["npcID"] = 184020,
},
[355477] = {
["npcID"] = 179821,
},
[300188] = {
["npcID"] = 150253,
},
[167516] = {
["npcID"] = 86809,
},
[209495] = {
["npcID"] = 104270,
},
[265377] = {
["source"] = "Fanatical Headhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 133663,
},
[390290] = {
["source"] = "Infuser Sariya",
["event"] = "SPELL_CAST_START",
["npcID"] = 190405,
},
[356812] = {
["npcID"] = 180286,
},
[369813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Destroyer",
["npcID"] = 193288,
},
[355479] = {
["npcID"] = 179821,
},
[341145] = {
["npcID"] = 174090,
},
[322274] = {
["encounterName"] = "Nalthor the Rimebinder",
["npcID"] = 164815,
["encounterID"] = 2390,
},
[117954] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["npcID"] = 60410,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1500,
},
[445130] = {
["source"] = "Cindersting",
["event"] = "SPELL_CAST_START",
["npcID"] = 220238,
},
[341146] = {
["npcID"] = 174194,
},
[406227] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200918,
},
[172649] = {
["npcID"] = 81432,
},
[455373] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[382102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rebel Conjurer",
["npcID"] = 195063,
},
[392341] = {
["source"] = "Khuumog",
["event"] = "SPELL_CAST_START",
["npcID"] = 194761,
},
[101810] = {
["encounterName"] = "Echo of Jaina",
["encounterID"] = 1883,
["npcID"] = 54445,
},
[430805] = {
["source"] = "Coalescing Void Diffuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 214421,
},
[373912] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[153810] = {
["encounterName"] = "Rukhran",
["source"] = "Rukhran",
["encounterID"] = 1700,
["event"] = "SPELL_CAST_START",
["npcID"] = 76143,
},
[327497] = {
["encounterName"] = "The Council of Blood",
["encounterID"] = 2412,
["npcID"] = 166970,
},
[365257] = {
["encounterName"] = "Lihuvim, Principal Architect",
["encounterID"] = 2539,
["npcID"] = 182071,
},
[64157] = {
["encounterName"] = "Yogg-Saron",
["npcID"] = 33985,
["encounterID"] = 1143,
},
[265511] = {
["source"] = "Spirit Drain Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 135169,
},
[369818] = {
["npcID"] = 184020,
},
[334534] = {
["npcID"] = 171805,
},
[406678] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["encounterID"] = 2689,
["event"] = "SPELL_CAST_START",
["npcID"] = 202375,
},
[457872] = {
["source"] = "Deepfiend Azellix",
["event"] = "SPELL_CAST_START",
["npcID"] = 218458,
},
[394392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo of Loss",
["npcID"] = 190259,
},
[421013] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["npcID"] = 209333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[373915] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186121,
},
[285388] = {
["encounterName"] = "Tussle Tonks",
["npcID"] = 145185,
["encounterID"] = 2257,
},
[50335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Recalled Abomination",
["npcID"] = 221436,
},
[412823] = {
["source"] = "Neltharion",
["event"] = "SPELL_CAST_START",
["npcID"] = 198968,
},
[423062] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[187998] = {
["source"] = "Shadowfel Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 93968,
},
[361630] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["encounterID"] = 2540,
["npcID"] = 181224,
},
[82625] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reliquary Digger",
["npcID"] = 38997,
},
[373917] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186121,
},
[142948] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Hisek the Swarmkeeper",
["npcID"] = 71153,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1593,
},
[451732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swarming Cogwalker",
["npcID"] = 232871,
},
[366187] = {
["npcID"] = 183499,
},
[412346] = {
["source"] = "Irontide Corsair",
["event"] = "SPELL_CAST_START",
["npcID"] = 126928,
},
[346813] = {
["npcID"] = 152905,
},
[369823] = {
["npcID"] = 184023,
},
[115509] = {
["source"] = "Shado-Pan Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 59751,
},
[373424] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[392349] = {
["source"] = "Khuumog",
["event"] = "SPELL_CAST_START",
["npcID"] = 194761,
},
[451734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Persistent Honeyslime",
["npcID"] = 222843,
},
[404636] = {
["source"] = "Lieutenant Narlena",
["event"] = "SPELL_CAST_START",
["npcID"] = 202244,
},
[63134] = {
["encounterName"] = "Yogg-Saron",
["npcID"] = 33134,
["encounterID"] = 1143,
},
[335013] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 166644,
},
[427162] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[322236] = {
["encounterName"] = "Stradama Margrave",
["npcID"] = 165430,
["encounterID"] = 2386,
},
[398494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Shalewing",
["npcID"] = 207090,
},
[359587] = {
["npcID"] = 180052,
},
[40097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Soothsayer",
["npcID"] = 22876,
},
[396447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shardwing",
["npcID"] = 201562,
},
[324776] = {
["npcID"] = 166275,
},
[326824] = {
["encounterName"] = "Sire Denathrius",
["encounterID"] = 2407,
["npcID"] = 167999,
},
[106807] = {
["encounterName"] = "Ook-Ook",
["source"] = "Ook-Ook",
["event"] = "SPELL_CAST_START",
["npcID"] = 56637,
},
[371875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Trainee",
["npcID"] = 189266,
},
[395694] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Shocktrooper",
["npcID"] = 199037,
},
[457881] = {
["source"] = "Zekvir",
["event"] = "SPELL_CAST_START",
["npcID"] = 227471,
},
[337064] = {
["npcID"] = 170301,
},
[114874] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Slate",
["npcID"] = 59613,
},
[398497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quartzite Sporebat",
["npcID"] = 201306,
},
[330423] = {
["npcID"] = 168572,
},
[360295] = {
["encounterName"] = "Prototype Pantheon",
["encounterID"] = 2544,
["npcID"] = 181549,
},
[363686] = {
["npcID"] = 179043,
},
[250208] = {
["npcID"] = 161527,
},
[200289] = {
["encounterName"] = "Shade of Xavius",
["encounterID"] = 1839,
["npcID"] = 99192,
},
[412330] = {
["source"] = "Malrogg",
["event"] = "SPELL_CAST_START",
["npcID"] = 202606,
},
[111801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Guard",
["npcID"] = 58822,
},
[300207] = {
["npcID"] = 150253,
},
[196194] = {
["source"] = "Steeljaw Grizzly",
["event"] = "SPELL_CAST_START",
["npcID"] = 96677,
},
[378022] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186120,
},
[298160] = {
["npcID"] = 153451,
},
[398500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conflagrated Rock Cobra",
["npcID"] = 203328,
},
[326829] = {
["npcID"] = 167876,
},
[143977] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Korven the Prime",
["npcID"] = 71155,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[412835] = {
["source"] = "Nozdormu",
["event"] = "SPELL_CAST_START",
["npcID"] = 198971,
},
[162407] = {
["encounterName"] = "Rocketspark and Borka",
["encounterID"] = 1715,
["npcID"] = 77803,
},
[326830] = {
["npcID"] = 165398,
},
[86331] = {
["encounterName"] = "Grand Vizier Ertan",
["encounterID"] = 1043,
["npcID"] = 43878,
},
[195944] = {
["source"] = "Skrog Wavecrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 91796,
},
[147818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimsonscale Firestorm",
["npcID"] = 72876,
},
[200291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Scout",
["npcID"] = 98691,
},
[392686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boolk",
["npcID"] = 191450,
},
[322736] = {
["encounterName"] = "Hakkar, the Soulflayer",
["npcID"] = 164558,
["encounterID"] = 2395,
},
[195172] = {
["source"] = "Hatecoil Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 91782,
},
[459421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sir Finley Mrrgglton",
["npcID"] = 228030,
},
[337071] = {
["npcID"] = 170301,
},
[418464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Empowered Felguard",
["npcID"] = 208542,
},
[398504] = {
["source"] = "Sulfurous Viper",
["event"] = "SPELL_CAST_START",
["npcID"] = 203900,
},
[257629] = {
["source"] = "Unfinished Stone Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 201586,
},
[124085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Set'thik Zephyrian",
["npcID"] = 63593,
},
[339120] = {
["npcID"] = 173240,
},
[118072] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Ook of Dook",
["npcID"] = 60188,
},
[453271] = {
["source"] = "Aggregation of Horrors",
["event"] = "SPELL_CAST_START",
["npcID"] = 220999,
},
[459938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dripear the Waxy",
["npcID"] = 213883,
},
[199674] = {
["source"] = "King Bjorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 97081,
},
[365215] = {
["npcID"] = 178563,
},
[445077] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Ambusher",
["npcID"] = 219715,
},
[378029] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186124,
},
[41058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whirling Blade",
["npcID"] = 23369,
},
[455313] = {
["source"] = "Deathspore Lashroom",
["event"] = "SPELL_CAST_START",
["npcID"] = 221424,
},
[326836] = {
["npcID"] = 162039,
},
[287929] = {
["encounterName"] = "Mekkatorque",
["encounterID"] = 2276,
["npcID"] = 144796,
},
[275110] = {
["source"] = "Bloodbeak the Ravenous",
["event"] = "SPELL_CAST_START",
["npcID"] = 201535,
},
[15530] = {
["source"] = "Yazzai",
["event"] = "SPELL_CAST_START",
["npcID"] = 24561,
},
[326837] = {
["npcID"] = 162040,
},
[328885] = {
["encounterName"] = "Sun King's Salvation",
["encounterID"] = 2402,
["npcID"] = 168973,
},
[404652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jamoku",
["npcID"] = 199914,
},
[373936] = {
["source"] = "Wilted Oak",
["event"] = "SPELL_CAST_START",
["npcID"] = 186229,
},
[392366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Juggernaut",
["npcID"] = 197793,
},
[386223] = {
["source"] = "Primal Stormshield",
["event"] = "SPELL_CAST_START",
["npcID"] = 194896,
},
[322743] = {
["npcID"] = 175089,
},
[308409] = {
["npcID"] = 154330,
},
[441513] = {
["source"] = "Deathpetal",
["event"] = "SPELL_CAST_START",
["npcID"] = 206184,
},
[320696] = {
["npcID"] = 163121,
},
[404654] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grugoth the Hullcrusher",
["npcID"] = 200721,
},
[154221] = {
["encounterName"] = "Azzakel, Vanguard of the Legion",
["source"] = "Cackling Pyromaniac",
["encounterID"] = 1678,
["event"] = "SPELL_CAST_START",
["npcID"] = 76260,
},
[381585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutal Motivator",
["npcID"] = 184453,
},
[115002] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["encounterID"] = 1306,
["event"] = "SPELL_CAST_START",
["npcID"] = 56884,
},
[322745] = {
["npcID"] = 159030,
},
[373939] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Rotburst Totem",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 190381,
},
[392369] = {
["source"] = "Earth Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 190173,
},
[125241] = {
["source"] = "Kor'nas Nightsavage",
["event"] = "SPELL_CAST_START",
["npcID"] = 50338,
},
[243299] = {
["source"] = "Shadow Council Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 117776,
},
[227672] = {
["encounterName"] = "Moroes",
["npcID"] = 114321,
["encounterID"] = 1961,
},
[375988] = {
["source"] = "Snowypelt Slyvern",
["event"] = "SPELL_CAST_START",
["npcID"] = 193438,
},
[156270] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Crack-Shot",
["npcID"] = 81315,
},
[332431] = {
["npcID"] = 171179,
},
[390323] = {
["npcID"] = 189933,
},
[367798] = {
["npcID"] = 181249,
},
[373395] = {
["source"] = "Nokhud Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 199717,
},
[243300] = {
["source"] = "Shadow Council Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 117776,
},
[373942] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[449709] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burgle-gurgle",
["npcID"] = 214545,
},
[115003] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["npcID"] = 59479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1414,
},
[330940] = {
["npcID"] = 168244,
},
[116027] = {
["source"] = "Hopper",
["event"] = "SPELL_CAST_START",
["npcID"] = 59464,
},
[302272] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["encounterID"] = 2291,
["npcID"] = 150190,
},
[62625] = {
["npcID"] = 33237,
},
[210537] = {
["npcID"] = 177695,
},
[406708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sindragosa",
["npcID"] = 201094,
},
[457902] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beledar's Spawn",
["npcID"] = 207802,
},
[141663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthborn Hatred",
["npcID"] = 70822,
},
[395899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Chillblaster",
["npcID"] = 199124,
},
[320132] = {
["encounterName"] = "The Manastorms",
["npcID"] = 164556,
["encounterID"] = 2394,
},
[302274] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["encounterID"] = 2291,
["npcID"] = 150295,
},
[394423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rohzor Forgesmash",
["npcID"] = 187598,
},
[363130] = {
["encounterName"] = "Lihuvim, Principal Architect",
["encounterID"] = 2539,
["npcID"] = 182169,
},
[203371] = {
["source"] = "Hill Ettin",
["event"] = "SPELL_CAST_START",
["npcID"] = 102886,
},
[326848] = {
["npcID"] = 165398,
},
[459952] = {
["source"] = "Palace Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 233401,
},
[123707] = {
["encounterName"] = "Grand Empress Shek'zeer",
["source"] = "Grand Empress Shek'zeer",
["npcID"] = 62837,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1501,
},
[373947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skaara",
["npcID"] = 192949,
},
[449714] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Serpent",
["npcID"] = 215770,
},
[427189] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[391793] = {
["source"] = "Furious Deluge",
["event"] = "SPELL_CAST_START",
["npcID"] = 197220,
},
[443001] = {
["source"] = "Maddened Hierophant",
["event"] = "SPELL_CAST_START",
["npcID"] = 214398,
},
[400569] = {
["source"] = "Haleh",
["event"] = "SPELL_CAST_START",
["npcID"] = 199370,
},
[369853] = {
["npcID"] = 184019,
},
[388283] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 186616,
},
[365168] = {
["npcID"] = 183398,
},
[326851] = {
["encounterName"] = "Sire Denathrius",
["encounterID"] = 2407,
["npcID"] = 167406,
},
[44196] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Phoenix",
["encounterID"] = 1894,
["event"] = "SPELL_CAST_START",
["npcID"] = 24674,
},
[396475] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apex Proto-Dragon",
["npcID"] = 191705,
},
[449123] = {
["source"] = "Tij'allet",
["event"] = "SPELL_CAST_START",
["npcID"] = 215600,
},
[302279] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["encounterID"] = 2291,
["npcID"] = 150295,
},
[451765] = {
["source"] = "[DNT]Teleport Bunny Prime",
["event"] = "SPELL_CAST_START",
["npcID"] = 224528,
},
[285311] = {
["npcID"] = 146831,
},
[81008] = {
["npcID"] = 42810,
},
[114855] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "Scarlet Initiate",
["npcID"] = 58783,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1425,
},
[138569] = {
["encounterName"] = "Dark Animus",
["source"] = "Massive Anima Golem",
["encounterID"] = 1576,
["event"] = "SPELL_CAST_START",
["npcID"] = 69699,
},
[136521] = {
["encounterName"] = "Council of Elders",
["source"] = "Sul the Sandcrawler",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 69078,
},
[382143] = {
["source"] = "Reclaimer Makko",
["event"] = "SPELL_CAST_START",
["npcID"] = 191536,
},
[126117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slitherscale Eggdrinker",
["npcID"] = 63532,
},
[394430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primordial Wrath",
["npcID"] = 190579,
},
[322759] = {
["encounterName"] = "Hakkar, the Soulflayer",
["npcID"] = 164558,
["encounterID"] = 2395,
},
[256616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scrimshaw Gutter",
["npcID"] = 133990,
},
[257640] = {
["source"] = "Unfinished Stone Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 201586,
},
[387652] = {
["source"] = "Frozen Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 187203,
},
[445016] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "Lost Watcher",
["encounterID"] = 2917,
["event"] = "SPELL_CAST_START",
["npcID"] = 221667,
},
[78903] = {
["encounterName"] = "Ozruk",
["npcID"] = 42188,
["encounterID"] = 1058,
},
[196208] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Shadowmoon Warlock",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99704,
},
[115006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wuk-Wuk",
["npcID"] = 56691,
},
[393793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hacklung",
["npcID"] = 187752,
},
[316618] = {
["source"] = "Aqir Swarmkeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 162303,
},
[257641] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Powdershot",
["npcID"] = 137521,
},
[224568] = {
["source"] = "Nighthold Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 112665,
},
[330953] = {
["npcID"] = 161531,
},
[6358] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirlia",
["npcID"] = 1863,
},
[387684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Spire",
["npcID"] = 195348,
},
[152894] = {
["source"] = "Initiate of the Rising Sun",
["event"] = "SPELL_CAST_START",
["npcID"] = 79466,
},
[395855] = {
["source"] = "The Blue Gulper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195976,
},
[333002] = {
["encounterName"] = "Sun King's Salvation",
["encounterID"] = 2402,
["npcID"] = 165763,
},
[403601] = {
["source"] = "Warden Entrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 200960,
},
[287952] = {
["encounterName"] = "Mekkatorque",
["encounterID"] = 2276,
["npcID"] = 144796,
},
[79939] = {
["source"] = "Zinnin Smythe",
["event"] = "SPELL_CAST_START",
["npcID"] = 99145,
},
[444998] = {
["source"] = "Fallowbarb",
["event"] = "SPELL_CAST_START",
["npcID"] = 216078,
},
[204611] = {
["encounterName"] = "Oakheart",
["encounterID"] = 1837,
["npcID"] = 103344,
},
[394436] = {
["source"] = "Shas'ith",
["event"] = "SPELL_CAST_START",
["npcID"] = 189822,
},
[453188] = {
["source"] = "Cragmund",
["event"] = "SPELL_CAST_START",
["npcID"] = 220269,
},
[377421] = {
["source"] = "Nimblewing Striker",
["event"] = "SPELL_CAST_START",
["npcID"] = 192938,
},
[326227] = {
["npcID"] = 157558,
},
[76100] = {
["encounterName"] = "Commander Ulthok",
["npcID"] = 40765,
["encounterID"] = 1044,
},
[387657] = {
["source"] = "Mountain Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 186329,
},
[439488] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[163447] = {
["encounterName"] = "Skylord Tovra",
["source"] = "Skylord Tovra",
["encounterID"] = 1736,
["event"] = "SPELL_CAST_START",
["npcID"] = 80005,
},
[369865] = {
["source"] = "Dragonhunter Igordan",
["event"] = "SPELL_CAST_START",
["npcID"] = 191611,
},
[412868] = {
["source"] = "Karokta",
["event"] = "SPELL_CAST_START",
["npcID"] = 203625,
},
[423107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hymdall",
["npcID"] = 206644,
},
[142650] = {
["event"] = "SPELL_CAST_START",
["source"] = "Proto-Drake Whelp",
["npcID"] = 71401,
},
[40102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqueous Spawn",
["npcID"] = 22883,
},
[388296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crust Lurker",
["npcID"] = 192626,
},
[278866] = {
["npcID"] = 142800,
},
[365126] = {
["encounterName"] = "Prototype Pantheon",
["encounterID"] = 2544,
["npcID"] = 181548,
},
[394440] = {
["source"] = "Dihar the Unyielding",
["event"] = "SPELL_CAST_START",
["npcID"] = 192225,
},
[404679] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad-Eye Carrey",
["npcID"] = 201181,
},
[341199] = {
["npcID"] = 174093,
},
[83780] = {
["npcID"] = 44897,
},
[451778] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dogmatic Machine Speaker",
["npcID"] = 212878,
},
[265433] = {
["source"] = "Bloodsworn Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 133912,
},
[341200] = {
["npcID"] = 174100,
},
[392394] = {
["source"] = "Flamegullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 197697,
},
[86340] = {
["encounterName"] = "Grand Vizier Ertan",
["encounterID"] = 1043,
["npcID"] = 43878,
},
[306389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkmaul Centurion",
["npcID"] = 156825,
},
[455875] = {
["source"] = "Glintwick",
["event"] = "SPELL_CAST_START",
["npcID"] = 219797,
},
[392395] = {
["source"] = "Thunderhead",
["event"] = "SPELL_CAST_START",
["npcID"] = 197698,
},
[435398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Algari Expedition Priest",
["npcID"] = 217676,
},
[361024] = {
["npcID"] = 181007,
},
[431303] = {
["source"] = "Nightfall Shadowmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 213892,
},
[320067] = {
["npcID"] = 160747,
},
[115009] = {
["isChanneled"] = true,
["source"] = "Shado-Pan Stormbringer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59808,
},
[396492] = {
["source"] = "Slobberclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 195972,
},
[455877] = {
["source"] = "Deepwater Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 215654,
},
[449734] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[141619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Bonechiller",
["npcID"] = 70465,
},
[388302] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[397878] = {
["source"] = "Corrupt Living Water",
["event"] = "SPELL_CAST_START",
["npcID"] = 59873,
},
[392398] = {
["source"] = "Primal Thundercloud",
["event"] = "SPELL_CAST_START",
["npcID"] = 197509,
},
[435401] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["encounterID"] = 2898,
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[198263] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["encounterID"] = 1809,
["event"] = "SPELL_CAST_START",
["npcID"] = 95676,
},
[406733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Traitorous Sister",
["npcID"] = 200826,
},
[294107] = {
["npcID"] = 150254,
},
[337110] = {
["encounterName"] = "The Council of Blood",
["encounterID"] = 2412,
["npcID"] = 166969,
},
[451117] = {
["source"] = "Ixkreten the Unbreakable",
["event"] = "SPELL_CAST_START",
["npcID"] = 211262,
},
[169825] = {
["source"] = "Addled Arcanomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 84990,
},
[395827] = {
["source"] = "Parched Broadhoof Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 194352,
},
[320729] = {
["encounterName"] = "Xav the Unfallen",
["encounterID"] = 2366,
["npcID"] = 162329,
},
[330968] = {
["npcID"] = 174842,
},
[423117] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["npcID"] = 208478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2737,
},
[258338] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Raoul",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 126847,
},
[336451] = {
["npcID"] = 163862,
},
[451113] = {
["source"] = "Sureki Webmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 210966,
},
[373972] = {
["isChanneled"] = true,
["source"] = "Primalist Flamedancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190206,
},
[463408] = {
["encounterName"] = "Researcher Ven'kex",
["source"] = "Researcher Ven'kex",
["encounterID"] = 2991,
["event"] = "SPELL_CAST_START",
["npcID"] = 219856,
},
[386259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Basrikron",
["npcID"] = 193535,
},
[103236] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Jade Guardian",
["npcID"] = 55236,
},
[79175] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Azure Prickly Crawler",
["npcID"] = 60437,
},
[375351] = {
["source"] = "Glacial Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190403,
},
[121154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Sentinel",
["npcID"] = 62220,
},
[338490] = {
["npcID"] = 162875,
},
[173148] = {
["npcID"] = 81279,
},
[166185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Highmaul Conscript",
["npcID"] = 82519,
},
[159017] = {
["source"] = "Zipteq",
["event"] = "SPELL_CAST_START",
["npcID"] = 78734,
},
[225568] = {
["npcID"] = 99366,
},
[256627] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scrimshaw Enforcer",
["npcID"] = 129374,
},
[435405] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[444957] = {
["source"] = "Light-Bathed Eagle",
["event"] = "SPELL_CAST_START",
["npcID"] = 223191,
},
[388310] = {
["source"] = "Malfunctioning Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 198343,
},
[141612] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fiery Anger",
["npcID"] = 70824,
},
[392406] = {
["source"] = "Storm Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 197982,
},
[3110] = {
["npcID"] = 416,
},
[412884] = {
["source"] = "Ysera",
["event"] = "SPELL_CAST_START",
["npcID"] = 198970,
},
[79176] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Azure Prickly Crawler",
["npcID"] = 60437,
},
[294115] = {
["npcID"] = 151684,
},
[410837] = {
["source"] = "Ritualmaster Skarna",
["event"] = "SPELL_CAST_START",
["npcID"] = 202274,
},
[396503] = {
["source"] = "Loamas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199030,
},
[439506] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["npcID"] = 215405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[40872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Sky Stalker",
["npcID"] = 23030,
},
[451793] = {
["source"] = "Al'haggro",
["event"] = "SPELL_CAST_START",
["npcID"] = 216560,
},
[82760] = {
["npcID"] = 44982,
},
[390361] = {
["npcID"] = 190070,
},
[134788] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dalan Nightbreaker",
["npcID"] = 68318,
},
[319547] = {
["npcID"] = 165706,
},
[444946] = {
["source"] = "Stormtop Terralisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 214581,
},
[321520] = {
["npcID"] = 166926,
},
[457938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beledar's Spawn",
["npcID"] = 207802,
},
[459986] = {
["source"] = "Palace Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 222305,
},
[412888] = {
["source"] = "Ysera",
["event"] = "SPELL_CAST_START",
["npcID"] = 198970,
},
[133765] = {
["encounterName"] = "Durumu the Forgotten",
["source"] = "Durumu the Forgotten",
["encounterID"] = 1572,
["event"] = "SPELL_CAST_START",
["npcID"] = 68036,
},
[204472] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frozen Mist",
["npcID"] = 104979,
},
[258169] = {
["source"] = "Sandana the Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 193176,
},
[129859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Student of Chi-Ji",
["npcID"] = 60603,
},
[394763] = {
["source"] = "Private Shikzar",
["event"] = "SPELL_CAST_START",
["npcID"] = 193127,
},
[402983] = {
["source"] = "Gholna",
["event"] = "SPELL_CAST_START",
["npcID"] = 199853,
},
[172673] = {
["event"] = "SPELL_CAST_START",
["source"] = "Henry Garrick",
["npcID"] = 155197,
},
[385157] = {
["source"] = "Greenbelt Riverbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 192834,
},
[455893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Azerite",
["npcID"] = 223952,
},
[161056] = {
["source"] = "Frenzied Animus",
["event"] = "SPELL_CAST_START",
["npcID"] = 96579,
},
[410843] = {
["isChanneled"] = true,
["source"] = "Awakened Shards",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205218,
},
[314599] = {
["event"] = "SPELL_CAST_START",
["source"] = "Foreman Magrok",
["npcID"] = 145978,
},
[88080] = {
["npcID"] = 47238,
},
[384223] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 186739,
},
[41188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Primalist",
["npcID"] = 68096,
},
[132743] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkhatched Oracle",
["npcID"] = 67256,
},
[39593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Searing Totem",
["npcID"] = 22896,
},
[39849] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[193152] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["encounterID"] = 1812,
["event"] = "SPELL_CAST_START",
["npcID"] = 91797,
},
[282031] = {
["encounterName"] = "Jadefire Masters",
["encounterID"] = 2285,
["npcID"] = 144691,
},
[374020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Containment Apparatus",
["npcID"] = 190342,
},
[40873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Sky Stalker",
["npcID"] = 23030,
},
[394464] = {
["source"] = "Piercer Gigra",
["event"] = "SPELL_CAST_START",
["npcID"] = 186511,
},
[376727] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[200784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
[386555] = {
["source"] = "Dathea Stormlash",
["event"] = "SPELL_CAST_START",
["npcID"] = 187768,
},
[409313] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[412895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Algrin",
["npcID"] = 203709,
},
[406752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Betrayer",
["npcID"] = 200828,
},
[6535] = {
["npcID"] = 3273,
},
[156294] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Crack-Shot",
["npcID"] = 81315,
},
[119622] = {
["source"] = "Sha of Anger",
["event"] = "SPELL_CAST_START",
["npcID"] = 60491,
},
[414944] = {
["source"] = "Fungal Gutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 207454,
},
[390940] = {
["source"] = "Gnarls",
["event"] = "SPELL_CAST_START",
["npcID"] = 197354,
},
[156722] = {
["source"] = "Shadowmoon Exhumer",
["event"] = "SPELL_CAST_START",
["npcID"] = 77700,
},
[113479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Master Archer",
["npcID"] = 59175,
},
[227966] = {
["npcID"] = 114544,
},
[457948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vek'kix",
["npcID"] = 225425,
},
[197250] = {
["encounterName"] = "Cordana Felsong",
["source"] = "Cordana Felsong",
["encounterID"] = 1818,
["event"] = "SPELL_CAST_START",
["npcID"] = 95888,
},
[430503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomshadow",
["npcID"] = 208029,
},
[455901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sharpscale the Devourer",
["npcID"] = 215252,
},
[374743] = {
["npcID"] = 115488,
},
[135818] = {
["source"] = "Alliance Footman",
["event"] = "SPELL_CAST_START",
["npcID"] = 67901,
},
[372828] = {
["source"] = "Mudfin Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 186679,
},
[412156] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Aerobot",
["npcID"] = 205723,
},
[228991] = {
["encounterName"] = "Shade of Medivh",
["encounterID"] = 1965,
["npcID"] = 114675,
},
[394470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ko'jo",
["npcID"] = 186367,
},
[412900] = {
["source"] = "Zakajz",
["event"] = "SPELL_CAST_START",
["npcID"] = 198953,
},
[422393] = {
["source"] = "Skittering Darkness",
["event"] = "SPELL_CAST_START",
["npcID"] = 208457,
},
[408805] = {
["source"] = "Incorporeal Being",
["event"] = "SPELL_CAST_START",
["npcID"] = 204560,
},
[335114] = {
["encounterName"] = "Huntsman Altimor",
["encounterID"] = 2418,
["npcID"] = 165066,
},
[121484] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wuk-Wuk",
["npcID"] = 56691,
},
[455904] = {
["source"] = "Oozemodius",
["event"] = "SPELL_CAST_START",
["npcID"] = 220410,
},
[367851] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[172679] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drywind Bonepicker",
["npcID"] = 81207,
},
[396520] = {
["source"] = "Rumbling Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 187212,
},
[374364] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["encounterID"] = 2582,
["event"] = "SPELL_CAST_START",
["npcID"] = 186644,
},
[333861] = {
["npcID"] = 167533,
},
[228278] = {
["npcID"] = 114633,
},
[393718] = {
["source"] = "Huntmaster Amaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 188715,
},
[365805] = {
["encounterName"] = "Anduin Wrynn",
["encounterID"] = 2546,
["npcID"] = 181954,
},
[141427] = {
["npcID"] = 183257,
},
[451811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pious Disciple",
["npcID"] = 217464,
},
[404713] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200912,
},
[455907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tefferty Ulreth",
["npcID"] = 219189,
},
[241280] = {
["source"] = "Felguard Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 119742,
},
[451812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dogmatic Forgecaster",
["npcID"] = 212884,
},
[388332] = {
["source"] = "Kalecgos",
["event"] = "SPELL_CAST_START",
["npcID"] = 196439,
},
[455908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tefferty Ulreth",
["npcID"] = 219189,
},
[449765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Serpent",
["npcID"] = 215770,
},
[106826] = {
["encounterName"] = "Sha of Violence",
["source"] = "Sha of Violence",
["encounterID"] = 1305,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56719,
},
[82765] = {
["npcID"] = 44982,
},
[256639] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktar Bomber",
["npcID"] = 129372,
},
[408811] = {
["source"] = "Sundered Siegemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 198874,
},
[360432] = {
["npcID"] = 178803,
},
[145037] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Garrosh Hellscream",
["npcID"] = 71865,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1623,
},
[316663] = {
["isChanneled"] = true,
["source"] = "Aqir Swarmkeeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162303,
},
[418280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uther",
["npcID"] = 207818,
},
[147702] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Berserker",
["npcID"] = 72895,
},
[388335] = {
["source"] = "Sundered Runebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 186354,
},
[362184] = {
["encounterName"] = "Rygelon",
["npcID"] = 182777,
["encounterID"] = 2549,
},
[376049] = {
["encounterName"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["npcID"] = 184125,
},
[394479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primordial Hail",
["npcID"] = 189039,
},
[121673] = {
["source"] = "Salyin Skirmisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 62350,
},
[317936] = {
["npcID"] = 163459,
},
[40875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Wind Reaver",
["npcID"] = 23330,
},
[106827] = {
["encounterName"] = "Sha of Violence",
["source"] = "Sha of Violence",
["encounterID"] = 1305,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56719,
},
[132752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkhatched Shaman",
["npcID"] = 67255,
},
[356843] = {
["npcID"] = 179388,
},
[343287] = {
["npcID"] = 173633,
},
[418024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hand of the Lich King",
["npcID"] = 207386,
},
[371956] = {
["source"] = "Primal Terrasentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 188011,
},
[414959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Talthonei Ashwhisper",
["npcID"] = 209902,
},
[374699] = {
["source"] = "Flamecaller Aymi",
["event"] = "SPELL_CAST_START",
["npcID"] = 190368,
},
[221830] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kelorn Nightblade",
["npcID"] = 111361,
},
[169823] = {
["source"] = "Spore Image",
["event"] = "SPELL_CAST_START",
["npcID"] = 84983,
},
[393696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vadne Bleakheart",
["npcID"] = 195764,
},
[192138] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Hatecoil Crestrider",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 97269,
},
[451820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gargantuan Honeyslime",
["npcID"] = 222960,
},
[388340] = {
["source"] = "Kalecgos",
["event"] = "SPELL_CAST_START",
["npcID"] = 196439,
},
[417751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Blade Lord",
["npcID"] = 207922,
},
[61353] = {
["npcID"] = 96779,
},
[153544] = {
["source"] = "Diving Chakram Spinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 76116,
},
[412914] = {
["source"] = "Fragment of Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 205968,
},
[406771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Master",
["npcID"] = 200827,
},
[326909] = {
["npcID"] = 165398,
},
[394485] = {
["source"] = "Hypoxicron",
["event"] = "SPELL_CAST_START",
["npcID"] = 186334,
},
[136850] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["encounterID"] = 1579,
["event"] = "SPELL_CAST_START",
["npcID"] = 68397,
},
[333612] = {
["npcID"] = 168374,
},
[372562] = {
["source"] = "Shadepaw Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 186490,
},
[348128] = {
["encounterName"] = "Zo'phex the Sentinel",
["encounterID"] = 2425,
["npcID"] = 175616,
},
[63913] = {
["npcID"] = 33819,
},
[166543] = {
["encounterName"] = "Nitrogg Thundertower",
["encounterID"] = 1732,
["npcID"] = 82721,
},
[286619] = {
["encounterName"] = "Stormwall Blockade",
["encounterID"] = 2280,
["npcID"] = 146256,
},
[193164] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blade Dancer Illianna",
["npcID"] = 96657,
},
[338005] = {
["npcID"] = 165415,
},
[401383] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[40876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Wind Reaver",
["npcID"] = 23330,
},
[410870] = {
["source"] = "Wild Vortex",
["event"] = "SPELL_CAST_START",
["npcID"] = 45912,
},
[183548] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stoneclaw Grubmaster",
["npcID"] = 102404,
},
[264608] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 133219,
},
[241287] = {
["source"] = "Shadowsworn Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 121021,
},
[384538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Tuskarr Hero",
["npcID"] = 194731,
},
[322818] = {
["encounterName"] = "Devos, Paragon of Loyalty",
["encounterID"] = 2359,
["npcID"] = 162061,
},
[431349] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Dark Architect",
["npcID"] = 213885,
},
[392442] = {
["source"] = "Kholdeg",
["event"] = "SPELL_CAST_START",
["npcID"] = 194608,
},
[320771] = {
["encounterName"] = "Nalthor the Rimebinder",
["npcID"] = 162693,
["encounterID"] = 2390,
},
[453875] = {
["source"] = "Shurrai",
["event"] = "SPELL_CAST_START",
["npcID"] = 221224,
},
[417598] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drest'Agath the Corrupted",
["npcID"] = 207925,
},
[369921] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lava Phoenix",
["npcID"] = 187932,
},
[320772] = {
["encounterName"] = "Nalthor the Rimebinder",
["npcID"] = 162693,
["encounterID"] = 2390,
},
[355584] = {
["npcID"] = 178171,
},
[316677] = {
["source"] = "Aqir Swarmkeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 162303,
},
[179091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nar'thalas Magister",
["npcID"] = 88783,
},
[284362] = {
["encounterName"] = "Stormwall Blockade",
["encounterID"] = 2280,
["npcID"] = 146253,
},
[412922] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spurlok, Timesworn Sentinel",
["npcID"] = 205158,
},
[300296] = {
["npcID"] = 150143,
},
[376063] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Smoldering Hellion",
["npcID"] = 191510,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[394493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ko'jo",
["npcID"] = 186367,
},
[404732] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201773,
},
[365825] = {
["npcID"] = 181884,
},
[327474] = {
["npcID"] = 168299,
},
[312584] = {
["source"] = "Aqir Venomweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 161229,
},
[453879] = {
["source"] = "Grand Overspinner Antourix",
["event"] = "SPELL_CAST_START",
["npcID"] = 225263,
},
[401447] = {
["source"] = "Horrific Aberration",
["event"] = "SPELL_CAST_START",
["npcID"] = 198965,
},
[277773] = {
["npcID"] = 142219,
},
[250505] = {
["source"] = "Forgotten Gryphon",
["event"] = "SPELL_CAST_START",
["npcID"] = 193154,
},
[265487] = {
["source"] = "Bloodsworn Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 133912,
},
[113998] = {
["isChanneled"] = true,
["source"] = "Maw of Despair",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59237,
},
[40877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Wind Reaver",
["npcID"] = 23330,
},
[394496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruinous",
["npcID"] = 193522,
},
[363780] = {
["npcID"] = 184043,
},
[406783] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201934,
},
[392449] = {
["source"] = "Earth Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 190173,
},
[88194] = {
["npcID"] = 45919,
},
[404736] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baine Bloodhoof",
["npcID"] = 203204,
},
[118094] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["npcID"] = 60710,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[277776] = {
["npcID"] = 142219,
},
[369925] = {
["source"] = "Blazing Dreadsquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 191901,
},
[412928] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Algrin",
["npcID"] = 203709,
},
[278990] = {
["npcID"] = 142802,
},
[277777] = {
["npcID"] = 142219,
},
[377270] = {
["source"] = "Mesmerized Healer",
["event"] = "SPELL_CAST_START",
["npcID"] = 195961,
},
[105296] = {
["source"] = "Miss Fanny",
["event"] = "SPELL_CAST_START",
["npcID"] = 56192,
},
[374022] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[196242] = {
["source"] = "Dreadlord Mendacius",
["event"] = "SPELL_CAST_START",
["npcID"] = 99649,
},
[121468] = {
["source"] = "Raigonn",
["event"] = "SPELL_CAST_START",
["npcID"] = 61177,
},
[404739] = {
["event"] = "SPELL_CAST_START",
["source"] = "First Mate Ovdah",
["npcID"] = 201182,
},
[152818] = {
["source"] = "Shadowmoon Bone-Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 75713,
},
[411916] = {
["source"] = "Sundered Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205673,
},
[450980] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217491,
},
[371976] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[178837] = {
["source"] = "Cackling Pyromaniac",
["event"] = "SPELL_CAST_START",
["npcID"] = 79510,
},
[258181] = {
["source"] = "Irontide Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 130400,
},
[378120] = {
["source"] = "Unstable Rock",
["event"] = "SPELL_CAST_START",
["npcID"] = 192799,
},
[132763] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ban Bearheart",
["npcID"] = 62806,
},
[323496] = {
["npcID"] = 165872,
},
[376073] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[443649] = {
["source"] = "Royal Scribe",
["event"] = "SPELL_CAST_START",
["npcID"] = 221035,
},
[118781] = {
["source"] = "Aiyu the Skillet",
["event"] = "SPELL_CAST_START",
["npcID"] = 56520,
},
[365835] = {
["npcID"] = 183407,
},
[335119] = {
["encounterName"] = "Huntsman Altimor",
["encounterID"] = 2418,
["npcID"] = 165066,
},
[115024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terracotta Warrior",
["npcID"] = 59758,
},
[453889] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ren'khat",
["npcID"] = 222152,
},
[431364] = {
["source"] = "Nightfall Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 214761,
},
[294165] = {
["npcID"] = 182296,
},
[79913] = {
["npcID"] = 25757,
},
[404744] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[406792] = {
["source"] = "Agitated Magmaclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 202288,
},
[400649] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[320787] = {
["encounterName"] = "The Manastorms",
["npcID"] = 164556,
["encounterID"] = 2394,
},
[394843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skag the Thrower",
["npcID"] = 193149,
},
[129656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glade Singer",
["npcID"] = 58766,
},
[381356] = {
["event"] = "SPELL_CAST_START",
["source"] = "Luddy Quicksnap",
["npcID"] = 193292,
},
[320788] = {
["encounterName"] = "Nalthor the Rimebinder",
["npcID"] = 162693,
["encounterID"] = 2390,
},
[43270] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Rune Binder",
["npcID"] = 23796,
},
[388773] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["encounterID"] = 2584,
["event"] = "SPELL_CAST_START",
["npcID"] = 186738,
},
[339966] = {
["npcID"] = 164861,
},
[410890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Warder",
["npcID"] = 205259,
},
[380174] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[439559] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["encounterID"] = 2898,
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[455069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arax'ne",
["npcID"] = 217465,
},
[394509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruinous",
["npcID"] = 193522,
},
[404748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Navigator Bi-Yun",
["npcID"] = 201184,
},
[227987] = {
["encounterName"] = "Opera Hall",
["encounterID"] = 1957,
["npcID"] = 114328,
},
[31704] = {
["encounterName"] = "The Black Stalker",
["source"] = "The Black Stalker",
["encounterID"] = 1948,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17882,
},
[435465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Machinist Protector",
["npcID"] = 219361,
},
[306457] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ogre Brute",
["npcID"] = 157328,
},
[449817] = {
["isChanneled"] = true,
["source"] = "Toxic Swarmite",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222721,
},
[463256] = {
["source"] = "Mistveil Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 171772,
},
[407596] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[396559] = {
["source"] = "Raszageth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199031,
},
[193376] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["encounterID"] = 1791,
["event"] = "SPELL_CAST_START",
["npcID"] = 91004,
},
[319821] = {
["npcID"] = 161529,
},
[394512] = {
["source"] = "Void Spawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 75652,
},
[453897] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["npcID"] = 220314,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2960,
},
[232084] = {
["npcID"] = 116549,
},
[457993] = {
["source"] = "Croakit",
["event"] = "SPELL_CAST_START",
["npcID"] = 214757,
},
[415435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Moment",
["npcID"] = 206064,
},
[363797] = {
["npcID"] = 184043,
},
[389532] = {
["source"] = "Laden Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 193541,
},
[335129] = {
["encounterName"] = "Huntsman Altimor",
["encounterID"] = 2418,
["npcID"] = 165066,
},
[328986] = {
["npcID"] = 169159,
},
[404753] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baine Bloodhoof",
["npcID"] = 203204,
},
[414992] = {
["source"] = "Burning Flamewhisperer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209236,
},
[227543] = {
["encounterName"] = "Opera Hall",
["encounterID"] = 1957,
["npcID"] = 114284,
},
[369942] = {
["source"] = "Blazing Dreadsquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 191901,
},
[404754] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Null Glimmer",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 202971,
},
[406802] = {
["source"] = "Cavern Flayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 202307,
},
[359704] = {
["npcID"] = 181626,
},
[119922] = {
["encounterName"] = "Trial of the King",
["source"] = "Kuai the Brute",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61442,
},
[214988] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Vengeance",
["npcID"] = 100364,
},
[13321] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felhound Manastalker",
["npcID"] = 17401,
},
[420236] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[271652] = {
["npcID"] = 161874,
},
[314655] = {
["event"] = "SPELL_CAST_START",
["source"] = "Henry Garrick",
["npcID"] = 161504,
},
[390422] = {
["npcID"] = 189933,
},
[111670] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "Scarlet Zealot",
["npcID"] = 58590,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1425,
},
[401421] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["npcID"] = 198995,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2666,
},
[404757] = {
["source"] = "Sundered Flame Manaweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 202246,
},
[55982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Recalled Enormos",
["npcID"] = 225274,
},
[392471] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galnmor",
["npcID"] = 193853,
},
[369946] = {
["source"] = "Dragonhunter Igordan",
["event"] = "SPELL_CAST_START",
["npcID"] = 191611,
},
[259732] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["encounterID"] = 2112,
["event"] = "SPELL_CAST_START",
["npcID"] = 131383,
},
[114004] = {
["encounterName"] = "Houndmaster Braun",
["source"] = "Houndmaster Braun",
["npcID"] = 59303,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1422,
},
[392472] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galnmor",
["npcID"] = 193853,
},
[172703] = {
["npcID"] = 81432,
},
[314658] = {
["event"] = "SPELL_CAST_START",
["source"] = "Henry Garrick",
["npcID"] = 161504,
},
[321935] = {
["npcID"] = 164707,
},
[228559] = {
["npcID"] = 183424,
},
[152792] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["encounterID"] = 1688,
["event"] = "SPELL_CAST_START",
["npcID"] = 75829,
},
[311019] = {
["source"] = "Monstrous Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 159303,
},
[79937] = {
["source"] = "Zinnin Smythe",
["event"] = "SPELL_CAST_START",
["npcID"] = 99145,
},
[418121] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Monstrosity",
["npcID"] = 207923,
},
[410904] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[370225] = {
["source"] = "Shrieking Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 187159,
},
[374045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Containment Apparatus",
["npcID"] = 190342,
},
[192158] = {
["encounterName"] = "Hyrja",
["source"] = "Olmyr the Enlightened",
["encounterID"] = 1806,
["event"] = "SPELL_CAST_START",
["npcID"] = 97202,
},
[320804] = {
["encounterName"] = "The Manastorms",
["npcID"] = 164561,
["encounterID"] = 2394,
},
[341390] = {
["npcID"] = 174012,
},
[424315] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Moon",
["npcID"] = 211086,
},
[413622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Infiltrator",
["npcID"] = 206214,
},
[288041] = {
["encounterName"] = "Mekkatorque",
["encounterID"] = 2276,
["npcID"] = 144796,
},
[30937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Channeler",
["npcID"] = 17653,
},
[315076] = {
["npcID"] = 161388,
},
[241305] = {
["encounterName"] = "Harjatan",
["source"] = "Razorjaw Acolyte",
["npcID"] = 117154,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2036,
},
[378143] = {
["source"] = "Earthshatter Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 187173,
},
[76634] = {
["npcID"] = 40925,
},
[283947] = {
["encounterName"] = "Opulence",
["encounterID"] = 2271,
["npcID"] = 146132,
},
[335141] = {
["npcID"] = 165824,
},
[11985] = {
["npcID"] = 46914,
},
[157348] = {
["npcID"] = 77942,
},
[120149] = {
["source"] = "Mirror Image",
["event"] = "SPELL_CAST_START",
["npcID"] = 194853,
},
[241306] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razorjaw Acolyte",
["npcID"] = 117154,
},
[419344] = {
["source"] = "Crenna Earth-Daughter",
["event"] = "SPELL_CAST_START",
["npcID"] = 209072,
},
[227529] = {
["encounterName"] = "The Curator",
["encounterID"] = 1964,
["npcID"] = 114334,
},
[195232] = {
["source"] = "Hatecoil Wavebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 97170,
},
[392480] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galnmor",
["npcID"] = 193853,
},
[353573] = {
["npcID"] = 182324,
},
[419166] = {
["source"] = "Austin Huxworth",
["event"] = "SPELL_CAST_START",
["npcID"] = 209065,
},
[325590] = {
["encounterName"] = "Sun King's Salvation",
["encounterID"] = 2402,
["npcID"] = 165763,
},
[395097] = {
["source"] = "Emberdusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 203664,
},
[460057] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queensguard An'Jak Shabtir",
["npcID"] = 219665,
},
[413145] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[325725] = {
["encounterName"] = "Mueh'zala",
["npcID"] = 166608,
["encounterID"] = 2396,
},
[384291] = {
["source"] = "Ayanga",
["event"] = "SPELL_CAST_START",
["npcID"] = 192961,
},
[394530] = {
["source"] = "Acequian",
["event"] = "SPELL_CAST_START",
["npcID"] = 187617,
},
[417752] = {
["source"] = "Overlord Mechagon",
["event"] = "SPELL_CAST_START",
["npcID"] = 205309,
},
[166565] = {
["encounterName"] = "Nitrogg Thundertower",
["encounterID"] = 1732,
["npcID"] = 79548,
},
[167589] = {
["encounterName"] = "Nitrogg Thundertower",
["encounterID"] = 1732,
["npcID"] = 79548,
},
[121174] = {
["encounterName"] = "Gekkan",
["source"] = "Harthak Flameseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 61392,
},
[265523] = {
["source"] = "Bloodsworn Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 133912,
},
[423200] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[73564] = {
["encounterName"] = "Siamat",
["encounterID"] = 1055,
["npcID"] = 44819,
},
[378150] = {
["npcID"] = 191376,
},
[214688] = {
["npcID"] = 107435,
},
[308527] = {
["encounterName"] = "Ravnyr",
["source"] = "Gor'groth",
["npcID"] = 156814,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2326,
},
[40251] = {
["encounterName"] = "Teron Gorefiend",
["source"] = "Teron Gorefiend",
["npcID"] = 22871,
["event"] = "SPELL_CAST_START",
["encounterID"] = 604,
},
[131034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vengeful Gurthani Spirit",
["npcID"] = 65452,
},
[404772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grugoth the Hullcrusher",
["npcID"] = 200721,
},
[227999] = {
["npcID"] = 114542,
},
[392486] = {
["source"] = "Tempest Channeler",
["event"] = "SPELL_CAST_START",
["npcID"] = 198047,
},
[451871] = {
["source"] = "Twilight Earthcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 224219,
},
[405696] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[382597] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frost Shackler",
["npcID"] = 190993,
},
[318768] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Psychophage",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 163947,
},
[271670] = {
["source"] = "Princess Talanji",
["event"] = "SPELL_CAST_START",
["npcID"] = 146180,
},
[388392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unruly Textbook",
["npcID"] = 196044,
},
[398631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crackshot",
["npcID"] = 200852,
},
[138923] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["encounterID"] = 1573,
["event"] = "SPELL_CAST_START",
["npcID"] = 69712,
},
[148138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackfuse Engineer",
["npcID"] = 73095,
},
[214690] = {
["npcID"] = 107435,
},
[398632] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crackshot",
["npcID"] = 200852,
},
[215234] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Dominator Tentacle",
["npcID"] = 105304,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1873,
},
[378155] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186125,
},
[115809] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greenwood Trickster",
["npcID"] = 54987,
},
[118104] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unruly Alemental",
["npcID"] = 56684,
},
[310580] = {
["encounterName"] = "Drest'agath",
["source"] = "Maw of Drest'agath",
["encounterID"] = 2343,
["event"] = "SPELL_CAST_START",
["npcID"] = 157613,
},
[126903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Fist",
["npcID"] = 65134,
},
[215233] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Dominator Tentacle",
["npcID"] = 105304,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1873,
},
[398634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crackshot",
["npcID"] = 200852,
},
[200898] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Inquisitor Tormentorum",
["npcID"] = 96015,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[311116] = {
["source"] = "Spiked Tentacle",
["event"] = "SPELL_CAST_START",
["npcID"] = 159416,
},
[404778] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baine Bloodhoof",
["npcID"] = 203204,
},
[92265] = {
["encounterName"] = "Slabhide",
["npcID"] = 43214,
["encounterID"] = 1059,
},
[318773] = {
["npcID"] = 167431,
},
[230050] = {
["npcID"] = 115765,
},
[404779] = {
["source"] = "Contamination Investigator",
["event"] = "SPELL_CAST_START",
["npcID"] = 202320,
},
[365872] = {
["encounterName"] = "Anduin Wrynn",
["encounterID"] = 2546,
["npcID"] = 181954,
},
[433448] = {
["isChanneled"] = true,
["source"] = "Nerubian Webspinner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216621,
},
[320822] = {
["npcID"] = 165222,
},
[229562] = {
["npcID"] = 115406,
},
[162475] = {
["encounterName"] = "Tectus, The Living Mountain",
["source"] = "Tectus",
["npcID"] = 78948,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1722,
},
[449831] = {
["isChanneled"] = true,
["source"] = "Battlefront Hauler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223789,
},
[320823] = {
["encounterName"] = "The Manastorms",
["npcID"] = 164555,
["encounterID"] = 2394,
},
[414038] = {
["source"] = "Aquifon",
["event"] = "SPELL_CAST_START",
["npcID"] = 203468,
},
[455975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reconstructed Skardyn",
["npcID"] = 219245,
},
[196796] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel-Infused Fury",
["npcID"] = 99956,
},
[345397] = {
["encounterName"] = "Shriekwing",
["encounterID"] = 2398,
["npcID"] = 164406,
},
[259744] = {
["npcID"] = 159022,
},
[374066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Geomancer",
["npcID"] = 190345,
},
[150424] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amani Berserker",
["npcID"] = 215675,
},
[320825] = {
["encounterName"] = "The Manastorms",
["npcID"] = 164568,
["encounterID"] = 2394,
},
[355637] = {
["npcID"] = 179840,
},
[15472] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Warlock",
["npcID"] = 17371,
},
[359733] = {
["npcID"] = 181349,
},
[385363] = {
["source"] = "Mature Riverbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 194145,
},
[388402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Predatory Thresher",
["npcID"] = 198779,
},
[118106] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["npcID"] = 60710,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[359734] = {
["npcID"] = 185755,
},
[64971] = {
["npcID"] = 34198,
},
[386757] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["encounterID"] = 2617,
["event"] = "SPELL_CAST_START",
["npcID"] = 189727,
},
[324923] = {
["npcID"] = 164926,
},
[130479] = {
["source"] = "Thunder Hold Lieutenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 66287,
},
[120416] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Seedstealer",
["npcID"] = 61302,
},
[355640] = {
["npcID"] = 179840,
},
[382261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgam of Desperation",
["npcID"] = 199423,
},
[425264] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["encounterID"] = 2837,
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[413487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temporal Fusion",
["npcID"] = 206068,
},
[265540] = {
["source"] = "Fetid Maggot",
["event"] = "SPELL_CAST_START",
["npcID"] = 130909,
},
[349498] = {
["encounterName"] = "The Grand Menagerie",
["encounterID"] = 2441,
["npcID"] = 176556,
},
[419595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten General",
["npcID"] = 207941,
},
[417499] = {
["source"] = "Malfunctioning Robotic Cauldron",
["event"] = "SPELL_CAST_START",
["npcID"] = 207111,
},
[331069] = {
["npcID"] = 174405,
},
[187052] = {
["encounterName"] = "Hellfire Assault",
["source"] = "Contracted Engineer",
["encounterID"] = 1778,
["event"] = "SPELL_CAST_START",
["npcID"] = 93881,
},
[114087] = {
["encounterName"] = "Houndmaster Braun",
["source"] = "Houndmaster Braun",
["npcID"] = 59303,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1422,
},
[172718] = {
["npcID"] = 86215,
},
[228528] = {
["npcID"] = 183423,
},
[374073] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Geomancer",
["npcID"] = 190345,
},
[120667] = {
["source"] = "Shado-Pan Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 61968,
},
[113690] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["npcID"] = 59150,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1420,
},
[396599] = {
["source"] = "Rapid Wooly Ewe",
["event"] = "SPELL_CAST_START",
["npcID"] = 197200,
},
[455984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidstone Behemoth",
["npcID"] = 221307,
},
[130906] = {
["source"] = "Ga'trul",
["event"] = "SPELL_CAST_START",
["npcID"] = 66276,
},
[454535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mai'Zoth",
["npcID"] = 210252,
},
[453937] = {
["encounterName"] = "Zekvir",
["source"] = "Egg Cocoon",
["encounterID"] = 2987,
["event"] = "SPELL_CAST_START",
["npcID"] = 224077,
},
[49843] = {
["source"] = "Blood Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 24872,
},
[405821] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[451890] = {
["source"] = "Stonehead Koboldcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 220792,
},
[388410] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[403772] = {
["source"] = "Vakan",
["event"] = "SPELL_CAST_START",
["npcID"] = 199855,
},
[13322] = {
["source"] = "Rogue Wizard",
["event"] = "SPELL_CAST_START",
["npcID"] = 474,
},
[271689] = {
["source"] = "Princess Talanji",
["event"] = "SPELL_CAST_START",
["npcID"] = 146180,
},
[157874] = {
["event"] = "SPELL_CAST_START",
["source"] = "Modgud",
["npcID"] = 214869,
},
[133813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Serpent Ward",
["npcID"] = 67906,
},
[359743] = {
["npcID"] = 181870,
},
[385339] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186338,
},
[106434] = {
["encounterName"] = "Master Snowdrift",
["source"] = "Master Snowdrift",
["encounterID"] = 1304,
["event"] = "SPELL_CAST_START",
["npcID"] = 56541,
},
[130395] = {
["encounterName"] = "The Stone Guard",
["source"] = "Jasper Guardian",
["npcID"] = 59915,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1395,
},
[411300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Waveshaper",
["npcID"] = 205363,
},
[59663] = {
["source"] = "Thexal Deathchill",
["event"] = "SPELL_CAST_START",
["npcID"] = 31775,
},
[316951] = {
["source"] = "Corrosive Digester",
["event"] = "SPELL_CAST_START",
["npcID"] = 162828,
},
[365888] = {
["npcID"] = 184879,
},
[375094] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swift Hornstrider",
["npcID"] = 190029,
},
[402748] = {
["source"] = "Molten Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 202284,
},
[153268] = {
["source"] = "Shadowmoon Exhumer",
["event"] = "SPELL_CAST_START",
["npcID"] = 77700,
},
[374080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Ravager",
["npcID"] = 190348,
},
[31707] = {
["npcID"] = 78116,
},
[394558] = {
["source"] = "Unstable Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 198577,
},
[32011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitescale Siren",
["npcID"] = 38301,
},
[374081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Godoloto",
["npcID"] = 190022,
},
[393520] = {
["source"] = "Ceeqa the Peacetaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 188708,
},
[427323] = {
["source"] = "Voidrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 212786,
},
[391470] = {
["source"] = "Piton",
["event"] = "SPELL_CAST_START",
["npcID"] = 194464,
},
[130396] = {
["isChanneled"] = true,
["source"] = "Gyrocopter Turret",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66299,
},
[125016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dog",
["npcID"] = 63955,
},
[345414] = {
["npcID"] = 162114,
},
[306953] = {
["encounterName"] = "Shad'har the Insatiable",
["source"] = "Shad'har the Insatiable",
["encounterID"] = 2335,
["event"] = "SPELL_CAST_START",
["npcID"] = 157231,
},
[130583] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Cannoneer",
["npcID"] = 66395,
},
[142296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Shaman Xorenth",
["npcID"] = 70683,
},
[424227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Priestess of the Moon",
["npcID"] = 211076,
},
[404807] = {
["source"] = "Contamination Investigator",
["event"] = "SPELL_CAST_START",
["npcID"] = 202320,
},
[141413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ice Spike",
["npcID"] = 70988,
},
[147310] = {
["source"] = "Brilliant Windfeather",
["event"] = "SPELL_CAST_START",
["npcID"] = 72762,
},
[17501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimson Cannon",
["npcID"] = 11199,
},
[372460] = {
["source"] = "Bakra the Bully",
["event"] = "SPELL_CAST_START",
["npcID"] = 186517,
},
[199345] = {
["encounterName"] = "Dresaron",
["encounterID"] = 1838,
["npcID"] = 99200,
},
[120670] = {
["source"] = "Zandalari Fire-Dancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 60402,
},
[394563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Death's Shadow",
["npcID"] = 190985,
},
[339274] = {
["npcID"] = 173298,
},
[382277] = {
["source"] = "Balara",
["event"] = "SPELL_CAST_START",
["npcID"] = 193457,
},
[392738] = {
["source"] = "Kargpaw the Fetid",
["event"] = "SPELL_CAST_START",
["npcID"] = 186660,
},
[337227] = {
["npcID"] = 169102,
},
[116155] = {
["source"] = "Bubbling Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59521,
},
[341323] = {
["npcID"] = 173973,
},
[224943] = {
["source"] = "Felsworn Chaos-Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 113012,
},
[309005] = {
["npcID"] = 158181,
},
[396613] = {
["source"] = "Sunscale Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193133,
},
[390470] = {
["npcID"] = 189933,
},
[102241] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["encounterID"] = 1884,
["event"] = "SPELL_CAST_START",
["npcID"] = 54544,
},
[428047] = {
["source"] = "Verlann Timbercrush",
["event"] = "SPELL_CAST_START",
["npcID"] = 207554,
},
[206514] = {
["encounterName"] = "Gul'dan",
["source"] = "Gul'dan",
["encounterID"] = 1866,
["event"] = "SPELL_CAST_START",
["npcID"] = 104154,
},
[365898] = {
["npcID"] = 184627,
},
[408901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Contaminant",
["npcID"] = 202270,
},
[112992] = {
["encounterName"] = "Hoptallus",
["source"] = "Hoptallus",
["encounterID"] = 1413,
["event"] = "SPELL_CAST_START",
["npcID"] = 56717,
},
[113504] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pandriarch Windfur",
["npcID"] = 56206,
},
[390472] = {
["npcID"] = 189933,
},
[130910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ga’trul",
["npcID"] = 66276,
},
[402759] = {
["source"] = "Molten Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 202284,
},
[57780] = {
["npcID"] = 33236,
},
[375068] = {
["encounterName"] = "Magmatusk",
["source"] = "Lava Tentacles",
["npcID"] = 190023,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[125900] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kor'thik Warsinger",
["npcID"] = 64458,
},
[76133] = {
["encounterName"] = "Ozumat",
["npcID"] = 40792,
["encounterID"] = 1047,
},
[202420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eredar War-Mind",
["npcID"] = 127597,
},
[195253] = {
["source"] = "Restless Tides",
["event"] = "SPELL_CAST_START",
["npcID"] = 97173,
},
[60646] = {
["source"] = "Korjan Slavemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 65638,
},
[172728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Creeping Vine",
["npcID"] = 80697,
},
[372045] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Caustic Spiderling",
["npcID"] = 189233,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[439621] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Nx",
["npcID"] = 216648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[411923] = {
["source"] = "Diganthor",
["event"] = "SPELL_CAST_START",
["npcID"] = 204434,
},
[419144] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[169657] = {
["source"] = "Twisted Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 84767,
},
[365903] = {
["npcID"] = 184627,
},
[130911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ga’trul",
["npcID"] = 66276,
},
[337235] = {
["encounterName"] = "Tred'ova",
["encounterID"] = 2393,
["npcID"] = 164517,
},
[372047] = {
["source"] = "Defier Draghar",
["event"] = "SPELL_CAST_START",
["npcID"] = 187897,
},
[223923] = {
["source"] = "Corrupted Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 112474,
},
[326997] = {
["npcID"] = 167607,
},
[147543] = {
["event"] = "SPELL_CAST_START",
["source"] = "Golganarr",
["npcID"] = 72970,
},
[113134] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["npcID"] = 3977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1425,
},
[228019] = {
["encounterName"] = "Opera Hall",
["encounterID"] = 1957,
["npcID"] = 114522,
},
[125436] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kri'thik Boneslicer",
["npcID"] = 61376,
},
[460102] = {
["source"] = "Slatefang",
["event"] = "SPELL_CAST_START",
["npcID"] = 228439,
},
[322903] = {
["encounterName"] = "General Kaal",
["encounterID"] = 2363,
["npcID"] = 162099,
},
[232115] = {
["npcID"] = 116549,
},
[384336] = {
["source"] = "Nokhud Plainstomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 191847,
},
[402766] = {
["source"] = "Sundered Flame Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 202260,
},
[453960] = {
["source"] = "Broodtwister Ovi'nax",
["event"] = "SPELL_CAST_START",
["npcID"] = 214506,
},
[141318] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Headhunter",
["npcID"] = 70473,
},
[130912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ga’trul",
["npcID"] = 66276,
},
[451913] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Puppetmaster?",
["npcID"] = 220507,
},
[265568] = {
["source"] = "Befouled Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 133685,
},
[128034] = {
["source"] = "Dread Scarab",
["event"] = "SPELL_CAST_START",
["npcID"] = 63587,
},
[134059] = {
["source"] = "Bilgewater Blastgineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 67884,
},
[318949] = {
["npcID"] = 163894,
},
[396625] = {
["source"] = "Toxic Swogmother",
["event"] = "SPELL_CAST_START",
["npcID"] = 197774,
},
[333145] = {
["encounterName"] = "Sun King's Salvation",
["encounterID"] = 2402,
["npcID"] = 167566,
},
[118626] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shai Hu",
["npcID"] = 61069,
},
[86374] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Guard",
["npcID"] = 61252,
},
[413008] = {
["event"] = "SPELL_CAST_START",
["source"] = "Highmountain Seer",
["npcID"] = 201578,
},
[390483] = {
["source"] = "Dammed Beaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 197914,
},
[12470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gold Shaman",
["npcID"] = 32340,
},
[361815] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 181954,
["encounterID"] = 2546,
},
[404818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shukoro Rapidstamer",
["npcID"] = 198917,
},
[41448] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shek'zeer Needler",
["npcID"] = 64714,
},
[359768] = {
["npcID"] = 181360,
},
[213688] = {
["npcID"] = 107024,
},
[122406] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Wind Lord Mel'jarak",
["npcID"] = 62397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1498,
},
[308575] = {
["npcID"] = 158161,
},
[140400] = {
["source"] = "Zandalari Prophet",
["event"] = "SPELL_CAST_START",
["npcID"] = 70557,
},
[402772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contaminated Deepstrider Alpha",
["npcID"] = 204308,
},
[372056] = {
["encounterName"] = "The Primal Council",
["source"] = "Opalfang",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187772,
},
[398677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Cutthroat",
["npcID"] = 200849,
},
[406918] = {
["source"] = "Djaradin Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 202256,
},
[427346] = {
["source"] = "Devout Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[413012] = {
["source"] = "Shadow Additive",
["event"] = "SPELL_CAST_START",
["npcID"] = 205671,
},
[391003] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Shaman Rotknuckle",
["npcID"] = 197356,
},
[384344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Humid Drizzle",
["npcID"] = 194068,
},
[411700] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Tidehunter",
["npcID"] = 205365,
},
[413013] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["npcID"] = 198995,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2666,
},
[121284] = {
["encounterName"] = "Wing Leader Ner'onok",
["source"] = "Wing Leader Ner'onok",
["npcID"] = 62205,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1464,
},
[425300] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Flamemancer",
["npcID"] = 210170,
},
[402775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Cindershaper",
["npcID"] = 199824,
},
[270334] = {
["source"] = "Portal Breacher",
["event"] = "SPELL_CAST_START",
["npcID"] = 209821,
},
[314843] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[147289] = {
["event"] = "SPELL_CAST_START",
["source"] = "Death Adder",
["npcID"] = 72841,
},
[411747] = {
["source"] = "Twisted Elementium",
["event"] = "SPELL_CAST_START",
["npcID"] = 205628,
},
[310788] = {
["encounterName"] = "Il'gynoth, Corruption Reborn",
["source"] = "Organ of Corruption",
["encounterID"] = 2345,
["event"] = "SPELL_CAST_START",
["npcID"] = 158343,
},
[228025] = {
["encounterName"] = "Opera Hall",
["encounterID"] = 1957,
["npcID"] = 114329,
},
[204574] = {
["encounterName"] = "Oakheart",
["encounterID"] = 1837,
["npcID"] = 103344,
},
[337249] = {
["encounterName"] = "Tred'ova",
["encounterID"] = 2393,
["npcID"] = 164517,
},
[164973] = {
["source"] = "Everbloom Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 81985,
},
[439637] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Echoing Shade",
["npcID"] = 219675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[392539] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Terrasentry",
["npcID"] = 197801,
},
[146536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'thik Honor Guard",
["npcID"] = 72954,
},
[445781] = {
["source"] = "Sparklit Rust Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 212597,
},
[114021] = {
["encounterName"] = "Houndmaster Braun",
["source"] = "Houndmaster Braun",
["npcID"] = 59303,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1422,
},
[458068] = {
["source"] = "Croakit",
["event"] = "SPELL_CAST_START",
["npcID"] = 214757,
},
[387317] = {
["source"] = "Ruby Culler",
["event"] = "SPELL_CAST_START",
["npcID"] = 190093,
},
[331108] = {
["npcID"] = 160048,
},
[423257] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Moon",
["npcID"] = 210686,
},
[117241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Fire-Dancer",
["npcID"] = 60402,
},
[227461] = {
["encounterName"] = "Opera Hall",
["encounterID"] = 1957,
["npcID"] = 114324,
},
[396637] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harat the Ancient",
["npcID"] = 196246,
},
[365921] = {
["npcID"] = 183406,
},
[384351] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[378208] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186124,
},
[440551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ragefin Executioner",
["npcID"] = 213408,
},
[423259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildfire Blazekin",
["npcID"] = 210685,
},
[116157] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["npcID"] = 60009,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1390,
},
[394591] = {
["source"] = "Tombcaller Ganzaya",
["event"] = "SPELL_CAST_START",
["npcID"] = 188509,
},
[404830] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shukoro Rapidstamer",
["npcID"] = 198917,
},
[114022] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Treasurer",
["npcID"] = 59241,
},
[384353] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[337255] = {
["encounterName"] = "Tred'ova",
["encounterID"] = 2393,
["npcID"] = 164517,
},
[396640] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Ancient Branch",
["npcID"] = 196548,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[116070] = {
["source"] = "Gormali Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 54702,
},
[408927] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Contaminant",
["npcID"] = 202270,
},
[394593] = {
["source"] = "Captain Lancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193198,
},
[413023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lerai, Timesworn Maiden",
["npcID"] = 205152,
},
[341352] = {
["npcID"] = 174092,
},
[409757] = {
["source"] = "Djaradin Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 202109,
},
[388796] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2563,
},
[413024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valow, Timesworn Keeper",
["npcID"] = 201222,
},
[199361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Trapper",
["npcID"] = 96934,
},
[128869] = {
["source"] = "Qi'tar the Deathcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 62863,
},
[427359] = {
["isChanneled"] = true,
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[363879] = {
["npcID"] = 183747,
},
[275826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Commander",
["npcID"] = 128969,
},
[114535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brother Lintpocket",
["npcID"] = 59701,
},
[106856] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56732,
},
[450779] = {
["source"] = "Coalesced Living Honey",
["event"] = "SPELL_CAST_START",
["npcID"] = 217833,
},
[423265] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[225404] = {
["source"] = "Trained Shadescale",
["event"] = "SPELL_CAST_START",
["npcID"] = 112804,
},
[323821] = {
["encounterName"] = "General Kaal",
["encounterID"] = 2363,
["npcID"] = 162099,
},
[396645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harat the Ancient",
["npcID"] = 196246,
},
[124797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan'ze Cloudrider",
["npcID"] = 63895,
},
[126822] = {
["npcID"] = 70334,
},
[394598] = {
["source"] = "Shade of Grief",
["event"] = "SPELL_CAST_START",
["npcID"] = 187559,
},
[396646] = {
["source"] = "Loamas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199030,
},
[189547] = {
["source"] = "Sargerei Soul Cleaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 95640,
},
[376169] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Thaumaturge Fural",
["npcID"] = 189905,
},
[209602] = {
["encounterName"] = "Advisor Melandrus",
["npcID"] = 104218,
["encounterID"] = 1870,
},
[129084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruqin Elder",
["npcID"] = 59826,
},
[130406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Laborer",
["npcID"] = 66284,
},
[376170] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[451937] = {
["isChanneled"] = true,
["source"] = "Grand Gluttony",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217747,
},
[384993] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zenet Avis",
["npcID"] = 193209,
},
[391382] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["npcID"] = 197671,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[376171] = {
["source"] = "Primalist Icecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 190377,
},
[386410] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[430288] = {
["source"] = "Void Fragment",
["event"] = "SPELL_CAST_START",
["npcID"] = 207202,
},
[409359] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2682,
},
[388474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quiescent Threshadon",
["npcID"] = 194803,
},
[402793] = {
["source"] = "Gholna",
["event"] = "SPELL_CAST_START",
["npcID"] = 199853,
},
[322931] = {
["npcID"] = 166930,
},
[427999] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200927,
},
[137344] = {
["encounterName"] = "Council of Elders",
["source"] = "High Priestess Mar'li",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 69132,
},
[128962] = {
["source"] = "Krasari Runekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 65598,
},
[421402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Pyremancer",
["npcID"] = 209963,
},
[374126] = {
["source"] = "Parched Broadhoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 194351,
},
[384365] = {
["source"] = "Nokhud Plainstomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 191847,
},
[378222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reservoir Spadefoot",
["npcID"] = 196571,
},
[165578] = {
["encounterName"] = "Bonemaw",
["source"] = "Bonemaw",
["encounterID"] = 1679,
["event"] = "SPELL_CAST_START",
["npcID"] = 75452,
},
[275835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Invader",
["npcID"] = 137516,
},
[124776] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krik'thik Deep-Scout",
["npcID"] = 61374,
},
[125288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'thik Timberhusk",
["npcID"] = 61355,
},
[153581] = {
["source"] = "Soaring Chakram Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 76132,
},
[366797] = {
["npcID"] = 184804,
},
[372202] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Qalashi Irontorch",
["npcID"] = 189464,
},
[142222] = {
["source"] = "Huntmaster S'thoc",
["event"] = "SPELL_CAST_START",
["npcID"] = 71259,
},
[136986] = {
["source"] = "Zandalari Spear-Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 69388,
},
[390511] = {
["npcID"] = 189954,
},
[128872] = {
["source"] = "Qi'tar the Deathcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 62863,
},
[394607] = {
["source"] = "Captain Lancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193198,
},
[372082] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[442387] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian War-Weaver",
["npcID"] = 222731,
},
[196296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormwake Hydra",
["npcID"] = 91792,
},
[425379] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamespreader",
["npcID"] = 210294,
},
[29317] = {
["encounterName"] = "Gothik the Harvester",
["source"] = "Gothik the Harvester",
["npcID"] = 16060,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1109,
},
[360647] = {
["npcID"] = 182155,
},
[400752] = {
["source"] = "Travard",
["event"] = "SPELL_CAST_START",
["npcID"] = 198947,
},
[125289] = {
["source"] = "Bataari Flamecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 63526,
},
[322938] = {
["isChanneled"] = true,
["source"] = "Drust Harvester",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164921,
},
[324986] = {
["source"] = "Mistveil Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 166301,
},
[421746] = {
["source"] = "The Stonewarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210235,
},
[125441] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kri'thik Screamer",
["npcID"] = 61377,
},
[429422] = {
["source"] = "Cursedforge Stoneshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 214066,
},
[300414] = {
["npcID"] = 150143,
},
[76686] = {
["npcID"] = 40019,
},
[378229] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["encounterID"] = 2570,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186124,
},
[44475] = {
["source"] = "Sunblade Mage Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 24683,
},
[405437] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201934,
},
[408946] = {
["source"] = "Sundered Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 198870,
},
[172138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Night-Twisted Supplicant",
["npcID"] = 86185,
},
[372087] = {
["source"] = "Defier Draghar",
["event"] = "SPELL_CAST_START",
["npcID"] = 187897,
},
[374135] = {
["source"] = "Ravaged Bruffalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 193429,
},
[400756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Lazy Peon",
["npcID"] = 221895,
},
[56326] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muckscale Shaman",
["npcID"] = 64008,
},
[331133] = {
["npcID"] = 160048,
},
[398712] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nimbulatus, Storm's Wrath",
["npcID"] = 199667,
},
[292903] = {
["npcID"] = 181406,
},
[127338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha of Hatred",
["npcID"] = 62541,
},
[339325] = {
["npcID"] = 173298,
},
[374137] = {
["source"] = "Parched Broadhoof Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 194352,
},
[257732] = {
["source"] = "Irontide Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 129602,
},
[432142] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian War-Weaver",
["npcID"] = 222731,
},
[429427] = {
["source"] = "Cursedforge Stoneshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 214066,
},
[189532] = {
["source"] = "Binder Hallaani",
["event"] = "SPELL_CAST_START",
["npcID"] = 95613,
},
[376186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Lahar",
["npcID"] = 189235,
},
[402807] = {
["source"] = "Glittering Shard Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 202326,
},
[82800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Footman",
["npcID"] = 67901,
},
[256709] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riptide Shredder",
["npcID"] = 129371,
},
[392569] = {
["source"] = "Flamegullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 197697,
},
[410999] = {
["source"] = "Armored Mistral",
["event"] = "SPELL_CAST_START",
["npcID"] = 45915,
},
[396665] = {
["source"] = "Magmas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199027,
},
[131972] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Battle-Mender",
["npcID"] = 67093,
},
[335233] = {
["npcID"] = 181108,
},
[411000] = {
["source"] = "Armored Mistral",
["event"] = "SPELL_CAST_START",
["npcID"] = 45915,
},
[372093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Blister",
["npcID"] = 197413,
},
[327332] = {
["npcID"] = 163459,
},
[444377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Recalled Grizzly",
["npcID"] = 226195,
},
[411001] = {
["source"] = "Lurking Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 45704,
},
[445813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Test Subject",
["npcID"] = 216328,
},
[147385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironfur Great Bull",
["npcID"] = 72844,
},
[142315] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Xaril the Poisoned Mind",
["npcID"] = 71157,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[394620] = {
["source"] = "Nightrot",
["event"] = "SPELL_CAST_START",
["npcID"] = 188707,
},
[426145] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["encounterID"] = 2787,
["event"] = "SPELL_CAST_START",
["npcID"] = 208745,
},
[300424] = {
["npcID"] = 150160,
},
[131178] = {
["npcID"] = 66768,
},
[125292] = {
["source"] = "Bataari Flamecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 63526,
},
[430238] = {
["source"] = "Void Fragment",
["event"] = "SPELL_CAST_START",
["npcID"] = 207202,
},
[241680] = {
["encounterName"] = "Harjatan",
["source"] = "Mistress Sassz'ine",
["npcID"] = 121184,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2036,
},
[392574] = {
["source"] = "Tempest Channeler",
["event"] = "SPELL_CAST_START",
["npcID"] = 198047,
},
[394622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wilted Oak",
["npcID"] = 197131,
},
[181969] = {
["source"] = "Adjunct Kuroh",
["event"] = "SPELL_CAST_START",
["npcID"] = 91520,
},
[456851] = {
["source"] = "Spore-infused Shalewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 221217,
},
[257736] = {
["source"] = "Irontide Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 126919,
},
[382670] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[126856] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Korvexxis",
["npcID"] = 62579,
},
[57374] = {
["encounterName"] = "The Four Horsemen",
["source"] = "Lady Blaumeux",
["npcID"] = 16065,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1121,
},
[392576] = {
["source"] = "Tempest Channeler",
["event"] = "SPELL_CAST_START",
["npcID"] = 198047,
},
[115054] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Engorged Crocolisk",
["npcID"] = 56183,
},
[176127] = {
["npcID"] = 80935,
},
[398720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Bulwark",
["npcID"] = 200850,
},
[408959] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199659,
},
[186449] = {
["source"] = "Iron Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 90284,
},
[445819] = {
["source"] = "Ashen Stonestalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 217624,
},
[163753] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Man-at-Arms",
["npcID"] = 78832,
},
[188114] = {
["source"] = "Rokmora",
["event"] = "SPELL_CAST_START",
["npcID"] = 91003,
},
[76813] = {
["npcID"] = 41096,
},
[396674] = {
["source"] = "Ripsaw the Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 193153,
},
[365958] = {
["encounterName"] = "Anduin Wrynn",
["encounterID"] = 2546,
["npcID"] = 181954,
},
[392579] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Quarry Stonebreaker",
["npcID"] = 197831,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[370054] = {
["source"] = "Olphis the Molten",
["event"] = "SPELL_CAST_START",
["npcID"] = 181875,
},
[273810] = {
["encounterName"] = "Mythrax",
["encounterID"] = 2135,
["npcID"] = 134546,
},
[130413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strongarm Ace",
["npcID"] = 66000,
},
[130925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ga’trul",
["npcID"] = 66276,
},
[106864] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56732,
},
[417928] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildfire Amberpaw",
["npcID"] = 207144,
},
[256715] = {
["npcID"] = 128005,
},
[62395] = {
["encounterName"] = "Flame Leviathan",
["npcID"] = 33139,
["encounterID"] = 1132,
},
[193235] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["encounterID"] = 1805,
["event"] = "SPELL_CAST_START",
["npcID"] = 94960,
},
[413059] = {
["source"] = "Shadow Canister",
["event"] = "SPELL_CAST_START",
["npcID"] = 206019,
},
[365961] = {
["npcID"] = 183406,
},
[327054] = {
["npcID"] = 158869,
},
[411012] = {
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 45919,
},
[413060] = {
["source"] = "Fire Canister",
["event"] = "SPELL_CAST_START",
["npcID"] = 206022,
},
[300434] = {
["npcID"] = 150160,
},
[181120] = {
["encounterName"] = "Hellfire Assault",
["source"] = "Iron Dragoon",
["encounterID"] = 1778,
["event"] = "SPELL_CAST_START",
["npcID"] = 90114,
},
[141380] = {
["source"] = "Frostmane Bonechiller",
["event"] = "SPELL_CAST_START",
["npcID"] = 70465,
},
[28299] = {
["encounterName"] = "Thaddius",
["source"] = "Thaddius",
["npcID"] = 15928,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1120,
},
[130414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strongarm Ace",
["npcID"] = 66000,
},
[122735] = {
["encounterName"] = "Garalon",
["source"] = "Garalon",
["npcID"] = 62164,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1463,
},
[329104] = {
["encounterName"] = "Lord Chamberlain",
["encounterID"] = 2381,
["npcID"] = 164218,
},
[372107] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189232,
},
[300436] = {
["npcID"] = 150146,
},
[200404] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[193237] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Huln Highmountain",
["npcID"] = 104825,
},
[417675] = {
["source"] = "Meantron 7000",
["event"] = "SPELL_CAST_START",
["npcID"] = 206131,
},
[431493] = {
["source"] = "Nightfall Curseblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 213894,
},
[400777] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[451971] = {
["source"] = "Molten Giant",
["event"] = "SPELL_CAST_START",
["npcID"] = 40166,
},
[132829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Southsea Lookout",
["npcID"] = 73718,
},
[51901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emerald Lasher",
["npcID"] = 27254,
},
[408969] = {
["source"] = "Monstrous Mud",
["event"] = "SPELL_CAST_START",
["npcID"] = 192519,
},
[329107] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 169219,
},
[169689] = {
["source"] = "Diving Chakram Spinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 76116,
},
[374158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Creeper",
["npcID"] = 221664,
},
[408970] = {
["source"] = "Sundered Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 198870,
},
[427609] = {
["source"] = "Arathi Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 206696,
},
[396684] = {
["source"] = "Dismay Fly",
["event"] = "SPELL_CAST_START",
["npcID"] = 193367,
},
[423305] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["npcID"] = 207207,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2836,
},
[431714] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Apothecary",
["npcID"] = 219651,
},
[311084] = {
["source"] = "Maddened Conscript",
["event"] = "SPELL_CAST_START",
["npcID"] = 159305,
},
[169690] = {
["source"] = "Diving Chakram Spinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 76116,
},
[432037] = {
["source"] = "Sparklit Buttonmasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 212596,
},
[376208] = {
["encounterName"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["npcID"] = 184125,
},
[329110] = {
["encounterName"] = "Doctor Ickus",
["npcID"] = 164967,
["encounterID"] = 2384,
},
[222932] = {
["source"] = "Guardian Gorroc",
["event"] = "SPELL_CAST_START",
["npcID"] = 111856,
},
[128368] = {
["source"] = "Kor'thik Battlesinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 62758,
},
[429545] = {
["source"] = "Turned Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 214350,
},
[258768] = {
["source"] = "Forgotten Gryphon",
["event"] = "SPELL_CAST_START",
["npcID"] = 193154,
},
[322968] = {
["npcID"] = 165111,
},
[239439] = {
["source"] = "Eonic Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 120153,
},
[452171] = {
["source"] = "Swarm-Maven Donmiss",
["event"] = "SPELL_CAST_START",
["npcID"] = 216578,
},
[427404] = {
["source"] = "Voidrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 212786,
},
[462216] = {
["source"] = "Twilight Flamerender",
["event"] = "SPELL_CAST_START",
["npcID"] = 224240,
},
[127412] = {
["source"] = "Unga Scallywag",
["event"] = "SPELL_CAST_START",
["npcID"] = 62590,
},
[408975] = {
["source"] = "Sundered Edgelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 198873,
},
[394641] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostfist",
["npcID"] = 192030,
},
[396689] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver A'tir",
["npcID"] = 186859,
},
[439692] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Nx",
["npcID"] = 216648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[392594] = {
["source"] = "Meatgrinder Sotok",
["event"] = "SPELL_CAST_START",
["npcID"] = 186777,
},
[110963] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Purifier",
["npcID"] = 58569,
},
[396690] = {
["source"] = "Dismay Fly",
["event"] = "SPELL_CAST_START",
["npcID"] = 193367,
},
[430179] = {
["source"] = "Corrupted Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 214439,
},
[454675] = {
["source"] = "Angry Rocks",
["event"] = "SPELL_CAST_START",
["npcID"] = 220543,
},
[401109] = {
["source"] = "Crimson Oldblood",
["event"] = "SPELL_CAST_START",
["npcID"] = 201054,
},
[446325] = {
["source"] = "Infected Peafowl",
["event"] = "SPELL_CAST_START",
["npcID"] = 212710,
},
[130417] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Infantryman",
["npcID"] = 66285,
},
[163550] = {
["encounterName"] = "Nitrogg Thundertower",
["encounterID"] = 1732,
["npcID"] = 79545,
},
[225079] = {
["isChanneled"] = true,
["source"] = "Defiled Keeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 113089,
},
[446261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emboldened Fog Wither",
["npcID"] = 219909,
},
[462936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Medbot",
["npcID"] = 229769,
},
[157534] = {
["source"] = "Hatecoil Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 88087,
},
[370072] = {
["npcID"] = 186854,
},
[180178] = {
["source"] = "Salivating Bloodthirster",
["event"] = "SPELL_CAST_START",
["npcID"] = 92038,
},
[341404] = {
["npcID"] = 174017,
},
[450546] = {
["source"] = "Nerubian Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 216584,
},
[448248] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodstained Webmage",
["npcID"] = 223253,
},
[456653] = {
["source"] = "Rabaan",
["event"] = "SPELL_CAST_START",
["npcID"] = 228343,
},
[433841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Overseer",
["npcID"] = 216364,
},
[181089] = {
["encounterName"] = "Tectus, The Living Mountain",
["source"] = "Tectus",
["npcID"] = 78948,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1722,
},
[394647] = {
["source"] = "Bloodhorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 192003,
},
[460609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Livid Enforcer",
["npcID"] = 227354,
},
[341406] = {
["npcID"] = 174012,
},
[114548] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["encounterID"] = 1414,
["event"] = "SPELL_CAST_START",
["npcID"] = 59479,
},
[419221] = {
["source"] = "Cho'gall",
["event"] = "SPELL_CAST_START",
["npcID"] = 208212,
},
[228373] = {
["source"] = "Kvaldir Reefcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 114539,
},
[458638] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Flamecoil Serpent",
["npcID"] = 225895,
},
[351646] = {
["encounterName"] = "So'leah",
["encounterID"] = 2442,
["npcID"] = 177269,
},
[452314] = {
["source"] = "Kol Bruncrag",
["event"] = "SPELL_CAST_START",
["npcID"] = 213658,
},
[386921] = {
["encounterName"] = "Granyth",
["source"] = "Dragonkiller Lance",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 194367,
},
[390554] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Inferna the Bound",
["npcID"] = 186735,
},
[449939] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["encounterID"] = 1049,
["event"] = "SPELL_CAST_START",
["npcID"] = 40484,
},
[419223] = {
["source"] = "Cho'gall",
["event"] = "SPELL_CAST_START",
["npcID"] = 208212,
},
[119668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unga Treasure-Hider",
["npcID"] = 60357,
},
[199389] = {
["encounterName"] = "Dresaron",
["encounterID"] = 1838,
["npcID"] = 99200,
},
[440007] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron-Runed Protector",
["npcID"] = 214576,
},
[209628] = {
["encounterName"] = "Advisor Melandrus",
["npcID"] = 104218,
["encounterID"] = 1870,
},
[153315] = {
["encounterName"] = "Ranjit",
["source"] = "Ranjit",
["encounterID"] = 1698,
["event"] = "SPELL_CAST_START",
["npcID"] = 75964,
},
[292264] = {
["encounterName"] = "King Mechagon",
["npcID"] = 144249,
["encounterID"] = 2260,
},
[449941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emperor Pitfang",
["npcID"] = 219265,
},
[456664] = {
["source"] = "Rabaan",
["event"] = "SPELL_CAST_START",
["npcID"] = 228343,
},
[222939] = {
["source"] = "Guardian Gorroc",
["event"] = "SPELL_CAST_START",
["npcID"] = 111856,
},
[400999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonesifter Marwak",
["npcID"] = 200681,
},
[449942] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emperor Pitfang",
["npcID"] = 219265,
},
[427417] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet of the Flame",
["npcID"] = 207315,
},
[428066] = {
["source"] = "Rank Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 211121,
},
[398749] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Bulwark",
["npcID"] = 200850,
},
[229083] = {
["encounterName"] = "Viz'aduum the Watcher",
["encounterID"] = 2017,
["npcID"] = 114790,
},
[415356] = {
["source"] = "Gnarled Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 207740,
},
[372129] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[452272] = {
["source"] = "Kol Bruncrag",
["event"] = "SPELL_CAST_START",
["npcID"] = 213658,
},
[384416] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[460595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irritated Salvager",
["npcID"] = 220471,
},
[434089] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[423324] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[362572] = {
["npcID"] = 182728,
},
[115062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravageur hozen",
["npcID"] = 57119,
},
[421277] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["encounterID"] = 2787,
["event"] = "SPELL_CAST_START",
["npcID"] = 208745,
},
[456438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursed Miner",
["npcID"] = 213565,
},
[452651] = {
["source"] = "Oath-Eater",
["event"] = "SPELL_CAST_START",
["npcID"] = 206844,
},
[258777] = {
["source"] = "Irontide Oarsman",
["event"] = "SPELL_CAST_START",
["npcID"] = 127111,
},
[161509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mandragora Lifedrinker",
["npcID"] = 80699,
},
[448047] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pale Priest",
["npcID"] = 223646,
},
[368037] = {
["npcID"] = 185677,
},
[425536] = {
["source"] = "Lowly Moleherd",
["event"] = "SPELL_CAST_START",
["npcID"] = 210818,
},
[434122] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ascended Neophyte",
["npcID"] = 216326,
},
[456762] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[400802] = {
["source"] = "Kalecgos",
["event"] = "SPELL_CAST_START",
["npcID"] = 187676,
},
[451996] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["encounterID"] = 1050,
["event"] = "SPELL_CAST_START",
["npcID"] = 40177,
},
[193585] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Rockbound Trapper",
["npcID"] = 102232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[333227] = {
["npcID"] = 169905,
},
[440377] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[394660] = {
["source"] = "Bluescale",
["event"] = "SPELL_CAST_START",
["npcID"] = 188723,
},
[325701] = {
["npcID"] = 165529,
},
[430037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Spearfisher",
["npcID"] = 214338,
},
[310703] = {
["npcID"] = 159459,
},
[353706] = {
["encounterName"] = "Myza's Oasis",
["encounterID"] = 2440,
["npcID"] = 176562,
},
[396709] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gutchewer Bear",
["npcID"] = 197134,
},
[172816] = {
["event"] = "SPELL_CAST_START",
["source"] = "Henry Garrick",
["npcID"] = 155197,
},
[272457] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["encounterID"] = 2112,
["event"] = "SPELL_CAST_START",
["npcID"] = 131383,
},
[110968] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Purifier",
["npcID"] = 58569,
},
[282036] = {
["encounterName"] = "Jadefire Masters",
["encounterID"] = 2285,
["npcID"] = 144692,
},
[448441] = {
["source"] = "Gorloc Springcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 218650,
},
[257756] = {
["source"] = "Bilge Rat Buccaneer",
["event"] = "SPELL_CAST_START",
["npcID"] = 129527,
},
[442250] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Blood Parasite",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 220626,
},
[200700] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[333231] = {
["encounterName"] = "An Affront of Challengers",
["encounterID"] = 2391,
["npcID"] = 164461,
},
[294324] = {
["npcID"] = 144293,
},
[378282] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Thaumaturge",
["npcID"] = 192788,
},
[123767] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha-Infested Yaungol",
["npcID"] = 68241,
},
[456748] = {
["source"] = "Dark Proselityzer",
["event"] = "SPELL_CAST_START",
["npcID"] = 224898,
},
[425381] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Firelands Flameguard",
["npcID"] = 210290,
},
[456140] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimslice",
["npcID"] = 221551,
},
[80382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Explorer's League Digger",
["npcID"] = 38998,
},
[427710] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sporbit",
["npcID"] = 213434,
},
[440107] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["npcID"] = 216649,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[139309] = {
["source"] = "Muckbat",
["event"] = "SPELL_CAST_START",
["npcID"] = 70232,
},
[445860] = {
["encounterName"] = "Mirror Master Murkna",
["source"] = "Mirror Master Murkna",
["npcID"] = 219763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2999,
},
[284399] = {
["encounterName"] = "Jadefire Masters",
["encounterID"] = 2285,
["npcID"] = 146105,
},
[294327] = {
["source"] = "Enforcer Malzon",
["event"] = "SPELL_CAST_START",
["npcID"] = 147777,
},
[113017] = {
["encounterName"] = "Lorewalker Stonestep",
["source"] = "Zao Sunseeker",
["npcID"] = 58826,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1417,
},
[433662] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Black Blood",
["npcID"] = 216856,
},
[447909] = {
["event"] = "SPELL_CAST_START",
["source"] = "Master Machinist Dunstan",
["npcID"] = 217353,
},
[368047] = {
["npcID"] = 178508,
},
[115065] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophète de la boue queutapulte",
["npcID"] = 55193,
},
[436180] = {
["source"] = "Rampant Air Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 215048,
},
[456101] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reconstructed Skardyn",
["npcID"] = 219245,
},
[454438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Commander",
["npcID"] = 128969,
},
[345523] = {
["npcID"] = 156203,
},
[396717] = {
["source"] = "Cyclas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199029,
},
[316855] = {
["npcID"] = 165267,
},
[438012] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[419798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Moon",
["npcID"] = 210686,
},
[322999] = {
["encounterName"] = "Devos, Paragon of Loyalty",
["encounterID"] = 2359,
["npcID"] = 162061,
},
[120213] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Big Gladiator Chief",
["npcID"] = 60170,
},
[449960] = {
["source"] = "Deepwater Kobyss",
["event"] = "SPELL_CAST_START",
["npcID"] = 215750,
},
[88445] = {
["source"] = "Dark Iron Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 8338,
},
[431702] = {
["source"] = "Colormancer Nirethi",
["event"] = "SPELL_CAST_START",
["npcID"] = 222150,
},
[366629] = {
["npcID"] = 185155,
},
[425388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamewaker Infernoguard",
["npcID"] = 210295,
},
[452009] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthenwork Ironstrider",
["npcID"] = 213951,
},
[388529] = {
["source"] = "Seabreaker Skrog",
["event"] = "SPELL_CAST_START",
["npcID"] = 192931,
},
[462686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reno Jackson",
["npcID"] = 228044,
},
[124793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Wu Kao",
["npcID"] = 63846,
},
[195473] = {
["source"] = "Gritslime Snail",
["event"] = "SPELL_CAST_START",
["npcID"] = 91786,
},
[440205] = {
["source"] = "Anguishing Nightmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 214415,
},
[316859] = {
["npcID"] = 174843,
},
[441772] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[456351] = {
["source"] = "Boneseer Hookjaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 213805,
},
[450330] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["npcID"] = 214263,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2894,
},
[398770] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vemormu",
["npcID"] = 200701,
},
[409009] = {
["source"] = "Summitshaper Lorac",
["event"] = "SPELL_CAST_START",
["npcID"] = 201522,
},
[452094] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obstorn",
["npcID"] = 217082,
},
[413105] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["npcID"] = 198995,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2666,
},
[406962] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Axe Thrower",
["npcID"] = 203799,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[425392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamewaker Infernoguard",
["npcID"] = 210295,
},
[452013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Wolf",
["npcID"] = 222797,
},
[372151] = {
["source"] = "Gutchewer Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 186284,
},
[366336] = {
["npcID"] = 183927,
},
[325413] = {
["source"] = "Spinemaw Acidgullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 167113,
},
[361913] = {
["encounterName"] = "Lords of Dread",
["npcID"] = 181398,
["encounterID"] = 2543,
},
[404916] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[458767] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ravageant",
["npcID"] = 207826,
},
[425394] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["encounterID"] = 2826,
["event"] = "SPELL_CAST_START",
["npcID"] = 208743,
},
[452099] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Animated Shadow",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 224616,
},
[198379] = {
["encounterName"] = "Archdruid Glaidalis",
["encounterID"] = 1836,
["npcID"] = 96512,
},
[390583] = {
["source"] = "Norbett",
["event"] = "SPELL_CAST_START",
["npcID"] = 190968,
},
[80344] = {
["npcID"] = 43014,
},
[274002] = {
["encounterName"] = "Chopper Redhook",
["source"] = "Chopper Redhook",
["npcID"] = 128650,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2098,
},
[88959] = {
["npcID"] = 45935,
},
[447921] = {
["source"] = "Cascade Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 214594,
},
[458160] = {
["source"] = "Skulldunk",
["event"] = "SPELL_CAST_START",
["npcID"] = 221310,
},
[394680] = {
["source"] = "Reclaimer Makko",
["event"] = "SPELL_CAST_START",
["npcID"] = 191536,
},
[404919] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shukoro Rapidstamer",
["npcID"] = 198917,
},
[124283] = {
["encounterName"] = "General Pa'valak",
["source"] = "General Pa'valak",
["npcID"] = 61485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1447,
},
[425397] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["npcID"] = 208459,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2731,
},
[337344] = {
["npcID"] = 159459,
},
[117628] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Zian of the Endless Shadow",
["npcID"] = 60701,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[185156] = {
["encounterName"] = "Hellfire Assault",
["source"] = "Gorebound Siegerider",
["encounterID"] = 1778,
["event"] = "SPELL_CAST_START",
["npcID"] = 92916,
},
[409016] = {
["source"] = "Summitshaper Lorac",
["event"] = "SPELL_CAST_START",
["npcID"] = 201522,
},
[446255] = {
["source"] = "Congealing Mass",
["event"] = "SPELL_CAST_START",
["npcID"] = 222459,
},
[154623] = {
["source"] = "Sargerei Spirit-Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 77131,
},
[275913] = {
["npcID"] = 140853,
},
[104318] = {
["npcID"] = 55659,
},
[329168] = {
["encounterName"] = "Lord Chamberlain",
["encounterID"] = 2381,
["npcID"] = 165737,
},
[363967] = {
["npcID"] = 184109,
},
[275914] = {
["npcID"] = 140853,
},
[409018] = {
["source"] = "Failed Prototype",
["event"] = "SPELL_CAST_START",
["npcID"] = 203927,
},
[205549] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["npcID"] = 91005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1792,
},
[439789] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[398780] = {
["source"] = "Farscale Myrmidon",
["event"] = "SPELL_CAST_START",
["npcID"] = 200485,
},
[417210] = {
["source"] = "Great Glorious Alliance Lieutenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 207581,
},
[320966] = {
["encounterName"] = "Kin-Tara",
["encounterID"] = 2357,
["npcID"] = 162059,
},
[169714] = {
["source"] = "Gnarlroot",
["event"] = "SPELL_CAST_START",
["npcID"] = 81984,
},
[170738] = {
["source"] = "Undermage Kesalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 85496,
},
[440184] = {
["source"] = "Chitin Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 219725,
},
[337349] = {
["npcID"] = 159459,
},
[442210] = {
["encounterName"] = "Anub'zekt",
["source"] = "Bloodstained Webmage",
["npcID"] = 220599,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[398782] = {
["source"] = "Farscale Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 200484,
},
[376257] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Tarasek Earthreaver",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191225,
},
[452024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthenwork Ironstrider",
["npcID"] = 213951,
},
[129916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siftworm",
["npcID"] = 65711,
},
[438153] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nether Phantom",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 218429,
},
[392640] = {
["source"] = "Thunderhead",
["event"] = "SPELL_CAST_START",
["npcID"] = 197698,
},
[49348] = {
["source"] = "Fordragon High Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 27677,
},
[445882] = {
["source"] = "Night-Twisted Hog",
["event"] = "SPELL_CAST_START",
["npcID"] = 215206,
},
[257882] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "Hadal Darkfathom",
["npcID"] = 128651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2099,
},
[116606] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stone Quilen",
["npcID"] = 60375,
},
[144119] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Amber",
["npcID"] = 71407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[259817] = {
["npcID"] = 159022,
},
[431549] = {
["source"] = "Venombane Spitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 216192,
},
[335305] = {
["npcID"] = 171799,
},
[456649] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathbound Husk",
["npcID"] = 220272,
},
[396738] = {
["source"] = "The Blue Gulper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195976,
},
[128381] = {
["source"] = "Kor'thik Resonator",
["event"] = "SPELL_CAST_START",
["npcID"] = 62755,
},
[325360] = {
["encounterName"] = "Grand Proctor Beryllia",
["encounterID"] = 2362,
["npcID"] = 162102,
},
[329163] = {
["npcID"] = 168837,
},
[129917] = {
["event"] = "SPELL_CAST_START",
["source"] = "Student of Chi-Ji",
["npcID"] = 60601,
},
[406978] = {
["source"] = "Contamination Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 202319,
},
[261866] = {
["npcID"] = 144213,
},
[312782] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[444363] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "The Bloodbound Horror",
["encounterID"] = 2917,
["event"] = "SPELL_CAST_START",
["npcID"] = 214502,
},
[374215] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[335308] = {
["npcID"] = 171799,
},
[288210] = {
["npcID"] = 163032,
},
[413123] = {
["source"] = "Forgemaster Kraglin",
["event"] = "SPELL_CAST_START",
["npcID"] = 201625,
},
[374720] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["encounterID"] = 2582,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186644,
},
[286163] = {
["encounterName"] = "Jadefire Masters",
["encounterID"] = 2285,
["npcID"] = 144692,
},
[341796] = {
["npcID"] = 165066,
},
[458452] = {
["source"] = "Reekscale",
["event"] = "SPELL_CAST_START",
["npcID"] = 221076,
},
[448147] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Chamber Guardian",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 223204,
},
[39670] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Defiler",
["npcID"] = 22853,
},
[130495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Sharp-Shooter",
["npcID"] = 66288,
},
[446079] = {
["encounterName"] = "Leviathan Caller",
["source"] = "Leviathan Caller",
["encounterID"] = 3002,
["event"] = "SPELL_CAST_START",
["npcID"] = 220738,
},
[458369] = {
["source"] = "Kas'dru",
["event"] = "SPELL_CAST_START",
["npcID"] = 227635,
},
[294356] = {
["source"] = "Prelate Kaj'ra",
["event"] = "SPELL_CAST_START",
["npcID"] = 147452,
},
[402887] = {
["source"] = "Gholna",
["event"] = "SPELL_CAST_START",
["npcID"] = 199853,
},
[339407] = {
["npcID"] = 173280,
},
[382410] = {
["source"] = "Trickclaw Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 185528,
},
[159481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Gunnery Sergeant",
["npcID"] = 81318,
},
[125311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scritch",
["npcID"] = 50831,
},
[437700] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["npcID"] = 216658,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2909,
},
[40904] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[327122] = {
["encounterName"] = "Sire Denathrius",
["encounterID"] = 2407,
["npcID"] = 168158,
},
[452035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Wolf",
["npcID"] = 222797,
},
[214771] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Faceless Voidcaster",
["npcID"] = 99651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[41169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Heartseeker",
["npcID"] = 23339,
},
[400842] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Blazestalker",
["npcID"] = 199828,
},
[329171] = {
["encounterName"] = "Lord Chamberlain",
["encounterID"] = 2381,
["npcID"] = 165737,
},
[129919] = {
["event"] = "SPELL_CAST_START",
["source"] = "Student of Chi-Ji",
["npcID"] = 60601,
},
[127422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jade Colossus",
["npcID"] = 65169,
},
[458610] = {
["source"] = "Toadstomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 207803,
},
},
["InterruptableSpells"] = {
[420320] = true,
[1766] = true,
[377008] = true,
[93985] = true,
[384365] = true,
[322767] = true,
[351338] = true,
[37470] = true,
[381516] = true,
[347008] = true,
[326046] = true,
[420090] = true,
[220543] = true,
[328406] = true,
[322938] = true,
[454440] = true,
[324914] = true,
[398388] = true,
[96231] = true,
[183752] = true,
[321828] = true,
[32747] = true,
[323057] = true,
[147362] = true,
[256957] = true,
[19647] = true,
[6552] = true,
[461904] = true,
[429812] = true,
[404754] = true,
[11972] = true,
[324776] = true,
[97547] = true,
[272581] = true,
[187707] = true,
[275826] = true,
[427609] = true,
[257063] = true,
[257732] = true,
[436679] = true,
[340544] = true,
[426240] = true,
[686] = true,
[31935] = true,
[420330] = true,
[57994] = true,
[116705] = true,
[2139] = true,
[47528] = true,
},
["performance_units"] = {
[176920] = true,
[214441] = true,
[211306] = true,
[196642] = true,
[167999] = true,
[189707] = true,
},
["profiles"] = {
["ClaudioWithin"] = {
["target_highlight"] = false,
["extra_icon_use_blizzard_border_color"] = false,
["aura_sort"] = true,
["saved_cvars_last_change"] = {
["ShowClassColorInNameplate"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateOverlapV"] = "Interface/AddOns/Plater/Plater.lua:1581",
["ShowNamePlateLoseAggroFlash"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowEnemyMinus"] = "Interface/AddOns/Plater/Plater.lua:1581",
["NamePlateClassificationScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowFriendlyTotems"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplatePersonalHideDelaySeconds"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowFriendlyPets"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplatePersonalShowInCombat"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplatePersonalShowWithTarget"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateResourceOnTarget"] = "Interface/AddOns/Plater/Plater.lua:1581",
["clampTargetNameplateToScreen"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowAll"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowFriendlyMinions"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelfScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateTargetBehindMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:1581",
["SoftTargetInteract"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:210",
["nameplateShowEnemies"] = "Interface/AddOns/Blizzard_SharedXMLBase/CvarUtil.lua:72",
["NamePlateVerticalScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowSelf"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelfTopInset"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateMotionSpeed"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateGlobalScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowEnemyMinions"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowEnemyPets"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowFriendlyNPCs"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelectedScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:5288",
["nameplateShowOnlyNames"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateLargeTopInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:5219",
["nameplateShowFriends"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateMotion"] = "Interface/AddOns/Plater/Plater.lua:8676",
["nameplateTargetRadialPosition"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateMinScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowEnemyGuardians"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateOtherTopInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:5218",
["NamePlateHorizontalScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelfBottomInset"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowEnemyTotems"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowFriendlyGuardians"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelfAlpha"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateOccludedAlphaMult"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplatePersonalShowAlways"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateOverlapH"] = "Interface/AddOns/Plater/Plater.lua:1581",
["SoftTargetIconGameObject"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:210",
},
["aura_cache_by_name"] = {
["fiery brand"] = {
204021,
204022,
207744,
207771,
209245,
209247,
320962,
343010,
},
},
["url"] = "https://wago.io/6D--AVMf2/3",
["hover_highlight"] = false,
["indicator_raidmark_scale"] = 0.8899999856948853,
["aura2_y_offset"] = 1.009994506835938,
["aura_timer_text_anchor"] = {
["y"] = -0.3000011444091797,
},
["health_selection_overlay"] = "Bars",
["expansion_triggerwipe"] = {
[8] = true,
[10] = true,
[9] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.70588237047195,
0.73333334922791,
0.69411766529083,
1,
},
["npc_cache"] = {
[164815] = {
"Zolramus Siphoner",
"The Necrotic Wake",
"enUS",
},
[40788] = {
"Mindbender Ghur'sha",
"Throne of the Tides",
"enUS",
},
[200126] = {
"Fallen Waterspeaker",
"Scarlet Monastery",
"enUS",
},
[194241] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
"enUS",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
"enUS",
},
[99200] = {
"Dresaron",
"Darkheart Thicket",
"enUS",
},
[22897] = {
"Summoned Windfury Totem",
"Black Temple",
"enUS",
},
[22929] = {
"Greater Shadowfiend",
"Black Temple",
"enUS",
},
[190405] = {
"Infuser Sariya",
"Halls of Infusion",
"enUS",
},
[227507] = {
"Sureki Skirmisher",
"Nerub-ar Palace",
"enUS",
},
[213434] = {
"Sporbit",
"Fungal Folly",
"enUS",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[210108] = {
"E.D.N.A",
"The Stonevault",
"enUS",
},
[220599] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[213179] = {
"Avanoxx",
"Ara-Kara, City of Echoes",
"enUS",
},
[210109] = {
"Earth Infused Golem",
"The Stonevault",
"enUS",
},
[212412] = {
"Sootsnout",
"Darkflame Cleft",
"enUS",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
"enUS",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[200131] = {
"Sha-Touched Guardian",
"Temple of the Jade Serpent",
"enUS",
},
[200387] = {
"Shambling Infester",
"Scarlet Monastery",
"enUS",
},
[219066] = {
"Afflicted Civilian",
"The Rookery",
"enUS",
},
[217531] = {
"Ixin",
"Ara-Kara, City of Echoes",
"enUS",
},
[98691] = {
"Risen Scout",
"Black Rook Hold",
"enUS",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
},
[217533] = {
"Atik",
"Ara-Kara, City of Echoes",
"enUS",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
"enUS",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[430335] = {
"Webbed Ore Deposit",
"Earthcrawl Mines",
"enUS",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
"enUS",
},
[180433] = {
"Wandering Pulsar",
"Tazavesh, the Veiled Market",
},
[131817] = {
"Cragmaw the Infested",
"The Underrot",
},
[102019] = {
"Stormforged Obliterator",
"Halls of Valor",
},
[131818] = {
"Marked Sister",
"Waycrest Manor",
},
[213954] = {
"Rock Smasher",
"The Stonevault",
"enUS",
},
[228539] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
"enUS",
},
[211140] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[451834] = {
"Collision",
"Nerub-ar Palace",
"enUS",
},
[228540] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
"enUS",
},
[184018] = {
"Bromach",
"Uldaman: Legacy of Tyr",
"enUS",
},
[178133] = {
"Murkbrine Wavejumper",
"Tazavesh, the Veiled Market",
},
[422154] = {
"Brann's Cozy Campfire",
"Kriegval's Rest",
"enUS",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
"enUS",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
"enUS",
},
[218306] = {
"Scarab Captain Vul'akan",
"Nerub-ar Palace",
"enUS",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
"enUS",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
},
[228030] = {
"Sir Finley Mrrgglton",
"The Waterworks",
"enUS",
},
[222145] = {
"Voracious Stagshell",
"Nerub-ar Palace",
"enUS",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[39960] = {
"Deep Murloc Drudge",
"Throne of the Tides",
"enUS",
},
[100486] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[227775] = {
"Captured Waxtail",
"Nerub-ar Palace",
"enUS",
},
[178392] = {
"Gatewarden Zo'mazz",
"Tazavesh, the Veiled Market",
},
[217541] = {
"Nightfall Initiate",
"Nightfall Sanctum",
"enUS",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[98696] = {
"Illysanna Ravencrest",
"Black Rook Hold",
"enUS",
},
[146409] = {
"Lady Jaina Proudmoore",
"Battle of Dazar'alor",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[131825] = {
"Sister Briar",
"Waycrest Manor",
"enUS",
},
[222149] = {
"Injured Earthen",
"The Stonevault",
"enUS",
},
[22963] = {
"Bonechewer Worker",
"Black Temple",
"enUS",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
"enUS",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
},
[220616] = {
"Corridor Sleeper",
"Darkflame Cleft",
"enUS",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[221896] = {
"Web General Ab'enar",
"Earthcrawl Mines",
"enUS",
},
[23795] = {
"Dark Iron Antagonist",
"Blackrock Depths",
"enUS",
},
[178142] = {
"Murkbrine Fishmancer",
"Tazavesh, the Veiled Market",
},
[225479] = {
"Sureki Webmage",
"The Dawnbreaker",
"enUS",
},
[218315] = {
"Kaheti Sentry",
"Nerub-ar Palace",
"enUS",
},
[131318] = {
"Elder Leaxa",
"The Underrot",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[150253] = {
"Weaponized Crawler",
"Operation: Mechagon",
},
[82579] = {
"Grom'kar Far Seer",
"Grimrail Depot",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
"enUS",
},
[150254] = {
"Scraphound",
"Operation: Mechagon",
},
[197847] = {
"Gnawbone Splintershield",
"10.0 Dragon Isles",
},
[222923] = {
"Repurposed Loaderbot",
"The Stonevault",
"enUS",
},
[217039] = {
"Nerubian Hauler",
"Ara-Kara, City of Echoes",
"enUS",
},
[421157] = {
"Arathi Torch Cache",
"Earthcrawl Mines",
"enUS",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
},
[223181] = {
"Agile Pursuer",
"City of Threads",
"enUS",
},
[218320] = {
"Web Acolyte",
"Nerub-ar Palace",
"enUS",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
},
[223182] = {
"Web Marauder",
"City of Threads",
"enUS",
},
[227532] = {
"Faceless Devotee",
"Skittering Breach",
"enUS",
},
[168681] = {
"Forsworn Helion",
"Spires of Ascension",
},
[222927] = {
"Sacred Flame Vintner",
"Priory of the Sacred Flame",
"enUS",
},
[216275] = {
"Brann's Epic Egg",
"The Spiral Weave",
"enUS",
},
[39388] = {
"Mutated Hatchling",
"Grim Batol",
"enUS",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[220626] = {
"Blood Parasite",
"Nerub-ar Palace",
"enUS",
},
[186339] = {
"Teera",
"The Nokhud Offensive",
"enUS",
},
[218324] = {
"Nakt",
"Ara-Kara, City of Echoes",
"enUS",
},
[192481] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[114312] = {
"Moroes",
"Return to Karazhan",
},
[171500] = {
"Shuffling Corpse",
"The Necrotic Wake",
"enUS",
},
[179944] = {
"Meeting Stone Summoning Portal",
"Nerub-ar Palace",
"enUS",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
"enUS",
},
[127106] = {
"Irontide Officer",
"Freehold",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
"enUS",
},
[22869] = {
"Illidari Boneslicer",
"Black Temple",
"enUS",
},
[163058] = {
"Mistveil Defender",
"Mists of Tirna Scithe",
"enUS",
},
[22997] = {
"Flame of Azzinoth",
"Black Temple",
"enUS",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
"enUS",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
"enUS",
},
[222167] = {
"Brood Infuser",
"Nerub-ar Palace",
"enUS",
},
[40925] = {
"Tainted Sentry",
"Throne of the Tides",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[165108] = {
"Illusionary Clone",
"Mists of Tirna Scithe",
"enUS",
},
[39390] = {
"Twilight Drake",
"Grim Batol",
"enUS",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[45915] = {
"Armored Mistral",
"The Vortex Pinnacle",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
"enUS",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[76446] = {
"Shadowmoon Dominator",
"Shadowmoon Burial Grounds",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
"enUS",
},
[213216] = {
"Speaker Dorlita",
"The Stonevault",
"enUS",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
"enUS",
},
[224731] = {
"Web Marauder",
"City of Threads",
"enUS",
},
[213217] = {
"Speaker Brokk",
"The Stonevault",
"enUS",
},
[131849] = {
"Crazed Marksman",
"Waycrest Manor",
"enUS",
},
[95766] = {
"Crazed Razorbeak",
"Darkheart Thicket",
"enUS",
},
[114317] = {
"Lady Catriona Von'Indi",
"Return to Karazhan",
},
[224732] = {
"Covert Webmancer",
"City of Threads",
"enUS",
},
[23030] = {
"Dragonmaw Sky Stalker",
"Black Temple",
"enUS",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
"enUS",
},
[131850] = {
"Maddened Survivalist",
"Waycrest Manor",
"enUS",
},
[224221] = {
"Twilight Overseer",
"Grim Batol",
"enUS",
},
[98965] = {
"Kur'talos Ravencrest",
"Black Rook Hold",
"enUS",
},
[127879] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[23318] = {
"Ashtongue Rogue",
"Black Temple",
"enUS",
},
[83613] = {
"Koramar",
"Iron Docks",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
},
[199659] = {
"Warlord Kagni",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[82590] = {
"Grimrail Scout",
"Grimrail Depot",
},
[212453] = {
"Ghastly Voidsoul",
"The Stonevault",
"enUS",
},
[39392] = {
"Faceless Corruptor",
"Grim Batol",
"enUS",
},
[223200] = {
"Blood Collector",
"Nerub-ar Palace",
"enUS",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[150276] = {
"Heavy Scrapbot",
"Operation: Mechagon",
},
[114319] = {
"Lady Keira Berrybuck",
"Return to Karazhan",
},
[455485] = {
"|cff1EFF00Sturdy Chest",
"Skittering Breach",
"enUS",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[229854] = {
"Inquisitor Speaker",
"Nightfall Sanctum",
"enUS",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
},
[216293] = {
"Trilling Attendant",
"Ara-Kara, City of Echoes",
"enUS",
},
[214502] = {
"The Bloodbound Horror",
"Nerub-ar Palace",
"enUS",
},
[129928] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[455488] = {
"|cff1EFF00Sturdy Chest",
"The Underkeep",
"enUS",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
"enUS",
},
[210153] = {
"Ol' Waxbeard",
"Darkflame Cleft",
"enUS",
},
[214503] = {
"Sikran",
"Nerub-ar Palace",
"enUS",
},
[171772] = {
"Mistveil Defender",
"Mists of Tirna Scithe",
"enUS",
},
[162049] = {
"Vestige of Doubt",
"Sanguine Depths",
},
[168446] = {
"Skeletal Monstrosity",
"The Necrotic Wake",
},
[205804] = {
"Risen Dragon",
"Dawn of the Infinite",
"enUS",
},
[208363] = {
"Urctos",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[223204] = {
"Chamber Guardian",
"Nerub-ar Palace",
"enUS",
},
[221669] = {
"Blight Swarmer",
"Nerub-ar Palace",
"enUS",
},
[138254] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[128650] = {
"Chopper Redhook",
"Siege of Boralus",
"enUS",
},
[214761] = {
"Nightfall Ritualist",
"The Dawnbreaker",
"enUS",
},
[183033] = {
"Grim Reflection",
"Sepulcher of the First Ones",
},
[138255] = {
"Ashvane Spotter",
"Siege of Boralus",
"enUS",
},
[210156] = {
"Skarmorak",
"The Stonevault",
"enUS",
},
[208365] = {
"Aerwynn",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[214762] = {
"Nightfall Commander",
"The Dawnbreaker",
"enUS",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
"enUS",
},
[214251] = {
"Kobyss Witherer",
"The Sinkhole",
"enUS",
},
[433492] = {
"Stolen Relic",
"The Sinkhole",
"enUS",
},
[223207] = {
"Black Blood",
"Nerub-ar Palace",
"enUS",
},
[59544] = {
"The Nodding Tiger",
"Temple of the Jade Serpent",
},
[129547] = {
"Blacktooth Knuckleduster",
"Freehold",
"enUS",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
"enUS",
},
[208367] = {
"Pip",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[138002] = {
"Scrimshaw Gutter",
"Siege of Boralus",
"enUS",
},
[95772] = {
"Frenzied Nightclaw",
"Darkheart Thicket",
"enUS",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
},
[129548] = {
"Blacktooth Brute",
"Freehold",
"enUS",
},
[206066] = {
"Timestream Leech",
"Dawn of the Infinite",
"enUS",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
"enUS",
},
[455504] = {
"|cff1EFF00Sturdy Chest",
"The Dread Pit",
"enUS",
},
[131863] = {
"Raal the Gluttonous",
"Waycrest Manor",
"enUS",
},
[104217] = {
"Talixae Flamewreath",
"Court of Stars",
},
[59545] = {
"The Golden Beetle",
"Temple of the Jade Serpent",
},
[131864] = {
"Gorak Tul",
"Waycrest Manor",
"enUS",
},
[206068] = {
"Temporal Fusion",
"Dawn of the Infinite",
"enUS",
},
[222700] = {
"Umbral Weave",
"City of Threads",
"enUS",
},
[455508] = {
"|cff1EFF00Sturdy Chest",
"The Underkeep",
"enUS",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
},
[206070] = {
"Chronaxie",
"Dawn of the Infinite",
"enUS",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
"enUS",
},
[455513] = {
"|cff1EFF00Sturdy Chest",
"The Sinkhole",
"enUS",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[220401] = {
"Pale Priest",
"City of Threads",
"enUS",
},
[80935] = {
"Grom'kar Boomer",
"Grimrail Depot",
},
[150292] = {
"Mechagon Cavalry",
"Operation: Mechagon",
},
[446305] = {
"Corrupted Flame",
"11.0 - Priory Scenario",
"enUS",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[464729] = {
"|cff0070ddBountiful Heavy Trunk",
"The Dread Pit",
"enUS",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
"enUS",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
"enUS",
},
[206074] = {
"Pendule",
"Dawn of the Infinite",
"enUS",
},
[186116] = {
"Gutshot",
"Brackenhide Hollow",
"enUS",
},
[80936] = {
"Grom'kar Grenadier",
"Grimrail Depot",
},
[194816] = {
"Forgewrought Monstrosity",
"Neltharus",
"enUS",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[220148] = {
"Gem Hoarder",
"The Dread Pit",
"enUS",
},
[214263] = {
"Waxface",
"The Waterworks",
"enUS",
},
[413046] = {
"Bismuth",
"The Underkeep",
"enUS",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
"enUS",
},
[214264] = {
"Cursedforge Honor Guard",
"The Stonevault",
"enUS",
},
[455523] = {
"|cff1EFF00Sturdy Chest",
"The Underkeep",
"enUS",
},
[80937] = {
"Grom'kar Gunner",
"Grimrail Depot",
},
[176395] = {
"Overloaded Mailemental",
"Tazavesh, the Veiled Market",
},
[22873] = {
"Coilskar General",
"Black Temple",
"enUS",
},
[218103] = {
"Nerubian Lord",
"Skittering Breach",
"enUS",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
"enUS",
},
[455525] = {
"|cff1EFF00Sturdy Chest",
"The Sinkhole",
"enUS",
},
[298930] = {
"Bench",
"Siege of Boralus",
"enUS",
},
[176396] = {
"Defective Sorter",
"Tazavesh, the Veiled Market",
},
[150297] = {
"Mechagon Renormalizer",
"Operation: Mechagon",
},
[413563] = {
"|cff1EFF00Heavy Trunk",
"The Waterworks",
"enUS",
},
[165138] = {
"Blight Bag",
"The Necrotic Wake",
"enUS",
},
[40357] = {
"Invoked Shadowflame Spirit",
"Grim Batol",
"enUS",
},
[186120] = {
"Treemouth",
"Brackenhide Hollow",
"enUS",
},
[95779] = {
"Festerhide Grizzly",
"Darkheart Thicket",
"enUS",
},
[222455] = {
"Black Blood Harvester",
"Nerub-ar Palace",
"enUS",
},
[186121] = {
"Decatriarch Wratheye",
"Brackenhide Hollow",
"enUS",
},
[298935] = {
"Bench",
"Siege of Boralus",
"enUS",
},
[186122] = {
"Rira Hackclaw",
"Brackenhide Hollow",
"enUS",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[221945] = {
"Forgotten Harbinger",
"Nerub-ar Palace",
"enUS",
},
[136483] = {
"Ashvane Deckhand",
"Siege of Boralus",
"enUS",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
"enUS",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[40166] = {
"Molten Giant",
"Grim Batol",
"enUS",
},
[224249] = {
"Twilight Lavabender",
"Grim Batol",
"enUS",
},
[186124] = {
"Gashtooth",
"Brackenhide Hollow",
"enUS",
},
[223994] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[222459] = {
"Congealing Mass",
"Nerub-ar Palace",
"enUS",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[165911] = {
"Loyal Creation",
"UNKNOWN",
"enUS",
},
[201222] = {
"Valow, Timesworn Keeper",
"Dawn of the Infinite",
"enUS",
},
[223995] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[26776] = {
"Direbrew Minion",
"Blackrock Depths",
"enUS",
},
[230904] = {
"Shadeguard Speaker",
"Nightfall Sanctum",
"enUS",
},
[215040] = {
"Kobyss Bonechewer",
"The Sinkhole",
"enUS",
},
[201223] = {
"Infinite Twilight Magus",
"Dawn of the Infinite",
"enUS",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[220158] = {
"Under-Lord Vik'tis",
"The Dread Pit",
"enUS",
},
[216320] = {
"The Coaglamation",
"City of Threads",
"enUS",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
"enUS",
},
[137511] = {
"Bilge Rat Cutthroat",
"Siege of Boralus",
"enUS",
},
[40167] = {
"Twilight Beguiler",
"Grim Batol",
"enUS",
},
[9554] = {
"Hammered Patron",
"Blackrock Depths",
"enUS",
},
[195851] = {
"Ukhel Deathspeaker",
"The Nokhud Offensive",
"enUS",
},
[222974] = {
"Hungry Scarab",
"City of Threads",
"enUS",
},
[193293] = {
"Qalashi Warden",
"Neltharus",
"enUS",
},
[40935] = {
"Gilgoblin Hunter",
"Throne of the Tides",
"enUS",
},
[172312] = {
"Spinemaw Gorger",
"Mists of Tirna Scithe",
"enUS",
},
[138281] = {
"Faceless Corruptor",
"The Underrot",
},
[218370] = {
"Queen Ansurek",
"Nerub-ar Palace",
"enUS",
},
[179733] = {
"Invigorating Fish Stick",
"Tazavesh, the Veiled Market",
},
[125977] = {
"Reanimation Totem",
"Atal'Dazar",
"enUS",
},
[187154] = {
"Unstable Curator",
"The Azure Vault",
"enUS",
},
[464761] = {
"|cff0070ddBountiful Heavy Trunk",
"The Spiral Weave",
"enUS",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
"enUS",
},
[168988] = {
"Overgrowth",
"Mists of Tirna Scithe",
"enUS",
},
[80816] = {
"Ahri'ok Dugru",
"Iron Docks",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[186644] = {
"Leymor",
"The Azure Vault",
"enUS",
},
[216326] = {
"Ascended Neophyte",
"City of Threads",
"enUS",
},
[40936] = {
"Faceless Watcher",
"Throne of the Tides",
"enUS",
},
[413590] = {
"|cffA335EEBountiful Coffer",
"The Spiral Weave",
"enUS",
},
[192786] = {
"Qalashi Plunderer",
"Neltharus",
"enUS",
},
[211977] = {
"Pack Mole",
"Darkflame Cleft",
"enUS",
},
[216583] = {
"Chittering Fearmonger",
"UNKNOWN",
"enUS",
},
[22875] = {
"Coilskar Sea-Caller",
"Black Temple",
"enUS",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[216584] = {
"Nerubian Captain",
"UNKNOWN",
"enUS",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
"enUS",
},
[213770] = {
"Ink of Ozumat",
"Throne of the Tides",
"enUS",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[220423] = {
"Retired Lord Vul'azak",
"City of Threads",
"enUS",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[163619] = {
"Zolramus Bonecarver",
"The Necrotic Wake",
"enUS",
},
[192789] = {
"Nokhud Longbow",
"The Nokhud Offensive",
"enUS",
},
[187160] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[246779] = {
"Font of Power",
"City of Threads",
"enUS",
},
[114338] = {
"Mana Confluence",
"Return to Karazhan",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
"enUS",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
"enUS",
},
[137521] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[206352] = {
"Alliance Archer",
"Dawn of the Infinite",
"enUS",
},
[163621] = {
"Goregrind",
"The Necrotic Wake",
"enUS",
},
[155434] = {
"Emissary of the Tides",
"Freehold",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
},
[197398] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[216333] = {
"Bloodstained Assistant",
"Ara-Kara, City of Echoes",
"enUS",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[163623] = {
"Rotspew Leftovers",
"The Necrotic Wake",
"enUS",
},
[433563] = {
"Key Scroll",
"The Underkeep",
"enUS",
},
[189467] = {
"Qalashi Bonesplitter",
"Neltharus",
"enUS",
},
[214287] = {
"Earth Burst Totem",
"The Stonevault",
"enUS",
},
[83763] = {
"Grom'kar Technician",
"Iron Docks",
},
[213008] = {
"Wriggling Darkspawn",
"Darkflame Cleft",
"enUS",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[217870] = {
"Devouring Shade",
"Nightfall Sanctum",
"enUS",
},
[228361] = {
"Agile Pursuer",
"City of Threads",
"enUS",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[22844] = {
"Ashtongue Battlelord",
"Black Temple",
"enUS",
},
[22876] = {
"Coilskar Soothsayer",
"Black Temple",
"enUS",
},
[216336] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
"enUS",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
"enUS",
},
[203799] = {
"Horde Axe Thrower",
"Dawn of the Infinite",
"enUS",
},
[216337] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[215826] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[189471] = {
"Qalashi Blacksmith",
"Neltharus",
"enUS",
},
[216338] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[83765] = {
"Grom'kar Footsoldier",
"Iron Docks",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
"enUS",
},
[224271] = {
"Twilight Warlock",
"Grim Batol",
"enUS",
},
[216339] = {
"Sureki Unnaturaler",
"City of Threads",
"enUS",
},
[214548] = {
"Slippery Syphoner",
"The Sinkhole",
"enUS",
},
[89011] = {
"Rylak Skyterror",
"Iron Docks",
},
[210966] = {
"Sureki Webmage",
"The Dawnbreaker",
"enUS",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205337] = {
"Infinite Timebender",
"Dawn of the Infinite",
"enUS",
},
[216340] = {
"Sentry Stagshell",
"Ara-Kara, City of Echoes",
"enUS",
},
[83894] = {
"Dulhu",
"The Everbloom",
"enUS",
},
[440229] = {
"Minecart",
"The Stonevault",
"enUS",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
"enUS",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
"enUS",
},
[216341] = {
"Jabbing Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[214550] = {
"Deepwater Snapper",
"The Sinkhole",
"enUS",
},
[452513] = {
"Diagnostic Console",
"The Stonevault",
"enUS",
},
[454049] = {
"|cff1EFF00Sturdy Chest",
"Earthcrawl Mines",
"enUS",
},
[177193] = {
"Doom Portal",
"Mists of Tirna Scithe",
"enUS",
},
[216342] = {
"Skittering Assistant",
"City of Threads",
"enUS",
},
[214551] = {
"Wandering Gutter",
"The Sinkhole",
"enUS",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
"enUS",
},
[59555] = {
"Haunting Sha",
"Scarlet Monastery",
"enUS",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
"enUS",
},
[22845] = {
"Ashtongue Mystic",
"Black Temple",
"enUS",
},
[22877] = {
"Coilskar Wrangler",
"Black Temple",
"enUS",
},
[224276] = {
"Twilight Enforcer",
"Grim Batol",
"enUS",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
},
[186151] = {
"Balakar Khan",
"The Nokhud Offensive",
"enUS",
},
[196642] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[189478] = {
"Forgemaster Gorek",
"Neltharus",
"enUS",
},
[97202] = {
"Olmyr the Enlightened",
"Halls of Valor",
},
[163891] = {
"Rotmarrow Slime",
"Plaguefall",
},
[211228] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[23421] = {
"Ashtongue Channeler",
"Black Temple",
"enUS",
},
[212764] = {
"Engine Speaker",
"The Stonevault",
"enUS",
},
[129699] = {
"Ludwig Von Tortollan",
"Freehold",
},
[103344] = {
"Oakheart",
"Darkheart Thicket",
"enUS",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
"enUS",
},
[414657] = {
"Prototype Stomping Shoes Chest",
"The Waterworks",
"enUS",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[162103] = {
"Executor Tarvold",
"Sanguine Depths",
},
[454063] = {
"Mycobloom",
"Fungal Folly",
"enUS",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
"enUS",
},
[165430] = {
"Malignant Spawn",
"Plaguefall",
},
[229399] = {
"Blood Drainer",
"Nerub-ar Palace",
"enUS",
},
[223770] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[221979] = {
"Void Bound Howler",
"The Stonevault",
"enUS",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
"enUS",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[164920] = {
"Drust Soulcleaver",
"Mists of Tirna Scithe",
"enUS",
},
[146753] = {
"Kul Tiran Marine",
"Battle of Dazar'alor",
},
[22846] = {
"Ashtongue Stormcaller",
"Black Temple",
"enUS",
},
[223772] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
"enUS",
},
[135240] = {
"Soul Essence",
"Kul Tiras",
"enUS",
},
[100532] = {
"Bloodtainted Burster",
"Darkheart Thicket",
"enUS",
},
[223773] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[454071] = {
"Mycobloom",
"The Sinkhole",
"enUS",
},
[165946] = {
"Mordretha, the Endless Empress",
"Theater of Pain",
},
[223774] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[83389] = {
"Ironwing Flamespitter",
"Iron Docks",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
"enUS",
},
[223775] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[189232] = {
"Kokia Blazehoof",
"Ruby Life Pools",
"enUS",
},
[220193] = {
"Sureki Venomblade",
"City of Threads",
"enUS",
},
[223776] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[223777] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[221986] = {
"Blood Horror",
"Nerub-ar Palace",
"enUS",
},
[220195] = {
"Sureki Silkbinder",
"City of Threads",
"enUS",
},
[220707] = {
"Staglette",
"11.0 - Priory Scenario",
"enUS",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
"enUS",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
"enUS",
},
[220196] = {
"Herald of Ansurek",
"City of Threads",
"enUS",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[135246] = {
"\"Stabby\" Lottie",
"Skittering Hollow (Islands 5)",
},
[456130] = {
"Refreshment Table",
"Nerub-ar Palace",
"enUS",
},
[220197] = {
"Royal Swarmguard",
"City of Threads",
"enUS",
},
[22847] = {
"Ashtongue Primalist",
"Black Temple",
"enUS",
},
[215592] = {
"Siegehold Fortifier",
"The Spiral Weave",
"enUS",
},
[95674] = {
"Fenryr",
"Halls of Valor",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
"enUS",
},
[104246] = {
"Duskwatch Guard",
"Court of Stars",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
"enUS",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
"enUS",
},
[40177] = {
"Forgemaster Throngus",
"Grim Batol",
"enUS",
},
[220199] = {
"Battle Scarab",
"City of Threads",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[131667] = {
"Soulbound Goliath",
"Waycrest Manor",
"enUS",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
},
[454090] = {
"|cff1EFF00Sturdy Chest",
"Earthcrawl Mines",
"enUS",
},
[454091] = {
"|cff1EFF00Sturdy Chest",
"Earthcrawl Mines",
"enUS",
},
[216363] = {
"Reinforced Drone",
"Ara-Kara, City of Echoes",
"enUS",
},
[210478] = {
"Infected Beast",
"Fungal Folly",
"enUS",
},
[454092] = {
"|cff1EFF00Sturdy Chest",
"Earthcrawl Mines",
"enUS",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
},
[210479] = {
"Carnivorous Lasher",
"Fungal Folly",
"enUS",
},
[454094] = {
"|cff1EFF00Sturdy Chest",
"Earthcrawl Mines",
"enUS",
},
[131670] = {
"Heartsbane Vinetwister",
"Waycrest Manor",
},
[213806] = {
"Splotch",
"Throne of the Tides",
"enUS",
},
[216365] = {
"Winged Carrier",
"Ara-Kara, City of Echoes",
"enUS",
},
[167493] = {
"Venomous Sniper",
"Plaguefall",
},
[205363] = {
"Time-Lost Waveshaper",
"Dawn of the Infinite",
"enUS",
},
[444374] = {
"Minecart",
"The Stonevault",
"enUS",
},
[100539] = {
"Taintheart Deadeye",
"Darkheart Thicket",
"enUS",
},
[22848] = {
"Storm Fury",
"Black Temple",
"enUS",
},
[445401] = {
"Kuldas' Toolbox",
"Awakening The Machine",
"enUS",
},
[220206] = {
"Crazed Skardyn",
"The Dread Pit",
"enUS",
},
[212786] = {
"Voidrider",
"The Rookery",
"enUS",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
},
[411628] = {
"Wax-Encrusted Chest",
"Darkflame Cleft",
"enUS",
},
[194108] = {
"Summoning Portal",
"The Waterworks",
"enUS",
},
[115765] = {
"Abstract Nullifier",
"Return to Karazhan",
},
[164427] = {
"Reanimated Warrior",
"The Necrotic Wake",
"enUS",
},
[423912] = {
"Bloodied Chest",
"Nightfall Sanctum",
"enUS",
},
[208438] = {
"Infinite Saboteur",
"Dawn of the Infinite",
"enUS",
},
[227373] = {
"Vicious Spiderling",
"The Waterworks",
"enUS",
},
[179269] = {
"Oasis Security",
"Tazavesh, the Veiled Market",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
"enUS",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[423915] = {
"Stolen Relic",
"Nightfall Sanctum",
"enUS",
},
[23872] = {
"Coren Direbrew",
"Blackrock Depths",
"enUS",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
"enUS",
},
[165197] = {
"Skeletal Monstrosity",
"The Necrotic Wake",
"enUS",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
"enUS",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[92610] = {
"Understone Drummer",
"Neltharion's Lair",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
},
[227632] = {
"Venombite",
"Earthcrawl Mines",
"enUS",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[303147] = {
"Summoning Portal",
"The Underkeep",
"enUS",
},
[208698] = {
"Infinite Riftmage",
"Dawn of the Infinite",
"enUS",
},
[98368] = {
"Ghostly Protector",
"Black Rook Hold",
"enUS",
},
[201790] = {
"Loszkeleth",
"Dawn of the Infinite",
"enUS",
},
[206140] = {
"Coalesced Time",
"Dawn of the Infinite",
"enUS",
},
[212793] = {
"Void Ascendant",
"The Rookery",
"enUS",
},
[135263] = {
"Ashvane Spotter",
"Siege of Boralus",
"enUS",
},
[22849] = {
"Ashtongue Feral Spirit",
"Black Temple",
"enUS",
},
[22881] = {
"Aqueous Surger",
"Black Temple",
"enUS",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
"enUS",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
"enUS",
},
[81737] = {
"Unchecked Growth",
"The Everbloom",
"enUS",
},
[223541] = {
"Stolen Loader",
"Fungal Folly",
"enUS",
},
[226100] = {
"Kaheti Skirmisher",
"Nerub-ar Palace",
"enUS",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
"enUS",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[216634] = {
"Swooping Spreader",
"Earthcrawl Mines",
"enUS",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[211261] = {
"Ascendant Vis'coxria",
"The Dawnbreaker",
"enUS",
},
[217658] = {
"Sir Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[163157] = {
"Amarth",
"The Necrotic Wake",
"enUS",
},
[97219] = {
"Solsten",
"Halls of Valor",
},
[211262] = {
"Ixkreten the Unbreakable",
"The Dawnbreaker",
"enUS",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
"enUS",
},
[199748] = {
"Timeline Marauder",
"Dawn of the Infinite",
"enUS",
},
[220730] = {
"Royal Venomshell",
"City of Threads",
"enUS",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[378899] = {
"Grand Banquet of the Kalu'ak",
"Mists of Tirna Scithe",
"enUS",
},
[211263] = {
"Deathscreamer Iken'tak",
"The Dawnbreaker",
"enUS",
},
[184908] = {
"Vy Interceptor",
"The Necrotic Wake",
},
[199749] = {
"Timestream Anomaly",
"Dawn of the Infinite",
"enUS",
},
[44404] = {
"Naz'jar Frost Witch",
"Throne of the Tides",
"enUS",
},
[133990] = {
"Scrimshaw Gutter",
"Siege of Boralus",
"enUS",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
"enUS",
},
[208450] = {
"Wandering Candle",
"Darkflame Cleft",
"enUS",
},
[455666] = {
"Research Papers",
"The Underkeep",
"enUS",
},
[211777] = {
"Spitfire Fusetender",
"Kriegval's Rest",
"enUS",
},
[207939] = {
"Baron Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[219198] = {
"Ravenous Scarab",
"City of Threads",
"enUS",
},
[164185] = {
"Echelon",
"Halls of Atonement",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
"enUS",
},
[207940] = {
"Prioress Murrpray",
"Priory of the Sacred Flame",
"enUS",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[336432] = {
"Lavish Refreshment Table",
"The Waterworks",
"enUS",
},
[185680] = {
"Vy Relic",
"The Necrotic Wake",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
"enUS",
},
[151649] = {
"Defense Bot Mk I",
"Operation: Mechagon",
},
[229691] = {
"Swarmbot",
"Awakening The Machine",
"enUS",
},
[173655] = {
"Mistveil Matriarch",
"Mists of Tirna Scithe",
"enUS",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
},
[221760] = {
"Risen Mage",
"Priory of the Sacred Flame",
"enUS",
},
[207943] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
"enUS",
},
[222273] = {
"Sureki Silkbow",
"Nerub-ar Palace",
"enUS",
},
[185683] = {
"Wo Relic",
"The Necrotic Wake",
},
[208456] = {
"Shuffling Horror",
"Darkflame Cleft",
"enUS",
},
[297035] = {
"Chair",
"Siege of Boralus",
"enUS",
},
[129208] = {
"Dread Captain Lockwood",
"Siege of Boralus",
"enUS",
},
[219715] = {
"Kobyss Ambusher",
"The Sinkhole",
"enUS",
},
[164702] = {
"Carrion Worm",
"The Necrotic Wake",
"enUS",
},
[297036] = {
"Chair",
"Siege of Boralus",
"enUS",
},
[208457] = {
"Skittering Darkness",
"Darkflame Cleft",
"enUS",
},
[229695] = {
"Corrupted Machinist",
"Awakening The Machine",
"enUS",
},
[224066] = {
"Sureki Vanguard",
"Nerub-ar Palace",
"enUS",
},
[207946] = {
"Captain Dailcry",
"Priory of the Sacred Flame",
"enUS",
},
[226625] = {
"Cave Skipper",
"The Sinkhole",
"enUS",
},
[218693] = {
"Eclipsing Grasp",
"11.0 - Priory Scenario",
"enUS",
},
[114624] = {
"Arcane Warden",
"Return to Karazhan",
},
[220485] = {
"Peculiar Nerubian",
"The Spiral Weave",
"enUS",
},
[194898] = {
"Primalist Arcblade",
"The Nokhud Offensive",
"enUS",
},
[213577] = {
"Spitfire Charger",
"Kriegval's Rest",
"enUS",
},
[216648] = {
"Nx",
"City of Threads",
"enUS",
},
[207949] = {
"Zealous Templar",
"Priory of the Sacred Flame",
"enUS",
},
[218440] = {
"Kaheti War Banner",
"Nerub-ar Palace",
"enUS",
},
[216649] = {
"Vx",
"City of Threads",
"enUS",
},
[83025] = {
"Grom'kar Battlemaster",
"Iron Docks",
},
[225605] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[40633] = {
"Naz'jar Honor Guard",
"Throne of the Tides",
"enUS",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[40825] = {
"Erunak Stonespeaker",
"Throne of the Tides",
"enUS",
},
[23523] = {
"Ashtongue Elementalist",
"Black Temple",
"enUS",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
},
[174175] = {
"Loyal Stoneborn",
"Halls of Atonement",
},
[198995] = {
"Chronikar",
"Dawn of the Infinite",
"enUS",
},
[449549] = {
"Corrupted Flame",
"11.0 - Priory Scenario",
"enUS",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
"enUS",
},
[210510] = {
"Flimflam the Cowardly",
"Darkflame Cleft",
"enUS",
},
[83026] = {
"Siegemaster Olugar",
"Iron Docks",
},
[81235] = {
"Grimrail Laborer",
"Grimrail Depot",
},
[170850] = {
"Raging Bloodhorn",
"Theater of Pain",
},
[297050] = {
"Chair",
"Siege of Boralus",
"enUS",
},
[161895] = {
"Thing From Beyond",
"Horrific Vision of Orgrimmar",
},
[219723] = {
"Royal Whisperer",
"Nerub-ar Palace",
"enUS",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
"enUS",
},
[207186] = {
"Unruly Stormrook",
"The Rookery",
"enUS",
},
[81236] = {
"Grimrail Technician",
"Grimrail Depot",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
"enUS",
},
[114628] = {
"Skeletal Waiter",
"Return to Karazhan",
},
[198999] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[141939] = {
"Ashvane Spotter",
"Siege of Boralus",
"enUS",
},
[203861] = {
"Horde Destroyer",
"Dawn of the Infinite",
"enUS",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
"enUS",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[199000] = {
"Chrono-Lord Deios",
"Dawn of the Infinite",
"enUS",
},
[22884] = {
"Leviathan",
"Black Temple",
"enUS",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
"enUS",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
},
[229706] = {
"Explosive Bomberbot",
"Awakening The Machine",
"enUS",
},
[219983] = {
"Eye of the Queen",
"City of Threads",
"enUS",
},
[186208] = {
"Rotbow Stalker",
"Brackenhide Hollow",
"enUS",
},
[219984] = {
"Xeph'itik",
"City of Threads",
"enUS",
},
[116549] = {
"Backup Singer",
"Return to Karazhan",
},
[218961] = {
"Starved Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[218962] = {
"Bloated Pest",
"The Underkeep",
"enUS",
},
[441379] = {
"Oil Brazier",
"11.0 - Priory Scenario",
"enUS",
},
[208728] = {
"Treasure Wraith",
"The Dread Pit",
"enUS",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
"enUS",
},
[167533] = {
"Advent Nevermore",
"Theater of Pain",
},
[207450] = {
"Fungal Stabber",
"Fungal Folly",
"enUS",
},
[455713] = {
"DELVER'S CALL: Kriegval's Rest",
"Kriegval's Rest",
"enUS",
},
[114632] = {
"Spectral Attendant",
"Return to Karazhan",
},
[219221] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[211289] = {
"Taener Duelmal",
"Priory of the Sacred Flame",
"enUS",
},
[129601] = {
"Cutwater Harpooner",
"Freehold",
"enUS",
},
[478744] = {
"Mislaid Curiosity",
"Skittering Breach",
"enUS",
},
[211290] = {
"Elaena Emberlanz",
"Priory of the Sacred Flame",
"enUS",
},
[22917] = {
"Illidan Stormrage",
"Black Temple",
"enUS",
},
[102095] = {
"Risen Lancer",
"Black Rook Hold",
"enUS",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
},
[114633] = {
"Spectral Valet",
"Return to Karazhan",
},
[211291] = {
"Sergeant Shaynemail",
"Priory of the Sacred Flame",
"enUS",
},
[207453] = {
"Fungal Rotspreader",
"Fungal Folly",
"enUS",
},
[222038] = {
"Shrillwing Hunter En'kilah",
"Nerub-ar Palace",
"enUS",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
"enUS",
},
[204127] = {
"Kobold Taskfinder",
"Kriegval's Rest",
"enUS",
},
[224853] = {
"Mutated Hatchling",
"Grim Batol",
"enUS",
},
[111563] = {
"Duskwatch Guard",
"Court of Stars",
},
[442414] = {
"Shimmering Crystal",
"The Waterworks",
"enUS",
},
[207198] = {
"Cursed Thunderer",
"The Rookery",
"enUS",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
"enUS",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
"enUS",
},
[154744] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[114634] = {
"Undying Servant",
"Return to Karazhan",
},
[207199] = {
"Cursed Rooktender",
"The Rookery",
"enUS",
},
[205408] = {
"Infinite Timeslicer",
"Dawn of the Infinite",
"enUS",
},
[216155] = {
"Skittering Ambusher",
"Skittering Breach",
"enUS",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
"enUS",
},
[179821] = {
"Commander Zo'far",
"Tazavesh, the Veiled Market",
},
[207456] = {
"Fungal Speartender",
"Fungal Folly",
"enUS",
},
[28067] = {
"Dark Iron Brewer",
"Blackrock Depths",
"enUS",
},
[219739] = {
"Infested Spawn",
"Nerub-ar Palace",
"enUS",
},
[222042] = {
"Shrillwing",
"Nerub-ar Palace",
"enUS",
},
[207969] = {
"Horde Raider",
"Dawn of the Infinite",
"enUS",
},
[220507] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[228951] = {
"Nerubian Stalker",
"The Dread Pit",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[180335] = {
"Cartel Smuggler",
"Tazavesh, the Veiled Market",
},
[213343] = {
"Forge Loader",
"The Stonevault",
"enUS",
},
[219996] = {
"Faceless Devotee",
"Skittering Breach",
"enUS",
},
[220508] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[104273] = {
"Jazshariu",
"Court of Stars",
},
[114636] = {
"Phantom Guardsman",
"Return to Karazhan",
},
[180336] = {
"Cartel Wiseguy",
"Tazavesh, the Veiled Market",
},
[115020] = {
"Arcanid",
"Return to Karazhan",
},
[203877] = {
"Kobold Thwacker",
"Kriegval's Rest",
"enUS",
},
[220509] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[228953] = {
"Skittering Intruder",
"Skittering Breach",
"enUS",
},
[129989] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[166264] = {
"Spare Parts",
"The Necrotic Wake",
"enUS",
},
[187246] = {
"Nullmagic Hornswog",
"The Azure Vault",
"enUS",
},
[203878] = {
"Kobold Mystic",
"Kriegval's Rest",
"enUS",
},
[220510] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[104274] = {
"Baalgar the Watchful",
"Court of Stars",
},
[114637] = {
"Spectral Sentry",
"Return to Karazhan",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[205158] = {
"Spurlok, Timesworn Sentinel",
"Dawn of the Infinite",
"enUS",
},
[187503] = {
"Ambitious Underboss",
"10.0 Dragon Isles",
},
[40319] = {
"Drahga Shadowburner",
"Grim Batol",
"enUS",
},
[196203] = {
"Ethereal Restorer",
"Algeth'ar Academy",
"enUS",
},
[206694] = {
"Fervent Sharpshooter",
"Priory of the Sacred Flame",
"enUS",
},
[166266] = {
"Spare Parts",
"The Necrotic Wake",
"enUS",
},
[150146] = {
"Scrapbone Shaman",
"Operation: Mechagon",
},
[128455] = {
"T'lonja",
"Atal'Dazar",
"enUS",
},
[104275] = {
"Imacu'tya",
"Court of Stars",
},
[128967] = {
"Ashvane Sniper",
"Siege of Boralus",
"enUS",
},
[207207] = {
"Voidstone Monstrosity",
"The Rookery",
"enUS",
},
[220001] = {
"Black Blood Ooze",
"The Underkeep",
"enUS",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
"enUS",
},
[186738] = {
"Umbrelskul",
"The Azure Vault",
"enUS",
},
[219746] = {
"Silken Tomb",
"Nerub-ar Palace",
"enUS",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
},
[206697] = {
"Devout Priest",
"Priory of the Sacred Flame",
"enUS",
},
[186739] = {
"Azureblade",
"The Azure Vault",
"enUS",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[40320] = {
"Valiona",
"Grim Batol",
"enUS",
},
[208745] = {
"The Candle King",
"Darkflame Cleft",
"enUS",
},
[441927] = {
"Challenger's Cache",
"The Stonevault",
"enUS",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
"enUS",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
"enUS",
},
[162689] = {
"Surgeon Stitchflesh",
"The Necrotic Wake",
"enUS",
},
[222564] = {
"Rupturing Ooze",
"Nerub-ar Palace",
"enUS",
},
[224240] = {
"Twilight Flamerender",
"Grim Batol",
"enUS",
},
[208747] = {
"The Darkness",
"Darkflame Cleft",
"enUS",
},
[39450] = {
"Trogg Dweller",
"Grim Batol",
"enUS",
},
[229729] = {
"Nullbot",
"Awakening The Machine",
"enUS",
},
[207468] = {
"Gnarled Reviver",
"Fungal Folly",
"enUS",
},
[224609] = {
"Twilight Destroyer",
"Grim Batol",
"enUS",
},
[187510] = {
"Duskpaw Trapper",
"10.0 Dragon Isles",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[210539] = {
"Corridor Creeper",
"Darkflame Cleft",
"enUS",
},
[137103] = {
"Blood Visage",
"The Underrot",
},
[227635] = {
"Kas'dru",
"Earthcrawl Mines",
"enUS",
},
[98521] = {
"Lord Etheldrin Ravencrest",
"Black Rook Hold",
"enUS",
},
[215657] = {
"Ulgrax the Devourer",
"Nerub-ar Palace",
"enUS",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
"enUS",
},
[191605] = {
"Portable Mailbox",
"Ara-Kara, City of Echoes",
"enUS",
},
[226620] = {
"Rat",
"Earthcrawl Mines",
"enUS",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[170447] = {
"Chair",
"Blackrock Depths",
"enUS",
},
[40577] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[174462] = {
"Chair",
"Blackrock Depths",
"enUS",
},
[220008] = {
"Cragpie",
"The Sinkhole",
"enUS",
},
[452682] = {
"Sovereign Finery Chest",
"The Dawnbreaker",
"enUS",
},
[214379] = {
"Living Shadow",
"11.0 - Priory Scenario",
"enUS",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
},
[210797] = {
"The Darkness",
"Darkflame Cleft",
"enUS",
},
[228954] = {
"Nerubian Marauder",
"The Dread Pit",
"enUS",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
"enUS",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[162693] = {
"Nalthor the Rimebinder",
"The Necrotic Wake",
"enUS",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
"enUS",
},
[208239] = {
"Skittering Menace",
"Skittering Breach",
"enUS",
},
[96512] = {
"Archdruid Glaidalis",
"Darkheart Thicket",
"enUS",
},
[165764] = {
"Rockbound Vanquisher",
"Castle Nathria",
},
[196798] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
"enUS",
},
[214338] = {
"Kobyss Spearfisher",
"The Sinkhole",
"enUS",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
},
[23172] = {
"Hand of Gorefiend",
"Black Temple",
"enUS",
},
[214381] = {
"Writhing Shade",
"11.0 - Priory Scenario",
"enUS",
},
[151657] = {
"Bomb Tonk",
"Operation: Mechagon",
},
[206705] = {
"Arathi Footman",
"Priory of the Sacred Flame",
"enUS",
},
[23111] = {
"Shadowy Construct",
"Black Temple",
"enUS",
},
[215405] = {
"Anub'zekt",
"Ara-Kara, City of Echoes",
"enUS",
},
[226617] = {
"Snake",
"Fungal Folly",
"enUS",
},
[22946] = {
"Shadowmoon War Hound",
"Black Temple",
"enUS",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[214382] = {
"Whispering Monstrosity",
"11.0 - Priory Scenario",
"enUS",
},
[23047] = {
"Shadowmoon Soldier",
"Black Temple",
"enUS",
},
[129996] = {
"Irontide Cleaver",
"Siege of Boralus",
"enUS",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[23330] = {
"Dragonmaw Wind Reaver",
"Black Temple",
"enUS",
},
[22879] = {
"Shadowmoon Reaver",
"Black Temple",
"enUS",
},
[220710] = {
"Leviathan Manipulator",
"The Sinkhole",
"enUS",
},
[485669] = {
"DELVER'S CALL: Fungal Folly",
"Fungal Folly",
"enUS",
},
[208242] = {
"Nerubian Darkcaster",
"Skittering Breach",
"enUS",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[22878] = {
"Aqueous Lord",
"Black Temple",
"enUS",
},
[215407] = {
"Ki'katal the Harvester",
"Ara-Kara, City of Echoes",
"enUS",
},
[135474] = {
"Thistle Acolyte",
"Waycrest Manor",
"enUS",
},
[214506] = {
"Broodtwister Ovi'nax",
"Nerub-ar Palace",
"enUS",
},
[220738] = {
"Leviathan Caller",
"The Sinkhole",
"enUS",
},
[208243] = {
"Nerubian Slasher",
"The Underkeep",
"enUS",
},
[179841] = {
"Veteran Sparkcaster",
"Tazavesh, the Veiled Market",
},
[224516] = {
"Skardyn Invader",
"The Stonevault",
"enUS",
},
[219724] = {
"Court Attendant",
"Nerub-ar Palace",
"enUS",
},
[229918] = {
"Caustic Skyrazor",
"Nerub-ar Palace",
"enUS",
},
[150160] = {
"Scrapbone Bully",
"Operation: Mechagon",
},
[221537] = {
"Unstable Experiment",
"Nerub-ar Palace",
"enUS",
},
[183424] = {
"Virtuous Gentleman",
"Return to Karazhan",
},
[208244] = {
"Nerubian Threadmancer",
"The Underkeep",
"enUS",
},
[179842] = {
"Commerce Enforcer",
"Tazavesh, the Veiled Market",
},
[135258] = {
"Irontide Curseblade",
"Siege of Boralus",
"enUS",
},
[209333] = {
"Gnarlroot",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[222235] = {
"Bloodthirsty Swarmer",
"Nerub-ar Palace",
"enUS",
},
[223150] = {
"Ascended Voidspeaker",
"Nerub-ar Palace",
"enUS",
},
[134041] = {
"Infected Peasant",
"Waycrest Manor",
"enUS",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
},
[208245] = {
"Skittering Swarmer",
"Skittering Breach",
"enUS",
},
[216619] = {
"Orator Krix'vizk",
"City of Threads",
"enUS",
},
[206710] = {
"Lightspawn",
"Priory of the Sacred Flame",
"enUS",
},
[212403] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[229739] = {
"Malfunctioning Pylon",
"Awakening The Machine",
"enUS",
},
[229995] = {
"Sureki Arbalest",
"Nerub-ar Palace",
"enUS",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
"enUS",
},
[162763] = {
"Soulforged Bonereaver",
"Theater of Pain",
},
[173447] = {
"Mushroom Mine",
"Plaguefall",
},
[219725] = {
"Chitin Knight",
"Nerub-ar Palace",
"enUS",
},
[126928] = {
"Irontide Corsair",
"Freehold",
"enUS",
},
[88163] = {
"Grom'kar Cinderseer",
"Grimrail Depot",
},
[137625] = {
"Demolishing Terror",
"Siege of Boralus",
"enUS",
},
[86372] = {
"Melded Berserker",
"The Everbloom",
"enUS",
},
[233282] = {
"Refreshment Table",
"Ara-Kara, City of Echoes",
"enUS",
},
[222275] = {
"Training Dummy",
"Nerub-ar Palace",
"enUS",
},
[221102] = {
"Elder Shadeweaver",
"City of Threads",
"enUS",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[221667] = {
"Lost Watcher",
"Nerub-ar Palace",
"enUS",
},
[212826] = {
"Guard Captain Suleyman",
"Priory of the Sacred Flame",
"enUS",
},
[137626] = {
"Demolishing Terror",
"Siege of Boralus",
"enUS",
},
[213937] = {
"Rasha'nan",
"The Dawnbreaker",
"enUS",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[179334] = {
"Portalmancer Zo'nyy",
"Tazavesh, the Veiled Market",
},
[217519] = {
"Nightfall Shadeguard",
"Nightfall Sanctum",
"enUS",
},
[79720] = {
"Grom'kar Boomer",
"Grimrail Depot",
},
[219763] = {
"Mirror Master Murkna",
"The Sinkhole",
"enUS",
},
[211063] = {
"Fungal Podling",
"The Spiral Weave",
"enUS",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
"enUS",
},
[207481] = {
"Spinshroom",
"Fungal Folly",
"enUS",
},
[199549] = {
"Flamesworn Herald",
"Vault of the Incarnates",
},
[187523] = {
"Duskpaw Stalker",
"10.0 Dragon Isles",
},
[414317] = {
"Orbinid",
"Kriegval's Rest",
"enUS",
},
[222274] = {
"Sureki Darkblade",
"Nerub-ar Palace",
"enUS",
},
[451830] = {
"|cff1EFF00Heavy Trunk",
"The Waterworks",
"enUS",
},
[225817] = {
"Caustic Skyrazor",
"Nerub-ar Palace",
"enUS",
},
[440935] = {
"Explorers' League Rope",
"The Sinkhole",
"enUS",
},
[207482] = {
"Invasive Sporecap",
"Nightfall Sanctum",
"enUS",
},
[205691] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[222214] = {
"Frenzied Leaper",
"Nerub-ar Palace",
"enUS",
},
[207177] = {
"Infinite Watchkeeper",
"Dawn of the Infinite",
"enUS",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
"enUS",
},
[211121] = {
"Rank Overseer",
"Darkflame Cleft",
"enUS",
},
[219454] = {
"Crazed Abomination",
"The Underkeep",
"enUS",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
"enUS",
},
[148120] = {
"Kul Tiran Marine",
"Battle of Dazar'alor",
},
[131823] = {
"Sister Malady",
"Waycrest Manor",
"enUS",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[224077] = {
"Egg Cocoon",
"Zekvir's Lair",
"enUS",
},
[210810] = {
"Menial Laborer",
"Darkflame Cleft",
"enUS",
},
[214504] = {
"Rasha'nan",
"Nerub-ar Palace",
"enUS",
},
[219766] = {
"Drowned Arathi",
"The Sinkhole",
"enUS",
},
[150168] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[222305] = {
"Palace Guardian",
"Nerub-ar Palace",
"enUS",
},
[22953] = {
"Wrathbone Flayer",
"Black Temple",
"enUS",
},
[222581] = {
"Ruptured Ooze",
"Nerub-ar Palace",
"enUS",
},
[208241] = {
"Ankle Biter",
"Skittering Breach",
"enUS",
},
[23049] = {
"Shadowmoon Weapon Master",
"Black Temple",
"enUS",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
"enUS",
},
[207197] = {
"Cursed Rookguard",
"The Rookery",
"enUS",
},
[150169] = {
"Toxic Lurker",
"Operation: Mechagon",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
"enUS",
},
[221035] = {
"Royal Scribe",
"Nerub-ar Palace",
"enUS",
},
[216441] = {
"Pale Illusion",
"The Sinkhole",
"enUS",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
"enUS",
},
[441966] = {
"Moldy Chest",
"Fungal Folly",
"enUS",
},
[23337] = {
"Illidari Centurion",
"Black Temple",
"enUS",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[224970] = {
"Caustic Bomber",
"Nerub-ar Palace",
"enUS",
},
[99358] = {
"Rotheart Dryad",
"Darkheart Thicket",
"enUS",
},
[357703] = {
"Depleted Anima Seed",
"Mists of Tirna Scithe",
"enUS",
},
[451835] = {
"Collision",
"Nerub-ar Palace",
"enUS",
},
[441968] = {
"Portal to Dornogal",
"Ara-Kara, City of Echoes",
"enUS",
},
[81283] = {
"Grom'kar Footsoldier",
"Iron Docks",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
},
[184910] = {
"Wo Drifter",
"The Necrotic Wake",
},
[214066] = {
"Cursedforge Stoneshaper",
"The Stonevault",
"enUS",
},
[126918] = {
"Irontide Crackshot",
"Freehold",
"enUS",
},
[115418] = {
"Spider",
"Return to Karazhan",
},
[83761] = {
"Ogron Laborer",
"Iron Docks",
},
[195878] = {
"Ukhel Beastcaller",
"The Nokhud Offensive",
"enUS",
},
[155433] = {
"Void-Touched Emissary",
"Freehold",
},
[213932] = {
"Sureki Militant",
"The Dawnbreaker",
"enUS",
},
[164501] = {
"Mistcaller",
"Mists of Tirna Scithe",
"enUS",
},
[213885] = {
"Nightfall Dark Architect",
"The Dawnbreaker",
"enUS",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
"enUS",
},
[216364] = {
"Blood Overseer",
"Ara-Kara, City of Echoes",
"enUS",
},
[223844] = {
"Covert Webmancer",
"City of Threads",
"enUS",
},
[216328] = {
"Unstable Test Subject",
"City of Threads",
"enUS",
},
[200836] = {
"Obsidian Guard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[228538] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[218317] = {
"Woven Threadmancer",
"Nerub-ar Palace",
"enUS",
},
[115419] = {
"Ancient Tome",
"Return to Karazhan",
},
[173714] = {
"Mistveil Nightblossom",
"Mists of Tirna Scithe",
"enUS",
},
[213119] = {
"Void Speaker Eirich",
"The Stonevault",
"enUS",
},
[204931] = {
"Fyrakk",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
},
[99359] = {
"Rotheart Keeper",
"Darkheart Thicket",
"enUS",
},
[126969] = {
"Trothak",
"Freehold",
},
[216329] = {
"Congealed Droplet",
"City of Threads",
"enUS",
},
[203951] = {
"Kobold Skullface",
"Kriegval's Rest",
"enUS",
},
[212411] = {
"Torchsnarl",
"Darkflame Cleft",
"enUS",
},
[454054] = {
"Lush Luredrop",
"The Underkeep",
"enUS",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
"enUS",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
"enUS",
},
[445642] = {
"Challenger's Cache",
"Siege of Boralus",
"enUS",
},
[190348] = {
"Primalist Ravager",
"Halls of Infusion",
"enUS",
},
[210818] = {
"Lowly Moleherd",
"Darkflame Cleft",
"enUS",
},
[219006] = {
"Venommaster Nezarox",
"Nerub-ar Palace",
"enUS",
},
[128652] = {
"Viq'Goth",
"Siege of Boralus",
"enUS",
},
[180431] = {
"Focused Ritualist",
"Tazavesh, the Veiled Market",
},
[455491] = {
"|cff1EFF00Sturdy Chest",
"The Sinkhole",
"enUS",
},
[218316] = {
"Kaheti Vanguard",
"Nerub-ar Palace",
"enUS",
},
[22954] = {
"Illidari Fearbringer",
"Black Temple",
"enUS",
},
[220542] = {
"Enraged Kelp",
"The Waterworks",
"enUS",
},
[23018] = {
"Shadowmoon Houndmaster",
"Black Temple",
"enUS",
},
[219046] = {
"Voracious Worm",
"Nerub-ar Palace",
"enUS",
},
[223357] = {
"Sureki Conscript",
"City of Threads",
"enUS",
},
[150251] = {
"Pistonhead Mechanic",
"Operation: Mechagon",
},
[129366] = {
"Bilge Rat Buccaneer",
"Siege of Boralus",
"enUS",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
"enUS",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
},
[86526] = {
"Grom'kar Chainmaster",
"Iron Docks",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
"enUS",
},
[228537] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[101476] = {
"Molten Charskin",
"Neltharion's Lair",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
"enUS",
},
[226612] = {
"Bloodfeaster Larva",
"The Spiral Weave",
"enUS",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[23498] = {
"Parasitic Shadowfiend",
"Black Temple",
"enUS",
},
[114526] = {
"Ghostly Understudy",
"Return to Karazhan",
},
[213892] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[98406] = {
"Embershard Scorpion",
"Neltharion's Lair",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
"enUS",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
"enUS",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
},
[185685] = {
"Urh Relic",
"The Necrotic Wake",
},
[138465] = {
"Ashvane Cannoneer",
"Siege of Boralus",
"enUS",
},
[129879] = {
"Irontide Cleaver",
"Siege of Boralus",
"enUS",
},
[228044] = {
"Reno Jackson",
"The Waterworks",
"enUS",
},
[227454] = {
"Black Blood Hauler",
"The Underkeep",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
"enUS",
},
[188252] = {
"Melidrussa Chillworn",
"Ruby Life Pools",
"enUS",
},
[144295] = {
"Mechagon Mechanic",
"Operation: Mechagon",
},
[409747] = {
"Construct Canker",
"Fungal Folly",
"enUS",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[214840] = {
"Engorged Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[409748] = {
"Dormouse Ecila",
"Fungal Folly",
"enUS",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
"enUS",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
"enUS",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
},
[213894] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[122967] = {
"Priestess Alun'za",
"Atal'Dazar",
"enUS",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
"enUS",
},
[177816] = {
"Interrogation Specialist",
"Tazavesh, the Veiled Market",
},
[200840] = {
"Flamebound Huntsman",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[213895] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
"enUS",
},
[443526] = {
"Supply Bag",
"The Waterworks",
"enUS",
},
[209801] = {
"Quartermaster Koratite",
"The Rookery",
"enUS",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
"enUS",
},
[144298] = {
"Defense Bot Mk III",
"Operation: Mechagon",
},
[177817] = {
"Support Officer",
"Tazavesh, the Veiled Market",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
"enUS",
},
[41096] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[129369] = {
"Irontide Raider",
"Siege of Boralus",
"enUS",
},
[98792] = {
"Wyrmtongue Scavenger",
"Black Rook Hold",
"enUS",
},
[82597] = {
"Grom'kar Captain",
"Grimrail Depot",
},
[222881] = {
"Royal Weaver",
"Nerub-ar Palace",
"enUS",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
"enUS",
},
[81407] = {
"Grimrail Bombardier",
"Grimrail Depot",
},
[166304] = {
"Mistveil Stinger",
"Mists of Tirna Scithe",
"enUS",
},
[223876] = {
"Impaling Spike",
"Nerub-ar Palace",
"enUS",
},
[445633] = {
"Challenger's Cache",
"The Dawnbreaker",
"enUS",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
"enUS",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
"enUS",
},
[39625] = {
"General Umbriss",
"Grim Batol",
"enUS",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
"enUS",
},
[216856] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
"enUS",
},
[212389] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[222368] = {
"Exalted Priest",
"Nerub-ar Palace",
"enUS",
},
[220551] = {
"Sureki Ironweaver",
"Nerub-ar Palace",
"enUS",
},
[154758] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[188011] = {
"Primal Terrasentry",
"Ruby Life Pools",
"enUS",
},
[23339] = {
"Illidari Heartseeker",
"Black Temple",
"enUS",
},
[23371] = {
"Shadowmoon Fallen",
"Black Temple",
"enUS",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
"enUS",
},
[127315] = {
"Reanimation Totem",
"Atal'Dazar",
"enUS",
},
[23147] = {
"Shadowmoon Grunt",
"Black Temple",
"enUS",
},
[77483] = {
"Grom'kar Gunner",
"Grimrail Depot",
},
[201754] = {
"Sarkareth",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
"enUS",
},
[150165] = {
"Slime Elemental",
"Operation: Mechagon",
},
[215435] = {
"Foreseer Xix'amon",
"Nerub-ar Palace",
"enUS",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
"enUS",
},
[138247] = {
"Irontide Curseblade",
"Siege of Boralus",
"enUS",
},
[223646] = {
"Pale Priest",
"City of Threads",
"enUS",
},
[80808] = {
"Neesa Nox",
"Iron Docks",
},
[443537] = {
"Lost Supplies",
"Skittering Breach",
"enUS",
},
[40484] = {
"Erudax",
"Grim Batol",
"enUS",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[174496] = {
"Chair",
"Blackrock Depths",
"enUS",
},
[164517] = {
"Tred'ova",
"Mists of Tirna Scithe",
"enUS",
},
[23083] = {
"Shadowmoon Riding Hound",
"Black Temple",
"enUS",
},
[206704] = {
"Ardent Paladin",
"Priory of the Sacred Flame",
"enUS",
},
[224962] = {
"Cursedforge Mender",
"The Stonevault",
"enUS",
},
[173729] = {
"Manifestation of Pride",
"Theater of Pain",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
},
[211087] = {
"Speaker Shadowcrown",
"The Dawnbreaker",
"enUS",
},
[167536] = {
"Harugia the Bloodthirsty",
"Theater of Pain",
},
[129372] = {
"Blacktar Bomber",
"Siege of Boralus",
"enUS",
},
[100526] = {
"Tormented Bloodseeker",
"Darkheart Thicket",
"enUS",
},
[216205] = {
"Ravenous Spawn",
"Nerub-ar Palace",
"enUS",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[168357] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
"enUS",
},
[217485] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[40586] = {
"Lady Naz'jar",
"Throne of the Tides",
"enUS",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[226459] = {
"Glowmite",
"Fungal Folly",
"enUS",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
"enUS",
},
[409185] = {
"Dynamite Bundle",
"Darkflame Cleft",
"enUS",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
"enUS",
},
[169893] = {
"Nefarious Darkspeaker",
"Theater of Pain",
},
[211089] = {
"Anub'ikkaj",
"The Dawnbreaker",
"enUS",
},
[174499] = {
"Chair",
"Blackrock Depths",
"enUS",
},
[225601] = {
"Mereldar Citizen",
"The Dawnbreaker",
"enUS",
},
[189340] = {
"Chargath, Bane of Scales",
"Neltharus",
"enUS",
},
[76407] = {
"Ner'zhul",
"Shadowmoon Burial Grounds",
},
[177787] = {
"Mawsworn Hopebreaker",
"Sanctum of Domination",
},
[165560] = {
"Gormling Larva",
"Mists of Tirna Scithe",
"enUS",
},
[219022] = {
"Ascended Webfriar",
"The Underkeep",
"enUS",
},
[223372] = {
"Prime Slime",
"Nerub-ar Palace",
"enUS",
},
[45704] = {
"Lurking Tempest",
"The Vortex Pinnacle",
},
[214343] = {
"Kobyss Trickster",
"The Sinkhole",
"enUS",
},
[213905] = {
"Animated Darkness",
"The Dawnbreaker",
"enUS",
},
[205152] = {
"Lerai, Timesworn Maiden",
"Dawn of the Infinite",
"enUS",
},
[218511] = {
"Forming Whispers",
"11.0 - Priory Scenario",
"enUS",
},
[130909] = {
"Fetid Maggot",
"The Underrot",
},
[26764] = {
"Ilsa Direbrew",
"Blackrock Depths",
"enUS",
},
[9499] = {
"Plugger Spazzring",
"Blackrock Depths",
"enUS",
},
[164266] = {
"Domina Venomblade",
"Plaguefall",
},
[129374] = {
"Scrimshaw Enforcer",
"Siege of Boralus",
"enUS",
},
[9547] = {
"Guzzling Patron",
"Blackrock Depths",
"enUS",
},
[219856] = {
"Researcher Ven'kex",
"The Underkeep",
"enUS",
},
[162729] = {
"Patchwerk Soldier",
"The Necrotic Wake",
"enUS",
},
[220815] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[206696] = {
"Arathi Knight",
"Priory of the Sacred Flame",
"enUS",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[217489] = {
"Anub'arash",
"Nerub-ar Palace",
"enUS",
},
[105705] = {
"Bound Energy",
"Court of Stars",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
},
[187552] = {
"Stormfang Shaman",
"10.0 Dragon Isles",
},
[214419] = {
"Void Cursed Crusher",
"The Rookery",
"enUS",
},
[210148] = {
"Menial Laborer",
"Darkflame Cleft",
"enUS",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
"enUS",
},
[114790] = {
"Viz'aduum the Watcher",
"Return to Karazhan",
},
[98542] = {
"Amalgam of Souls",
"Black Rook Hold",
"enUS",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
"enUS",
},
[196482] = {
"Overgrown Ancient",
"Algeth'ar Academy",
"enUS",
},
[83392] = {
"Rampaging Clefthoof",
"Iron Docks",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
"enUS",
},
[212739] = {
"Radiating Voidstone",
"The Rookery",
"enUS",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
"enUS",
},
[193462] = {
"Batak",
"The Nokhud Offensive",
"enUS",
},
[217491] = {
"Skeinspinner Takazj",
"Nerub-ar Palace",
"enUS",
},
[206699] = {
"War Lynx",
"Priory of the Sacred Flame",
"enUS",
},
[207459] = {
"Fungal Rotcaster",
"Fungal Folly",
"enUS",
},
[184581] = {
"Baelog",
"Uldaman: Legacy of Tyr",
"enUS",
},
[214421] = {
"Coalescing Void Diffuser",
"The Rookery",
"enUS",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
},
[413874] = {
"Rich Bismuth",
"The Waterworks",
"enUS",
},
[82039] = {
"Rockspine Stinger",
"The Everbloom",
"enUS",
},
[216658] = {
"Izo, the Grand Splicer",
"City of Threads",
"enUS",
},
[217748] = {
"Nexus-Princess Ky'veza",
"Nerub-ar Palace",
"enUS",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
"enUS",
},
[207454] = {
"Fungal Gutter",
"Fungal Folly",
"enUS",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
"enUS",
},
[190370] = {
"Squallbringer Cyraz",
"Halls of Infusion",
"enUS",
},
[214625] = {
"Kobyss Necromancer",
"The Sinkhole",
"enUS",
},
[207202] = {
"Void Fragment",
"The Rookery",
"enUS",
},
[130400] = {
"Irontide Crusher",
"Freehold",
"enUS",
},
[205723] = {
"Time-Lost Aerobot",
"Dawn of the Infinite",
"enUS",
},
[204188] = {
"Tomb-Raider Drywhisker",
"Kriegval's Rest",
"enUS",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
"enUS",
},
[206698] = {
"Fanatical Conjuror",
"Priory of the Sacred Flame",
"enUS",
},
[219676] = {
"Nerl'athekk the Skulking",
"Skittering Breach",
"enUS",
},
[137405] = {
"Gripping Terror",
"Siege of Boralus",
"enUS",
},
[205212] = {
"Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
"enUS",
},
[213338] = {
"Forgebound Mender",
"The Stonevault",
"enUS",
},
[218325] = {
"Swarming Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[303148] = {
"Soulwell",
"Darkflame Cleft",
"enUS",
},
[131824] = {
"Sister Solena",
"Waycrest Manor",
"enUS",
},
[227474] = {
"Ascension Researcher",
"The Underkeep",
"enUS",
},
[203678] = {
"Grommash Hellscream",
"Dawn of the Infinite",
"enUS",
},
[221845] = {
"Xur'khun the Defiled",
"Nerub-ar Palace",
"enUS",
},
[213913] = {
"Kobold Flametender",
"Darkflame Cleft",
"enUS",
},
[150712] = {
"Trixie Tazer",
"Operation: Mechagon",
},
[214368] = {
"The Broken Queen",
"11.0 - Priory Scenario",
"enUS",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
"enUS",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
"enUS",
},
[214350] = {
"Turned Speaker",
"The Stonevault",
"enUS",
},
[229778] = {
"Automatic Ironstrider",
"Awakening The Machine",
"enUS",
},
[428434] = {
"Treasure Chest",
"The Spiral Weave",
"enUS",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
"enUS",
},
[413883] = {
"Crystallized Bismuth",
"Kriegval's Rest",
"enUS",
},
[218520] = {
"Nightcaller Velys",
"11.0 - Priory Scenario",
"enUS",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[128651] = {
"Hadal Darkfathom",
"Siege of Boralus",
"enUS",
},
[208743] = {
"Blazikon",
"Darkflame Cleft",
"enUS",
},
[81212] = {
"Grimrail Overseer",
"Grimrail Depot",
},
[81603] = {
"Champion Druna",
"Iron Docks",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
"enUS",
},
[204109] = {
"Cavernous Shrieker",
"Kriegval's Rest",
"enUS",
},
[218521] = {
"Hazzk the Ascended",
"11.0 - Priory Scenario",
"enUS",
},
[101549] = {
"Arcane Minion",
"Black Rook Hold",
"enUS",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[130012] = {
"Irontide Ravager",
"Freehold",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[449709] = {
"Bouncy Shroom",
"The Dread Pit",
"enUS",
},
[115486] = {
"Erudite Slayer",
"Return to Karazhan",
},
[114792] = {
"Virtuous Lady",
"Return to Karazhan",
},
[82682] = {
"Archmage Sol",
"The Everbloom",
"enUS",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
},
[219034] = {
"Web Marauder",
"The Underkeep",
"enUS",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
"enUS",
},
[98970] = {
"Latosius",
"Black Rook Hold",
"enUS",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[224152] = {
"Twilight Brute",
"Grim Batol",
"enUS",
},
[83578] = {
"Ogron Laborer",
"Iron Docks",
},
[176565] = {
"Disruptive Patron",
"Tazavesh, the Veiled Market",
},
[162317] = {
"Gorechop",
"Theater of Pain",
},
[219035] = {
"Deepwalker Guardian",
"The Underkeep",
"enUS",
},
[413890] = {
"Crystallized Aqirite",
"Earthcrawl Mines",
"enUS",
},
[229782] = {
"Awakened Phalanx",
"Awakening The Machine",
"enUS",
},
[102253] = {
"Understone Demolisher",
"Neltharion's Lair",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
"enUS",
},
[45917] = {
"Cloud Prince",
"The Vortex Pinnacle",
},
[212383] = {
"Kobold Taskworker",
"Darkflame Cleft",
"enUS",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
"enUS",
},
[150295] = {
"Tank Buster MK1",
"Operation: Mechagon",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
"enUS",
},
[131527] = {
"Lord Waycrest",
"Waycrest Manor",
"enUS",
},
[130404] = {
"Vermin Trapper",
"Freehold",
"enUS",
},
[162744] = {
"Nekthara the Mangler",
"Theater of Pain",
},
[446645] = {
"Stuffed Barrel",
"The Waterworks",
"enUS",
},
[220572] = {
"Shadow Elemental",
"Skittering Breach",
"enUS",
},
[205384] = {
"Infinite Chronoweaver",
"Dawn of the Infinite",
"enUS",
},
[212835] = {
"Risen Footman",
"Priory of the Sacred Flame",
"enUS",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
"enUS",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
},
[442763] = {
"Soggy Chest",
"Nightfall Sanctum",
"enUS",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[449688] = {
"Molten Engine",
"Skittering Breach",
"enUS",
},
[220573] = {
"Shadow Elemental",
"Skittering Breach",
"enUS",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
},
[229769] = {
"Medbot",
"Awakening The Machine",
"enUS",
},
[444098] = {
"Webbed Chest",
"The Underkeep",
"enUS",
},
[223253] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[212838] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[215968] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[187566] = {
"Hyena Matriarch",
"10.0 Dragon Isles",
},
[218527] = {
"Shadesworn Crusher",
"11.0 - Priory Scenario",
"enUS",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
},
[98538] = {
"Lady Velandras Ravencrest",
"Black Rook Hold",
"enUS",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
"enUS",
},
[174773] = {
"Spiteful Shade",
"Darkheart Thicket",
"enUS",
},
[162692] = {
"Amarth",
"The Necrotic Wake",
"enUS",
},
[226460] = {
"Undercrawler Hatchling",
"Earthcrawl Mines",
"enUS",
},
[220575] = {
"Shadow Elemental",
"Skittering Breach",
"enUS",
},
[91001] = {
"Tarspitter Lurker",
"Neltharion's Lair",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[413900] = {
"Crystallized Ironclaw",
"The Waterworks",
"enUS",
},
[23374] = {
"Ashtongue Stalker",
"Black Temple",
"enUS",
},
[214117] = {
"Stormflurry Totem",
"Throne of the Tides",
"enUS",
},
[129371] = {
"Riptide Shredder",
"Siege of Boralus",
"enUS",
},
[211341] = {
"Manifested Shadow",
"The Dawnbreaker",
"enUS",
},
[220576] = {
"Shadow Elemental",
"Skittering Breach",
"enUS",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
},
[228952] = {
"Nerubian Skulker",
"The Dread Pit",
"enUS",
},
[225606] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[196116] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
},
[220065] = {
"Umbral Weave",
"City of Threads",
"enUS",
},
[226462] = {
"Stagshell",
"The Spiral Weave",
"enUS",
},
[220577] = {
"Nerl'athekk the Skulking",
"Skittering Breach",
"enUS",
},
[190128] = {
"Zul'gamux",
"Tazavesh, the Veiled Market",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
"enUS",
},
[173720] = {
"Mistveil Gorgegullet",
"Mists of Tirna Scithe",
"enUS",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
"enUS",
},
[219810] = {
"Nerubian Ritualist",
"UNKNOWN",
"enUS",
},
[220066] = {
"Scroll Bearer",
"The Underkeep",
"enUS",
},
[133007] = {
"Unbound Abomination",
"The Underrot",
},
[200926] = {
"Igira the Cruel",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[446146] = {
"Recovered Nightfall Relics",
"The Dawnbreaker",
"enUS",
},
[227487] = {
"Underkeep Technician",
"The Underkeep",
"enUS",
},
[224219] = {
"Twilight Earthcaller",
"Grim Batol",
"enUS",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
},
[129640] = {
"Snarling Dockhound",
"Siege of Boralus",
"enUS",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
"enUS",
},
[209230] = {
"Kyrioss",
"The Rookery",
"enUS",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
"enUS",
},
[213893] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[81297] = {
"Dreadfang",
"Iron Docks",
},
[193457] = {
"Balara",
"The Nokhud Offensive",
"enUS",
},
[189722] = {
"Gulping Goliath",
"Halls of Infusion",
"enUS",
},
[214439] = {
"Corrupted Oracle",
"The Rookery",
"enUS",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
},
[219045] = {
"Colossal Spider",
"Nerub-ar Palace",
"enUS",
},
[166079] = {
"Brittlebone Crossbowman",
"The Necrotic Wake",
"enUS",
},
[225204] = {
"Zekvir",
"Zekvir's Lair",
"enUS",
},
[445639] = {
"Challenger's Cache",
"Mists of Tirna Scithe",
"enUS",
},
[218022] = {
"Speaker Davenruth",
"Nightfall Sanctum",
"enUS",
},
[97197] = {
"Valarjar Purifier",
"Halls of Valor",
},
[434298] = {
"Light's Mantle",
"Skittering Breach",
"enUS",
},
[99192] = {
"Shade of Xavius",
"Darkheart Thicket",
"enUS",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
"enUS",
},
[229537] = {
"Void Emissary",
"The Necrotic Wake",
"enUS",
},
[45924] = {
"Turbulent Squall",
"The Vortex Pinnacle",
},
[445641] = {
"Challenger's Cache",
"The Necrotic Wake",
"enUS",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
"enUS",
},
[179386] = {
"Corsair Officer",
"Tazavesh, the Veiled Market",
},
[204206] = {
"Horde Farseer",
"Dawn of the Infinite",
"enUS",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
},
[227874] = {
"Web Spreader",
"Skittering Breach",
"enUS",
},
[135048] = {
"Gorestained Piglet",
"Waycrest Manor",
"enUS",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
"enUS",
},
[120651] = {
"Explosives",
"Atal'Dazar",
},
[23215] = {
"Ashtongue Sorcerer",
"Black Temple",
"enUS",
},
[189878] = {
"Nathrezim Infiltrator",
"Tazavesh, the Veiled Market",
},
[135245] = {
"Bilge Rat Demolisher",
"Siege of Boralus",
"enUS",
},
[455505] = {
"|cff1EFF00Sturdy Chest",
"Skittering Breach",
"enUS",
},
[207205] = {
"Stormguard Gorren",
"The Rookery",
"enUS",
},
[152009] = {
"Malfunctioning Scrapbot",
"Operation: Mechagon",
},
[221863] = {
"Summoned Acolyte",
"Nerub-ar Palace",
"enUS",
},
[172991] = {
"Drust Soulcleaver",
"Mists of Tirna Scithe",
"enUS",
},
[179388] = {
"Hourglass Tidesage",
"Tazavesh, the Veiled Market",
},
[214443] = {
"Crystal Shard",
"The Stonevault",
"enUS",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[96934] = {
"Valarjar Trapper",
"Halls of Valor",
},
[141938] = {
"Ashvane Sniper",
"Siege of Boralus",
"enUS",
},
[216621] = {
"Nerubian Webspinner",
"Earthcrawl Mines",
"enUS",
},
[223674] = {
"Caustic Skitterer",
"Nerub-ar Palace",
"enUS",
},
[164804] = {
"Droman Oulfarran",
"Mists of Tirna Scithe",
"enUS",
},
[222193] = {
"Hollow Frostweaver",
"Nerub-ar Palace",
"enUS",
},
[224616] = {
"Animated Shadow",
"The Dawnbreaker",
"enUS",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
"enUS",
},
[217151] = {
"Dark Bombardier",
"Nightfall Sanctum",
"enUS",
},
[222461] = {
"Congealed Mass",
"Nerub-ar Palace",
"enUS",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[184911] = {
"Urh Dismantler",
"The Necrotic Wake",
},
[138464] = {
"Ashvane Deckhand",
"Siege of Boralus",
"enUS",
},
[165111] = {
"Drust Spiteclaw",
"Mists of Tirna Scithe",
"enUS",
},
[137517] = {
"Ashvane Destroyer",
"Siege of Boralus",
"enUS",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[22855] = {
"Illidari Nightlord",
"Black Temple",
"enUS",
},
[217516] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[210812] = {
"Royal Wicklighter",
"Darkflame Cleft",
"enUS",
},
[213934] = {
"Nightfall Tactician",
"The Dawnbreaker",
"enUS",
},
[165251] = {
"Illusionary Vulpin",
"Mists of Tirna Scithe",
"enUS",
},
[220138] = {
"Regurgitating Monstrosity",
"Nerub-ar Palace",
"enUS",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
"enUS",
},
[77803] = {
"Railmaster Rocketspark",
"Grimrail Depot",
},
[222572] = {
"Infesting Latcher",
"Nerub-ar Palace",
"enUS",
},
[217517] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[229296] = {
"Orb of Ascendance",
"Mists of Tirna Scithe",
"enUS",
},
[131821] = {
"Faceless Maiden",
"Waycrest Manor",
"enUS",
},
[445685] = {
"Barred Door",
"Zekvir's Lair",
"enUS",
},
[212400] = {
"Void Touched Elemental",
"The Stonevault",
"enUS",
},
[220139] = {
"Slithering Spew",
"Nerub-ar Palace",
"enUS",
},
[163122] = {
"Brittlebone Warrior",
"The Necrotic Wake",
"enUS",
},
[114804] = {
"Spectral Charger",
"Return to Karazhan",
},
[217518] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[9545] = {
"Grim Patron",
"Blackrock Depths",
"enUS",
},
[167731] = {
"Separation Assistant",
"The Necrotic Wake",
"enUS",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
"enUS",
},
[137516] = {
"Ashvane Invader",
"Siege of Boralus",
"enUS",
},
[91008] = {
"Rockbound Pelter",
"Neltharion's Lair",
},
[137614] = {
"Demolishing Terror",
"Siege of Boralus",
"enUS",
},
[163622] = {
"Goregrind Bits",
"The Necrotic Wake",
"enUS",
},
[131545] = {
"Lady Waycrest",
"Waycrest Manor",
"enUS",
},
[22896] = {
"Ashtongue Searing Totem",
"Black Temple",
"enUS",
},
[220078] = {
"Researcher Xik'vik",
"The Underkeep",
"enUS",
},
[22960] = {
"Dragonmaw Wyrmcaller",
"Black Temple",
"enUS",
},
[22841] = {
"Shade of Akama",
"Black Temple",
"enUS",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
},
[212827] = {
"High Priest Aemya",
"Priory of the Sacred Flame",
"enUS",
},
[288639] = {
"Treasure Rich Flotsam",
"Siege of Boralus",
"enUS",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
"enUS",
},
[220079] = {
"Failed Ascended",
"The Underkeep",
"enUS",
},
[23216] = {
"Ashtongue Defender",
"Black Temple",
"enUS",
},
[113398] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[221103] = {
"Hulking Warshell",
"City of Threads",
"enUS",
},
[478443] = {
"Mislaid Curiosity",
"The Spiral Weave",
"enUS",
},
[168393] = {
"Plaguebelcher",
"Plaguefall",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
"enUS",
},
[220504] = {
"Shadow Totem",
"Skittering Breach",
"enUS",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[218884] = {
"Shattershell Scarab",
"Nerub-ar Palace",
"enUS",
},
[22883] = {
"Aqueous Spawn",
"Black Temple",
"enUS",
},
[22887] = {
"High Warlord Naj'entus",
"Black Temple",
"enUS",
},
[185584] = {
"Naj'entus Spine",
"Black Temple",
"enUS",
},
[23028] = {
"Bonechewer Taskmaster",
"Black Temple",
"enUS",
},
[213684] = {
"Void Chunk",
"The Rookery",
"enUS",
},
[218034] = {
"Reformed Fury",
"Nightfall Sanctum",
"enUS",
},
[212765] = {
"Void Bound Despoiler",
"The Stonevault",
"enUS",
},
[212405] = {
"Aspiring Forgehand",
"The Stonevault",
"enUS",
},
[22898] = {
"Supremus",
"Black Temple",
"enUS",
},
[22853] = {
"Illidari Defiler",
"Black Temple",
"enUS",
},
[23524] = {
"Ashtongue Spiritbinder",
"Black Temple",
"enUS",
},
[22880] = {
"Shadowmoon Champion",
"Black Temple",
"enUS",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[22945] = {
"Shadowmoon Blood Mage",
"Black Temple",
"enUS",
},
[167116] = {
"Spinemaw Reaver",
"Mists of Tirna Scithe",
"enUS",
},
[155090] = {
"Anodized Coilbearer",
"Operation: Mechagon",
},
[83846] = {
"Yalnu",
"The Everbloom",
"enUS",
},
[22882] = {
"Shadowmoon Deathshaper",
"Black Temple",
"enUS",
},
[217268] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[96640] = {
"Valarjar Marksman",
"Halls of Valor",
},
[22871] = {
"Teron Gorefiend",
"Black Temple",
"enUS",
},
[167117] = {
"Spinemaw Larva",
"Mists of Tirna Scithe",
"enUS",
},
[454201] = {
"|cff1EFF00Sturdy Chest",
"Nightfall Sanctum",
"enUS",
},
[229855] = {
"Shadeguard Speaker",
"Nightfall Sanctum",
"enUS",
},
[168246] = {
"Reanimated Crossbowman",
"The Necrotic Wake",
"enUS",
},
[219732] = {
"Yükimp",
"The Sinkhole",
"enUS",
},
[220643] = {
"Deepwater Makura",
"The Sinkhole",
"enUS",
},
[220084] = {
"Bloated Pest",
"The Underkeep",
"enUS",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
"enUS",
},
},
["aura_grow_direction"] = 1,
["indicator_anchor"] = {
["x"] = 0,
},
["health_selection_overlay_alpha"] = 0.429999977350235,
["minor_height_scale"] = 0.99999994039536,
["aura_padding"] = 0,
["last_news_time"] = 1550158598,
["aura_width2"] = 22,
["aura_stack_size"] = 8,
["aura_show_crowdcontrol"] = true,
["cast_colors"] = {
[375727] = {
false,
"darkorange",
"",
},
[369409] = {
false,
"darkorange",
"",
},
[390111] = {
false,
"darkorange",
"",
},
[369061] = {
false,
"darkorange",
"",
},
[382555] = {
false,
"darkorange",
"",
},
[381444] = {
false,
"darkorange",
"",
},
[449167] = {
false,
"darkorange",
"",
},
[376811] = {
false,
"darkorange",
"",
},
[384336] = {
false,
"darkorange",
"",
},
[377383] = {
false,
"darkorange",
"",
},
[377034] = {
false,
"darkorange",
"",
},
[369573] = {
false,
"darkorange",
"",
},
[340300] = {
false,
"darkorange",
"",
},
[450854] = {
false,
"darkorange",
"",
},
[268260] = {
false,
"darkorange",
"",
},
[385958] = {
false,
"darkorange",
"",
},
[435012] = {
false,
"darkorange",
"",
},
[447395] = {
false,
"darkorange",
"",
},
[385578] = {
false,
"darkorange",
"",
},
[388976] = {
false,
"darkorange",
"",
},
[382277] = {
false,
"darkorange",
"",
},
[387135] = {
false,
"darkorange",
"",
},
[434824] = {
false,
"darkorange",
"",
},
[386660] = {
false,
"darkorange",
"",
},
[387614] = {
false,
"darkorange",
"",
},
[372311] = {
false,
"darkorange",
"",
},
[269029] = {
false,
"darkorange",
"",
},
[388060] = {
false,
"darkorange",
"",
},
[373614] = {
false,
"darkorange",
"",
},
[326021] = {
false,
"darkorange",
"",
},
[374567] = {
false,
"darkorange",
"",
},
[448640] = {
false,
"darkorange",
"",
},
[373742] = {
false,
"darkorange",
"",
},
[426860] = {
false,
"darkorange",
"",
},
[377204] = {
false,
"darkorange",
"",
},
[374569] = {
false,
"darkorange",
"",
},
[372696] = {
false,
"darkorange",
"",
},
[386063] = {
false,
"darkorange",
"",
},
[321834] = {
false,
"darkorange",
"",
},
[375079] = {
false,
"darkorange",
"",
},
[372222] = {
false,
"darkorange",
"",
},
[323137] = {
false,
"darkorange",
"",
},
[431494] = {
false,
"darkorange",
"",
},
[393432] = {
false,
"darkorange",
"",
},
[324323] = {
false,
"darkorange",
"",
},
[381834] = {
false,
"darkorange",
"",
},
[331743] = {
false,
"darkorange",
"",
},
[369811] = {
false,
"darkorange",
"",
},
[390290] = {
false,
"darkorange",
"",
},
[370764] = {
false,
"darkorange",
"",
},
[257288] = {
false,
"darkorange",
"",
},
[377559] = {
false,
"darkorange",
"",
},
[385832] = {
false,
"darkorange",
"",
},
[387910] = {
false,
"darkorange",
"",
},
[388958] = {
false,
"darkorange",
"",
},
[384524] = {
false,
"darkorange",
"",
},
[391118] = {
false,
"darkorange",
"",
},
[370766] = {
false,
"darkorange",
"",
},
[425027] = {
false,
"darkorange",
"",
},
[375351] = {
false,
"darkorange",
"",
},
[387067] = {
false,
"darkorange",
"",
},
[340160] = {
false,
"darkorange",
"",
},
[385531] = {
false,
"darkorange",
"",
},
[391723] = {
false,
"darkorange",
"",
},
[321968] = {
false,
"darkorange",
"",
},
[373943] = {
false,
"darkorange",
"",
},
[377912] = {
false,
"darkorange",
"",
},
[391726] = {
false,
"darkorange",
"",
},
[333488] = {
false,
"darkorange",
"",
},
[324923] = {
false,
"darkorange",
"",
},
[257862] = {
false,
"darkorange",
"",
},
[369563] = {
false,
"darkorange",
"",
},
[453161] = {
false,
"darkorange",
"",
},
[382708] = {
false,
"darkorange",
"",
},
[392406] = {
false,
"darkorange",
"",
},
[331718] = {
false,
"darkorange",
"",
},
[388046] = {
false,
"darkorange",
"",
},
[449130] = {
false,
"darkorange",
"",
},
[385916] = {
false,
"darkorange",
"",
},
[462216] = {
false,
"darkorange",
"",
},
[375251] = {
false,
"darkorange",
"",
},
[448105] = {
false,
"darkorange",
"",
},
[333477] = {
false,
"darkorange",
"",
},
[376170] = {
false,
"darkorange",
"",
},
[320596] = {
false,
"darkorange",
"",
},
[369703] = {
false,
"darkorange",
"",
},
[374361] = {
false,
"darkorange",
"",
},
[256627] = {
false,
"darkorange",
"",
},
},
["health_cutoff"] = false,
["aura_border_colors"] = {
["enrage"] = {
0,
0,
0,
},
["steal_or_purge"] = {
0.27843137254902,
0.92156862745098,
0.98039215686275,
},
["offensive"] = {
nil,
0,
0,
},
["crowdcontrol"] = {
0,
0,
0,
},
["is_show_all"] = {
0,
0,
0,
},
["defensive"] = {
0,
0,
0,
},
["is_buff"] = {
nil,
0,
0,
},
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["extra_icon_anchor"] = {
["y"] = -13,
["x"] = 0,
["side"] = 8,
},
["extra_icon_wide_icon"] = false,
["range_check_alpha"] = 1,
["semver"] = "1.0.2",
["aura_frame2_anchor"] = {
["y"] = 1.009994506835938,
["x"] = -0.8000030517578125,
["side"] = 1,
},
["aura_alpha"] = 1,
["indicator_faction"] = false,
["debuff_show_cc"] = false,
["transparency_behavior"] = 3,
["spell_animations"] = false,
["debuff_show_cc_border"] = {
0,
0,
0,
},
["aura_consolidate"] = true,
["extra_icon_width"] = 26,
["health_statusbar_texture"] = "Melli",
["hook_auto_imported"] = {
["Targetting Alpha"] = 3,
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Bwonsamdi Reaping"] = 1,
["Execute Range"] = 1,
["Jaina Encounter"] = 6,
["Blockade Encounter"] = 1,
["Cast Bar Icon Config"] = 2,
["Hide Neutral Units"] = 1,
["Extra Border"] = 2,
["Combo Points"] = 6,
["Target Color"] = 3,
["Attacking Specific Unit"] = 2,
["Aura Reorder"] = 3,
},
["minor_width_scale"] = 0.99999994039536,
["indicator_pet"] = false,
["extra_icon_show_defensive_border"] = {
0,
0,
0,
},
["aura_frame1_anchor"] = {
["y"] = -0.600006103515625,
["x"] = 0.5699920654296875,
["side"] = 7,
},
["honor_blizzard_plate_alpha"] = true,
["aura_timer_text_font"] = "Naowh",
["extra_icon_stack_font"] = "GothamNarrowUltra",
["non_targeted_alpha_enabled"] = true,
["cast_statusbar_bgtexture"] = "Melli",
["aura2_x_offset"] = -0.8000030517578125,
["target_indicator"] = "Arrow",
["saved_cvars"] = {
["nameplateShowOnlyNames"] = "1",
["nameplateOverlapV"] = "1.6000000238419",
["ShowNamePlateLoseAggroFlash"] = "1",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplateOverlapH"] = "1.1000000238419",
["nameplatePersonalShowWithTarget"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["clampTargetNameplateToScreen"] = "1",
["nameplateShowAll"] = "1",
["nameplateMaxDistance"] = "100",
["nameplateShowFriendlyMinions"] = "1",
["nameplateSelfScale"] = "1",
["nameplateTargetBehindMaxDistance"] = "30",
["SoftTargetInteract"] = "3",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplatePersonalShowAlways"] = "0",
["nameplateMotionSpeed"] = "0.014999999664724",
["nameplateGlobalScale"] = "1",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowEnemyPets"] = "0",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "1.5099999904633",
["nameplateLargeTopInset"] = "0.079538092017174",
["ShowClassColorInNameplate"] = "1",
["nameplatePersonalShowInCombat"] = "1",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateMotion"] = "1",
["nameplateSelfTopInset"] = "0.5",
["nameplateMinScale"] = "1",
["nameplateSelfAlpha"] = "1",
["nameplateOtherTopInset"] = "0.079538092017174",
["nameplateOccludedAlphaMult"] = "0.4",
["nameplateSelfBottomInset"] = "0.2",
["nameplateShowEnemyTotems"] = "0",
["nameplateShowFriendlyGuardians"] = "0",
["NamePlateHorizontalScale"] = "1",
["nameplateShowEnemyGuardians"] = "0",
["nameplateShowFriends"] = "1",
["nameplateTargetRadialPosition"] = "1",
["SoftTargetIconGameObject"] = "1",
},
["login_counter"] = 41901,
["extra_icon_caster_name"] = false,
["click_space_friendly"] = {
1,
1,
},
["aura_stack_font"] = "Naowh",
["auto_toggle_combat"] = {
["blizz_healthbar_ic"] = true,
["blizz_healthbar_ooc"] = true,
},
["hide_friendly_castbars"] = true,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["auras_per_row_amount"] = 5,
["hover_highlight_alpha"] = 0.05999999865889549,
["plate_config"] = {
["player"] = {
["spellpercent_text_font"] = "10089",
["level_text_size"] = 11,
["cast"] = {
115,
8,
},
["spellpercent_text_anchor"] = {
["x"] = 2,
["side"] = 5,
},
["big_actorname_text_shadow_color"] = {
0,
0,
0,
1,
},
["level_text_font"] = "10089",
["actorname_text_font"] = "10089",
["big_actorname_text_shadow_color_offset"] = {
1,
-1,
},
["power_percent_text_size"] = 8,
["all_names"] = true,
["big_actortitle_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 12,
["quest_color_enemy"] = {
1,
0.369,
0,
},
["big_actortitle_text_font"] = "10089",
["spellpercent_text_size"] = 11,
["big_actortitle_text_shadow_color_offset"] = {
1,
-1,
},
["percent_text_color"] = {
0.93725490196078,
0.97647058823529,
1,
},
["cast_incombat"] = {
115,
8,
},
["big_actortitle_text_size"] = 10,
["big_actorname_text_size"] = 10,
["spellname_text_anchor"] = {
["side"] = 3,
},
["big_actortitle_text_shadow_color"] = {
0,
0,
0,
1,
},
["spellname_text_font"] = "10089",
["big_actorname_text_outline"] = "OUTLINE",
["quest_color_neutral"] = {
1,
0.65,
0,
},
["actorname_text_size"] = 13,
["big_actorname_text_font"] = "10089",
["level_text_alpha"] = 1,
["percent_text_size"] = 11,
["percent_text_font"] = "10089",
["spellname_text_size"] = 12,
["quest_enabled"] = true,
["actorname_text_color"] = {
nil,
nil,
nil,
0.86789692938328,
},
["actorname_text_anchor"] = {
["y"] = 1,
["side"] = 1,
},
["health_incombat"] = {
115,
15,
},
["health"] = {
115,
15,
},
["mana_incombat"] = {
100,
4,
},
["power_percent_text_font"] = "Accidental Presidency",
["mana"] = {
100,
4,
},
["level_text_enabled"] = true,
},
["friendlyplayer"] = {
["big_actorname_text_size"] = 9,
["spellpercent_text_font"] = "AvantGarde",
["level_text_size"] = 9,
["actorname_use_class_color"] = true,
["cast"] = {
50,
7,
},
["spellpercent_text_anchor"] = {
["y"] = -7.9800033569336,
["x"] = 1.0099945068359,
},
["spellname_text_outline"] = "OUTLINE",
["big_actorname_text_shadow_color"] = {
0,
0,
0,
1,
},
["level_text_font"] = "AvantGarde",
["percent_text_color"] = {
0.93725490196078,
0.97647058823529,
1,
},
["actorname_text_font"] = "Naowh",
["big_actorname_text_shadow_color_offset"] = {
1,
-1,
},
["mana_incombat"] = {
nil,
4,
},
["actorname_use_guild_color"] = false,
["all_names"] = true,
["big_actortitle_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 9,
["only_damaged"] = false,
["quest_color_enemy"] = {
1,
0.369,
0,
},
["only_thename"] = true,
["big_actortitle_text_font"] = "AvantGarde",
["spellpercent_text_size"] = 8,
["level_text_anchor"] = {
["y"] = 2.5199966430664,
["x"] = 1.4899978637695,
},
["big_actortitle_text_shadow_color_offset"] = {
1,
-1,
},
["spellname_text_size"] = 8,
["cast_incombat"] = {
105,
7,
},
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_anchor"] = {
["y"] = -7.9800033569336,
["x"] = -1.0100021362305,
["side"] = 10,
},
["big_actortitle_text_shadow_color"] = {
0,
0,
0,
1,
},
["percent_text_anchor"] = {
["y"] = -0.4000015258789063,
["x"] = 0.04000091552734375,
},
["big_actortitle_text_size"] = 9,
["spellname_text_font"] = "AvantGarde",
["big_actorname_text_outline"] = "OUTLINE",
["actorname_use_friends_color"] = false,
["quest_color_neutral"] = {
1,
0.65,
0,
},
["mana"] = {
nil,
4,
},
["percent_text_enabled"] = true,
["level_text_alpha"] = 1,
["spellpercent_text_enabled"] = true,
["percent_text_ooc"] = true,
["percent_text_font"] = "Naowh",
["buff_frame_y_offset"] = 0,
["quest_enabled"] = true,
["power_percent_text_font"] = "Accidental Presidency",
["actorname_text_color"] = {
nil,
nil,
nil,
0.87000000476837,
},
["health_incombat"] = {
50,
1,
},
["health"] = {
50,
1,
},
["big_actorname_text_font"] = "AvantGarde",
["percent_text_size"] = 8,
["actorname_text_anchor"] = {
["y"] = 9.799995422363281,
["x"] = -0.8300018310546875,
["side"] = 9,
},
},
["friendlynpc"] = {
["actorname_use_friends_color"] = true,
["spellpercent_text_font"] = "Naowh",
["show_guild_name"] = false,
["level_text_size"] = 9,
["actorname_use_class_color"] = false,
["cast"] = {
80,
},
["fixed_class_color"] = {
0,
1,
0,
},
["spellpercent_text_anchor"] = {
["y"] = -7.9800033569336,
["x"] = 1.0099945068359,
},
["percent_text_show_decimals"] = false,
["spellname_text_outline"] = "OUTLINE",
["click_through"] = true,
["level_text_font"] = "Naowh",
["actorname_text_font"] = "Naowh",
["actorname_use_guild_color"] = true,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 8,
["only_damaged"] = false,
["quest_color_enemy"] = {
1,
0.369,
0,
},
["only_thename"] = true,
["big_actortitle_text_font"] = "Naowh",
["spellpercent_text_size"] = 8,
["spellname_text_size"] = 9,
["level_text_anchor"] = {
["y"] = 2.5199966430664,
["x"] = 1.4899978637695,
},
["cast_incombat"] = {
80,
10,
},
["actorname_friend_color"] = {
0.71,
1,
1,
1,
},
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_anchor"] = {
["y"] = -0.3800048828125,
["x"] = 0.4899978637695313,
["side"] = 10,
},
["percent_text_anchor"] = {
["y"] = 4.6999969482422,
["x"] = -0.36000061035156,
["side"] = 5,
},
["spellname_text_font"] = "Naowh",
["only_names"] = false,
["quest_color_neutral"] = {
1,
0.65,
0,
},
["actorname_text_size"] = 9,
["castbar_offset"] = -0.90000152587891,
["big_actorname_text_font"] = "Naowh",
["percent_text_ooc"] = true,
["actorname_text_color"] = {
nil,
nil,
nil,
0.87000000476837,
},
["level_text_alpha"] = 1,
["percent_text_font"] = "Naowh",
["actorname_guild_color"] = {
0.498039,
1,
0.2,
1,
},
["big_actortitle_text_size"] = 9,
["health_incombat"] = {
61,
6,
},
["health"] = {
61,
6,
},
["power_percent_text_font"] = "Accidental Presidency",
["percent_text_color"] = {
0.93725490196078,
0.97647058823529,
1,
},
["actorname_text_anchor"] = {
["y"] = -3.800003051757813,
},
},
["global_health_width"] = 120,
["global_health_height"] = 10,
["enemyplayer"] = {
["castbar_offset"] = -0.90000152587891,
["spellpercent_text_font"] = "Naowh",
["cast"] = {
120,
14,
},
["spellpercent_text_anchor"] = {
["y"] = 0.6699981689453125,
["x"] = 0.0099945068359375,
},
["spellname_text_outline"] = "OUTLINE",
["level_text_font"] = "Naowh",
["actorname_text_font"] = "Naowh",
["all_names"] = true,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 9,
["quest_color_enemy"] = {
1,
0.369,
0,
1,
},
["big_actortitle_text_font"] = "Naowh",
["spellpercent_text_size"] = 8,
["level_text_anchor"] = {
["y"] = 1.199996948242188,
["x"] = -1,
},
["cast_incombat"] = {
nil,
14,
},
["spellname_text_anchor"] = {
["y"] = -0.3800048828125,
["x"] = 0.5,
["side"] = 10,
},
["percent_text_anchor"] = {
["y"] = -5.040000915527344,
["x"] = -1,
["side"] = 7,
},
["spellname_text_font"] = "Naowh",
["percent_text_show_decimals"] = false,
["quest_color_neutral"] = {
1,
0.65,
0,
1,
},
["actorname_text_size"] = 10,
["big_actorname_text_font"] = "Naowh",
["big_actortitle_text_size"] = 9,
["level_text_outline"] = "OUTLINE",
["actorname_text_anchor"] = {
["y"] = -5,
["x"] = 2,
["side"] = 1,
},
["spellpercent_text_enabled"] = false,
["percent_text_font"] = "Naowh",
["quest_enabled"] = true,
["percent_text_color"] = {
1,
1,
1,
},
["quest_color_enabled"] = true,
["health_incombat"] = {
nil,
10,
},
["health"] = {
120,
10,
},
["power_percent_text_font"] = "Accidental Presidency",
["level_text_alpha"] = 1,
["spellname_text_size"] = 9,
["percent_show_health"] = false,
["level_text_enabled"] = false,
},
["enemynpc"] = {
["big_actorname_text_size"] = 9,
["spellpercent_text_font"] = "Naowh",
["level_text_size"] = 10,
["cast"] = {
120,
12,
},
["spellpercent_text_anchor"] = {
["y"] = 0.66999816894531,
["x"] = 0.0099945068359375,
},
["percent_text_show_decimals"] = false,
["level_text_font"] = "Naowh",
["actorname_text_font"] = "Naowh",
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 9,
["big_actortitle_text_font"] = "Naowh",
["spellpercent_text_size"] = 8,
["level_text_anchor"] = {
["y"] = 1.1999969482422,
["x"] = -1,
},
["cast_incombat"] = {
nil,
12,
},
["spellname_text_anchor"] = {
["y"] = -0.279998779296875,
["x"] = 0.5,
["side"] = 10,
},
["percent_text_anchor"] = {
["y"] = -5.040000915527344,
["x"] = 0.5999984741210938,
["side"] = 7,
},
["spellname_text_font"] = "Naowh",
["actorname_text_size"] = 10,
["big_actorname_text_font"] = "Naowh",
["castbar_offset"] = -0.90000152587891,
["level_text_outline"] = "OUTLINE",
["big_actortitle_text_size"] = 9,
["level_text_alpha"] = 1,
["spellpercent_text_enabled"] = false,
["percent_text_font"] = "Naowh",
["spellname_text_size"] = 9,
["health"] = {
120,
10,
},
["percent_text_color"] = {
1,
1,
1,
},
["power_percent_text_font"] = "Accidental Presidency",
["actorname_text_anchor"] = {
["y"] = -5,
["x"] = 0.5999984741210938,
["side"] = 1,
},
["health_incombat"] = {
nil,
10,
},
["level_text_enabled"] = false,
},
},
["aura_y_offset"] = -0.600006103515625,
["use_ui_parent"] = true,
["indicator_elite"] = false,
["indicator_spec"] = false,
["resources_settings"] = {
["chr"] = {
["Player-1305-0C8A40FF"] = "HolyPower",
["Player-970-00A6B1E1"] = "ComboPoints",
["Player-970-00A567A0"] = "ComboPoints",
["Player-1084-09D4BD91"] = "Chi",
["Player-970-00A64901"] = "Runes",
["Player-5765-00078091"] = "Runes",
["Player-970-0096BE43"] = "ComboPoints",
["Player-970-00BDA374"] = "ComboPoints",
["Player-970-00BDD888"] = "ComboPoints",
["Player-970-00AC349B"] = "ComboPoints",
["Player-3674-0B3F8DA8"] = "ArcaneCharges",
["Player-970-00A522A0"] = "ComboPoints",
["Player-970-00BE6552"] = "ComboPoints",
["Player-4184-0023CCF5"] = "Runes",
["Player-1305-0C8EAECF"] = "HolyPower",
["Player-970-00875B07"] = "ComboPoints",
["Player-1084-09F17E42"] = "Runes",
["Player-4606-004CBC98"] = "Runes",
["Player-970-00BE53FD"] = "ComboPoints",
["Player-970-00BE111F"] = "ComboPoints",
["Player-1305-0C92307D"] = "ComboPoints",
["Player-5765-00076D77"] = "ComboPoints",
["Player-1621-063C3317"] = "ArcaneCharges",
["Player-970-00BE5CFF"] = "ComboPoints",
["Player-1084-0A7D9A76"] = "ComboPoints",
["Player-970-00BDDBE7"] = "ComboPoints",
["Player-1621-063C318F"] = "Runes",
["Player-970-00AC2EF5"] = "ComboPoints",
["Player-4184-004D2CBC"] = "HolyPower",
["Player-970-00BD9D74"] = "ComboPoints",
["Player-4606-004E5C31"] = "HolyPower",
["Player-970-00AC4486"] = "Runes",
["Player-1084-0A8EBA5D"] = "Chi",
["Player-970-00A52063"] = "ComboPoints",
["Player-4184-00C7C95C"] = "Essence",
["Player-1305-0C8E09A6"] = "Runes",
["Player-970-00BD9484"] = "ComboPoints",
["Player-970-00A6B14F"] = "ComboPoints",
["Player-970-00BD9E6F"] = "ComboPoints",
["Player-5765-000D53A8"] = "HolyPower",
["Player-1084-0A5FA399"] = "HolyPower",
["Player-970-00BE5F03"] = "ComboPoints",
["Player-3674-0B39D545"] = "SoulShards",
["Player-970-00AC37AD"] = "ComboPoints",
["Player-4184-003E01AD"] = "ComboPoints",
["Player-4606-004CCC47"] = "Runes",
["Player-4606-0031416A"] = "ComboPoints",
["Player-3674-09D96941"] = "Runes",
["Player-1621-0B55B779"] = "Essence",
["Player-1084-0A698CF4"] = "Runes",
["Player-1621-078F055D"] = "ComboPoints",
["Player-970-00B047D0"] = "ComboPoints",
["Player-1305-0C8B3F2E"] = "HolyPower",
["Player-970-00A56B4C"] = "ComboPoints",
["Player-1305-0CB01FD2"] = "Runes",
["Player-970-00BE0ADC"] = "ComboPoints",
["Player-970-00BDB55D"] = "ComboPoints",
["Player-1084-0A58A9E3"] = "SoulShards",
["Player-4606-0049FD3E"] = "Runes",
["Player-4184-006C9B23"] = "Runes",
["Player-1084-0A5C2A4F"] = "HolyPower",
["Player-4606-005181C7"] = "ComboPoints",
["Player-970-00BE118D"] = "ComboPoints",
["Player-4606-004E4AA9"] = "Chi",
["Player-3657-0B09936A"] = "ComboPoints",
["Player-970-00A6B1C5"] = "ComboPoints",
["Player-970-00BDCCEC"] = "ComboPoints",
["Player-4606-004BBAC3"] = "Runes",
["Player-970-00A6DFCE"] = "ComboPoints",
["Player-1621-06D67496"] = "SoulShards",
["Player-5765-00095A65"] = "HolyPower",
["Player-1084-0A867F11"] = "Runes",
["Player-970-0085F079"] = "Runes",
["Player-970-00BE51E3"] = "ComboPoints",
["Player-970-00BDD04B"] = "ComboPoints",
["Player-970-00A52221"] = "ComboPoints",
["Player-970-00B5EB97"] = "ComboPoints",
["Player-970-00BDD4F5"] = "ComboPoints",
["Player-970-007BE9B1"] = "Runes",
["Player-970-00BE4EAA"] = "ComboPoints",
["Player-970-00BDD630"] = "ComboPoints",
["Player-1084-0A804988"] = "Essence",
["Player-970-00BD966E"] = "ComboPoints",
["Player-970-00BE10EF"] = "ComboPoints",
["Player-970-00BE1157"] = "ComboPoints",
["Player-1084-09F19274"] = "HolyPower",
["Player-970-00BDD382"] = "ComboPoints",
["Player-970-00854F7F"] = "ComboPoints",
["Player-1084-0A24293C"] = "ComboPoints",
["Player-1084-0A51CE7A"] = "ArcaneCharges",
["Player-970-00A60220"] = "ComboPoints",
["Player-4184-004E68EF"] = "Essence",
["Player-970-00A53D40"] = "ComboPoints",
["Player-970-00BDD7EE"] = "ComboPoints",
["Player-970-00BD9435"] = "ComboPoints",
["Player-970-00AC2600"] = "ComboPoints",
["Player-4606-00264986"] = "HolyPower",
["Player-1084-0961A181"] = "Runes",
["Player-970-00A70C27"] = "Essence",
["Player-970-00AC4802"] = "ComboPoints",
["Player-970-00BD9114"] = "ComboPoints",
["Player-4606-0030ACFA"] = "Runes",
["Player-1621-0B2AA4E2"] = "HolyPower",
["Player-4184-00427226"] = "ComboPoints",
["Player-4184-009446E4"] = "ComboPoints",
["Player-970-00AC0987"] = "ComboPoints",
["Player-970-00BE2EAD"] = "ComboPoints",
["Player-4184-0042C8F4"] = "HolyPower",
["Player-970-00881291"] = "ComboPoints",
["Player-970-00A6B1D4"] = "ComboPoints",
["Player-4606-00518192"] = "ComboPoints",
["Player-970-00BD9C5C"] = "ComboPoints",
["Player-1305-0CD21673"] = "ComboPoints",
},
},
["spell_animation_list"] = {
[27285] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["enabled"] = true,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.075,
["cooldown"] = 0.75,
["scale_upY"] = 1.1,
},
},
[46968] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
},
[11366] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["enabled"] = true,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.05,
["cooldown"] = 0.75,
["scale_upY"] = 1.15,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[228354] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[32645] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["enabled"] = true,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["scale_upY"] = 1.1999999284744,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
},
[187874] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
},
[185763] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3.6583230495453,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["enabled"] = true,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["scale_upY"] = 1.0299999713898,
},
},
[203782] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[100784] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[31935] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["enabled"] = true,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["scale_upY"] = 1.03,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[53351] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["enabled"] = true,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["scale_upY"] = 1,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[257045] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[107270] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
},
[49998] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["scaleY"] = 1,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[7268] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[206930] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["enabled"] = true,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["scale_upY"] = 1,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[196278] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[162243] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[196819] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["enabled"] = true,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["scale_upY"] = 1.2999999523163,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
},
[264178] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[280720] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 200,
},
},
[187708] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[185438] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 6.460000038147,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["enabled"] = true,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["scale_upY"] = 1.0299999713898,
},
},
[86040] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[52174] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["enabled"] = true,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.075,
["cooldown"] = 0.75,
["scale_upY"] = 1.15,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
},
[2643] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[324540] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["enabled"] = true,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["scale_upY"] = 1.0299999713898,
},
},
[53595] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["enabled"] = true,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["scale_upY"] = 1.03,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[108853] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[204157] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 6,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["enabled"] = true,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["scale_upY"] = 1.03,
},
},
[117418] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
},
[148135] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.75,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
},
[228478] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["enabled"] = true,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["scale_upY"] = 1.0299999713898,
},
},
[199547] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["enabled"] = true,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["scale_upY"] = 1.039999961853,
},
},
[222024] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1,
["amplitude"] = 1.7999999523163,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
},
[155166] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[8042] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["enabled"] = true,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.060000000745058,
["cooldown"] = 0.75,
["scale_upY"] = 1.05,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
},
["indicator_scale"] = 0.9999999403953552,
["cast_statusbar_spark_offset"] = -15,
["castbar_icon_size"] = "same as castbar plus healthbar",
["npc_colors"] = {
[99358] = {
true,
false,
"magenta",
},
[196798] = {
true,
false,
"magenta",
},
[216619] = {
true,
false,
"mediumslateblue",
},
[194241] = {
true,
false,
"mediumslateblue",
},
[213806] = {
true,
false,
"aqua",
},
[190405] = {
true,
false,
"aqua",
},
[196671] = {
true,
false,
"mediumslateblue",
},
[180431] = {
true,
false,
"aqua",
},
[216364] = {
true,
false,
"aqua",
},
[195265] = {
true,
false,
"mediumslateblue",
},
[99359] = {
true,
false,
"deepskyblue",
},
[184908] = {
true,
false,
"magenta",
},
[150254] = {
false,
false,
"aqua",
},
[173016] = {
true,
false,
"aqua",
},
[129602] = {
true,
false,
"mediumslateblue",
},
[180433] = {
true,
false,
"orangered",
},
[209333] = {
true,
false,
"mediumslateblue",
},
[120651] = {
true,
false,
"darksalmon",
},
[213937] = {
true,
false,
"mediumslateblue",
},
[197697] = {
true,
false,
"magenta",
},
[40633] = {
true,
false,
"deepskyblue",
},
[184910] = {
true,
false,
"palegreen",
},
[178133] = {
false,
false,
"aqua",
},
[76407] = {
true,
false,
"mediumslateblue",
},
[40825] = {
true,
false,
"mediumslateblue",
},
[131587] = {
true,
false,
"deepskyblue",
},
[184911] = {
true,
false,
"darksalmon",
},
[126918] = {
true,
false,
"deepskyblue",
},
[196548] = {
true,
false,
"aqua",
},
[135552] = {
true,
false,
"deepskyblue",
},
[186191] = {
true,
false,
"aqua",
},
[161895] = {
true,
false,
"magenta",
},
[206140] = {
true,
false,
"mediumslateblue",
},
[83761] = {
true,
false,
"mediumslateblue",
},
[184018] = {
true,
false,
"mediumslateblue",
},
[208698] = {
true,
false,
"aqua",
},
[178392] = {
true,
false,
"deepskyblue",
},
[168418] = {
true,
false,
"aqua",
},
[200387] = {
true,
false,
"mediumslateblue",
},
[199748] = {
true,
false,
"aqua",
},
[165222] = {
true,
false,
"aqua",
},
[184020] = {
true,
false,
"deepskyblue",
},
[129989] = {
true,
false,
"deepskyblue",
},
[199749] = {
true,
false,
"mediumslateblue",
},
[185683] = {
true,
false,
"palegreen",
},
[168420] = {
true,
false,
"aqua",
},
[208445] = {
true,
false,
"mediumslateblue",
},
[170850] = {
true,
false,
"deepskyblue",
},
[174175] = {
true,
false,
"deepskyblue",
},
[210108] = {
true,
false,
"mediumslateblue",
},
[83763] = {
true,
false,
"deepskyblue",
},
[131849] = {
true,
false,
"deepskyblue",
},
[214840] = {
true,
false,
"deepskyblue",
},
[210109] = {
true,
false,
"mediumslateblue",
},
[185685] = {
true,
false,
"darksalmon",
},
[131850] = {
true,
false,
"aqua",
},
[178141] = {
true,
false,
"deepskyblue",
},
[213179] = {
true,
false,
"mediumslateblue",
},
[196044] = {
true,
false,
"aqua",
},
[190034] = {
true,
false,
"mediumslateblue",
},
[83892] = {
true,
false,
"aqua",
},
[135048] = {
true,
false,
"magenta",
},
[178142] = {
true,
false,
"aqua",
},
[98406] = {
true,
false,
"deepskyblue",
},
[211262] = {
true,
false,
"mediumslateblue",
},
[200137] = {
true,
false,
"aqua",
},
[194895] = {
true,
false,
"magenta",
},
[83765] = {
true,
false,
"aqua",
},
[83893] = {
true,
false,
"deepskyblue",
},
[128969] = {
true,
false,
"mediumslateblue",
},
[99366] = {
true,
false,
"aqua",
},
[82039] = {
true,
false,
"magenta",
},
[209090] = {
true,
false,
"mediumslateblue",
},
[220599] = {
true,
false,
"aqua",
},
[177889] = {
true,
false,
"mediumslateblue",
},
[187224] = {
true,
false,
"mediumslateblue",
},
[154744] = {
true,
false,
"mediumslateblue",
},
[128650] = {
true,
false,
"mediumslateblue",
},
[217531] = {
true,
false,
"mediumslateblue",
},
[83894] = {
true,
false,
"mediumslateblue",
},
[98280] = {
true,
false,
"aqua",
},
[194898] = {
true,
false,
"deepskyblue",
},
[167533] = {
true,
false,
"deepskyblue",
},
[177891] = {
true,
false,
"deepskyblue",
},
[133007] = {
true,
false,
"mediumslateblue",
},
[128651] = {
true,
false,
"mediumslateblue",
},
[217533] = {
true,
false,
"mediumslateblue",
},
[220730] = {
true,
false,
"mediumslateblue",
},
[177892] = {
true,
false,
"deepskyblue",
},
[165872] = {
true,
false,
"deepskyblue",
},
[131858] = {
true,
false,
"deepskyblue",
},
[129547] = {
true,
false,
"mediumslateblue",
},
[45912] = {
true,
false,
"aqua",
},
[128652] = {
true,
false,
"mediumslateblue",
},
[207177] = {
true,
false,
"mediumslateblue",
},
[127757] = {
true,
false,
"mediumslateblue",
},
[40925] = {
true,
false,
"mediumslateblue",
},
[89011] = {
true,
false,
"aqua",
},
[188252] = {
true,
false,
"mediumslateblue",
},
[189531] = {
true,
false,
"deepskyblue",
},
[162038] = {
true,
false,
"deepskyblue",
},
[98538] = {
true,
false,
"mediumslateblue",
},
[150146] = {
true,
false,
"aqua",
},
[137103] = {
true,
false,
"deepskyblue",
},
[129548] = {
true,
false,
"deepskyblue",
},
[101991] = {
true,
false,
"aqua",
},
[162039] = {
true,
false,
"aqua",
},
[82682] = {
true,
false,
"mediumslateblue",
},
[97068] = {
true,
false,
"mediumslateblue",
},
[75713] = {
true,
false,
"aqua",
},
[186208] = {
true,
false,
"mediumslateblue",
},
[162040] = {
true,
false,
"deepskyblue",
},
[195927] = {
true,
false,
"mediumslateblue",
},
[81212] = {
true,
false,
"deepskyblue",
},
[150276] = {
true,
false,
"deepskyblue",
},
[83578] = {
true,
false,
"mediumslateblue",
},
[115419] = {
true,
false,
"mediumslateblue",
},
[97197] = {
true,
false,
"aqua",
},
[126928] = {
false,
false,
"deepskyblue",
},
[203857] = {
true,
false,
"aqua",
},
[197847] = {
true,
false,
"deepskyblue",
},
[195929] = {
true,
false,
"mediumslateblue",
},
[131864] = {
true,
false,
"mediumslateblue",
},
[186339] = {
true,
false,
"aqua",
},
[40319] = {
true,
false,
"mediumslateblue",
},
[198999] = {
true,
false,
"mediumslateblue",
},
[39392] = {
true,
false,
"aqua",
},
[193373] = {
true,
false,
"aqua",
},
[228539] = {
true,
false,
"aqua",
},
[199000] = {
true,
false,
"mediumslateblue",
},
[133912] = {
true,
false,
"deepskyblue",
},
[228540] = {
true,
false,
"aqua",
},
[75652] = {
true,
false,
"mediumslateblue",
},
[134041] = {
true,
false,
"deepskyblue",
},
[203861] = {
true,
false,
"mediumslateblue",
},
[98542] = {
true,
false,
"mediumslateblue",
},
[179821] = {
true,
false,
"mediumslateblue",
},
[83389] = {
true,
false,
"deepskyblue",
},
[81407] = {
true,
false,
"deepskyblue",
},
[129552] = {
true,
false,
"mediumslateblue",
},
[154758] = {
true,
false,
"mediumslateblue",
},
[193760] = {
true,
false,
"mediumslateblue",
},
[115486] = {
true,
false,
"mediumslateblue",
},
[90998] = {
true,
false,
"aqua",
},
[122967] = {
true,
false,
"mediumslateblue",
},
[105704] = {
true,
false,
"aqua",
},
[166396] = {
true,
false,
"aqua",
},
[127315] = {
true,
false,
"magenta",
},
[187240] = {
true,
false,
"mediumslateblue",
},
[129553] = {
true,
false,
"aqua",
},
[180335] = {
true,
false,
"deepskyblue",
},
[162049] = {
true,
false,
"mediumslateblue",
},
[214350] = {
true,
false,
"magenta",
},
[168443] = {
true,
false,
"deepskyblue",
},
[77700] = {
true,
false,
"aqua",
},
[84989] = {
true,
false,
"deepskyblue",
},
[184300] = {
true,
false,
"mediumslateblue",
},
[180336] = {
true,
false,
"aqua",
},
[101549] = {
true,
false,
"magenta",
},
[105705] = {
true,
false,
"magenta",
},
[170490] = {
true,
false,
"aqua",
},
[168572] = {
true,
false,
"deepskyblue",
},
[184301] = {
true,
false,
"mediumslateblue",
},
[225605] = {
true,
false,
"aqua",
},
[115488] = {
true,
false,
"aqua",
},
[214608] = {
true,
false,
"aqua",
},
[97202] = {
true,
false,
"aqua",
},
[162691] = {
true,
false,
"mediumslateblue",
},
[81985] = {
true,
false,
"aqua",
},
[122969] = {
true,
false,
"aqua",
},
[40577] = {
true,
false,
"mediumslateblue",
},
[191847] = {
true,
false,
"aqua",
},
[168446] = {
true,
false,
"mediumslateblue",
},
[150160] = {
true,
false,
"mediumslateblue",
},
[83392] = {
true,
false,
"mediumslateblue",
},
[162692] = {
true,
false,
"mediumslateblue",
},
[178165] = {
true,
false,
"mediumslateblue",
},
[114338] = {
true,
false,
"aqua",
},
[104300] = {
true,
false,
"deepskyblue",
},
[162693] = {
true,
false,
"mediumslateblue",
},
[131492] = {
true,
false,
"aqua",
},
[76104] = {
true,
false,
"aqua",
},
[81283] = {
true,
false,
"aqua",
},
[86526] = {
true,
false,
"deepskyblue",
},
[135329] = {
true,
false,
"magenta",
},
[81603] = {
true,
false,
"mediumslateblue",
},
[166275] = {
true,
false,
"aqua",
},
[165764] = {
true,
false,
"mediumslateblue",
},
[187503] = {
true,
false,
"mediumslateblue",
},
[166276] = {
true,
false,
"deepskyblue",
},
[168578] = {
true,
false,
"aqua",
},
[150292] = {
true,
false,
"mediumslateblue",
},
[219984] = {
true,
false,
"mediumslateblue",
},
[45917] = {
true,
false,
"deepskyblue",
},
[150165] = {
true,
false,
"aqua",
},
[186226] = {
true,
false,
"magenta",
},
[125977] = {
true,
false,
"magenta",
},
[122972] = {
true,
false,
"aqua",
},
[186738] = {
true,
false,
"mediumslateblue",
},
[177787] = {
true,
false,
"aqua",
},
[170882] = {
true,
false,
"aqua",
},
[218324] = {
true,
false,
"mediumslateblue",
},
[186739] = {
true,
false,
"mediumslateblue",
},
[196202] = {
true,
false,
"aqua",
},
[103344] = {
true,
false,
"mediumslateblue",
},
[122973] = {
true,
false,
"magenta",
},
[100531] = {
true,
false,
"mediumslateblue",
},
[213338] = {
true,
false,
"aqua",
},
[196203] = {
true,
false,
"deepskyblue",
},
[186229] = {
true,
false,
"mediumslateblue",
},
[186741] = {
true,
false,
"aqua",
},
[162317] = {
true,
false,
"deepskyblue",
},
[150169] = {
true,
false,
"deepskyblue",
},
[183033] = {
true,
false,
"magenta",
},
[114790] = {
true,
false,
"mediumslateblue",
},
[100532] = {
true,
false,
"aqua",
},
[187510] = {
true,
false,
"deepskyblue",
},
[163086] = {
true,
false,
"deepskyblue",
},
[40484] = {
true,
false,
"mediumslateblue",
},
[199659] = {
true,
false,
"magenta",
},
[205158] = {
true,
false,
"mediumslateblue",
},
[129369] = {
true,
false,
"mediumslateblue",
},
[97720] = {
true,
false,
"magenta",
},
[45919] = {
true,
false,
"mediumslateblue",
},
[213343] = {
true,
false,
"mediumslateblue",
},
[83846] = {
true,
false,
"mediumslateblue",
},
[138281] = {
true,
false,
"mediumslateblue",
},
[114792] = {
true,
false,
"aqua",
},
[213216] = {
true,
false,
"mediumslateblue",
},
[173447] = {
false,
false,
"white",
},
[187897] = {
true,
false,
"magenta",
},
[129370] = {
true,
false,
"aqua",
},
[213217] = {
true,
false,
"aqua",
},
[40357] = {
true,
false,
"deepskyblue",
},
[81737] = {
true,
false,
"darksalmon",
},
[91008] = {
true,
false,
"deepskyblue",
},
[168717] = {
true,
false,
"deepskyblue",
},
[144293] = {
true,
false,
"mediumslateblue",
},
[165137] = {
true,
false,
"mediumslateblue",
},
[168718] = {
true,
false,
"aqua",
},
[144294] = {
true,
false,
"aqua",
},
[183424] = {
true,
false,
"aqua",
},
[144295] = {
true,
false,
"aqua",
},
[183425] = {
true,
false,
"deepskyblue",
},
[105715] = {
true,
false,
"aqua",
},
[212453] = {
true,
false,
"aqua",
},
[129372] = {
true,
false,
"magenta",
},
[98810] = {
true,
false,
"mediumslateblue",
},
[205804] = {
true,
false,
"deepskyblue",
},
[179334] = {
true,
false,
"mediumslateblue",
},
[164501] = {
true,
false,
"mediumslateblue",
},
[130012] = {
true,
false,
"magenta",
},
[163862] = {
true,
false,
"deepskyblue",
},
[214117] = {
true,
false,
"orangered",
},
[191739] = {
true,
false,
"mediumslateblue",
},
[208363] = {
true,
false,
"mediumslateblue",
},
[144298] = {
true,
false,
"mediumslateblue",
},
[176395] = {
true,
false,
"deepskyblue",
},
[133685] = {
true,
false,
"deepskyblue",
},
[190206] = {
true,
false,
"deepskyblue",
},
[224221] = {
true,
false,
"mediumslateblue",
},
[184580] = {
true,
false,
"aqua",
},
[96574] = {
true,
false,
"mediumslateblue",
},
[129374] = {
true,
false,
"deepskyblue",
},
[190207] = {
true,
false,
"aqua",
},
[184581] = {
true,
false,
"mediumslateblue",
},
[104247] = {
true,
false,
"aqua",
},
[130909] = {
true,
false,
"deepskyblue",
},
[186116] = {
true,
false,
"magenta",
},
[187523] = {
true,
false,
"mediumslateblue",
},
[100539] = {
true,
false,
"mediumslateblue",
},
[208367] = {
true,
false,
"deepskyblue",
},
[165529] = {
true,
false,
"aqua",
},
[98813] = {
true,
false,
"aqua",
},
[206066] = {
true,
false,
"aqua",
},
[114542] = {
true,
false,
"mediumslateblue",
},
[214762] = {
true,
false,
"deepskyblue",
},
[186246] = {
true,
false,
"aqua",
},
[115757] = {
true,
false,
"mediumslateblue",
},
[96512] = {
true,
false,
"mediumslateblue",
},
[96640] = {
false,
false,
"mediumslateblue",
},
[206068] = {
true,
false,
"deepskyblue",
},
[166299] = {
true,
false,
"aqua",
},
[186120] = {
true,
false,
"magenta",
},
[190340] = {
true,
false,
"mediumslateblue",
},
[194816] = {
true,
false,
"deepskyblue",
},
[39625] = {
true,
false,
"mediumslateblue",
},
[164510] = {
true,
false,
"deepskyblue",
},
[171799] = {
true,
false,
"deepskyblue",
},
[184331] = {
true,
false,
"mediumslateblue",
},
[206070] = {
true,
false,
"mediumslateblue",
},
[215405] = {
true,
false,
"mediumslateblue",
},
[114544] = {
true,
false,
"deepskyblue",
},
[186122] = {
true,
false,
"mediumslateblue",
},
[199549] = {
true,
false,
"deepskyblue",
},
[98368] = {
true,
false,
"deepskyblue",
},
[122984] = {
true,
false,
"mediumslateblue",
},
[172312] = {
true,
false,
"deepskyblue",
},
[166302] = {
true,
false,
"aqua",
},
[81297] = {
true,
false,
"deepskyblue",
},
[155433] = {
false,
false,
"magenta",
},
[165919] = {
true,
false,
"deepskyblue",
},
[195842] = {
true,
false,
"aqua",
},
[215407] = {
true,
false,
"mediumslateblue",
},
[173720] = {
true,
false,
"mediumslateblue",
},
[155434] = {
false,
false,
"violet",
},
[196482] = {
true,
false,
"mediumslateblue",
},
[101438] = {
true,
false,
"aqua",
},
[186125] = {
true,
false,
"aqua",
},
[184335] = {
true,
false,
"aqua",
},
[45924] = {
true,
false,
"deepskyblue",
},
[206074] = {
true,
false,
"aqua",
},
[97219] = {
true,
false,
"mediumslateblue",
},
[205691] = {
true,
false,
"aqua",
},
[83025] = {
true,
false,
"mediumslateblue",
},
[179733] = {
true,
false,
"orangered",
},
[163621] = {
true,
false,
"deepskyblue",
},
[168992] = {
true,
false,
"aqua",
},
[196102] = {
true,
false,
"aqua",
},
[164517] = {
true,
false,
"mediumslateblue",
},
[98243] = {
true,
false,
"mediumslateblue",
},
[190348] = {
true,
false,
"deepskyblue",
},
[83026] = {
true,
false,
"mediumslateblue",
},
[40586] = {
true,
false,
"mediumslateblue",
},
[81236] = {
true,
false,
"aqua",
},
[130404] = {
true,
false,
"mediumslateblue",
},
[82579] = {
true,
false,
"deepskyblue",
},
[131527] = {
true,
false,
"mediumslateblue",
},
[165414] = {
true,
false,
"aqua",
},
[193291] = {
true,
false,
"magenta",
},
[114804] = {
true,
false,
"aqua",
},
[59544] = {
true,
false,
"aqua",
},
[187154] = {
true,
false,
"mediumslateblue",
},
[135365] = {
true,
false,
"mediumslateblue",
},
[214264] = {
true,
false,
"deepskyblue",
},
[168357] = {
true,
false,
"aqua",
},
[187155] = {
true,
false,
"aqua",
},
[163882] = {
true,
false,
"deepskyblue",
},
[186644] = {
true,
false,
"mediumslateblue",
},
[164266] = {
true,
false,
"deepskyblue",
},
[201222] = {
true,
false,
"mediumslateblue",
},
[173729] = {
true,
false,
"mediumslateblue",
},
[194317] = {
true,
false,
"mediumslateblue",
},
[169893] = {
true,
false,
"mediumslateblue",
},
[150712] = {
true,
false,
"aqua",
},
[201223] = {
true,
false,
"aqua",
},
[115765] = {
true,
false,
"deepskyblue",
},
[200840] = {
true,
false,
"deepskyblue",
},
[59545] = {
true,
false,
"deepskyblue",
},
[135241] = {
true,
false,
"magenta",
},
[102019] = {
true,
false,
"aqua",
},
[133835] = {
true,
false,
"mediumslateblue",
},
[75459] = {
true,
false,
"aqua",
},
[80816] = {
true,
false,
"aqua",
},
[167965] = {
true,
false,
"aqua",
},
[100485] = {
true,
false,
"mediumslateblue",
},
[192786] = {
true,
false,
"deepskyblue",
},
[163618] = {
true,
false,
"deepskyblue",
},
[113398] = {
true,
false,
"mediumslateblue",
},
[114319] = {
true,
false,
"deepskyblue",
},
[187160] = {
true,
false,
"deepskyblue",
},
[129600] = {
true,
false,
"aqua",
},
[190403] = {
true,
false,
"mediumslateblue",
},
[213119] = {
true,
false,
"mediumslateblue",
},
[95674] = {
true,
false,
"mediumslateblue",
},
[212673] = {
true,
false,
"mediumslateblue",
},
[40634] = {
true,
false,
"magenta",
},
[187033] = {
true,
false,
"mediumslateblue",
},
[131586] = {
true,
false,
"deepskyblue",
},
[185680] = {
true,
false,
"magenta",
},
[204931] = {
true,
false,
"mediumslateblue",
},
[100486] = {
true,
false,
"aqua",
},
[146753] = {
false,
false,
"blue",
},
[101637] = {
true,
false,
"deepskyblue",
},
[163121] = {
true,
false,
"deepskyblue",
},
[102788] = {
true,
false,
"mediumslateblue",
},
[205152] = {
true,
false,
"mediumslateblue",
},
[137521] = {
true,
false,
"deepskyblue",
},
[189464] = {
true,
false,
"aqua",
},
[76446] = {
true,
false,
"aqua",
},
[192789] = {
true,
false,
"deepskyblue",
},
[195930] = {
true,
false,
"mediumslateblue",
},
[188011] = {
true,
false,
"mediumslateblue",
},
[122971] = {
true,
false,
"deepskyblue",
},
[150297] = {
true,
false,
"aqua",
},
[138187] = {
true,
false,
"aqua",
},
[135246] = {
false,
false,
"white",
},
[197698] = {
true,
false,
"magenta",
},
[45704] = {
true,
false,
"magenta",
},
[224219] = {
true,
false,
"aqua",
},
[196115] = {
true,
false,
"mediumslateblue",
},
[212403] = {
true,
false,
"aqua",
},
[98696] = {
true,
false,
"deepskyblue",
},
[193293] = {
true,
false,
"deepskyblue",
},
[189466] = {
true,
false,
"mediumslateblue",
},
[45928] = {
true,
false,
"mediumslateblue",
},
[189722] = {
true,
false,
"mediumslateblue",
},
[138254] = {
true,
false,
"deepskyblue",
},
[131667] = {
true,
false,
"mediumslateblue",
},
[144071] = {
true,
false,
"aqua",
},
[200836] = {
true,
false,
"deepskyblue",
},
[190362] = {
true,
false,
"deepskyblue",
},
[189467] = {
true,
false,
"deepskyblue",
},
[195851] = {
true,
false,
"deepskyblue",
},
[216293] = {
true,
false,
"aqua",
},
[208438] = {
true,
false,
"mediumslateblue",
},
[195928] = {
true,
false,
"mediumslateblue",
},
[192788] = {
true,
false,
"aqua",
},
[223994] = {
true,
false,
"aqua",
},
[189340] = {
true,
false,
"mediumslateblue",
},
[174197] = {
true,
false,
"aqua",
},
[163126] = {
true,
false,
"aqua",
},
[162103] = {
true,
false,
"deepskyblue",
},
[193944] = {
true,
false,
"aqua",
},
[168681] = {
true,
false,
"mediumslateblue",
},
[81819] = {
true,
false,
"deepskyblue",
},
[211263] = {
true,
false,
"mediumslateblue",
},
[213893] = {
true,
false,
"aqua",
},
[163894] = {
true,
false,
"deepskyblue",
},
[194316] = {
true,
false,
"mediumslateblue",
},
[84990] = {
true,
false,
"aqua",
},
[168318] = {
true,
false,
"deepskyblue",
},
[131670] = {
true,
false,
"mediumslateblue",
},
[148120] = {
false,
false,
"blue",
},
[197398] = {
false,
false,
"aqua",
},
[162744] = {
true,
false,
"deepskyblue",
},
[189470] = {
true,
false,
"magenta",
},
[187552] = {
true,
false,
"deepskyblue",
},
[163128] = {
true,
false,
"aqua",
},
[173044] = {
true,
false,
"aqua",
},
[165430] = {
true,
false,
"deepskyblue",
},
[81820] = {
true,
false,
"aqua",
},
[115020] = {
true,
false,
"mediumslateblue",
},
[200126] = {
true,
false,
"aqua",
},
[189471] = {
true,
false,
"mediumslateblue",
},
[192796] = {
true,
false,
"magenta",
},
[186658] = {
true,
false,
"aqua",
},
[192333] = {
true,
false,
"aqua",
},
[206351] = {
true,
false,
"aqua",
},
[128455] = {
true,
false,
"deepskyblue",
},
[96934] = {
true,
false,
"deepskyblue",
},
[114636] = {
true,
false,
"deepskyblue",
},
[164920] = {
true,
false,
"deepskyblue",
},
[134284] = {
true,
false,
"aqua",
},
[102232] = {
true,
false,
"aqua",
},
[131545] = {
true,
false,
"aqua",
},
[206352] = {
true,
false,
"deepskyblue",
},
[95842] = {
true,
false,
"aqua",
},
[196045] = {
true,
false,
"magenta",
},
[190368] = {
true,
false,
"aqua",
},
[199703] = {
true,
false,
"aqua",
},
[213934] = {
true,
false,
"deepskyblue",
},
[162047] = {
true,
false,
"deepskyblue",
},
[101476] = {
true,
false,
"magenta",
},
[184131] = {
true,
false,
"magenta",
},
[188067] = {
true,
false,
"aqua",
},
[213770] = {
true,
false,
"mediumslateblue",
},
[168886] = {
true,
false,
"deepskyblue",
},
[168658] = {
true,
false,
"deepskyblue",
},
[45930] = {
true,
false,
"mediumslateblue",
},
[162689] = {
true,
false,
"deepskyblue",
},
[211341] = {
true,
false,
"magenta",
},
[225479] = {
true,
false,
"aqua",
},
[40943] = {
true,
false,
"aqua",
},
[150168] = {
true,
false,
"mediumslateblue",
},
[190370] = {
true,
false,
"mediumslateblue",
},
[165946] = {
true,
false,
"deepskyblue",
},
[206697] = {
true,
false,
"aqua",
},
[192800] = {
true,
false,
"aqua",
},
[150295] = {
true,
false,
"mediumslateblue",
},
[168627] = {
true,
false,
"aqua",
},
[135240] = {
true,
false,
"aqua",
},
[186151] = {
true,
false,
"mediumslateblue",
},
[169905] = {
true,
false,
"deepskyblue",
},
[211087] = {
true,
false,
"mediumslateblue",
},
[83613] = {
true,
false,
"mediumslateblue",
},
[204206] = {
true,
false,
"mediumslateblue",
},
[152009] = {
true,
false,
"deepskyblue",
},
[131677] = {
true,
false,
"mediumslateblue",
},
[164921] = {
true,
false,
"aqua",
},
[165076] = {
true,
false,
"aqua",
},
[172981] = {
true,
false,
"deepskyblue",
},
[203799] = {
true,
false,
"deepskyblue",
},
[129601] = {
true,
false,
"deepskyblue",
},
[135474] = {
true,
false,
"aqua",
},
[164926] = {
true,
false,
"mediumslateblue",
},
[164414] = {
true,
false,
"aqua",
},
[113537] = {
true,
false,
"mediumslateblue",
},
[128434] = {
true,
false,
"magenta",
},
[190373] = {
true,
false,
"aqua",
},
[189478] = {
true,
false,
"mediumslateblue",
},
[211089] = {
true,
false,
"mediumslateblue",
},
[224516] = {
true,
false,
"aqua",
},
[167612] = {
true,
false,
"aqua",
},
[59555] = {
true,
false,
"aqua",
},
[174773] = {
true,
false,
"magenta",
},
[84957] = {
true,
false,
"orangered",
},
[197535] = {
true,
false,
"mediumslateblue",
},
[114624] = {
true,
false,
"aqua",
},
[194315] = {
true,
false,
"mediumslateblue",
},
[81235] = {
false,
false,
"white",
},
[198047] = {
true,
false,
"deepskyblue",
},
[59546] = {
true,
false,
"aqua",
},
[40177] = {
true,
false,
"mediumslateblue",
},
[221979] = {
true,
false,
"aqua",
},
[129367] = {
true,
false,
"aqua",
},
[168942] = {
true,
false,
"deepskyblue",
},
[186124] = {
true,
false,
"deepskyblue",
},
[198995] = {
true,
false,
"mediumslateblue",
},
[176565] = {
true,
false,
"aqua",
},
[205337] = {
true,
false,
"mediumslateblue",
},
[207969] = {
true,
false,
"aqua",
},
[164929] = {
true,
false,
"mediumslateblue",
},
[165824] = {
true,
false,
"mediumslateblue",
},
[196642] = {
false,
false,
"aqua",
},
[95772] = {
true,
false,
"deepskyblue",
},
[163891] = {
true,
false,
"aqua",
},
[192934] = {
true,
false,
"mediumslateblue",
},
[200926] = {
true,
false,
"mediumslateblue",
},
[102253] = {
true,
false,
"deepskyblue",
},
[177816] = {
true,
false,
"deepskyblue",
},
[190377] = {
true,
false,
"deepskyblue",
},
[92610] = {
true,
false,
"magenta",
},
[213892] = {
true,
false,
"aqua",
},
[115418] = {
true,
false,
"deepskyblue",
},
[84767] = {
true,
false,
"mediumslateblue",
},
[114626] = {
true,
false,
"aqua",
},
[163524] = {
true,
false,
"mediumslateblue",
},
[189227] = {
true,
false,
"deepskyblue",
},
[205723] = {
true,
false,
"deepskyblue",
},
[210966] = {
true,
false,
"aqua",
},
[131863] = {
true,
false,
"mediumslateblue",
},
[167998] = {
true,
false,
"deepskyblue",
},
[205212] = {
true,
false,
"deepskyblue",
},
[167607] = {
true,
false,
"deepskyblue",
},
[98706] = {
true,
false,
"mediumslateblue",
},
[196576] = {
true,
false,
"deepskyblue",
},
[203678] = {
true,
false,
"mediumslateblue",
},
[131812] = {
true,
false,
"mediumslateblue",
},
[187566] = {
true,
false,
"mediumslateblue",
},
[195878] = {
true,
false,
"deepskyblue",
},
[176396] = {
true,
false,
"mediumslateblue",
},
[131685] = {
true,
false,
"aqua",
},
[102287] = {
true,
false,
"mediumslateblue",
},
[186220] = {
true,
false,
"aqua",
},
[190342] = {
true,
false,
"aqua",
},
[184107] = {
true,
false,
"mediumslateblue",
},
[133870] = {
true,
false,
"aqua",
},
[197985] = {
true,
false,
"aqua",
},
[164804] = {
true,
false,
"mediumslateblue",
},
[40935] = {
true,
false,
"deepskyblue",
},
[196263] = {
true,
false,
"aqua",
},
[192481] = {
true,
false,
"aqua",
},
[95766] = {
true,
false,
"deepskyblue",
},
[104246] = {
true,
false,
"deepskyblue",
},
[163619] = {
false,
false,
"white",
},
[111563] = {
true,
false,
"deepskyblue",
},
[167876] = {
true,
false,
"deepskyblue",
},
[104270] = {
true,
false,
"aqua",
},
[199717] = {
true,
false,
"mediumslateblue",
},
[114628] = {
true,
false,
"magenta",
},
[205727] = {
true,
false,
"aqua",
},
[197671] = {
true,
false,
"mediumslateblue",
},
[138465] = {
true,
false,
"deepskyblue",
},
[208365] = {
true,
false,
"palegreen",
},
[59552] = {
true,
false,
"mediumslateblue",
},
[167493] = {
true,
false,
"aqua",
},
[170690] = {
true,
false,
"deepskyblue",
},
[189232] = {
true,
false,
"mediumslateblue",
},
[223253] = {
true,
false,
"aqua",
},
[45935] = {
true,
false,
"aqua",
},
[179386] = {
true,
false,
"deepskyblue",
},
[40788] = {
true,
false,
"orangered",
},
[155090] = {
true,
false,
"deepskyblue",
},
[126969] = {
true,
false,
"magenta",
},
[131817] = {
true,
false,
"magenta",
},
[114629] = {
true,
false,
"deepskyblue",
},
[162763] = {
true,
false,
"mediumslateblue",
},
[224271] = {
true,
false,
"deepskyblue",
},
[167111] = {
true,
false,
"aqua",
},
[136549] = {
true,
false,
"deepskyblue",
},
[187246] = {
true,
false,
"deepskyblue",
},
[100527] = {
true,
false,
"magenta",
},
[131818] = {
true,
false,
"magenta",
},
[163459] = {
true,
false,
"aqua",
},
[179388] = {
true,
false,
"aqua",
},
[131821] = {
true,
false,
"magenta",
},
[82597] = {
true,
false,
"mediumslateblue",
},
[164557] = {
true,
false,
"deepskyblue",
},
[59553] = {
true,
false,
"deepskyblue",
},
[79720] = {
true,
false,
"magenta",
},
[80936] = {
false,
false,
"magenta",
},
[189235] = {
true,
false,
"mediumslateblue",
},
[80935] = {
true,
false,
"magenta",
},
[95769] = {
true,
false,
"aqua",
},
[59873] = {
true,
false,
"mediumslateblue",
},
[131436] = {
true,
false,
"mediumslateblue",
},
[194990] = {
true,
false,
"aqua",
},
[137830] = {
true,
false,
"aqua",
},
[96664] = {
true,
false,
"aqua",
},
[104273] = {
true,
false,
"deepskyblue",
},
[169927] = {
true,
false,
"mediumslateblue",
},
[185528] = {
true,
false,
"deepskyblue",
},
[77483] = {
true,
false,
"deepskyblue",
},
[185656] = {
true,
false,
"deepskyblue",
},
[168393] = {
true,
false,
"deepskyblue",
},
[116549] = {
true,
false,
"aqua",
},
[80808] = {
true,
false,
"deepskyblue",
},
[77803] = {
true,
false,
"deepskyblue",
},
[193457] = {
true,
false,
"mediumslateblue",
},
[129208] = {
true,
false,
"mediumslateblue",
},
[185529] = {
true,
false,
"aqua",
},
[165197] = {
true,
false,
"mediumslateblue",
},
[98965] = {
true,
false,
"mediumslateblue",
},
[197219] = {
true,
false,
"mediumslateblue",
},
[45915] = {
true,
false,
"mediumslateblue",
},
[132126] = {
true,
false,
"magenta",
},
[186420] = {
true,
false,
"aqua",
},
[95834] = {
true,
false,
"deepskyblue",
},
[114312] = {
true,
false,
"mediumslateblue",
},
[190128] = {
true,
false,
"darksalmon",
},
[189878] = {
true,
false,
"magenta",
},
[104274] = {
true,
false,
"aqua",
},
[131823] = {
true,
false,
"mediumslateblue",
},
[114632] = {
true,
false,
"aqua",
},
[80937] = {
true,
false,
"deepskyblue",
},
[186121] = {
true,
false,
"mediumslateblue",
},
[98691] = {
true,
false,
"deepskyblue",
},
[165762] = {
true,
false,
"deepskyblue",
},
[168396] = {
true,
false,
"deepskyblue",
},
[86372] = {
true,
false,
"magenta",
},
[131824] = {
true,
false,
"mediumslateblue",
},
[205408] = {
true,
false,
"deepskyblue",
},
[95771] = {
true,
false,
"magenta",
},
[98792] = {
true,
false,
"deepskyblue",
},
[151773] = {
true,
false,
"deepskyblue",
},
[102095] = {
true,
false,
"deepskyblue",
},
[196116] = {
true,
false,
"deepskyblue",
},
[104275] = {
true,
false,
"mediumslateblue",
},
[131825] = {
true,
false,
"mediumslateblue",
},
[114633] = {
true,
false,
"deepskyblue",
},
[40167] = {
true,
false,
"aqua",
},
[88163] = {
true,
false,
"mediumslateblue",
},
[40936] = {
true,
false,
"mediumslateblue",
},
[98521] = {
true,
false,
"mediumslateblue",
},
[201754] = {
true,
false,
"deepskyblue",
},
[170572] = {
true,
false,
"aqua",
},
[164562] = {
true,
false,
"deepskyblue",
},
[197406] = {
true,
false,
"deepskyblue",
},
[193462] = {
true,
false,
"aqua",
},
[199037] = {
true,
false,
"aqua",
},
[82590] = {
true,
false,
"magenta",
},
[179841] = {
true,
false,
"aqua",
},
[98370] = {
true,
false,
"aqua",
},
[172265] = {
true,
false,
"aqua",
},
[40320] = {
true,
false,
"mediumslateblue",
},
[114634] = {
true,
false,
"mediumslateblue",
},
[81984] = {
true,
false,
"mediumslateblue",
},
[179269] = {
true,
false,
"deepskyblue",
},
[114526] = {
true,
false,
"aqua",
},
[163157] = {
true,
false,
"mediumslateblue",
},
[212389] = {
true,
false,
"aqua",
},
[163520] = {
true,
false,
"deepskyblue",
},
[166589] = {
true,
false,
"deepskyblue",
},
[95779] = {
true,
false,
"mediumslateblue",
},
[194487] = {
true,
false,
"mediumslateblue",
},
[151649] = {
true,
false,
"deepskyblue",
},
[98970] = {
true,
false,
"mediumslateblue",
},
[130400] = {
true,
false,
"mediumslateblue",
},
[129788] = {
true,
false,
"aqua",
},
[126919] = {
true,
false,
"aqua",
},
[163620] = {
true,
false,
"deepskyblue",
},
[184023] = {
true,
false,
"aqua",
},
[171376] = {
true,
false,
"deepskyblue",
},
[210156] = {
true,
false,
"mediumslateblue",
},
[131318] = {
true,
false,
"mediumslateblue",
},
[171343] = {
true,
false,
"deepskyblue",
},
[129699] = {
true,
false,
"magenta",
},
[169861] = {
true,
false,
"deepskyblue",
},
[191164] = {
true,
false,
"mediumslateblue",
},
[212775] = {
true,
false,
"aqua",
},
[100526] = {
true,
false,
"deepskyblue",
},
[99200] = {
true,
false,
"mediumslateblue",
},
[114316] = {
true,
false,
"aqua",
},
[75506] = {
true,
false,
"deepskyblue",
},
[174210] = {
true,
false,
"aqua",
},
[104278] = {
true,
false,
"magenta",
},
[164567] = {
true,
false,
"aqua",
},
[184132] = {
true,
false,
"deepskyblue",
},
[146409] = {
false,
false,
"darkgreen",
},
[127111] = {
true,
false,
"deepskyblue",
},
[131666] = {
true,
false,
"aqua",
},
[189265] = {
true,
false,
"aqua",
},
[201790] = {
true,
false,
"mediumslateblue",
},
[187969] = {
true,
false,
"deepskyblue",
},
[184022] = {
true,
false,
"aqua",
},
[137405] = {
true,
false,
"deepskyblue",
},
[127879] = {
true,
false,
"deepskyblue",
},
[194894] = {
true,
false,
"aqua",
},
[114317] = {
true,
false,
"aqua",
},
[164185] = {
true,
false,
"deepskyblue",
},
[224249] = {
true,
false,
"mediumslateblue",
},
[200131] = {
true,
false,
"mediumslateblue",
},
[41096] = {
true,
false,
"aqua",
},
[114637] = {
false,
false,
"deepskyblue",
},
[99192] = {
true,
false,
"mediumslateblue",
},
[220195] = {
true,
false,
"aqua",
},
[150253] = {
true,
false,
"mediumslateblue",
},
[224732] = {
true,
false,
"aqua",
},
[206064] = {
true,
false,
"aqua",
},
[197905] = {
true,
false,
"deepskyblue",
},
[214066] = {
true,
false,
"aqua",
},
[91001] = {
true,
false,
"magenta",
},
[129928] = {
true,
false,
"deepskyblue",
},
[220196] = {
true,
false,
"mediumslateblue",
},
[195696] = {
true,
false,
"aqua",
},
[163458] = {
true,
false,
"aqua",
},
[205384] = {
true,
false,
"aqua",
},
[205363] = {
true,
false,
"aqua",
},
[207796] = {
true,
false,
"orangered",
},
[39960] = {
false,
false,
"magenta",
},
[164506] = {
true,
false,
"mediumslateblue",
},
[220197] = {
true,
false,
"mediumslateblue",
},
[127106] = {
true,
false,
"mediumslateblue",
},
[91000] = {
true,
false,
"mediumslateblue",
},
[167536] = {
true,
false,
"deepskyblue",
},
[177817] = {
true,
false,
"aqua",
},
[150250] = {
true,
false,
"deepskyblue",
},
[160495] = {
true,
false,
"aqua",
},
[213932] = {
true,
false,
"aqua",
},
[151657] = {
true,
false,
"aqua",
},
[44404] = {
true,
false,
"aqua",
},
[179842] = {
true,
false,
"deepskyblue",
},
[104217] = {
true,
false,
"mediumslateblue",
},
[195135] = {
true,
false,
"aqua",
},
[150251] = {
true,
false,
"aqua",
},
[173655] = {
true,
false,
"mediumslateblue",
},
},
["transparency_behavior_on_friendlies"] = true,
["extra_icon_show_enrage_border"] = {
0,
0,
0,
},
["cast_statusbar_spark_half"] = true,
["hook_data"] = {
{
["Enabled"] = true,
["Revision"] = 70,
["OptionsValues"] = {
},
["LastHookEdited"] = "Constructor",
["Author"] = "Izimode-Azralon",
["Options"] = {
},
["Desc"] = "Change the color for the heal absorb, heal prediction and shield amount indicators.",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --heal absorb\n    unitFrame.healthBar.healAbsorbIndicator:SetVertexColor (DetailsFramework:ParseColors (envTable.HealAbsorbColor))\n    \n    --shield absorb\n    unitFrame.healthBar.shieldAbsorbIndicator:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldsColor))\n    \n    --incoming heal\n    unitFrame.healthBar.incomingHealIndicator:SetVertexColor (DetailsFramework:ParseColors (envTable.IncomingHealColor))\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}           \n    \n    --make sure to enable the desired indicators at /plater options > Advanced tab > Show Heal/Shield Prediction\n    \n    --color when the heal absorb indicator\n    envTable.HealAbsorbColor = \"maroon\"\n    \n    --color of incoming heal indicator\n    envTable.IncomingHealColor = \"darkgreen\"\n    \n    --color of shield indicator\n    envTable.ShieldsColor = \"#C59000\"    \n    \nend\n\n\n",
},
["Prio"] = 99,
["Time"] = 1721752275,
["PlaterCore"] = 1,
["HooksTemp"] = {
},
["Name"] = "Change Prediction Color",
["Icon"] = 1035048,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
},
{
["Enabled"] = true,
["Revision"] = 70,
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Options"] = {
},
["Desc"] = "Adds a pixels perfect border around the cast bar.",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \n    --create thee border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end\n    \nend\n\n\n\n\n",
},
["Prio"] = 99,
["Time"] = 1721752267,
["PlaterCore"] = 1,
["HooksTemp"] = {
},
["Name"] = "Cast Bar Border",
["Icon"] = 133004,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckForQuest (unitFrame)\n    \nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.ExtraQuestMarker22154:Hide()\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckForQuest (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.ExtraQuestMarker22154) then\n        \n        unitFrame.ExtraQuestMarker22154:Hide()\n        \n    end    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.Texture = [[Interface\\OPTIONSFRAME\\UI-OptionsFrame-NewFeatureIcon]]\n    envTable.Size = 12\n    envTable.Anchor = {\n        side = 6, --right side\n        x = 2,\n        y = 0\n    }\n    \n    if (not unitFrame.ExtraQuestMarker22154) then\n        unitFrame.ExtraQuestMarker22154 = unitFrame:CreateTexture (nil, \"overlay\")\n        local texture = unitFrame.ExtraQuestMarker22154\n        \n        texture:SetTexture (envTable.Texture)\n        texture:SetSize (envTable.Size, envTable.Size)\n        Plater.SetAnchor (texture, envTable.Anchor)\n    end\n    \n    function envTable.CheckForQuest (unitFrame)\n        if (unitFrame.namePlateIsQuestObjective) then\n            unitFrame.ExtraQuestMarker22154:Show()\n            \n        else\n            unitFrame.ExtraQuestMarker22154:Hide()\n            \n        end\n    end\nend\n\n\n\n\n\n\n",
},
["Time"] = 1721752282,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/platerquesticon/2",
["Icon"] = "Interface\\OptionsFrame\\UI-OptionsFrame-NewFeatureIcon",
["Enabled"] = true,
["Revision"] = 41,
["semver"] = "1.0.1",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show an extra icon if the unit is a part of a quest you're current doing. You may adjust where the exclamation mark is shown in the Constructor.",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Extra Quest Icon",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [54983] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1721752253,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = -4972,
["Enabled"] = true,
["Revision"] = 375,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.50196078431373,
0.50196078431373,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["LastHookEdited"] = "Initialization",
["Name"] = "Attacking Specific Unit [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --percent of total cast bar size, default: 60% spell name\n    local spellNameSize = 0.60\n    \n    --update function\n    function envTable.UpdateCastBarName(unitId, castBar)\n        --do nothing if interrupted\n        if castBar.IsInterrupted then\n            return\n            \n        end\n        \n        --get the target's unitId \n        local targetUnitId = unitId .. \"target\"\n        \n        --does the unit exists?\n        if (UnitExists(targetUnitId)) then\n            \n            --get the target name\n            local targetName = UnitName(targetUnitId)\n            \n            --does the target name exists?\n            if (targetName) then\n                --paint the target name with the player's class color\n                targetName = strsub(targetName, 1, 8)\n                local targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                \n                --get the current spell name\n                local spellName = castBar.SpellName\n                --reset the text in the cast bar\n                castBar.Text:SetText(spellName)\n                \n                --castbar width\n                local castBarWidth = castBar:GetWidth()\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth * spellNameSize)\n                \n                --set the new text in the castbar spell name fontstring\n                local currentText = castBar.Text:GetText()\n                \n                if (currentText ~= nil and currentText ~= '') then \n                    currentText = strsub(currentText, 1, 8)\n                    castBar.Text:SetText(currentText .. \" - \" .. targetNameByColor)\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth)    \n                end                \n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1723797826,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/VOuCDrV8Y/1",
["Icon"] = 2126355,
["Enabled"] = true,
["Revision"] = 93,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show the cast target name with the spell name",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Cast Target on Spell Name",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.SetNameplateColors()\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- CONFIG TABLES\n    envTable.useRaidMarks = false\n    envTable.ColorByMark = {\n        \"gold\", --star\n        \"darkorange\", --circle\n        \"darkorchid\", --diamond\n        \"forestgreen\", --triangle\n        \"lightblue\", --moon\n        \"midnightblue\", --square\n        \"maroon\", --cross\n        \"ghostwhite\", --skull\n    }\n    \n    --[[\nSupports matching multiple auras to set a specific color.\nATTENTION: The first hit in the list will be used. So add your multi-matches to the top of the list!\n\nEach entry has the following format:\n        { \n            auras = {<auraID1>, <auraID2>, ..., <auraIDn>}, -- all aura-IDs which should be matched for the color. can be one to many auras\n            borderColor = \"violet\", -- the border color to be set (optional, can be removed)\n            nameplateColor = \"violet\", -- the nameplate color which should be set (optional, can be removed)\n        },\n\nColors can be either all /\"(plater colors\" as string or a color map {r,g,b,a} , e.g. {1,0.35,0}\n\nThe example below sets \"violet\" if moonfire and sunfire are active and \"orange\" for only sunfire or \"blue\" for only moonfire\n--]]\n    envTable.matchMultipleBuffs = {\n        { \n            auras = {164812, 164815}, --  moonfire + sunfire\n            borderColor = \"violet\",\n            nameplateColor = \"violet\",\n        },\n        { \n            auras = {188389}, -- Flame shock\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {164815}, -- sunfire\n            borderColor = \"orange\",\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {164812}, -- moonfire\n            borderColor = \"#00a3ff\",\n        },\n        { \n            auras = {396361}, -- AV Last Boss\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {278431}, -- Infest\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {200105}, -- Sacrifice Soul\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {201064}, -- Spinner boi\n            nameplateColor = \"magenta\",\n        },\n        { \n            auras = {200958}, -- Flame boi\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {412012}, -- Temposlice\n            nameplateColor = \"orange\",\n        },\n    }\n    \n    \n    -- DO NOT TOUCH\n    local DF = _G [\"DetailsFramework\"]\n    \n    -- Function to match multiple colors\n    function envTable.matchMultiple(unitFrame)\n        for _, v in ipairs(envTable.matchMultipleBuffs) do\n            local match = true\n            for _, aura in ipairs(v.auras) do\n                if not Plater.NameplateHasAura (unitFrame, aura) then\n                    match = false\n                    break\n                end\n            end\n            \n            if match then\n                if v.nameplateColor then\n                    Plater.SetNameplateColor (unitFrame, v.nameplateColor)\n                end\n                if v.borderColor then\n                    local nameString = unitFrame.healthBar.unitName\n                    Plater.SetBorderColor (unitFrame, v.borderColor)\n                    DF:SetFontColor (nameString, v.borderColor)\n                end\n                return\n            else\n                -- reset color\n                local npcColor = Plater.GetNpcColor (unitFrame)\n                if npcColor then\n                    Plater.SetNameplateColor (unitFrame, npcColor)\n                elseif unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\"  then\n                    Plater.FindAndSetNameplateColor (unitFrame)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n                \n                local nameString = unitFrame.healthBar.unitName\n                Plater.SetBorderColor (unitFrame)\n                DF:SetFontColor (nameString,{1,1,1})\n            end\n            \n        end\n    end\n    \n    -- Function to set Colors\n    function envTable. SetNameplateColors ()\n        local raidMark = nil\n        if envTable.useRaidMarks and unitFrame.unit then\n            raidMark = Plater.GetRaidMark (unitFrame)\n        end\n        if (raidMark) then\n            Plater.SetNameplateColor (unitFrame, envTable.ColorByMark [raidMark])\n        else \n            local colored = envTable.matchMultiple(unitFrame) \n        end \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1721752265,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/398Lv0cuq/5",
["Icon"] = 134563,
["Enabled"] = true,
["Revision"] = 287,
["semver"] = "1.0.4",
["Author"] = "Viashi-Antonidas",
["Desc"] = "Change nameplate health bar, boder and name text color base on aura or raid mark.",
["Prio"] = 20,
["version"] = 5,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "AuraNameplateColors-v3",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    local npctable = {\n        [61146] = true,\n        [103822] = true,\n        [15352] = true,\n        [95072] = true,\n        [61056] = true,\n    }\n    \n    function modTable.UpdateColor (unitFrame, unitId)\n        if not unitFrame or unitFrame.IsNpcWithoutHealthbar or unitFrame.IsFriendlyPlayerWithoutHealthbar then return end\n        if  InCombatLockdown() and unitFrame.InCombat then\n            if modTable.config.recolor then\n                local targetGUID = UnitGUID (unitFrame.targetUnitID)\n                if targetGUID then\n                    local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n                    if npctable[npcID] then\n                        Plater.SetNameplateColor (unitFrame, modTable.config.color)\n                        return\n                    end\n                end\n            end            \n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n                return\n            elseif (not unitFrame.namePlateThreatIsTanking) and Plater.PlayerIsTank and not UnitIsUnit(unitFrame.targetUnitID, \"player\") then\n                local tanks = Plater.GetTanks()\n                local unitTargetName = UnitName(unitFrame.targetUnitID)\n                if tanks [unitTargetName] then\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.anothertank)\n                elseif UnitExists(unitTargetName) then\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n                return\n            end\n        end\n    end\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame, unitId)\nend",
},
["Time"] = 1721752342,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["party"] = true,
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/N-Hb07L7A/9",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Enabled"] = true,
["Revision"] = 1034,
["semver"] = "1.0.8",
["Author"] = "Viash-Thrall",
["Desc"] = "Overrides NPC Color with the Threat Color if you pull threat as dps or lose threat as tank",
["Prio"] = 1,
["version"] = 9,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "recolor",
["Value"] = true,
["Name"] = "Recolor if enemy is attacking Statue/Treant/Earth Elemental",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["LastHookEdited"] = "Initialization",
["Name"] = "NPC Color Override",
},
{
["OptionsValues"] = {
["midScale"] = 0.69831484556198,
["lowScale"] = 0.0079150376841426,
},
["HooksTemp"] = {
},
["UID"] = "0x6366dbeb1fda6285",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
["Initialization"] = "function (modTable)\n    \n    -- 1 = mid prio, 2 = low prio\n    \n    modTable[\"npcIDs\"] = {\n        \n        -- Dawn of the Infinite\n        [\"202789\"] = 1, -- Morchie Intermission\n        [\"204536\"] = 1, -- Blight Chunk\n        [\"40923\"] = 1, -- Unstable Corruption\n        [\"211306\"] = 1, -- Vines\n        \n    }\n    \nend",
},
["Time"] = 1721752355,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["party"] = true,
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/Ru_9FLVjI/24",
["Icon"] = 1041231,
["Enabled"] = true,
["Revision"] = 2370,
["semver"] = "1.0.23",
["Author"] = "Causese-Valdrakken",
["Desc"] = "Allows you to scale a creatures nameplate based on it's importance in the dungeon.",
["Prio"] = 99,
["version"] = 24,
["PlaterCore"] = 1,
["Name"] = "Priority based scaling",
["Options"] = {
{
["Type"] = 4,
["Key"] = "scale",
["Value"] = true,
["Name"] = "Enable Scaling",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Allows nameplates to scale based on priority.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for mid priority.",
["Min"] = 0,
["Name"] = "Mid prio",
["Value"] = 0.75,
["Key"] = "midScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for low priority.",
["Min"] = 0,
["Name"] = "Low prio",
["Value"] = 0.5,
["Key"] = "lowScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 4,
["Key"] = "color",
["Value"] = false,
["Name"] = "Enable Coloring",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Allows nameplates to be colored based on priority.",
},
{
["Type"] = 1,
["Key"] = "midColor",
["Value"] = {
1,
0.92941182851791,
0,
1,
},
["Name"] = "Mid prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Set color for mid priority.",
},
{
["Type"] = 1,
["Key"] = "lowColor",
["Value"] = {
0.49803924560547,
0.49803924560547,
0.49803924560547,
1,
},
["Name"] = "Low prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Set color for low priority.",
},
},
["LastHookEdited"] = "Initialization",
},
{
["OptionsValues"] = {
["firstNameList"] = {
},
["fullNameList"] = {
},
},
["HooksTemp"] = {
},
["UID"] = "0x639f1d45fbcede4",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renameUnit(unitId, unitFrame, envTable)\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renameUnit(unitId, unitFrame)\nend\n\n\n",
["Initialization"] = "function (modTable)\n    local config = modTable.config\n    \n    local function debug(str)\n        -- Utility function for logging only when debugging\n        if config.debugMode then\n            print(\"DEBUG: \"..str)\n        end\n    end\n    \n    function modTable.setName(name, unitFrame)\n        -- Set the name text on the unitframe to the given name\n        unitFrame.namePlateUnitName = name\n        unitFrame.PlateFrame.namePlateUnitName = name\n        unitFrame.healthBar.unitName:SetText(name)\n    end\n    \n    \n    function modTable.renameUnit(unitId, unitFrame)\n        local unitName = unitFrame.namePlateUnitName\n        local npcId = unitFrame.namePlateNpcId\n        local npcIdStr = tostring(npcId) -- The options list is always strings, so we need a string for lookup\n        \n        if (unitName) then\n            local  nameParts = strsplittable(' ', unitName)\n            \n            if config.debugMode then\n                if unitFrame.namePlateNpcId then\n                    debug(\"npcId: \"..unitFrame.namePlateNpcId)\n                end\n            end\n            \n            local name\n            if config.firstNameList[npcIdStr] then\n                debug(\"npc is in first name list\")\n                name = nameParts[1]\n            elseif config.fullNameList[npcIdStr] then\n                debug(\"npc is in full name list\")\n                name = unitName\n            else\n                debug(\"npc is last name only\")\n                debug(\"parts length is \"..#nameParts)\n                name = nameParts[#nameParts]\n            end\n            \n            modTable.setName(name, unitFrame)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1721752282,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/K1e4LY5nb/4",
["Icon"] = 134331,
["Enabled"] = true,
["Revision"] = 125,
["semver"] = "1.0.3",
["Author"] = "Phonszmonk-Sylvanas",
["Desc"] = "Show nameplate last name, first name or full name depending on id",
["Prio"] = 99,
["version"] = 4,
["PlaterCore"] = 1,
["Name"] = "Last Name Only-BetterPerf",
["Options"] = {
{
["Type"] = 7,
["Key"] = "firstNameList",
["Value"] = {
},
["Name"] = "Show First Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "List of npcIDs to show as first name only. The value field is not used",
},
{
["Type"] = 7,
["Key"] = "fullNameList",
["Value"] = {
},
["Name"] = "Show Full Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "List of npcIDs to show the full name fo. The value field is not used",
},
{
["Type"] = 4,
["Key"] = "debugMode",
["Value"] = false,
["Name"] = "Debug Mode",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable Debug Mode",
},
},
["LastHookEdited"] = "",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = aura1.filter == \"HARMFUL\" and 1 or 0\n        local p2 = aura2.filter == \"HARMFUL\" and 1 or 0\n        \n        return p1 > p2\n        --[[\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n    end]]\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1721752259,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = true,
["Revision"] = 373,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Aura Reorder",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x6664e4861da49e1",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    ---SETTINGS YOU MAY TOUCH\n    --get this name from healthbar texture selection in General settings\n    --examples: Blizzard Raid Bar, BantoBar, PlaterFocus\n    local textureName = \"Naowh Mouseover\" \n    local alpha = 1    \n    --comment out the ones you dont use\n    --local color = \"green\"\n    --local color = \"#FF00FF\"\n    local color = {1, 1, 1, 1}\n    -----\n    \n    ---DONT TOUCH\n    local LibSharedMedia = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\n    local DF = _G [\"DetailsFramework\"]\n    modTable.texture = LibSharedMedia:Fetch (\"statusbar\", textureName)\n    modTable.alpha = alpha\n    local r, g, b, a = DF:ParseColors (color)\n    modTable.color = {r,g,b,a}    \n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local tex = unitFrame.HighlightFrame.HighlightTexture\n    tex:SetTexture (modTable.texture)\n    tex:SetBlendMode (\"ADD\")\n    tex:SetAlpha (modTable.alpha)\n    tex:SetVertexColor(unpack(modTable.color))\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1721752349,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 132089,
["Enabled"] = true,
["Revision"] = 153,
["semver"] = "",
["Author"] = "Nnoggiedh-Twisting Nether",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "NaowhUI - Mouseover Texture / Color",
["Options"] = {
},
["LastHookEdited"] = "",
},
{
["OptionsValues"] = {
["overlayTexture"] = "Interface\\RaidFrame\\Shield-Overlay",
["texture"] = "Interface\\Addons\\NaowhUI\\Core\\Media\\Textures\\Naowh_left",
["absorbColor"] = {
1,
0.48627454042435,
0.48235297203064,
1,
},
["shieldColor"] = {
0.9764706492424,
1,
0.74117648601532,
1,
},
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.update(unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    function envTable.create(unitFrame)\n        local bar = unitFrame.healthBar\n        local shields = bar.shieldAbsorbIndicator\n        local absorbs = bar.healAbsorbIndicator\n        \n        shields:SetTexture(modTable.config.texture)\n        shields:SetVertexColor(DetailsFramework:ParseColors(modTable.config.shieldColor))\n        bar.Settings.ShieldIndicatorTexture = modTable.config.texture\n        envTable.createOverlay(bar, shields)\n        \n        absorbs:SetTexture(modTable.config.texture)\n        absorbs:SetVertexColor(DetailsFramework:ParseColors(modTable.config.absorbColor))\n        envTable.createOverlay(bar, absorbs)\n        \n    end\n    \n    function envTable.createOverlay(bar, texture)\n        if texture.overlay then return end\n        \n        local overlay = bar:CreateTexture(nil, \"ARTWORK\")\n        \n        local r, g, b, a = texture:GetVertexColor()\n        overlay:SetVertexColor(r, g, b, a)\n        overlay:SetDrawLayer(\"ARTWORK\", 6)\n        overlay:SetTexture(modTable.config.overlayTexture, true, true)\n        overlay:SetAllPoints(texture)\n        overlay:SetHorizTile(true)\n        overlay:SetVertTile(true)\n        \n        texture.overlay = overlay \n        texture.overlay:Hide()\n    end\n    \n    function envTable.update(unitFrame)\n        local shield = unitFrame.healthBar.shieldAbsorbIndicator\n        \n        if shield:IsVisible() then\n            shield.overlay:Show()\n        else\n            shield.overlay:Hide()\n        end\n        \n    end\n    \n    envTable.create(unitFrame)\n    envTable.update(unitFrame)\nend",
},
["Time"] = 1721752366,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/dtAR50M7a/3",
["Icon"] = "INTERFACE\\ICONS\\Ability_Priest_AngelicBulwark",
["Enabled"] = true,
["Revision"] = 648,
["semver"] = "1.0.2",
["Author"] = "Lucyon-Bloodfeather",
["Desc"] = "Some extra options for shields and absorbs",
["Prio"] = 6,
["version"] = 3,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Options for shield & absorb indicators. Reload to take effect!",
["Name"] = "Title",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option7",
["Value"] = "Make sure Advanced > Show Health Prediction/Absorption and Show Shield Prediction is enabled for these to work.",
["Name"] = "Description",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option7",
["Value"] = "Shield Options",
["Name"] = "Shield Options Label",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "shieldColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Shield Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color for shields that absorb damage",
},
{
["Type"] = 6,
["Key"] = "option12",
["Value"] = 0,
["Name"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option9",
["Value"] = "Absorb Options",
["Name"] = "Absorb Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "absorbColor",
["Value"] = {
0.78039215686275,
0.25098039215686,
0.25098039215686,
1,
},
["Name"] = "Absorb Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color for healing absorbtions (shields that absorb healing)",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 3,
["Key"] = "texture",
["Value"] = "Interface\\RaidFrame\\Shield-Fill",
["Name"] = "Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The texture to use for shields and healing absorbs",
},
{
["Type"] = 3,
["Key"] = "overlayTexture",
["Value"] = "Interface\\RaidFrame\\Shield-Overlay",
["Name"] = "Overlay Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The overlay texture put on top of the shield/healabsorb texture",
},
},
["LastHookEdited"] = "Constructor",
["Name"] = "Shield & Absorb Options",
},
},
["auras_per_row_auto"] = false,
["tap_denied_color"] = {
0.37254901960784,
0.37254901960784,
0.37254901960784,
},
["auras_per_row_amount2"] = 1,
["aura_width"] = 24,
["ghost_auras"] = {
["auras"] = {
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
["WARLOCK"] = {
{
[980] = true,
[172] = true,
},
},
},
},
["buff_frame_anchor_and_size_migrated"] = true,
["tank"] = {
["colors"] = {
["anothertank"] = {
0.73333333333333,
0.19607843137255,
},
["aggro"] = {
0.38039215686275,
0.87450980392157,
0.23137254901961,
},
["noaggro"] = {
0.99607843137255,
0.29803921568627,
0.30980392156863,
},
["nocombat"] = {
0.99607843137255,
0.29803921568627,
0.30980392156863,
},
["pulling"] = {
nil,
0.93333333333333,
0.43137254901961,
},
},
},
["pet_width_scale"] = 0.99999994039536,
["target_highlight_color"] = {
1,
1,
},
["castbar_target_anchor"] = {
["y"] = 8.3499984741211,
["x"] = 24.729995727539,
["side"] = 6,
},
["health_statusbar_bgcolor"] = {
0.10588236153126,
0.10588236153126,
0.10588236153126,
1,
},
["cast_statusbar_fadeout_time"] = 0.39999997615814,
["extra_icon_stack_outline"] = "MONOCHROME",
["resources"] = {
["y_offset_target"] = 20,
["y_offset_target_withauras"] = 32,
},
["click_space"] = {
128,
20,
},
["aura2_grow_direction"] = 3,
["ui_parent_cast_level"] = 1,
["ui_parent_buff2_level"] = -10,
["aura_cooldown_reverse"] = false,
["range_check_in_range_or_target_alpha_friendlies"] = 1,
["health_animation_time_dilatation"] = 1.0599999427795,
["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark6",
["castbar_framelevel"] = 0,
["target_shady_enabled"] = false,
["cast_statusbar_fadein_time"] = 0.019999999552965,
["aura_stack_anchor"] = {
["y"] = -4.100000381469727,
["x"] = 6.19999885559082,
},
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1721754091,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["url"] = "",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["Enabled"] = true,
["Revision"] = 636,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Aura - Buff Alert [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Add the buff name in the trigger box.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.40392156862745,
0.003921568627451,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.32156862745098,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1721754093,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["Revision"] = 372,
["semver"] = "",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["Author"] = "Tercioo-Sylvanas",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Desc"] = "Add the debuff name in the trigger box.",
["version"] = -1,
["Prio"] = 99,
["Name"] = "Aura - Debuff Alert [Plater]",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.40392156862745,
0.003921568627451,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.32156862745098,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1721754986,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["url"] = "",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["Enabled"] = true,
["Revision"] = 274,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Fixate [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Show above the nameplate who is the player fixated",
["Options"] = {
},
["Icon"] = 1029718,
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1720175307,
["url"] = "",
["Icon"] = 841383,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["Revision"] = 268,
["semver"] = "",
["Enabled"] = true,
["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["Author"] = "Tecno-Azralon",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["version"] = -1,
["Prio"] = 99,
["Name"] = "Fixate On You [Plater]",
["PlaterCore"] = 1,
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TextSize = 12\n    envTable.TextFont  = \"Gotham Ultra\"\n    envTable.Xoffset = 0\n    envTable.Yoffset = -12\n    \n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"center\", unitFrame.healthBar, \"center\", envTable.Xoffset, envTable.Yoffset);    \n    \n    envTable.FixateTarget.textsize = envTable.TextSize\n    envTable.FixateTarget.textfont = envTable.TextFont\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    \n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        \n        \n    else \n        envTable.FixateTarget.text = \"\"\n        \n    end    \nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1720175287,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TextSize = 12\n    envTable.TextFont  = \"Gotham Ultra\"\n    envTable.Xoffset = 0\n    envTable.Yoffset = -12\n    \n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"center\", unitFrame.healthBar, \"center\", envTable.Xoffset, envTable.Yoffset);    \n    \n    envTable.FixateTarget.textsize = envTable.TextSize\n    envTable.FixateTarget.textfont = envTable.TextFont\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n",
["url"] = "https://wago.io/cQbyWpQeE/3",
["NpcNames"] = {
"Earthrager",
"Spiteful Shade",
"Carrion Worm",
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n",
["Enabled"] = true,
["Revision"] = 303,
["semver"] = "1.0.2",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        \n        \n    else \n        envTable.FixateTarget.text = \"\"\n        \n    end    \nend\n\n\n\n\n\n\n\n\n",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    \n    \nend\n\n\n",
["SpellIds"] = {
272584,
244653,
260954,
257739,
257314,
266107,
257582,
262377,
257407,
},
["Prio"] = 99,
["Name"] = "Fixate No cast",
["PlaterCore"] = 1,
["version"] = 3,
["Desc"] = "Show above the nameplate who is the player fixated",
["Options"] = {
},
["Icon"] = 1029718,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1721754931,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Enabled"] = true,
["Revision"] = 36,
["semver"] = "",
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Fixate by Unit Buff [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["Options"] = {
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0,
0.55686274509804,
0.035294117647059,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1719452142,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 156,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Name"] = "Fill Alpha",
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["version"] = -1,
["PlaterCore"] = 1,
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["SpellIds"] = {
},
["Name"] = "Add - Health Markers [P]",
["NpcNames"] = {
"214840",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    envTable.Glow = scriptTable.config.glow\n    envTable.UpdateColor = function(self)\n        self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castbarColor))\n    end    \n    \n    envTable.options = {\n        color = \"white\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 8, -- number of lines. Defaul value is 8;\n        frequency = 0.4, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 12, -- length of lines. Default value depends on region size and number of lines;\n        th = 1, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\nend\n--Made for NaowhUI\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    if envTable.Glow then\n        Plater.StopPixelGlow(self, envTable.options.key)\n        self.glowStarted = false\n    end\nend\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["castbarColor"] = {
0.98039221763611,
1,
0.27450981736183,
1,
},
["castBarHeight"] = 2,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    if envTable.Glow then        \n        Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n    end\n    if envTable.castBarHeightAdd ~= 0 then\n        local height = self:GetHeight()\n        \n        self:SetHeight (height + envTable.CastBarHeightAdd)\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    if envTable.Glow then       \n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n        end\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1722994604,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    envTable.Glow = scriptTable.config.glow\n    envTable.UpdateColor = function(self)\n        self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castbarColor))\n    end    \n    \n    envTable.options = {\n        color = \"white\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 8, -- number of lines. Defaul value is 8;\n        frequency = 0.4, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 12, -- length of lines. Default value depends on region size and number of lines;\n        th = 1, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\nend\n--Made for NaowhUI\n\n\n\n\n\n\n",
["url"] = "https://wago.io/XShFX2Wcy/1",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    if envTable.Glow then\n        Plater.StopPixelGlow(self, envTable.options.key)\n        self.glowStarted = false\n    end\nend\n\n\n\n\n\n\n\n\n",
["Enabled"] = true,
["Revision"] = 1449,
["semver"] = "1.0.0",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    if envTable.Glow then       \n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n        end\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    if envTable.Glow then        \n        Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n    end\n    if envTable.castBarHeightAdd ~= 0 then\n        local height = self:GetHeight()\n        \n        self:SetHeight (height + envTable.CastBarHeightAdd)\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
436841,
373395,
388863,
367503,
372711,
384638,
395427,
372538,
322938,
324776,
324914,
340544,
434793,
434802,
436322,
448239,
433841,
431309,
450756,
451097,
431333,
426283,
449455,
429545,
445207,
429109,
322938,
324914,
324776,
326046,
340544,
334748,
324293,
327130,
338353,
256957,
275826,
454440,
272571,
451871,
76711,
},
["Prio"] = 99,
["Name"] = "NaowhUI - Important Kick",
["PlaterCore"] = 1,
["version"] = 1,
["Desc"] = "",
["Options"] = {
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0,
1,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "",
["Min"] = 0,
["Name"] = "Cast Bar Height Size Change",
["Value"] = 4,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "glow",
["Value"] = true,
["Name"] = "Pixel Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Icon"] = 608940,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    envTable.Glow = scriptTable.config.glow\n    envTable.UpdateColor = function(self)\n        self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castbarColor))\n    end    \n    \n    envTable.options = {\n        color = \"white\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 8, -- number of lines. Defaul value is 8;\n        frequency = 0.4, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 12, -- length of lines. Default value depends on region size and number of lines;\n        th = 1, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\nend\n--Made for NaowhUI\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    if envTable.Glow then\n        Plater.StopPixelGlow(self, envTable.options.key)\n        self.glowStarted = false\n    end\nend\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["castbarColor"] = {
1,
0.34117648005486,
0.32549020648003,
1,
},
["castBarHeight"] = 1,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    if envTable.Glow then        \n        Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n    end\n    if envTable.castBarHeightAdd ~= 0 then\n        local height = self:GetHeight()\n        \n        self:SetHeight (height + envTable.CastBarHeightAdd)\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    if envTable.Glow then       \n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n        end\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1722994449,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    envTable.Glow = scriptTable.config.glow\n    envTable.UpdateColor = function(self)\n        self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castbarColor))\n    end    \n    \n    envTable.options = {\n        color = \"white\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 8, -- number of lines. Defaul value is 8;\n        frequency = 0.4, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 12, -- length of lines. Default value depends on region size and number of lines;\n        th = 1, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\nend\n--Made for NaowhUI\n\n\n\n\n\n\n",
["url"] = "https://wago.io/XShFX2Wcy/1",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    if envTable.Glow then\n        Plater.StopPixelGlow(self, envTable.options.key)\n        self.glowStarted = false\n    end\nend\n\n\n\n\n\n\n\n\n",
["Enabled"] = true,
["Revision"] = 1434,
["semver"] = "1.0.0",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    if envTable.Glow then       \n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n        end\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    if envTable.Glow then        \n        Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n    end\n    if envTable.castBarHeightAdd ~= 0 then\n        local height = self:GetHeight()\n        \n        self:SetHeight (height + envTable.CastBarHeightAdd)\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
375950,
383693,
388911,
367484,
383062,
373024,
383385,
372262,
432967,
432031,
432520,
429427,
320822,
},
["Prio"] = 99,
["Name"] = "NaowhUI - Important CC",
["PlaterCore"] = 1,
["version"] = 1,
["Desc"] = "",
["Options"] = {
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0,
1,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "",
["Min"] = 0,
["Name"] = "Cast Bar Height Size Change",
["Value"] = 4,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "glow",
["Value"] = true,
["Name"] = "Pixel Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Icon"] = 608940,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    envTable.Glow = scriptTable.config.glow\n    envTable.UpdateColor = function(self)\n        self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castbarColor))\n    end    \n    \n    envTable.options = {\n        color = \"white\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 8, -- number of lines. Defaul value is 8;\n        frequency = 0.4, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 12, -- length of lines. Default value depends on region size and number of lines;\n        th = 1, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\nend\n--Made for NaowhUI\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    if envTable.Glow then\n        Plater.StopPixelGlow(self, envTable.options.key)\n        self.glowStarted = false\n    end\nend\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["castbarColor"] = {
1,
0.5686274766922,
0.99607849121094,
1,
},
["castBarHeight"] = 2,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    if envTable.Glow then        \n        Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n    end\n    if envTable.castBarHeightAdd ~= 0 then\n        local height = self:GetHeight()\n        \n        self:SetHeight (height + envTable.CastBarHeightAdd)\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    if envTable.Glow then       \n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n        end\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1720179913,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    envTable.Glow = scriptTable.config.glow\n    envTable.UpdateColor = function(self)\n        self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castbarColor))\n    end    \n    \n    envTable.options = {\n        color = \"white\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 8, -- number of lines. Defaul value is 8;\n        frequency = 0.4, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 12, -- length of lines. Default value depends on region size and number of lines;\n        th = 1, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\nend\n--Made for NaowhUI\n\n\n\n\n\n\n",
["url"] = "https://wago.io/XShFX2Wcy/1",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    if envTable.Glow then\n        Plater.StopPixelGlow(self, envTable.options.key)\n        self.glowStarted = false\n    end\nend\n\n\n\n\n\n\n\n\n",
["Enabled"] = true,
["Revision"] = 1428,
["semver"] = "1.0.0",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    if envTable.Glow then       \n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n        end\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    if envTable.Glow then        \n        Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n    end\n    if envTable.castBarHeightAdd ~= 0 then\n        local height = self:GetHeight()\n        \n        self:SetHeight (height + envTable.CastBarHeightAdd)\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
373692,
387127,
396991,
388008,
388804,
390912,
378208,
375065,
382883,
369754,
372719,
382578,
376208,
374365,
381663,
322486,
324909,
328756,
323149,
323059,
323177,
324987,
340189,
340279,
340304,
336499,
},
["Prio"] = 99,
["Name"] = "NaowhUI - Important Special",
["PlaterCore"] = 1,
["version"] = 1,
["Desc"] = "",
["Options"] = {
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0,
1,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "",
["Min"] = 0,
["Name"] = "Cast Bar Height Size Change",
["Value"] = 4,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "glow",
["Value"] = true,
["Name"] = "Pixel Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Icon"] = 608940,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 139,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["NpcNames"] = {
},
["SpellIds"] = {
447141,
432967,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heroic Leap [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Enabled"] = true,
["Revision"] = 158,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["SpellIds"] = {
431364,
423327,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Name"] = "Dots X Offset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 0,
["Name"] = "Dots Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Fraction"] = true,
["Value"] = 0.4,
["Key"] = "speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Key"] = "minAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Min Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Max Alpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "maxAlpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["Name"] = "Cast - Ongoing Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1722866303,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Enabled"] = true,
["Revision"] = 1254,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["version"] = -1,
["Name"] = "Cast - Heal Cut [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["NpcNames"] = {
},
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Name"] = "Aura is Shield [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
},
["pet_height_scale"] = 0.99999994039536,
["aura_x_offset"] = 0.5699920654296875,
["range_check_alpha_friendlies"] = 1,
["target_shady_combat_only"] = false,
["ui_parent_scale_tune"] = 1.539999961853027,
["healthbar_framelevel"] = 0,
["ui_parent_buff_level"] = -6,
["health_statusbar_bgtexture"] = "Naowh Left",
["ui_parent_target_strata"] = "BACKGROUND",
["aura_show_enrage"] = true,
["aura_tracker"] = {
["buff_tracked"] = {
["227931"] = true,
["327808"] = true,
["328175"] = true,
["262092"] = true,
["333737"] = true,
["226512"] = true,
["209859"] = true,
["331743"] = true,
["273432"] = true,
["321764"] = true,
["163689"] = true,
["233210"] = true,
["297133"] = true,
},
["debuff_banned"] = {
["247456"] = false,
["179057"] = false,
["264263"] = true,
["412695"] = false,
["204490"] = false,
["394933"] = false,
["207771"] = false,
["1490"] = false,
["409470"] = true,
["207685"] = false,
["409472"] = true,
["372245"] = false,
["339137"] = true,
["417404"] = false,
},
["debuff_tracked"] = {
["336449"] = true,
["328175"] = true,
["321020"] = true,
},
["buff_banned"] = {
["333553"] = true,
["165213"] = false,
["409472"] = true,
["374918"] = false,
["61574"] = true,
["38166"] = false,
["265368"] = false,
["372749"] = false,
["207771"] = false,
["61573"] = true,
["374917"] = false,
["409470"] = true,
["374881"] = false,
["206150"] = true,
["374916"] = false,
},
},
["cast_statusbar_color"] = {
nil,
0.93333333333333,
0.43137254901961,
0.96000000089407,
},
["update_throttle"] = 0.12000000476837,
["extra_icon_show_purge_border"] = {
nil,
0,
0,
},
["tocversion"] = 110002,
["castbar_icon_show"] = false,
["indicator_extra_raidmark"] = false,
["extra_icon_timer_font"] = "GothamNarrowUltra",
["not_affecting_combat_alpha"] = 1,
["target_highlight_alpha"] = 0.7999999523162842,
["news_frame"] = {
["PlaterNewsFrame"] = {
["scale"] = 1,
},
},
["extra_icon_show_offensive_border"] = {
nil,
0,
0,
},
["auto_toggle_stacking_enabled"] = true,
["aura_breakline_space"] = 0,
["target_shady_alpha"] = 0.59999996423721,
["aura_height_personal"] = 19,
["target_highlight_height"] = 16,
["cast_statusbar_spark_alpha"] = 0.25,
["first_run2"] = true,
["version"] = 3,
["aura_width_personal"] = 23,
["color_override_colors"] = {
[3] = {
0.99607843137255,
0.29803921568627,
0.30980392156863,
},
[4] = {
1,
0.93333333333333,
0.43137254901961,
},
[5] = {
0.38039215686275,
0.87450980392157,
0.23137254901961,
},
},
["cast_statusbar_bgcolor"] = {
0.098039224743843,
0.098039224743843,
0.098039224743843,
0.700723528862,
},
["extra_icon_timer_outline"] = "OUTLINE",
["castbar_icon_attach_to_side"] = "right",
["patch_version"] = 37,
["range_check_in_range_or_target_alpha"] = 1,
["aura_timer_text_size"] = 9,
["aura_cooldown_show_swipe"] = false,
["number_region_first_run"] = true,
["script_auto_imported"] = {
["Aura - Is Cast Bar [P]"] = 1,
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Cast - Shining Green [P]"] = 3,
["Cast - Ultra Important"] = 14,
["Fixate On You"] = 11,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Explosion Affix M+"] = 14,
["Aura - Invalidate Unit"] = 1,
["Add - Important [P]"] = 4,
["Cast - Glowing [P]"] = 10,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Countdown"] = 11,
["Add - Tag Number [P]"] = 2,
["Unit - Health Markers"] = 12,
["Fixate"] = 11,
["Cast - Special Ability [P]"] = 3,
["Cast - Heroic Leap [P]"] = 3,
["Unit - Important"] = 11,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Stop Casting"] = 4,
["Cast - Important Target [P]"] = 2,
["Relics 9.2 M Dungeons"] = 2,
["Cast - Shield Interrupt"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Cast - Quick Flash"] = 2,
["Cast - AoE Hit All [P]"] = 3,
["Add - Warning [P]"] = 5,
["Auto Set Skull"] = 11,
["Aura is Shield [P]"] = 5,
["Cast - Debuff [P]"] = 2,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Cast - Important by Color [P]"] = 2,
["Cast - Heal Cut [P]"] = 3,
["Cast - Voidzone [P]"] = 2,
["Spiteful Affix"] = 3,
["Color Change"] = 1,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Very Important"] = 15,
["Aura Border Color"] = 1,
["Cast - On Going Cast [P]"] = 2,
["Cast - AoE With Range [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Add - Explode on Die [P]"] = 1,
["Cast - Tank Interrupt"] = 12,
["Unit Power"] = 1,
["Cast - Castbar is Timer [P]"] = 2,
["Unit - Show Energy"] = 11,
},
["castbar_target_font"] = "Naowh",
["cast_statusbar_texture"] = "Melli",
["indicator_raidmark_anchor"] = {
["y"] = 1.079994201660156,
["x"] = 0,
["side"] = 9,
},
["border_color"] = {
nil,
nil,
nil,
1,
},
["first_run3"] = true,
["aura_cooldown_edge_texture"] = "Interface\\GLUES\\loadingOld",
["extra_icon_height"] = 26,
["dps"] = {
["colors"] = {
["aggro"] = {
0.99607843137255,
0.29803921568627,
0.30980392156863,
},
["notontank"] = {
0.99607843137255,
0.29803921568627,
0.30980392156863,
},
["noaggro"] = {
0.73333333333333,
0.19607843137255,
},
["pulling"] = {
nil,
0.93333333333333,
0.43137254901961,
},
},
},
["aura_stack_color"] = {
nil,
0.94509803921569,
0.93725490196078,
},
["color_lerp_speed"] = 7,
["indicator_rare"] = false,
["auto_toggle_stacking"] = {
["cities"] = true,
},
["cast_statusbar_spark_width"] = 30,
},
["Dalaran"] = {
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["use_ui_parent"] = true,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 632,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
398151,
377738,
378149,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Buff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = true,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Effect After Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = true,
["Revision"] = 533,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
240446,
385339,
198077,
210261,
360857,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowHeight",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Explosion Affix M+ [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 368,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Desc"] = "Add the debuff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Debuff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
350421,
355787,
348513,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["Name"] = "Cast - Alert + Timer [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = true,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["SpellIds"] = {
383823,
382670,
388537,
372851,
200682,
192307,
196838,
193827,
194043,
209410,
211464,
361180,
156718,
395859,
358320,
374045,
386757,
367500,
370225,
376200,
372107,
388923,
376934,
384899,
373960,
374724,
385551,
259732,
373424,
373084,
87618,
255041,
428926,
76634,
200050,
197546,
198079,
199193,
266181,
253544,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Ultra Important [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1683596223,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 146,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Vertical Line Alpha",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Name"] = "Fill Alpha",
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["version"] = -1,
["Name"] = "Add - Health Markers [P]",
["NpcNames"] = {
"197697",
"59544",
"186227",
"184020",
"91005",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["SpellIds"] = {
376851,
396044,
381517,
373932,
397801,
208165,
392576,
198750,
387843,
387411,
211299,
198595,
198934,
198962,
156722,
350554,
348513,
351779,
328180,
319898,
281420,
274383,
259092,
367521,
374544,
385039,
382474,
369823,
377500,
260879,
186269,
378818,
371875,
372225,
200658,
266036,
265407,
164965,
429176,
428526,
418200,
407124,
200630,
415437,
264050,
267824,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["version"] = -1,
["Name"] = "Cast - Small Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 572,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Key"] = "nameplateSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "skullAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Alpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullScale",
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["version"] = -1,
["Name"] = "Add - Important [P]",
["NpcNames"] = {
"196548",
"195580",
"195820",
"195821",
"189886",
"75966",
"102019",
"187159",
"194897",
"104251",
"101326",
"189669",
"192464",
190381,
92538,
192464,
131009,
127315,
133361,
136330,
214117,
212483,
101008,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1626382829,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Revision"] = 375,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Name"] = "Timeleft to Blink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeleftToBlink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkSpeed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkMaxAlpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Warning",
["Value"] = 8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftWarning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Critical",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftCritical",
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["version"] = -1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Add - Tag Number [P]",
["NpcNames"] = {
"195138",
"192955",
"190294",
"76518",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = true,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
376644,
386781,
384823,
385536,
392398,
375596,
387135,
360850,
212784,
199033,
199034,
200969,
394512,
397881,
396020,
374430,
384353,
265376,
193941,
411002,
169445,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Glowing [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Key"] = "targetNameSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Key"] = "targetFrameWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Height",
},
},
["version"] = -1,
["Name"] = "Cast - Important Target [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
392640,
397888,
209033,
385029,
374563,
377341,
369675,
369365,
369411,
278961,
202108,
88186,
255824,
252781,
250096,
200248,
197797,
264520,
418202,
201839,
412012,
411958,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Quick Flash [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1669327146,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 65,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color of  add",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Add - Warning [P]",
["NpcNames"] = {
"190187",
"189893",
"99922",
"104822",
129758,
190426,
186696,
101075,
100818,
98081,
52019,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["Icon"] = 236209,
["Enabled"] = true,
["Revision"] = 18,
["semver"] = "",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
372743,
372749,
384933,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura While Casting [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
396640,
372743,
377389,
396812,
388392,
387955,
386546,
377503,
384808,
386024,
387615,
387606,
225100,
211401,
211470,
215433,
192563,
198959,
152818,
156776,
398206,
153524,
396073,
396018,
345202,
377950,
372223,
350421,
352158,
349985,
329239,
328400,
384194,
392451,
392924,
397889,
209413,
207980,
257397,
257736,
382787,
374699,
377402,
369602,
369465,
369400,
381593,
265091,
265433,
382791,
376780,
225573,
278444,
164887,
168082,
76813,
227913,
265368,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["version"] = -1,
["Name"] = "Cast - Big Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
377004,
381516,
196543,
199726,
200291,
268202,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Stop Casting [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1611844883,
["url"] = "",
["Icon"] = 135945,
["Enabled"] = true,
["Revision"] = 186,
["semver"] = "",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Time to die Spiteful affix",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Name"] = "Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.07058823529411765,
0.6196078431372549,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "M+ Spiteful",
["NpcNames"] = {
"174773",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1604696441,
["url"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Enabled"] = false,
["Revision"] = 63,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["version"] = -1,
["Name"] = "Auto Set Skull",
["NpcNames"] = {
"163520",
"163618",
"164506",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["Icon"] = 136048,
["Enabled"] = true,
["Revision"] = 233,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fontSize",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.803921568627451,
0.803921568627451,
0.803921568627451,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["version"] = -1,
["Name"] = "Unit - Show Energy [Plater]",
["NpcNames"] = {
"164406",
"164407",
"162100",
"162099",
"162329",
"164558",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Enabled"] = true,
["Revision"] = 111,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "scale",
},
},
["version"] = -1,
["Name"] = "Add - Non Elite Trash [P]",
["NpcNames"] = {
"194622",
"190205",
"197398",
"77006",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["SpellIds"] = {
373688,
391050,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Shield Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["SpellIds"] = {
385916,
386063,
388822,
373087,
397785,
106864,
193660,
198263,
387910,
370766,
375591,
384336,
209404,
209378,
210875,
396001,
397899,
386559,
382555,
258672,
258777,
257756,
257784,
256405,
256589,
393793,
388046,
375079,
390290,
369811,
369703,
226287,
410999,
372561,
256882,
172578,
412063,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Key"] = "rotationDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Key"] = "animStartDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Name"] = "Texture Start Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "textureScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "textureAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - Circle AoE [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = true,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["SpellIds"] = {
388886,
209676,
377912,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots Y Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "minAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["Name"] = "Cast - On Going Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Enabled"] = true,
["Revision"] = 33,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
426662,
426663,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["version"] = -1,
["Name"] = "Fixate by Unit Buff [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1670202265,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 620,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["SpellIds"] = {
375943,
385958,
388623,
377034,
374361,
381525,
386660,
385578,
384699,
153501,
153686,
154442,
192018,
219488,
372087,
391726,
391723,
377383,
388976,
370764,
387067,
391118,
391136,
382233,
209027,
212031,
207261,
207979,
198888,
199805,
199050,
191508,
152792,
153395,
352833,
330403,
209495,
257426,
255952,
257870,
413147,
383107,
377559,
388060,
376170,
384524,
375351,
390111,
369791,
369573,
369563,
369335,
369061,
375727,
265016,
265019,
260793,
260292,
272457,
272609,
269843,
183465,
226296,
188169,
183088,
410873,
411012,
88308,
382708,
375251,
375439,
372311,
373742,
372201,
374533,
377204,
201226,
204667,
198379,
200768,
253239,
250258,
255567,
194956,
427510,
426645,
412505,
412129,
419351,
401482,
404916,
200345,
200261,
198641,
265372,
271174,
264694,
264923,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animSpeed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = true,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["version"] = -1,
["Name"] = "Add - Explode on Die [P]",
["NpcNames"] = {
"194895",
"105703",
"59598",
"58319",
200388,
189299,
131402,
135052,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["Icon"] = 1029718,
["Enabled"] = true,
["Revision"] = 269,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Fixate [Plater]",
["NpcNames"] = {
"165560",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604354364,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 206,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Countdown",
["NpcNames"] = {
"164427",
"164414",
"164185",
"164567",
"165408",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = true,
["Revision"] = 828,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
350687,
372735,
373017,
350687,
392488,
257732,
256060,
257899,
384633,
374339,
395694,
391634,
372701,
369328,
265487,
413044,
183526,
88194,
87762,
413385,
411001,
378282,
384161,
259572,
255371,
427460,
429172,
426500,
413607,
412922,
417481,
201399,
411994,
415770,
260907,
260703,
260741,
265876,
263959,
266225,
253517,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Very Important [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604087921,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 266,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Fixate On You [Plater]",
["NpcNames"] = {
},
},
},
["ui_parent_scale_tune"] = 1.559999942779541,
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Extra Border"] = 2,
["Cast Bar Icon Config"] = 2,
["Aura Reorder"] = 3,
["Hide Neutral Units"] = 1,
["Attacking Specific Unit"] = 2,
["Target Color"] = 3,
["Execute Range"] = 1,
["Combo Points"] = 6,
},
["expansion_triggerwipe"] = {
[9] = true,
},
["ghost_auras"] = {
["auras"] = {
["WARLOCK"] = {
{
[172] = true,
[980] = true,
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
},
},
["aura2_x_offset"] = 0,
["aura2_y_offset"] = 5,
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Kastfall-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Name"] = "Color Automation [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Time"] = 1547392935,
},
{
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Name"] = "Hide Neutral Units [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["Time"] = 1541606242,
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["Options"] = {
},
["Author"] = "Kastfall-Azralon",
["Name"] = "Reorder Nameplate [Plater]",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1596791840,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 574574,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
},
["version"] = -1,
["Name"] = "Don't Have Aura [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Time"] = 1554138845,
},
{
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Tecno-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["version"] = -1,
["Name"] = "Extra Border [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["Time"] = 1547409079,
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Name"] = "Current Target Color [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 878211,
["Time"] = 1552354619,
},
{
["Enabled"] = false,
["Revision"] = 348,
["semver"] = "",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Key"] = "iconSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Size Offset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconPadding",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.3056715726852417,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 10,
["Key"] = "textureWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Width",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureHeightMod",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "texturePosition",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Position",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Author"] = "Ditador-Azralon",
["Name"] = "Cast Bar Icon Settings [P]",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1597097268,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 84,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Ahwa-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
},
["version"] = -1,
["Name"] = "Execute Range [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["Time"] = 1547406548,
},
{
["Enabled"] = false,
["Revision"] = 363,
["semver"] = "",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.5019607843137255,
0.5019607843137255,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Author"] = "Kastfall-Azralon",
["Name"] = "Attacking Specific Unit [Plater]",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1620377377,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 284,
["semver"] = "",
["LastHookEdited"] = "",
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["Name"] = "Combo Points [Plater]",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1621935143,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 135426,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Show how many raid members are targeting the unit",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["version"] = -1,
["Name"] = "Players Targeting a Target [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["Time"] = 1548278227,
},
{
["Enabled"] = false,
["Revision"] = 356,
["semver"] = "",
["LastHookEdited"] = "",
["Options"] = {
},
["Author"] = "Ditador-Azralon",
["Name"] = "Aura Reorder [Plater]",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1608663128,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["HooksTemp"] = {
},
},
},
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1625793282,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1154,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["__TrashAt"] = 1715880147,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
350421,
355787,
348513,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Value"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
["Key"] = "timerList",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["Name"] = "Cast - Alert + Timer [P]",
["NpcNames"] = {
},
},
},
["script_auto_imported"] = {
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 2,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Cast - Glowing [P]"] = 10,
["Cast - Important Target [P]"] = 2,
["Cast - Shield Interrupt"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Aura is Shield [P]"] = 2,
["Add - Warning [P]"] = 5,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Fixate On You"] = 11,
["Cast - Very Important"] = 15,
["Auto Set Skull"] = 11,
["Spiteful Affix"] = 3,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Stop Casting"] = 4,
["Fixate"] = 11,
["Cast - On Going Cast [P]"] = 2,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 15,
["Add - Explode on Die [P]"] = 1,
["Countdown"] = 11,
["Cast - Quick Flash"] = 2,
["Explosion Affix M+"] = 14,
["Unit - Show Energy"] = 11,
},
["aura_x_offset"] = 0,
["patch_version"] = 35,
["aura_tracker"] = {
["buff_tracked"] = {
[209859] = true,
},
},
["aura_y_offset"] = 5,
},
["Default"] = {
["use_ui_parent"] = true,
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["script_auto_imported"] = {
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 2,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Cast - Glowing [P]"] = 10,
["Cast - Important Target [P]"] = 2,
["Cast - Shield Interrupt"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Aura is Shield [P]"] = 2,
["Add - Warning [P]"] = 5,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Fixate On You"] = 11,
["Cast - Very Important"] = 15,
["Auto Set Skull"] = 11,
["Spiteful Affix"] = 3,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Stop Casting"] = 4,
["Fixate"] = 11,
["Cast - On Going Cast [P]"] = 2,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 15,
["Add - Explode on Die [P]"] = 1,
["Countdown"] = 11,
["Cast - Quick Flash"] = 2,
["Explosion Affix M+"] = 14,
["Unit - Show Energy"] = 11,
},
["expansion_triggerwipe"] = {
[9] = true,
},
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 632,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
398151,
377738,
378149,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Buff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = true,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Effect After Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = true,
["Revision"] = 533,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
240446,
385339,
198077,
210261,
360857,
389446,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowHeight",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Explosion Affix M+ [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 368,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Desc"] = "Add the debuff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Debuff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
350421,
355787,
348513,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["Name"] = "Cast - Alert + Timer [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = true,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["SpellIds"] = {
383823,
382670,
388537,
372851,
200682,
192307,
196838,
193827,
194043,
209410,
211464,
361180,
156718,
395859,
358320,
374045,
386757,
367500,
370225,
376200,
372107,
388923,
376934,
384899,
373960,
374724,
385551,
259732,
373424,
373084,
87618,
255041,
428926,
76634,
200050,
197546,
198079,
199193,
266181,
253544,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Ultra Important [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1683596223,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 146,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Vertical Line Alpha",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Name"] = "Fill Alpha",
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["version"] = -1,
["Name"] = "Add - Health Markers [P]",
["NpcNames"] = {
"197697",
"59544",
"186227",
"184020",
"91005",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["SpellIds"] = {
376851,
396044,
381517,
373932,
397801,
208165,
392576,
198750,
387843,
387411,
211299,
198595,
198934,
198962,
156722,
350554,
348513,
351779,
328180,
319898,
281420,
274383,
259092,
367521,
374544,
385039,
382474,
369823,
377500,
260879,
186269,
378818,
371875,
372225,
200658,
266036,
265407,
164965,
429176,
428526,
418200,
407124,
200630,
415437,
264050,
267824,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["version"] = -1,
["Name"] = "Cast - Small Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 572,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Key"] = "nameplateSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "skullAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Alpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullScale",
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["version"] = -1,
["Name"] = "Add - Important [P]",
["NpcNames"] = {
"196548",
"195580",
"195820",
"195821",
"189886",
"75966",
"102019",
"187159",
"194897",
"104251",
"101326",
"189669",
"192464",
190381,
92538,
192464,
131009,
127315,
133361,
136330,
214117,
212483,
101008,
194745,
190426,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1626382829,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Revision"] = 375,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Name"] = "Timeleft to Blink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeleftToBlink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkSpeed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkMaxAlpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Warning",
["Value"] = 8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftWarning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Critical",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftCritical",
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["version"] = -1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Add - Tag Number [P]",
["NpcNames"] = {
"195138",
"192955",
"190294",
"76518",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = true,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
376644,
386781,
384823,
385536,
392398,
375596,
387135,
360850,
212784,
199033,
199034,
200969,
394512,
397881,
396020,
374430,
384353,
265376,
193941,
411002,
169445,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Glowing [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Key"] = "targetNameSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Key"] = "targetFrameWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Height",
},
},
["version"] = -1,
["Name"] = "Cast - Important Target [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
392640,
397888,
209033,
385029,
374563,
377341,
369675,
369365,
369411,
278961,
202108,
88186,
255824,
252781,
250096,
200248,
197797,
264520,
418202,
201839,
412012,
411958,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Quick Flash [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1669327146,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 65,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color of  add",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Add - Warning [P]",
["NpcNames"] = {
"190187",
"189893",
"99922",
"104822",
129758,
186696,
101075,
100818,
98081,
52019,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["Icon"] = 236209,
["Enabled"] = true,
["Revision"] = 18,
["semver"] = "",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
372743,
372749,
384933,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura While Casting [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
396640,
372743,
377389,
396812,
388392,
387955,
386546,
377503,
384808,
386024,
387615,
387606,
225100,
211401,
211470,
215433,
192563,
198959,
152818,
156776,
398206,
153524,
396073,
396018,
345202,
377950,
372223,
350421,
352158,
349985,
329239,
328400,
384194,
392451,
392924,
397889,
209413,
207980,
257397,
257736,
382787,
374699,
377402,
369602,
369465,
369400,
381593,
265091,
265433,
382791,
376780,
225573,
278444,
164887,
168082,
76813,
227913,
265368,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["version"] = -1,
["Name"] = "Cast - Big Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
377004,
381516,
196543,
199726,
200291,
268202,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Stop Casting [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1611844883,
["url"] = "",
["Icon"] = 135945,
["Enabled"] = true,
["Revision"] = 186,
["semver"] = "",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Time to die Spiteful affix",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Name"] = "Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.07058823529411765,
0.6196078431372549,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "M+ Spiteful",
["NpcNames"] = {
"174773",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1604696441,
["url"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Enabled"] = false,
["Revision"] = 63,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["version"] = -1,
["Name"] = "Auto Set Skull",
["NpcNames"] = {
"163520",
"163618",
"164506",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["Icon"] = 136048,
["Enabled"] = true,
["Revision"] = 233,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fontSize",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.803921568627451,
0.803921568627451,
0.803921568627451,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["version"] = -1,
["Name"] = "Unit - Show Energy [Plater]",
["NpcNames"] = {
"164406",
"164407",
"162100",
"162099",
"162329",
"164558",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Enabled"] = true,
["Revision"] = 111,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "scale",
},
},
["version"] = -1,
["Name"] = "Add - Non Elite Trash [P]",
["NpcNames"] = {
"194622",
"190205",
"197398",
"77006",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["SpellIds"] = {
373688,
391050,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Shield Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["SpellIds"] = {
385916,
386063,
388822,
373087,
397785,
106864,
193660,
198263,
387910,
370766,
375591,
384336,
209404,
209378,
210875,
396001,
397899,
386559,
382555,
258672,
258777,
257756,
257784,
256405,
256589,
393793,
388046,
375079,
390290,
369811,
369703,
226287,
410999,
372561,
256882,
172578,
412063,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Key"] = "rotationDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Key"] = "animStartDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Name"] = "Texture Start Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "textureScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "textureAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - Circle AoE [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = true,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["SpellIds"] = {
388886,
209676,
377912,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots Y Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "minAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["Name"] = "Cast - On Going Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Enabled"] = true,
["Revision"] = 33,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
426662,
426663,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["version"] = -1,
["Name"] = "Fixate by Unit Buff [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1670202265,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 620,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["SpellIds"] = {
375943,
385958,
388623,
377034,
374361,
381525,
386660,
385578,
384699,
153501,
153686,
154442,
192018,
219488,
372087,
391726,
391723,
377383,
388976,
370764,
387067,
391118,
391136,
382233,
209027,
212031,
207261,
207979,
198888,
199805,
199050,
191508,
152792,
153395,
352833,
330403,
209495,
257426,
255952,
257870,
413147,
383107,
377559,
388060,
376170,
384524,
375351,
390111,
369791,
369573,
369563,
369335,
369061,
375727,
265016,
265019,
260793,
260292,
272457,
272609,
269843,
183465,
226296,
188169,
183088,
410873,
411012,
88308,
382708,
375251,
375439,
372311,
373742,
372201,
374533,
377204,
201226,
204667,
198379,
200768,
253239,
250258,
255567,
194956,
427510,
426645,
412505,
412129,
419351,
401482,
404916,
200345,
200261,
198641,
265372,
271174,
264694,
264923,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animSpeed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = true,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["version"] = -1,
["Name"] = "Add - Explode on Die [P]",
["NpcNames"] = {
"194895",
"105703",
"59598",
"58319",
200388,
189299,
131402,
135052,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["Icon"] = 1029718,
["Enabled"] = true,
["Revision"] = 269,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Fixate [Plater]",
["NpcNames"] = {
"165560",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604354364,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 206,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Countdown",
["NpcNames"] = {
"164427",
"164414",
"164185",
"164567",
"165408",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = true,
["Revision"] = 828,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
350687,
372735,
373017,
350687,
392488,
257732,
256060,
257899,
384633,
374339,
395694,
391634,
372701,
369328,
265487,
413044,
183526,
88194,
87762,
413385,
411001,
378282,
384161,
259572,
255371,
427460,
429172,
426500,
413607,
412922,
417481,
201399,
411994,
415770,
260907,
260703,
260741,
265876,
263959,
266225,
253517,
377488,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Very Important [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604087921,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 266,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Fixate On You [Plater]",
["NpcNames"] = {
},
},
},
["aura2_x_offset"] = 0,
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Kastfall-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Time"] = 1547392935,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Name"] = "Color Automation [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Time"] = 1541606242,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["Name"] = "Hide Neutral Units [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["Options"] = {
},
["Author"] = "Kastfall-Azralon",
["Time"] = 1596791840,
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Name"] = "Reorder Nameplate [Plater]",
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 574574,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
},
["version"] = -1,
["Time"] = 1554138845,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Name"] = "Don't Have Aura [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Tecno-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["version"] = -1,
["Time"] = 1547409079,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["Name"] = "Extra Border [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Time"] = 1552354619,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 878211,
["Name"] = "Current Target Color [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 348,
["semver"] = "",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Key"] = "iconSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Size Offset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconPadding",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.3056715726852417,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 10,
["Key"] = "textureWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Width",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureHeightMod",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "texturePosition",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Position",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Author"] = "Ditador-Azralon",
["Time"] = 1597097268,
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Name"] = "Cast Bar Icon Settings [P]",
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 84,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Ahwa-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
},
["version"] = -1,
["Time"] = 1547406548,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["Name"] = "Execute Range [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 363,
["semver"] = "",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.5019607843137255,
0.5019607843137255,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Author"] = "Kastfall-Azralon",
["Time"] = 1620377377,
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Name"] = "Attacking Specific Unit [Plater]",
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 284,
["semver"] = "",
["LastHookEdited"] = "",
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["Time"] = 1621935143,
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Name"] = "Combo Points [Plater]",
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 135426,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Show how many raid members are targeting the unit",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["version"] = -1,
["Time"] = 1548278227,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["Name"] = "Players Targeting a Target [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 356,
["semver"] = "",
["LastHookEdited"] = "",
["Options"] = {
},
["Author"] = "Ditador-Azralon",
["Time"] = 1608663128,
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Name"] = "Aura Reorder [Plater]",
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["HooksTemp"] = {
},
},
},
["aura_x_offset"] = 0,
["saved_cvars_last_change"] = {
["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:1572",
["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:1572",
["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:1572",
["nameplateShowSelf"] = "Interface/AddOns/Plater/Plater.lua:1572",
["nameplateShowEnemies"] = "Interface/AddOns/Plater/Plater.lua:1572",
["nameplateShowFriends"] = "Interface/AddOns/Plater/Plater.lua:1572",
},
["resources_settings"] = {
["chr"] = {
["Player-1621-0B537E85"] = "Chi",
["Player-1621-0B583EDB"] = "ComboPoints",
["Player-1621-0B592714"] = "Runes",
},
},
["npc_cache"] = {
[214101] = {
"In the Shadow of the Light",
"Scholomance",
"enUS",
},
[56863] = {
"Sleepy Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[186124] = {
"Gashtooth",
"Brackenhide Hollow",
"enUS",
},
[189318] = {
"Infected Bear",
"Brackenhide Hollow",
"enUS",
},
[56927] = {
"Hozen Party Animal",
"Stormstout Brewery",
"enUS",
},
[56448] = {
"Wise Mari",
"Temple of the Jade Serpent",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
"enUS",
},
[59051] = {
"Strife",
"Temple of the Jade Serpent",
"enUS",
},
[210781] = {
"Vault of Souls",
"Scholomance",
"enUS",
},
[58684] = {
"Scarlet Scourge Hewer",
"Scarlet Halls",
"enUS",
},
[59722] = {
"Pile of Corpses",
"Scarlet Monastery",
"enUS",
},
[61814] = {
"Jin Ironfist",
"Crypt of Forgotten Kings",
"enUS",
},
[58812] = {
"Hateful Essence",
"Shado-Pan Monastery",
"enUS",
},
[62405] = {
"Sra'thik Amber-Trapper",
"Heart of Fear",
"enUS",
},
[58876] = {
"Starving Hound",
"Scarlet Halls",
"enUS",
},
[62485] = {
"Gagoon",
"Unga Ingoo",
"enUS",
},
[66652] = {
"Lesser Volatile Energy",
"Shado-Pan Monastery",
"enUS",
},
[56912] = {
"Krik'thik Engulfer",
"Gate of the Setting Sun",
"enUS",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
"enUS",
},
[194816] = {
"Forgewrought Monstrosity",
"Neltharus",
"enUS",
},
[212254] = {
"Unga Mug",
"Unga Ingoo",
"enUS",
},
[58605] = {
"Scarlet Judicator",
"Scarlet Monastery",
"enUS",
},
[58685] = {
"Scarlet Evangelist",
"Scarlet Halls",
"enUS",
},
[61783] = {
"Crypt Guardian",
"Crypt of Forgotten Kings",
"enUS",
},
[59771] = {
"Zombified Corpse",
"Scarlet Monastery",
"enUS",
},
[62358] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[59835] = {
"Krik'thik Swarmer",
"Gate of the Setting Sun",
"enUS",
},
[59372] = {
"Scarlet Scholar",
"Scarlet Halls",
"enUS",
},
[60410] = {
"Elegon",
"Mogu'shan Vaults",
"enUS",
},
[62486] = {
"Oku-Oku",
"Unga Ingoo",
"enUS",
},
[189901] = {
"Warlord Sargha",
"Neltharus",
"enUS",
},
[194373] = {
"Brackenhide Gnoll",
"Brackenhide Hollow",
"enUS",
},
[71030] = {
"Overseer Elaglo",
"The Secrets of Ragefire",
"enUS",
},
[58590] = {
"Scarlet Zealot",
"Scarlet Monastery",
"enUS",
},
[59213] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[59293] = {
"Scarlet Cannoneer",
"Scarlet Halls",
"enUS",
},
[59309] = {
"Obedient Hound",
"Scarlet Halls",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
"enUS",
},
[58319] = {
"Lesser Sha",
"Temple of the Jade Serpent",
"enUS",
},
[59884] = {
"Fallen Crusader",
"Scarlet Monastery",
"enUS",
},
[189266] = {
"Qalashi Trainee",
"Neltharus",
"enUS",
},
[59980] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[59501] = {
"Reanimated Corpse",
"Scholomance",
"enUS",
},
[64132] = {
"Amber Growth",
"Heart of Fear",
"enUS",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[213795] = {
"Stormstout Secrets",
"Stormstout Brewery",
"enUS",
},
[59613] = {
"Professor Slate",
"Scholomance",
"enUS",
},
[62711] = {
"Amber Monstrosity",
"Heart of Fear",
"enUS",
},
[59150] = {
"Flameweaver Koegler",
"Scarlet Halls",
"enUS",
},
[380834] = {
"Decay Tainted Chest",
"Brackenhide Hollow",
"enUS",
},
[60731] = {
"Undying Shadows",
"Mogu'shan Vaults",
"enUS",
},
[451226] = {
"Unraveling Sands",
"Scarlet Halls",
"enUS",
},
[58783] = {
"Scarlet Initiate",
"Scarlet Monastery",
"enUS",
},
[193293] = {
"Qalashi Warden",
"Neltharus",
"enUS",
},
[62408] = {
"Zar'thik Battle-Mender",
"Heart of Fear",
"enUS",
},
[60396] = {
"Emperor's Rage",
"Mogu'shan Vaults",
"enUS",
},
[65522] = {
"Bubble Shield",
"Stormstout Brewery",
"enUS",
},
[56867] = {
"Fiery Trickster",
"Stormstout Brewery",
"enUS",
},
[62009] = {
"Shadows of Anger",
"Crypt of Forgotten Kings",
"enUS",
},
[192464] = {
"Raging Ember",
"Neltharus",
"enUS",
},
[59518] = {
"Bloated Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[61610] = {
"Seething Sha",
"Crypt of Forgotten Kings",
"enUS",
},
[61131] = {
"Mogu'shan Secret-Keeper",
"Mogu'shan Vaults",
"enUS",
},
[59614] = {
"Bored Student",
"Scholomance",
"enUS",
},
[70683] = {
"Dark Shaman Xorenth",
"The Secrets of Ragefire",
"enUS",
},
[186206] = {
"Cruel Bonecrusher",
"Brackenhide Hollow",
"enUS",
},
[59726] = {
"Peril",
"Temple of the Jade Serpent",
"enUS",
},
[200131] = {
"Sha-Touched Guardian",
"Temple of the Jade Serpent",
"enUS",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
"enUS",
},
[192786] = {
"Qalashi Plunderer",
"Neltharus",
"enUS",
},
[64453] = {
"Set'thik Windblade",
"Heart of Fear",
"enUS",
},
[59359] = {
"Flesh Horror",
"Scholomance",
"enUS",
},
[60397] = {
"Emperor's Strength",
"Mogu'shan Vaults",
"enUS",
},
[70684] = {
"Frostmane Mauler",
"Blood in the Snow",
"enUS",
},
[56884] = {
"Taran Zhu",
"Shado-Pan Monastery",
"enUS",
},
[186208] = {
"Rotbow Ranger",
"Brackenhide Hollow",
"enUS",
},
[59982] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[59487] = {
"Bubble Shield",
"Stormstout Brewery",
"enUS",
},
[59503] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[59519] = {
"Stout Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[59551] = {
"Bopper",
"Stormstout Brewery",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
"enUS",
},
[187231] = {
"Wither Biter",
"Brackenhide Hollow",
"enUS",
},
[189467] = {
"Qalashi Bonesplitter",
"Neltharus",
"enUS",
},
[61707] = {
"Abomination of Anger",
"Crypt of Forgotten Kings",
"enUS",
},
[60701] = {
"Zian of the Endless Shadow",
"Mogu'shan Vaults",
"enUS",
},
[59184] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[212271] = {
"Zip Line",
"Unga Ingoo",
"enUS",
},
[189340] = {
"Chargath, Bane of Scales",
"Neltharus",
"enUS",
},
[212974] = {
"Tiger Temple Gong",
"Arena of Annihilation",
"enUS",
},
[70877] = {
"Volatile Earth",
"Heart of the Old God Scenario",
"enUS",
},
[185508] = {
"Claw Fighter",
"Brackenhide Hollow",
"enUS",
},
[64917] = {
"Sra'thik Ambercaller",
"Heart of Fear",
"enUS",
},
[64454] = {
"Zar'thik Augurer",
"Heart of Fear",
"enUS",
},
[59360] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
"enUS",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[59520] = {
"Fizzy Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
"enUS",
},
[70463] = {
"Frostmane Snowstalker",
"Blood in the Snow",
"enUS",
},
[194389] = {
"Lava Spawn",
"Neltharus",
"enUS",
},
[189471] = {
"Qalashi Blacksmith",
"Neltharus",
"enUS",
},
[210486] = {
"Dorgar Stoenbrow",
"Scarlet Halls",
"enUS",
},
[57109] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[58674] = {
"Angry Hound",
"Scarlet Halls",
"enUS",
},
[58722] = {
"Lilian Voss",
"Scholomance",
"enUS",
},
[189472] = {
"Qalashi Lavabearer",
"Neltharus",
"enUS",
},
[210487] = {
"Fellari Swiftarrow",
"Scarlet Halls",
"enUS",
},
[64902] = {
"Kor'thik Fleshrender",
"Heart of Fear",
"enUS",
},
[61341] = {
"Mounted Mogu",
"Mogu'shan Vaults",
"enUS",
},
[70464] = {
"Frostmane Witch Doctor",
"Blood in the Snow",
"enUS",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[60399] = {
"Qin-xi",
"Mogu'shan Vaults",
"enUS",
},
[210488] = {
"Ferren Marcus",
"Scarlet Halls",
"enUS",
},
[58898] = {
"Vigilant Watchman",
"Scarlet Halls",
"enUS",
},
[187238] = {
"Witherling",
"Brackenhide Hollow",
"enUS",
},
[211319] = {
"Relief Bucket",
"Stormstout Brewery",
"enUS",
},
[56439] = {
"Sha of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[61565] = {
"Quilen Statue",
"Crypt of Forgotten Kings",
"enUS",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
"enUS",
},
[70465] = {
"Frostmane Bonechiller",
"Blood in the Snow",
"enUS",
},
[61709] = {
"Spawn of Anger",
"Crypt of Forgotten Kings",
"enUS",
},
[56631] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[214387] = {
"Cache of Pure Energy",
"Mogu'shan Vaults",
"enUS",
},
[65414] = {
"Ethereal Sha",
"Shado-Pan Monastery",
"enUS",
},
[58803] = {
"Residual Hatred",
"Shado-Pan Monastery",
"enUS",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[60400] = {
"Jan-xi",
"Mogu'shan Vaults",
"enUS",
},
[62476] = {
"Trained Jungle Lory",
"Unga Ingoo",
"enUS",
},
[59426] = {
"Bopper",
"Stormstout Brewery",
"enUS",
},
[62508] = {
"Unga Brewstealer",
"Unga Ingoo",
"enUS",
},
[211259] = {
"Iron Gate",
"Scholomance",
"enUS",
},
[186284] = {
"Gutchewer Bear",
"Brackenhide Hollow",
"enUS",
},
[63594] = {
"Coagulated Amber",
"Heart of Fear",
"enUS",
},
[60033] = {
"Frenzied Spirit",
"Scarlet Monastery",
"enUS",
},
[56472] = {
"Fragrant Lotus",
"Shado-Pan Monastery",
"enUS",
},
[211260] = {
"Iron Gate",
"Scholomance",
"enUS",
},
[70595] = {
"Frostmane Prowler",
"Blood in the Snow",
"enUS",
},
[65581] = {
"Essence of Hate",
"Crypt of Forgotten Kings",
"enUS",
},
[58676] = {
"Scarlet Defender",
"Scarlet Halls",
"enUS",
},
[211261] = {
"Iron Gate",
"Scholomance",
"enUS",
},
[70787] = {
"Skullcrusher Gundu",
"Blood in the Snow",
"enUS",
},
[59746] = {
"Scarlet Centurion",
"Scarlet Monastery",
"enUS",
},
[214519] = {
"Snowdrift's Possessions",
"Shado-Pan Monastery",
"enUS",
},
[58756] = {
"Scarlet Evoker",
"Scarlet Halls",
"enUS",
},
[59794] = {
"Krik'thik Disruptor",
"Gate of the Setting Sun",
"enUS",
},
[59299] = {
"Scarlet Guardian",
"Scarlet Halls",
"enUS",
},
[70468] = {
"Bonechiller Barafu",
"Blood in the Snow",
"enUS",
},
[62397] = {
"Wind Lord Mel'jarak",
"Heart of Fear",
"enUS",
},
[211326] = {
"Tap Tool",
"Stormstout Brewery",
"enUS",
},
[210496] = {
"Fine Chair",
"Scarlet Halls",
"enUS",
},
[62477] = {
"Jibberwing Rider",
"Unga Ingoo",
"enUS",
},
[211135] = {
"Sliding Door",
"Stormstout Brewery",
"enUS",
},
[59459] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[210497] = {
"Fine Chair",
"Scarlet Halls",
"enUS",
},
[56473] = {
"Flying Snow",
"Shado-Pan Monastery",
"enUS",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
"enUS",
},
[71491] = {
"Guardian of Sacrifice",
"Crypt of Forgotten Kings",
"enUS",
},
[66413] = {
"Yeasty Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[57080] = {
"Corrupted Scroll",
"Temple of the Jade Serpent",
"enUS",
},
[65304] = {
"Hateful Monstrosity",
"Crypt of Forgotten Kings",
"enUS",
},
[62254] = {
"Quilen Watcher",
"Crypt of Forgotten Kings",
"enUS",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[70789] = {
"Zandalari Rage Banner",
"Blood in the Snow",
"enUS",
},
[56713] = {
"Master Snowdrift",
"Shado-Pan Monastery",
"enUS",
},
[71492] = {
"Maragor",
"Crypt of Forgotten Kings",
"enUS",
},
[186227] = {
"Monstrous Decay",
"Brackenhide Hollow",
"enUS",
},
[64458] = {
"Kor'thik Warsinger",
"Heart of Fear",
"enUS",
},
[62494] = {
"Unga Nibstabber",
"Unga Ingoo",
"enUS",
},
[59460] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[70822] = {
"Earthborn Hatred",
"Heart of the Old God Scenario",
"enUS",
},
[62590] = {
"Unga Scallywag",
"Unga Ingoo",
"enUS",
},
[59598] = {
"Lesser Sha",
"Temple of the Jade Serpent",
"enUS",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
"enUS",
},
[70471] = {
"Frostmane Berserker",
"Blood in the Snow",
"enUS",
},
[200388] = {
"Malformed Sha",
"Temple of the Jade Serpent",
"enUS",
},
[187315] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
"enUS",
},
[181861] = {
"Magmatusk",
"Neltharus",
"enUS",
},
[71123] = {
"Echo of Y'Shaarj",
"Heart of the Old God Scenario",
"enUS",
},
[70663] = {
"Embercore",
"The Secrets of Ragefire",
"enUS",
},
[59684] = {
"Hozen Party Animal",
"Stormstout Brewery",
"enUS",
},
[194469] = {
"Wither Slasher",
"Brackenhide Hollow",
"enUS",
},
[70690] = {
"Blood of Y'Shaarj",
"Heart of the Old God Scenario",
"enUS",
},
[213888] = {
"Taran Zhu's Personal Stash",
"Shado-Pan Monastery",
"enUS",
},
[210489] = {
"Harthal Truesight",
"Scarlet Halls",
"enUS",
},
[59705] = {
"Scarlet Flamethrower",
"Scarlet Monastery",
"enUS",
},
[56762] = {
"Yu'lon",
"Temple of the Jade Serpent",
"enUS",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[61345] = {
"Mogu Archer",
"Mogu'shan Vaults",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[58822] = {
"Risen Guard",
"Scholomance",
"enUS",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[185691] = {
"Vicious Hyena",
"Brackenhide Hollow",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[197857] = {
"Gutstabber",
"Brackenhide Hollow",
"enUS",
},
[62479] = {
"Trained Jungle Lory",
"Unga Ingoo",
"enUS",
},
[62495] = {
"Unga Villager",
"Unga Ingoo",
"enUS",
},
[56890] = {
"Krik'thik Infiltrator",
"Gate of the Setting Sun",
"enUS",
},
[59461] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[59220] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[70824] = {
"Fiery Anger",
"Heart of the Old God Scenario",
"enUS",
},
[59778] = {
"Krik'thik Striker",
"Gate of the Setting Sun",
"enUS",
},
[56511] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[210483] = {
"Fine Chair",
"Scarlet Halls",
"enUS",
},
[70473] = {
"Frostmane Headhunter",
"Blood in the Snow",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
"enUS",
},
[59078] = {
"Failed Student",
"Scholomance",
"enUS",
},
[59605] = {
"Sodden Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
"enUS",
},
[71112] = {
"Quivering Blood",
"Heart of the Old God Scenario",
"enUS",
},
[59804] = {
"Gripping Hatred",
"Shado-Pan Monastery",
"enUS",
},
[70665] = {
"Kor'kron Dire Soldier",
"The Secrets of Ragefire",
"enUS",
},
[70979] = {
"Water Elemental",
"Blood in the Snow",
"enUS",
},
[187192] = {
"Rageclaw",
"Brackenhide Hollow",
"enUS",
},
[61250] = {
"Sorcerer Mogu",
"Mogu'shan Vaults",
"enUS",
},
[70691] = {
"Mouth of Terror",
"Heart of the Old God Scenario",
"enUS",
},
[60208] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[62511] = {
"Amber-Shaper Un'sok",
"Heart of Fear",
"enUS",
},
[62847] = {
"Dissonance Field",
"Heart of Fear",
"enUS",
},
[56731] = {
"Habanero Brew",
"Stormstout Brewery",
"enUS",
},
[56747] = {
"Gu Cloudstrike",
"Shado-Pan Monastery",
"enUS",
},
[58807] = {
"Vestige of Hatred",
"Shado-Pan Monastery",
"enUS",
},
[58823] = {
"Scholomance Neophyte",
"Scholomance",
"enUS",
},
[62499] = {
"Unga Beachbummer",
"Unga Ingoo",
"enUS",
},
[63570] = {
"Sra'thik Pool-Tender",
"Heart of Fear",
"enUS",
},
[59467] = {
"Candlestick Mage",
"Scholomance",
"enUS",
},
[59458] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[62480] = {
"Trained Jungle Lory",
"Unga Ingoo",
"enUS",
},
[56875] = {
"Krik'thik Demolisher",
"Gate of the Setting Sun",
"enUS",
},
[214277] = {
"The Dark Grimoire",
"Scholomance",
"enUS",
},
[64061] = {
"Mogu'shan Warden",
"Mogu'shan Vaults",
"enUS",
},
[376176] = {
"Meat Storage",
"Brackenhide Hollow",
"enUS",
},
[59494] = {
"Yeasty Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[60197] = {
"Training Dummy",
"Scarlet Monastery",
"enUS",
},
[71401] = {
"Proto-Drake Whelp",
"The Secrets of Ragefire",
"enUS",
},
[185534] = {
"Bonebolt Hunter",
"Brackenhide Hollow",
"enUS",
},
[70544] = {
"Hekima the Wise",
"Blood in the Snow",
"enUS",
},
[214278] = {
"Kel'Thuzad's Deep Knowledge",
"Scholomance",
"enUS",
},
[58664] = {
"Instructor Chillheart's Phylactery",
"Scholomance",
"enUS",
},
[61139] = {
"Shan-xi Watershaper",
"Mogu'shan Vaults",
"enUS",
},
[56766] = {
"Volatile Energy",
"Shado-Pan Monastery",
"enUS",
},
[70959] = {
"Urtharges the Destroyer",
"Heart of the Old God Scenario",
"enUS",
},
[58632] = {
"Armsmaster Harlan",
"Scarlet Halls",
"enUS",
},
[59191] = {
"Commander Lindon",
"Scarlet Halls",
"enUS",
},
[59175] = {
"Master Archer",
"Scarlet Halls",
"enUS",
},
[56636] = {
"Commander Ri'mok",
"Gate of the Setting Sun",
"enUS",
},
[211277] = {
"Coffer of Forgotten Souls",
"Scholomance",
"enUS",
},
[59223] = {
"Brother Korloff",
"Scarlet Monastery",
"enUS",
},
[210894] = {
"Gold Coins",
"Scarlet Halls",
"enUS",
},
[212293] = {
"Inactive Beach Bomb",
"Unga Ingoo",
"enUS",
},
[61347] = {
"Kingsguard",
"Mogu'shan Vaults",
"enUS",
},
[56732] = {
"Liu Flameheart",
"Temple of the Jade Serpent",
"enUS",
},
[59303] = {
"Houndmaster Braun",
"Scarlet Halls",
"enUS",
},
[56764] = {
"Consuming Sha",
"Shado-Pan Monastery",
"enUS",
},
[59241] = {
"Scarlet Treasurer",
"Scarlet Halls",
"enUS",
},
[63311] = {
"Scar-Shell",
"Arena of Annihilation",
"enUS",
},
[56876] = {
"Krik'thik Sapper",
"Gate of the Setting Sun",
"enUS",
},
[67027] = {
"Jungle Brewstealer",
"Unga Ingoo",
"enUS",
},
[62465] = {
"Captain Ook",
"Unga Ingoo",
"enUS",
},
[62481] = {
"Unga Spearscamp",
"Unga Ingoo",
"enUS",
},
[62497] = {
"Unga Keg-Blocker",
"Unga Ingoo",
"enUS",
},
[59479] = {
"Yan-Zhu the Uncasked",
"Stormstout Brewery",
"enUS",
},
[70703] = {
"Core Spider",
"The Secrets of Ragefire",
"enUS",
},
[56924] = {
"Inflamed Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[59373] = {
"Scarlet Pupil",
"Scarlet Halls",
"enUS",
},
[56754] = {
"Azure Serpent",
"Shado-Pan Monastery",
"enUS",
},
[56865] = {
"Aqua Dancer",
"Stormstout Brewery",
"enUS",
},
[56763] = {
"Regenerating Sha",
"Shado-Pan Monastery",
"enUS",
},
[58757] = {
"Scholomance Acolyte",
"Scholomance",
"enUS",
},
[70474] = {
"Farastu",
"Blood in the Snow",
"enUS",
},
[58569] = {
"Scarlet Purifier",
"Scarlet Monastery",
"enUS",
},
[56541] = {
"Master Snowdrift",
"Shado-Pan Monastery",
"enUS",
},
[59521] = {
"Bubbling Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[70982] = {
"Frost Totem",
"Blood in the Snow",
"enUS",
},
[58633] = {
"Instructor Chillheart",
"Scholomance",
"enUS",
},
[71244] = {
"Kor'kron Shadowblade",
"The Secrets of Ragefire",
"enUS",
},
[60709] = {
"Qiang the Merciless",
"Mogu'shan Vaults",
"enUS",
},
[215816] = {
"Bench",
"Temple of the Jade Serpent",
"enUS",
},
[186242] = {
"Skulking Gutstabber",
"Brackenhide Hollow",
"enUS",
},
[61766] = {
"Crypt Guardian",
"Crypt of Forgotten Kings",
"enUS",
},
[59240] = {
"Scarlet Hall Guardian",
"Scarlet Halls",
"enUS",
},
[59808] = {
"Shado-Pan Stormbringer",
"Shado-Pan Monastery",
"enUS",
},
[56717] = {
"Hoptallus",
"Stormstout Brewery",
"enUS",
},
[3977] = {
"High Inquisitor Whitemane",
"Scarlet Monastery",
"enUS",
},
[63568] = {
"Amber-Ridden Mushan",
"Heart of Fear",
"enUS",
},
[56765] = {
"Destroying Sha",
"Shado-Pan Monastery",
"enUS",
},
[62402] = {
"Kor'thik Elite Blademaster",
"Heart of Fear",
"enUS",
},
[59480] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[59368] = {
"Krastinovian Carver",
"Scholomance",
"enUS",
},
[59464] = {
"Hopper",
"Stormstout Brewery",
"enUS",
},
[70702] = {
"Flame Hound",
"The Secrets of Ragefire",
"enUS",
},
[56877] = {
"Raigonn",
"Gate of the Setting Sun",
"enUS",
},
[186116] = {
"Gutshot",
"Brackenhide Hollow",
"enUS",
},
[71245] = {
"Kor'kron Dark Shaman",
"The Secrets of Ragefire",
"enUS",
},
[64063] = {
"Mogu'shan Arcanist",
"Mogu'shan Vaults",
"enUS",
},
[70798] = {
"Kor'kron Emberguard",
"The Secrets of Ragefire",
"enUS",
},
[64446] = {
"Training Dummy",
"Scarlet Monastery",
"enUS",
},
[67081] = {
"Forgotten King",
"Crypt of Forgotten Kings",
"enUS",
},
[59751] = {
"Shado-Pan Warden",
"Shado-Pan Monastery",
"enUS",
},
[59544] = {
"The Nodding Tiger",
"Temple of the Jade Serpent",
"enUS",
},
[56637] = {
"Ook-Ook",
"Stormstout Brewery",
"enUS",
},
[189247] = {
"Tamed Phoenix",
"Neltharus",
"enUS",
},
[59080] = {
"Darkmaster Gandling",
"Scholomance",
"enUS",
},
[62701] = {
"Mutated Construct",
"Heart of Fear",
"enUS",
},
[59153] = {
"Rattlegore",
"Scholomance",
"enUS",
},
[58198] = {
"Shado-Pan Disciple",
"Shado-Pan Monastery",
"enUS",
},
[56395] = {
"Shado-Pan Novice",
"Shado-Pan Monastery",
"enUS",
},
[70746] = {
"Frostmane Flesh-Eater",
"Blood in the Snow",
"enUS",
},
[60710] = {
"Subetai the Swift",
"Mogu'shan Vaults",
"enUS",
},
[59193] = {
"Boneweaver",
"Scholomance",
"enUS",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[60708] = {
"Meng the Demented",
"Mogu'shan Vaults",
"enUS",
},
[59752] = {
"Shado-Pan Ambusher",
"Shado-Pan Monastery",
"enUS",
},
[214280] = {
"Forbidden Rites and other Rituals Necromantic",
"Scholomance",
"enUS",
},
[56718] = {
"Hopper",
"Stormstout Brewery",
"enUS",
},
[59800] = {
"Krik'thik Rager",
"Gate of the Setting Sun",
"enUS",
},
[199916] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[58810] = {
"Fragment of Hatred",
"Shado-Pan Monastery",
"enUS",
},
[62492] = {
"Unga Totemchipper",
"Unga Ingoo",
"enUS",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[64916] = {
"Kor'thik Swarmguard",
"Heart of Fear",
"enUS",
},
[66195] = {
"Unga Rocket Surgeon",
"Unga Ingoo",
"enUS",
},
[59302] = {
"Sergeant Verdone",
"Scarlet Halls",
"enUS",
},
[56862] = {
"Drunken Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[186120] = {
"Treemouth",
"Brackenhide Hollow",
"enUS",
},
[211137] = {
"Sliding Door",
"Stormstout Brewery",
"enUS",
},
[56658] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[62837] = {
"Grand Empress Shek'zeer",
"Heart of Fear",
"enUS",
},
[62360] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[59522] = {
"Sudsy Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[60040] = {
"Commander Durand",
"Scarlet Monastery",
"enUS",
},
[59545] = {
"The Golden Beetle",
"Temple of the Jade Serpent",
"enUS",
},
[186121] = {
"Decatriarch Wratheye",
"Brackenhide Hollow",
"enUS",
},
[58555] = {
"Scarlet Fanatic",
"Scarlet Monastery",
"enUS",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[62691] = {
"Living Amber",
"Heart of Fear",
"enUS",
},
[58108] = {
"Krik'thik Infiltrator",
"Gate of the Setting Sun",
"enUS",
},
[59789] = {
"Thalnos the Soulrender",
"Scarlet Monastery",
"enUS",
},
[194745] = {
"Rotfang Hyena",
"Brackenhide Hollow",
"enUS",
},
[186122] = {
"Rira Hackclaw",
"Brackenhide Hollow",
"enUS",
},
[58683] = {
"Scarlet Myrmidon",
"Scarlet Halls",
"enUS",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
"enUS",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[59242] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[194467] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[56719] = {
"Sha of Violence",
"Shado-Pan Monastery",
"enUS",
},
[59801] = {
"Krik'thik Wind Shaper",
"Gate of the Setting Sun",
"enUS",
},
[189669] = {
"Binding Spear",
"Neltharus",
"enUS",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[189478] = {
"Forgemaster Gorek",
"Neltharus",
"enUS",
},
},
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["ui_parent_scale_tune"] = 1.562500034924597,
["first_run3"] = true,
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Extra Border"] = 2,
["Cast Bar Icon Config"] = 2,
["Aura Reorder"] = 3,
["Hide Neutral Units"] = 1,
["Attacking Specific Unit"] = 2,
["Target Color"] = 3,
["Execute Range"] = 1,
["Combo Points"] = 6,
},
["saved_cvars"] = {
["nameplateMinAlpha"] = "0.90135484",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplateShowEnemies"] = "1",
["nameplateShowFriends"] = "0",
},
["number_region_first_run"] = true,
["aura2_y_offset"] = 5,
["login_counter"] = 187,
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1625793282,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1154,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["__TrashAt"] = 1715858480,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
350421,
355787,
348513,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Value"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
["Key"] = "timerList",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["Name"] = "Cast - Alert + Timer [P]",
["NpcNames"] = {
},
},
},
["ghost_auras"] = {
["auras"] = {
["WARLOCK"] = {
{
[172] = true,
[980] = true,
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
},
},
["aura_tracker"] = {
["buff_tracked"] = {
[209859] = true,
},
},
["plate_config"] = {
["global_health_height"] = 12,
["global_health_width"] = 112,
},
["patch_version"] = 36,
["aura_y_offset"] = 5,
},
["Claudio"] = {
["aura_breakline_space"] = 15,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 632,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Buff Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = false,
["Revision"] = 828,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Very Important [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = false,
["Revision"] = 533,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
273577,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowHeight",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Explosion Affix M+ [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 368,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Desc"] = "Add the debuff name in the trigger box.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Debuff Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = false,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["version"] = -1,
["Name"] = "Cast - Big Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Small Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Time"] = 1615905300,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Revision"] = 110,
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["NpcNames"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Name"] = "Aura - Invalidate Unit [Plater]",
["PlaterCore"] = 1,
["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
["SpellIds"] = {
261265,
261266,
271590,
},
["Prio"] = 99,
["Enabled"] = true,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
["Time"] = 1596198406,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
["Icon"] = 135024,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
["Revision"] = 62,
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
"141851",
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
["Name"] = "Color Change [Plater]",
["PlaterCore"] = 1,
["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
["SpellIds"] = {
},
["Prio"] = 99,
["Enabled"] = true,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1626382829,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Revision"] = 375,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["SpellIds"] = {
},
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Key"] = "timeleftToBlink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Timeleft to Blink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "blinkSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Key"] = "blinkMaxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.28627450980392,
0.003921568627451,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 8,
["Key"] = "timeLeftWarning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Time Left Warning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Key"] = "timeLeftCritical",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Time Left Critical",
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.87058823529412,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.074509803921569,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
},
{
["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
["Time"] = 1543680853,
["Icon"] = 133006,
["Enabled"] = false,
["Revision"] = 45,
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["NpcNames"] = {
},
["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
["Name"] = "Aura - Border Color [Plater]",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
["Time"] = 1578054190,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
["Icon"] = 136048,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Revision"] = 133,
["Options"] = {
},
["Author"] = "Celian-Sylvanas",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
["Name"] = "UnitPower [Plater]",
["PlaterCore"] = 1,
["NpcNames"] = {
"Guardian of Yogg-Saron",
},
["Desc"] = "Show the energy amount above the nameplate",
["SpellIds"] = {
},
["Enabled"] = true,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the reference of the arrow texture\n    local movingArrowTexture = unitFrame._movingArrowTexture\n    \n    --if it doesn't exists yet, create now\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    local mAT = movingArrowTexture\n    \n    if (not mAT.movingAnimation) then\n        local onPlay = function()\n            mAT:Show() \n        end\n        \n        local onStop =  function()\n            mAT:Hide() \n        end\n        \n        mAT.movingAnimation = Plater:CreateAnimationHub( mAT, onPlay, onStop )\n        mAT.movingAnimation:SetLooping( \"REPEAT\" )\n    end\n    \n    if (not mAT.arrowAnimation) then\n        local arrowAnimation = Plater:CreateAnimation (mAT.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n        mAT.arrowAnimation = arrowAnimation\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    mAT.movingAnimation:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    local maxAlpha = scriptTable.config.arrowAlpha\n    \n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = mAT.movingAnimation:GetProgress()\n    \n    if (percent < 0.20) then\n        local value = DetailsFramework.Math.MapRangeClamped(0, 0.20, 0, maxAlpha, percent)\n        mAT:SetAlpha(value)\n        \n    elseif (percent > 0.8) then\n        local value = DetailsFramework.Math.MapRangeClamped(0.8, 1, maxAlpha, 0, percent)\n        mAT:SetAlpha(value)\n    end\n    \n    self.ThrottleUpdate = 0\n    \n    --mAT:SetAlpha(1)\nend",
["Time"] = 1719788095,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 754,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
431494,
426860,
448213,
434407,
439789,
434824,
453161,
435012,
439506,
443500,
434779,
451543,
439621,
441384,
441381,
447395,
456711,
448105,
323137,
321968,
331718,
331721,
325223,
340160,
321834,
320596,
324323,
333488,
323496,
333477,
256627,
257292,
454438,
269029,
257862,
425027,
449130,
428202,
448640,
427869,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Frontal Cone [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animSpeed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Option 8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bChangeSpellName",
["Value"] = true,
["Name"] = "Change Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the spell name to the text entered below",
},
{
["Type"] = 3,
["Key"] = "spellNameText",
["Value"] = "Frontal",
["Name"] = "New Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The customized spell name",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    \n    mAT:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    mAT:SetSize(16, self:GetHeight())\n    mAT:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    mAT:SetParent(self.FrameOverlay)\n    mAT:SetDrawLayer(\"overlay\",  7)\n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    mAT:SetDesaturated(scriptTable.config.desaturateArrow)        \n    \n    mAT:ClearAllPoints()\n    mAT:SetPoint(\"left\", self, \"left\", -16, 0)\n    \n    local arrowAnimation = mAT.arrowAnimation\n    arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    arrowAnimation:SetOffset(self:GetWidth(), 0)\n    \n    mAT.movingAnimation:Play()\n    \n    if (scriptTable.config.bChangeSpellName) then\n        self.Text:SetText(scriptTable.config.spellNameText)\n    end\n    \n    --DetailsFramework:DebugVisibility(mAT)\n\nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["Icon"] = 1029718,
["Enabled"] = true,
["Revision"] = 269,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Fixate [Plater]",
["SpellIds"] = {
},
["Desc"] = "Show above the nameplate who is the player fixated",
["Options"] = {
},
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604087921,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 266,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Fixate On You [Plater]",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["Options"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TextSize = 12\n    envTable.TextFont  = \"Gotham Ultra\"\n    envTable.Xoffset = 0\n    envTable.Yoffset = -12\n    \n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"center\", unitFrame.healthBar, \"center\", envTable.Xoffset, envTable.Yoffset);    \n    \n    envTable.FixateTarget.textsize = envTable.TextSize\n    envTable.FixateTarget.textfont = envTable.TextFont\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    \n    \nend\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1605189097,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        \n        \n    else \n        envTable.FixateTarget.text = \"\"\n        \n    end    \nend\n\n\n\n\n\n\n\n\n",
["url"] = "https://wago.io/cQbyWpQeE/3",
["NpcNames"] = {
"Earthrager",
"Spiteful Shade",
"Carrion Worm",
},
["Icon"] = 1029718,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n",
["Revision"] = 302,
["semver"] = "1.0.2",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TextSize = 12\n    envTable.TextFont  = \"Gotham Ultra\"\n    envTable.Xoffset = 0\n    envTable.Yoffset = -12\n    \n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"center\", unitFrame.healthBar, \"center\", envTable.Xoffset, envTable.Yoffset);    \n    \n    envTable.FixateTarget.textsize = envTable.TextSize\n    envTable.FixateTarget.textfont = envTable.TextFont\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n",
["Options"] = {
},
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["SpellIds"] = {
272584,
244653,
260954,
257739,
257314,
266107,
257582,
262377,
257407,
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        \n        \n    else \n        envTable.FixateTarget.text = \"\"\n        \n    end    \nend\n\n\n\n\n\n\n\n\n",
["Name"] = "Fixate No cast",
["PlaterCore"] = 1,
["Prio"] = 99,
["version"] = 3,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    \n    \nend\n\n\n",
["Enabled"] = true,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = false,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Ultra Important [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Health Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1612442358,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["url"] = "",
["NpcNames"] = {
},
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Revision"] = 64,
["semver"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Name"] = "Auto Set Skull",
["PlaterCore"] = 1,
["Prio"] = 99,
["version"] = -1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Enabled"] = false,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604354364,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 206,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Countdown",
["SpellIds"] = {
},
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["Options"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["Icon"] = 136048,
["Enabled"] = true,
["Revision"] = 233,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Unit - Show Energy [Plater]",
["SpellIds"] = {
},
["Desc"] = "Show the energy amount above the nameplate.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Fraction"] = false,
["Value"] = 16,
["Key"] = "fontSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1611844883,
["url"] = "",
["Icon"] = 135945,
["Enabled"] = false,
["Revision"] = 186,
["semver"] = "",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["NpcNames"] = {
"174773",
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "M+ Spiteful",
["SpellIds"] = {
},
["Desc"] = "Time to die Spiteful affix",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Fraction"] = false,
["Value"] = 27,
["Key"] = "bgWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.50588235294118,
0.070588235294118,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "textSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "switchTargetName",
["Value"] = true,
["Name"] = "Show Target instead of Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useTargetingColor",
["Value"] = true,
["Name"] = "Change Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetingColor",
["Value"] = {
0.070588235294118,
0.61960784313725,
0,
1,
},
["Name"] = "Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1625697537,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_is_timer",
["Enabled"] = true,
["Revision"] = 282,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Castbar is Timer [P]",
["Desc"] = "When a spell resembles more a timer than a spell being cast",
["SpellIds"] = {
354080,
},
["Options"] = {
{
["Type"] = 7,
["Key"] = "customSize",
["Value"] = {
{
"17",
"120, 16",
},
},
["Name"] = "Customized Size (Key = Spell ID, Value = Width, Height)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Enter the spellId into the Key and width,height into the Value. Example: Key 17 Value 120,16",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 120,
["Key"] = "width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Width",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 16,
["Key"] = "height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Set the size of the cast time",
["Min"] = 8,
["Fraction"] = false,
["Value"] = 12,
["Key"] = "timerFontSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Timer Size",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option7",
["Value"] = "Time Separators",
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "separatorColor",
["Value"] = {
1,
1,
1,
0.5992676615715,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 1,
["Key"] = "separatorWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Important Target [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetNameSize",
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetFrameWidth",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Name"] = "Frame Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["Name"] = "Cast - Alert + Timer [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["NpcNames"] = {
},
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Name"] = "Aura is Shield [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Enabled"] = true,
["Revision"] = 33,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Fixate by Unit Buff [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = false,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Glowing [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = false,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["NpcNames"] = {
},
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Effect After Cast [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = false,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Key"] = "rotationDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Key"] = "animStartDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Name"] = "Texture Start Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "textureScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "textureAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - Circle AoE [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1719452142,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 156,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["NpcNames"] = {
"214840",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Health Markers [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 572,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Key"] = "nameplateSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "skullAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Alpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullScale",
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["version"] = -1,
["Name"] = "Add - Important [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Tag Number [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = false,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Quick Flash [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color of  add",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Add - Warning [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Enabled"] = true,
["Revision"] = 111,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "scale",
},
},
["version"] = -1,
["Name"] = "Add - Non Elite Trash [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Shield Interrupt [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Stop Casting [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = true,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Explode on Die [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["Icon"] = 236209,
["Enabled"] = true,
["Revision"] = 18,
["semver"] = "",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura While Casting [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots Y Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "minAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["Name"] = "Cast - On Going Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage(unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    self.BigSparkle = self.BigSparkle or Plater:CreateImage(self.FrameOverlay)\n    self.BigSparkle.texture = [[Interface\\AddOns\\Plater\\images\\cast_bar_vertical_spark.png]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    self.BigSparkle:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    self.BigSparkle:ClearAllPoints()\n    self.BigSparkle:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 0)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\nend\n\n\n\n\n",
["Time"] = 1719711112,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_important_bycolor.png",
["Enabled"] = true,
["Revision"] = 831,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode, summon or transform if the cast passes.",
["NpcNames"] = {
},
["SpellIds"] = {
432967,
446717,
451379,
451067,
448013,
448057,
322486,
341709,
321226,
429428,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Important by Color [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation changing the cast bar color.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "To get a list of color names, use: /plater colors",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Health Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 6,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    self.BigSparkle:Show()\n    self.BigSparkle:SetWidth(8)\n    self.BigSparkle:SetHeight(self:GetHeight() + unitFrame.healthBar:GetHeight())\n    self.BigSparkle:SetScale(1)\n    self.BigSparkle:SetVertexColor(1,1, 1, 1)\n    envTable.overlaySpark:Hide()\n    \n    self.Spark:Hide()\n    \n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.dotAnimation:SetPoint(\"bottomright\", self, \"bottomright\", scriptTable.config.xOffset, -scriptTable.config.yOffset)\n    \n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711125,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_shining_green.png",
["Enabled"] = true,
["Revision"] = 873,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
434802,
448248,
453840,
337249,
324293,
49184,
449455,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Shining Green [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    --envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1719788204,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_special_ability.png",
["Enabled"] = true,
["Revision"] = 613,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "For unique abilities that are an important part of the fight against a bosses or mini bosse.",
["NpcNames"] = {
},
["SpellIds"] = {
451026,
452127,
446615,
433766,
432117,
448560,
440218,
441289,
447146,
438860,
448847,
449687,
456751,
449939,
336499,
322550,
320208,
321894,
276068,
423200,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Special Ability [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 139,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["NpcNames"] = {
},
["SpellIds"] = {
447141,
432967,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heroic Leap [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
},
{
["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.Spark:SetVertexColor( unpack(Plater.db.profile.cast_statusbar_spark_color) )\n    PixelUtil.SetSize( self.Spark, Plater.db.profile.cast_statusbar_spark_width, self:GetHeight() )\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1719711134,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_spark.png",
["Enabled"] = true,
["Revision"] = 75,
["semver"] = "",
["Author"] = "Tennah-These Go To Eleven",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Change the spark color to differentiate a cast from another.",
["NpcNames"] = {
},
["SpellIds"] = {
453140,
456713,
450088,
322614,
323730,
257348,
272422,
429427,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Spark Color [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "In the box at right, add the spell id and the color.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "To get a list of colors, use: /plater colors",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "sparkWithScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Spark Width Scale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Name"] = "Spark Height Scale",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "sparkHeightScale",
},
{
["Type"] = 7,
["Key"] = "sparkColor",
["Value"] = {
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the spark color\n    local sparkColor = scriptTable.config.sparkColor[tostring(envTable._SpellID)]\n    \n    self.Spark:SetVertexColor(DetailsFramework:ParseColors(sparkColor))\n    \n    self.Spark:SetWidth( self.Spark:GetWidth() * scriptTable.config.sparkWithScale )\n    self.Spark:SetHeight( self.Spark:GetHeight() * scriptTable.config.sparkHeightScale )\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719679972,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 551,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Healing effect that cannot be interrupted.",
["NpcNames"] = {
},
["SpellIds"] = {
432520,
320822,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heal Stun [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719757483,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2_icon.png",
["Enabled"] = true,
["Revision"] = 318,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
451102,
426787,
448888,
439811,
434796,
434793,
438879,
438473,
434252,
434829,
440468,
436205,
436246,
441395,
437533,
451965,
456902,
456900,
451996,
451939,
450077,
450079,
324909,
324922,
460092,
272711,
269266,
425974,
424879,
426771,
426786,
423324,
428879,
},
["PlaterCore"] = 1,
["Name"] = "Cast - AoE Hit All [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "How much time takes for one revolution.",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.05,
["Name"] = "Animation Start Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 1,
["Key"] = "textureStartAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.9,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.6392157077789307,
0.6392157077789307,
0.6392157077789307,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.1, 0.5)\n    \n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    if (envTable._CanInterrupt) then\n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    else        \n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    end    \n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719694337,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_debuff.png",
["Enabled"] = true,
["Revision"] = 741,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["NpcNames"] = {
},
["SpellIds"] = {
432448,
431309,
451107,
451119,
438618,
436322,
443507,
443436,
439341,
447261,
449444,
451224,
451241,
450095,
451612,
451395,
324987,
327393,
256709,
268230,
275836,
426308,
449153,
427461,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Debuff [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9686275124549866,
0.9764706492424011,
1,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Trail Color",
["Value"] = {
0.4901961088180542,
0,
0.5490196347236633,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (IsInRaid()) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    --textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:SetTexture([[Interface\\AddOns\\Plater\\images\\tail_rounded_white.png]])\n    textureStretched:SetHeight(castBar:GetHeight() + 2)\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    \n    --trail\n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    --local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    --Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    self.simpleInterruptFlash = self.simpleInterruptFlash or  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    \n    self.simpleInterruptFlash:SetBlendMode (\"ADD\")\n    self.simpleInterruptFlash:SetDrawLayer(\"OVERLAY\", 7)\n    self.simpleInterruptFlash:SetPoint (\"center\", self, \"center\")\n    self.simpleInterruptFlash:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    self.simpleInterruptFlashAnimHub = self.simpleInterruptFlashAnimHub or Plater:CreateAnimationHub (self.simpleInterruptFlash, \n        function()\n            self.simpleInterruptFlash:Show()\n        end,\n        function()\n            self.simpleInterruptFlash:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    self.simpleInterruptFlashAnimHub.fadeIn = self.simpleInterruptFlashAnimHub.fadeIn or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    self.simpleInterruptFlashAnimHub.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    self.simpleInterruptFlashAnimHub.fadeOut = self.simpleInterruptFlashAnimHub.fadeOut or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    self.simpleInterruptFlashAnimHub.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    self.simpleInterruptFlashAnimHub:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711128,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 958,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start.",
["NpcNames"] = {
},
["SpellIds"] = {
431333,
442210,
443430,
443433,
451871,
76711,
334748,
334749,
328667,
338353,
445207,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Simple Interrupt [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    self.simpleInterruptFlash:SetHeight(self:GetHeight() * 2.5 )\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    self.simpleInterruptFlashAnimHub:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Enabled"] = true,
["Revision"] = 158,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["NpcNames"] = {
},
["SpellIds"] = {
431364,
423327,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Ongoing Cast [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Name"] = "Dots Y Offset",
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Min Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "maxAlpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1722866303,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Enabled"] = true,
["Revision"] = 1254,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heal Cut [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.TextureWatchStep) then\n        \n        unitFrame.TextureWatchStep = true\n        \n        local animationFrame = CreateFrame(\"frame\", nil, unitFrame)\n        \n        \n        --> single animation group\n        local bearTrapAnimation = animationFrame:CreateAnimationGroup(\"beartrapAnimationGroup\")\n        bearTrapAnimation:SetLooping(\"NONE\")\n        \n        --> widgets:\n        \n        ----------------------------------------------\n        \n        local leftTrap  = animationFrame:CreateTexture(\"$parentleftTrapTexture\", \"ARTWORK\")\n        leftTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        leftTrap:SetDrawLayer(\"ARTWORK\", 0)\n        leftTrap:SetPoint(\"center\", animationFrame, \"center\", -48, 0)\n        leftTrap:SetSize(100, 100)\n        leftTrap:SetTexCoord(1, 0.0010000000149012, 0.0010000000149012, 1)\n        \n        --> animations for leftTrap\n        \n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(1)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetStartDelay(0.39999997615814)\n        leftTrap.rotation:SetDegrees(-90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(6)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetDegrees(90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        leftTrap.alpha:SetTarget(leftTrap)\n        leftTrap.alpha:SetOrder(6)\n        leftTrap.alpha:SetDuration(0.195999994874)\n        leftTrap.alpha:SetFromAlpha(1)\n        leftTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local rightTrap  = animationFrame:CreateTexture(\"$parentrightTrapTexture\", \"ARTWORK\")\n        rightTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        rightTrap:SetDrawLayer(\"ARTWORK\", 0)\n        rightTrap:SetPoint(\"center\", animationFrame, \"center\", 0, 0)\n        rightTrap:SetSize(100, 100)\n        \n        --> animations for rightTrap\n        \n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(1)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetStartDelay(0.39999997615814)\n        rightTrap.rotation:SetDegrees(90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(6)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetDegrees(-90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        rightTrap.alpha:SetTarget(rightTrap)\n        rightTrap.alpha:SetOrder(6)\n        rightTrap.alpha:SetDuration(0.195999994874)\n        rightTrap.alpha:SetFromAlpha(1)\n        rightTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local boots  = animationFrame:CreateTexture(\"$parentbootsTexture\", \"BORDER\")\n        boots:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_shoes.png]])\n        boots:SetDrawLayer(\"BORDER\", 0)\n        boots:SetPoint(\"center\", animationFrame, \"center\", -88, 35)\n        boots:SetSize(50, 50)\n        \n        --> animations for boots\n        \n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(1)\n        boots.alpha:SetDuration(0.31599998474121)\n        boots.alpha:SetFromAlpha(0)\n        boots.alpha:SetToAlpha(1)\n        boots.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        boots.rotation:SetTarget(boots)\n        boots.rotation:SetOrder(1)\n        boots.rotation:SetDuration(0.2960000038147)\n        boots.rotation:SetStartDelay(0.19999998807907)\n        boots.rotation:SetDegrees(40)\n        boots.rotation:SetOrigin(\"center\", 0, 0)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(1)\n        boots.translation:SetDuration(0.59599995613098)\n        boots.translation:SetOffset(63, -33)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(2)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(3)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(4)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(5)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(6)\n        boots.alpha:SetDuration(0.39599999785423)\n        boots.alpha:SetFromAlpha(1)\n        boots.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        unitFrame.BearTrapTextures = {leftTrap, rightTrap, boots}\n        unitFrame.BearTrapAnimationFrame = animationFrame\n        unitFrame.BearTrapAnimation = bearTrapAnimation\n        \n        \n        bearTrapAnimation:SetScript(\"OnPlay\", function()\n                boots:SetAlpha(0)\n                boots:Show()\n                leftTrap:Show()\n                rightTrap:Show()            \n        end)\n        \n        bearTrapAnimation:SetScript(\"OnFinished\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)       \n        \n        bearTrapAnimation:SetScript(\"OnStop\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)           \n        \n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1720031975,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_voidzone.png",
["Enabled"] = true,
["Revision"] = 220,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play an animation when the cast creates small zones in the ground that will damage if the player doesn't move.",
["NpcNames"] = {
},
["SpellIds"] = {
450784,
451423,
445813,
445838,
438658,
433845,
456696,
451391,
324923,
323138,
340189,
326021,
320571,
321780,
345623,
333479,
334476,
320772,
257882,
424903,
426345,
422233,
445541,
428703,
439559,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Voidzone [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Settings for the animation played when the cast creates small void zones in the ground.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimationFrame:SetSize(1, 1)\n    unitFrame.BearTrapAnimationFrame:ClearAllPoints()\n    unitFrame.BearTrapAnimationFrame:SetPoint(\"center\", unitFrame, \"center\", 30, 63)\n    unitFrame.BearTrapAnimationFrame:SetScale(0.5)\n    \n    unitFrame.BearTrapAnimation:Play()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719758013,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 281,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
453212,
451098,
427001,
438622,
446086,
447271,
437700,
439646,
448877,
451387,
331743,
320637,
327240,
257170,
257326,
257169,
423538,
428508,
428520,
},
["PlaterCore"] = 1,
["Name"] = "Cast - AoE With Range [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.2,
["Name"] = "Animation Start Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 0.3,
["Key"] = "textureStartAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.7411764860153198,
0.7411764860153198,
0.7411764860153198,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719788550,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
["Enabled"] = true,
["Revision"] = 27,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show a castbar for the aura duration.",
["NpcNames"] = {
},
["SpellIds"] = {
438494,
335141,
},
["PlaterCore"] = 1,
["Name"] = "Aura - Is Cast Bar [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
},
},
["saved_cvars_last_change"] = {
["nameplateShowFriends"] = "Interface/AddOns/Plater/Plater.lua:8574",
["nameplateMotion"] = "Interface/AddOns/Plater/Plater.lua:8624",
["nameplateShowAll"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Blizzard_SharedXML/CvarUtil.lua\"]:72: in function `SetValue'\n[string \"@Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Setting.lua\"]:187: in function `SetValueInternal'\n[string \"@Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/AddOns/Blizzard_Settings_Shared/Blizzard_SettingControls.lua\"]:383: in function <...lizzard_Settings_Shared/Blizzard_SettingControls.lua:379>\n[string \"=[C]\"]: ?\n[string \"@Interface/AddOns/Blizzard_SharedXML/CallbackRegistry.lua\"]:178: in function <...rface/AddOns/Blizzard_SharedXML/CallbackRegistry.lua:177>\n[string \"=[C]\"]: ?\n[string \"@Interface/AddOns/Blizzard_SharedXML/CallbackRegistry.lua\"]:181: in function `TriggerEvent'\n[string \"@Interface/AddOns/Blizzard_Settings_Shared/Blizzard_SettingControls.lua\"]:332: in function <...lizzard_Settings_Shared/Blizzard_SettingControls.lua:331>\n",
["nameplateShowEnemies"] = "Interface/AddOns/Plater/Plater.lua:8575",
["nameplateOverlapV"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:6063: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:6061>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/mixins.lua\"]:372: in function `RunHooksForWidget'\n[string \"@Interface/AddOns/Plater/libs/DF/slider.lua\"]:749: in function <Interface/AddOns/Plater/libs/DF/slider.lua:713>\n",
["nameplateMaxDistance"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:6083: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:6081>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/mixins.lua\"]:372: in function `RunHooksForWidget'\n[string \"@Interface/AddOns/Plater/libs/DF/slider.lua\"]:749: in function <Interface/AddOns/Plater/libs/DF/slider.lua:713>\n",
},
["aura_cache_by_name"] = {
["sanctified mists"] = {
321019,
321020,
334673,
334676,
},
["bucking rampage"] = {
331743,
331745,
},
["bulwark of maldraxxus"] = {
336449,
336450,
336451,
357426,
357427,
357428,
},
["congealed contagion"] = {
321268,
328175,
333737,
340271,
340273,
},
["immolate"] = {
348,
8981,
9034,
9275,
9276,
11962,
11984,
12742,
15505,
15506,
15570,
15661,
15732,
15733,
17883,
18542,
20294,
20787,
20800,
20826,
29928,
36637,
36638,
37668,
38805,
38806,
41958,
44267,
44518,
46042,
46191,
75383,
76618,
77425,
79937,
113141,
118297,
130798,
138566,
156964,
157049,
157736,
189990,
192955,
193540,
193541,
216145,
228312,
286272,
295425,
},
["fear"] = {
5782,
12096,
12542,
22678,
26070,
26580,
26661,
27641,
27990,
29168,
29321,
30002,
30530,
30584,
30615,
31358,
31970,
32241,
33547,
33924,
34259,
38154,
38595,
38660,
39119,
39176,
39210,
39415,
41150,
46561,
51240,
59669,
65809,
68950,
70171,
81442,
83613,
113712,
115186,
117573,
118699,
125204,
128098,
130616,
130940,
134938,
142884,
144062,
173093,
182806,
204730,
205398,
214304,
220540,
221424,
223170,
240136,
242084,
242739,
245902,
246277,
246307,
248028,
251419,
259874,
259995,
266918,
287685,
287687,
288545,
331741,
342914,
344887,
375205,
},
["defensive countermeasure"] = {
297133,
299428,
300996,
303941,
},
["mortal coil"] = {
6789,
108396,
295458,
295459,
},
["axe toss"] = {
6466,
89766,
119914,
193824,
220857,
275709,
285679,
325818,
325820,
326220,
326222,
347008,
},
["in the spotlight"] = {
227931,
312926,
},
["bark armor"] = {
321764,
},
["bolster"] = {
209859,
280001,
},
["bound by shadow"] = {
269935,
273432,
},
},
["url"] = "https://wago.io/EpS6e_lWb/8",
["aura_stack_outline"] = "NONE",
["aura_stack_anchor"] = {
["y"] = -4.600000381469727,
},
["cast_statusbar_fadein_time"] = 0.01999999955296516,
["indicator_raidmark_scale"] = 0.9899999499320984,
["cast_statusbar_spark_alpha"] = 0.7999999523162842,
["aura2_y_offset"] = 31.09999084472656,
["aura_timer_text_anchor"] = {
["y"] = -0.6000003814697266,
},
["castbar_framelevel"] = 0,
["buffs_on_aura2"] = true,
["plate_config"] = {
["player"] = {
["quest_color_enemy"] = {
1,
0.369,
0,
},
["spellpercent_text_font"] = "10089",
["level_text_size"] = 11,
["big_actortitle_text_font"] = "10089",
["cast"] = {
115,
8,
},
["spellpercent_text_size"] = 11,
["big_actortitle_text_size"] = 10,
["spellpercent_text_anchor"] = {
["side"] = 5,
["x"] = 2,
},
["actorname_text_color"] = {
nil,
nil,
nil,
0.86789692938328,
},
["power_percent_text_outline"] = "NONE",
["cast_incombat"] = {
115,
8,
},
["spellname_text_outline"] = "NONE",
["big_actorname_text_shadow_color"] = {
0,
0,
0,
1,
},
["spellpercent_text_outline"] = "NONE",
["big_actortitle_text_shadow_color"] = {
0,
0,
0,
1,
},
["level_text_font"] = "10089",
["percent_text_color"] = {
0.93725490196078,
0.97647058823529,
1,
},
["actorname_text_font"] = "10089",
["big_actorname_text_outline"] = "OUTLINE",
["big_actorname_text_shadow_color_offset"] = {
1,
-1,
},
["quest_color_neutral"] = {
1,
0.65,
0,
},
["power_percent_text_size"] = 8,
["power_percent_text_font"] = "Accidental Presidency",
["all_names"] = true,
["spellname_text_anchor"] = {
["side"] = 3,
},
["level_text_alpha"] = 1,
["actorname_text_anchor"] = {
["y"] = 1,
["side"] = 1,
},
["mana_incombat"] = {
100,
4,
},
["big_actortitle_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 12,
["percent_text_font"] = "10089",
["percent_text_size"] = 11,
["percent_text_outline"] = "NONE",
["quest_enabled"] = true,
["actorname_text_size"] = 13,
["spellname_text_size"] = 12,
["big_actortitle_text_shadow_color_offset"] = {
1,
-1,
},
["health_incombat"] = {
115,
15,
},
["health"] = {
115,
15,
},
["big_actorname_text_size"] = 10,
["big_actorname_text_font"] = "10089",
["mana"] = {
100,
4,
},
["spellname_text_font"] = "10089",
["level_text_enabled"] = true,
},
["friendlyplayer"] = {
["castbar_offset"] = -0.9000015258789062,
["spellpercent_text_font"] = "Naowh",
["level_text_size"] = 9,
["only_thename"] = true,
["big_actortitle_text_font"] = "Naowh",
["cast"] = {
125,
6,
},
["spellpercent_text_size"] = 8,
["big_actortitle_text_size"] = 9,
["percent_text_ooc"] = true,
["spellpercent_text_anchor"] = {
["y"] = -7.980003356933594,
["x"] = 1.009994506835938,
},
["actorname_text_color"] = {
nil,
nil,
nil,
0.87000000476837,
},
["percent_text_show_decimals"] = false,
["spellpercent_text_outline"] = "NONE",
["big_actortitle_text_shadow_color_offset"] = {
1,
-1,
},
["percent_text_color"] = {
0.93725490196078,
0.97647058823529,
1,
},
["cast_incombat"] = {
125,
6,
},
["actorname_text_font"] = "Naowh",
["relevance_state"] = 4,
["power_percent_text_font"] = "Accidental Presidency",
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["big_actorname_text_shadow_color"] = {
0,
0,
0,
1,
},
["spellname_text_anchor"] = {
["y"] = -7.980003356933594,
["x"] = -1.010002136230469,
["side"] = 10,
},
["big_actortitle_text_shadow_color"] = {
0,
0,
0,
1,
},
["percent_text_anchor"] = {
["y"] = 4.699996948242188,
["x"] = -0.3600006103515625,
["side"] = 5,
},
["level_text_font"] = "Naowh",
["module_enabled"] = false,
["spellname_text_font"] = "Naowh",
["quest_color"] = {
0.5,
1,
0,
1,
},
["big_actorname_text_shadow_color_offset"] = {
1,
-1,
},
["health_incombat"] = {
125,
10,
},
["quest_color_neutral"] = {
1,
0.65,
0,
},
["mana_incombat"] = {
nil,
4,
},
["big_actorname_text_font"] = "Naowh",
["percent_text_enabled"] = true,
["level_text_alpha"] = 1,
["all_names"] = true,
["actorname_text_anchor"] = {
["y"] = 0.9000015258789062,
["x"] = 0.6999969482421875,
["side"] = 1,
},
["percent_text_outline"] = "NONE",
["spellpercent_text_enabled"] = true,
["actorname_text_outline"] = "NONE",
["big_actortitle_text_color"] = {
1,
0.8,
0,
},
["percent_text_font"] = "Naowh",
["big_actortitle_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 8,
["only_damaged"] = false,
["buff_frame_y_offset"] = 0,
["big_actorname_text_size"] = 9,
["quest_enabled"] = true,
["mana"] = {
nil,
4,
},
["big_actorname_text_outline"] = "OUTLINE",
["quest_color_enabled"] = true,
["spellname_text_size"] = 8,
["health"] = {
77,
1,
},
["actorname_text_size"] = 9,
["only_names"] = true,
["level_text_anchor"] = {
["y"] = 2.519996643066406,
["x"] = 1.489997863769531,
},
["big_actorname_text_color"] = {
0.5,
1,
0.5,
},
["quest_color_enemy"] = {
1,
0.369,
0,
},
},
["friendlynpc"] = {
["castbar_offset"] = -0.9000015258789062,
["spellpercent_text_font"] = "Naowh",
["show_guild_name"] = false,
["level_text_size"] = 9,
["actorname_use_class_color"] = false,
["big_actortitle_text_font"] = "Naowh",
["cast"] = {
125,
6,
},
["percent_text_ooc"] = true,
["big_actortitle_text_size"] = 9,
["fixed_class_color"] = {
0,
1,
0,
},
["spellpercent_text_anchor"] = {
["y"] = -7.980003356933594,
["x"] = 1.009994506835938,
},
["actorname_text_color"] = {
nil,
nil,
nil,
0.87000000476837,
},
["percent_text_show_decimals"] = false,
["cast_incombat"] = {
125,
6,
},
["click_through"] = true,
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellpercent_text_outline"] = "NONE",
["percent_text_anchor"] = {
["y"] = 4.699996948242188,
["x"] = -0.3600006103515625,
["side"] = 5,
},
["level_text_font"] = "Naowh",
["percent_text_color"] = {
0.93725490196078,
0.97647058823529,
1,
},
["actorname_text_font"] = "Naowh",
["big_actorname_text_outline"] = "NONE",
["quest_color_neutral"] = {
1,
0.65,
0,
},
["actorname_text_size"] = 9,
["percent_text_enabled"] = true,
["actorname_use_guild_color"] = true,
["big_actorname_text_font"] = "Naowh",
["power_percent_text_font"] = "Accidental Presidency",
["actorname_use_friends_color"] = true,
["spellname_text_font"] = "Naowh",
["actorname_friend_color"] = {
0.71,
1,
1,
1,
},
["level_text_alpha"] = 1,
["only_damaged"] = false,
["big_actortitle_text_outline"] = "NONE",
["actorname_text_spacing"] = 8,
["percent_text_font"] = "Naowh",
["spellname_text_size"] = 8,
["actorname_guild_color"] = {
0.498039,
1,
0.2,
1,
},
["percent_text_outline"] = "NONE",
["spellpercent_text_enabled"] = true,
["actorname_text_anchor"] = {
["y"] = 0.9000015258789062,
["x"] = 0.6999969482421875,
["side"] = 1,
},
["enabled"] = false,
["health_incombat"] = {
125,
10,
},
["health"] = {
77,
1,
},
["spellname_text_anchor"] = {
["y"] = -7.980003356933594,
["x"] = -1.010002136230469,
["side"] = 10,
},
["spellpercent_text_size"] = 8,
["level_text_anchor"] = {
["y"] = 2.519996643066406,
["x"] = 1.489997863769531,
},
["only_thename"] = true,
["quest_color_enemy"] = {
1,
0.369,
0,
},
},
["global_health_height"] = 10,
["global_health_width"] = 125,
["enemyplayer"] = {
["actorname_use_friends_color"] = true,
["spellpercent_text_font"] = "Naowh",
["actorname_friend_color"] = {
0.71,
1,
1,
1,
},
["level_text_size"] = 9,
["only_thename"] = true,
["big_actortitle_text_font"] = "Naowh",
["cast"] = {
125,
6,
},
["spellpercent_text_size"] = 8,
["big_actortitle_text_size"] = 9,
["fixed_class_color"] = {
0,
1,
0,
},
["spellpercent_text_anchor"] = {
["y"] = -7.980003356933594,
["x"] = 1.009994506835938,
},
["actorname_text_color"] = {
nil,
nil,
nil,
0.87000000476837,
},
["percent_text_show_decimals"] = false,
["cast_incombat"] = {
125,
6,
},
["click_through"] = true,
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellpercent_text_outline"] = "NONE",
["percent_text_anchor"] = {
["y"] = 4.699996948242188,
["x"] = -0.3600006103515625,
["side"] = 5,
},
["level_text_font"] = "Naowh",
["percent_text_color"] = {
0.93725490196078,
0.97647058823529,
1,
},
["actorname_text_font"] = "Naowh",
["quest_color"] = {
0.5,
1,
0,
1,
},
["quest_color_neutral"] = {
1,
0.65,
0,
},
["actorname_text_size"] = 9,
["power_percent_text_font"] = "Accidental Presidency",
["actorname_use_guild_color"] = true,
["all_names"] = true,
["quest_color_enemy"] = {
1,
0.369,
0,
},
["big_actorname_text_font"] = "Naowh",
["actorname_text_anchor"] = {
["y"] = 0.9000015258789062,
["x"] = 0.6999969482421875,
["side"] = 1,
},
["level_text_alpha"] = 1,
["castbar_offset"] = -0.9000015258789062,
["percent_text_font"] = "Naowh",
["actorname_text_spacing"] = 8,
["only_damaged"] = false,
["health_incombat"] = {
125,
10,
},
["actorname_guild_color"] = {
0.498039,
1,
0.2,
1,
},
["quest_enabled"] = true,
["spellname_text_size"] = 8,
["percent_text_outline"] = "NONE",
["quest_color_enabled"] = true,
["relevance_state"] = 4,
["health"] = {
77,
1,
},
["only_names"] = true,
["spellname_text_font"] = "Naowh",
["spellname_text_anchor"] = {
["y"] = -7.980003356933594,
["x"] = -1.010002136230469,
["side"] = 10,
},
["level_text_anchor"] = {
["y"] = 2.519996643066406,
["x"] = 1.489997863769531,
},
["level_text_enabled"] = false,
},
["enemynpc"] = {
["castbar_offset"] = -0.9000015258789062,
["spellpercent_text_font"] = "Naowh",
["level_text_size"] = 10,
["big_actortitle_text_font"] = "Naowh",
["cast"] = {
125,
14,
},
["spellpercent_text_size"] = 8,
["big_actortitle_text_size"] = 9,
["spellpercent_text_anchor"] = {
["y"] = 0.6699981689453125,
["x"] = 0.0099945068359375,
},
["percent_text_show_decimals"] = false,
["cast_incombat"] = {
125,
},
["spellname_text_outline"] = "NONE",
["spellpercent_text_outline"] = "NONE",
["percent_text_anchor"] = {
["y"] = -3.700004577636719,
["x"] = -1,
["side"] = 3,
},
["level_text_font"] = "Naowh",
["percent_text_color"] = {
1,
1,
1,
},
["actorname_text_font"] = "Naowh",
["big_actorname_text_outline"] = "NONE",
["actorname_text_size"] = 10,
["power_percent_text_font"] = "Accidental Presidency",
["actorname_text_anchor"] = {
["y"] = -3.800003051757813,
["x"] = 2,
["side"] = 1,
},
["big_actortitle_text_outline"] = "NONE",
["actorname_text_spacing"] = 9,
["percent_text_font"] = "Naowh",
["percent_text_outline"] = "NONE",
["level_text_alpha"] = 1,
["big_actorname_text_font"] = "Naowh",
["health_incombat"] = {
125,
10,
},
["spellname_text_size"] = 9,
["health"] = {
125,
10,
},
["spellpercent_text_enabled"] = false,
["big_actorname_text_size"] = 9,
["spellname_text_font"] = "Naowh",
["spellname_text_anchor"] = {
["y"] = -0.9000015258789062,
["x"] = 0.5,
["side"] = 10,
},
["level_text_anchor"] = {
["y"] = 1.199996948242188,
["x"] = -1,
},
},
},
["health_selection_overlay"] = "PlaterFocus",
["aura_y_offset"] = 7.5,
["use_ui_parent"] = true,
["expansion_triggerwipe"] = {
[9] = true,
[10] = true,
},
["focus_texture"] = "Splitbar",
["cast_statusbar_bgcolor"] = {
0.098039215686275,
0.098039215686275,
0.098039215686275,
0.60887169837952,
},
["first_run2"] = true,
["aura_width_personal"] = 23,
["color_override_colors"] = {
[3] = {
0.99607843137255,
0.29803921568627,
0.30980392156863,
},
[4] = {
1,
0.93333333333333,
0.43137254901961,
},
[5] = {
0.38039215686275,
0.87450980392157,
0.23137254901961,
},
},
["resources_settings"] = {
["chr"] = {
["Player-1084-0961A181"] = "Runes",
["Player-1621-078F055D"] = "ComboPoints",
["Player-1621-0B537E85"] = "Chi",
["Player-1621-0A5EB288"] = "Chi",
["Player-1621-0AEEC9B2"] = "ArcaneCharges",
["Player-1084-0A24293C"] = "ComboPoints",
["Player-1621-06D67496"] = "SoulShards",
["Player-1621-063C3317"] = "ArcaneCharges",
["Player-1621-063C318F"] = "Runes",
["Player-1621-0672E5C3"] = "Chi",
["Player-1621-0639DE28"] = "ComboPoints",
["Player-1084-0A5C2A4F"] = "HolyPower",
["Player-1621-0A678196"] = "Runes",
["Player-3674-09D96941"] = "Runes",
["Player-1621-074D7CE5"] = "HolyPower",
},
},
["health_animation_time_dilatation"] = 1.059999942779541,
["npc_cache"] = {
[65414] = {
"Ethereal Sha",
"Shado-Pan Monastery",
"enUS",
},
[69899] = {
"Farraki Sand Conjurer",
"Throne of Thunder",
"enUS",
},
[24777] = {
"Sunblade Sentinel",
"Magisters' Terrace",
"enUS",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
},
[212453] = {
"Ghastly Voidsoul",
"The Stonevault",
"enUS",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[58632] = {
"Armsmaster Harlan",
"Scarlet Halls",
"enUS",
},
[76810] = {
"Furnace Engineer",
"Blackrock Foundry",
"enUS",
},
[69132] = {
"High Priestess Mar'li",
"Throne of Thunder",
"enUS",
},
[159219] = {
"Umbral Seer",
"Ny'alotha, the Waking City",
"enUS",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[127230] = {
"Garothi Annihilator",
"Antorus, the Burning Throne",
"enUS",
},
[60040] = {
"Commander Durand",
"Scarlet Monastery",
"enUS",
},
[56713] = {
"Master Snowdrift",
"Shado-Pan Monastery",
"enUS",
},
[76811] = {
"Bellows Operator",
"Blackrock Foundry",
"enUS",
},
[69133] = {
"Unharnessed Power",
"Throne of Thunder",
"enUS",
},
[65415] = {
"Void Sha",
"Shado-Pan Monastery",
"enUS",
},
[61448] = {
"Sik'thik Soldier",
"Siege of Niuzao Temple",
"enUS",
},
[127231] = {
"Garothi Decimator",
"Antorus, the Burning Throne",
"enUS",
},
[82698] = {
"Night-Twisted Devout",
"Highmaul",
"enUS",
},
[103685] = {
"Tichondrius",
"The Nighthold",
"enUS",
},
[58633] = {
"Instructor Chillheart",
"Scholomance",
"enUS",
},
[76812] = {
"Security Guard",
"Blackrock Foundry",
"enUS",
},
[69134] = {
"Kazra'jin",
"Throne of Thunder",
"enUS",
},
[69390] = {
"Zandalari Storm-Caller",
"Throne of Thunder",
"enUS",
},
[23562] = {
"Unstoppable Abomination",
"Naxxramas",
"enUS",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
},
[15974] = {
"Dread Creeper",
"Naxxramas",
"enUS",
},
[216554] = {
"Sureki String Conductor",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[259552] = {
"Chair",
"Return to Karazhan",
"enUS",
},
[207341] = {
"Blistering Spear",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[77325] = {
"Blackhand",
"Blackrock Foundry",
"enUS",
},
[216555] = {
"Heelripper",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[73742] = {
"Thresher Turret",
"Siege of Orgrimmar",
"enUS",
},
[160249] = {
"Spike Tentacle",
"Ny'alotha, the Waking City",
"enUS",
},
[259553] = {
"Chair",
"Return to Karazhan",
"enUS",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
},
[259554] = {
"Chair",
"Return to Karazhan",
"enUS",
},
[76814] = {
"Flamebender Ka'graz",
"Blackrock Foundry",
"enUS",
},
[212974] = {
"Tiger Temple Gong",
"Arena of Annihilation",
"enUS",
},
[76815] = {
"Primal Elementalist",
"Blackrock Foundry",
"enUS",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[187894] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[163836] = {
"Psychophage",
"Ny'alotha, the Waking City",
"enUS",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[259557] = {
"Chair",
"Return to Karazhan",
"enUS",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[216560] = {
"Al'haggro",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[259558] = {
"Chair",
"Return to Karazhan",
"enUS",
},
[118022] = {
"Infernal Chaosbringer",
"Tomb of Sargeras",
"enUS",
},
[216561] = {
"Gahn'dante",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[23563] = {
"Soul Weaver",
"Naxxramas",
"enUS",
},
[69906] = {
"Zandalari High Priest",
"Throne of Thunder",
"enUS",
},
[59915] = {
"Jasper Guardian",
"Mogu'shan Vaults",
"enUS",
},
[162303] = {
"Aqir Swarmkeeper",
"Ny'alotha, the Waking City",
"enUS",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
"enUS",
},
[168446] = {
"Skeletal Monstrosity",
"The Necrotic Wake",
},
[80400] = {
"Iron Assembly Warden",
"Blackrock Foundry",
"enUS",
},
[259560] = {
"Chair",
"Return to Karazhan",
"enUS",
},
[123398] = {
"Garothi Annihilator",
"Antorus, the Burning Throne",
"enUS",
},
[259561] = {
"Chair",
"Return to Karazhan",
"enUS",
},
[163841] = {
"Amalgamation of Flesh",
"Ny'alotha, the Waking City",
"enUS",
},
[111370] = {
"Creature in the Shadows",
"The Emerald Nightmare",
"enUS",
},
[195579] = {
"Primal Gust",
"The Nokhud Offensive",
"enUS",
},
[205305] = {
"Fractured Causality",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[56589] = {
"Striker Ga'dok",
"Gate of the Setting Sun",
"enUS",
},
[214519] = {
"Snowdrift's Possessions",
"Shado-Pan Monastery",
"enUS",
},
[117769] = {
"Felborne Spellbreaker",
"Tomb of Sargeras",
"enUS",
},
[18317] = {
"Ethereal Priest",
"Auchindoun: Mana-Tombs",
"enUS",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[69909] = {
"Amani'shi Flame Chanter",
"Throne of Thunder",
"enUS",
},
[218103] = {
"Nerubian Lord",
"The Spiral Weave",
"enUS",
},
[214520] = {
"Legacy of the Clan Leaders",
"Mogu'shan Palace",
"enUS",
},
[161286] = {
"Dark Ritualist",
"Ny'alotha, the Waking City",
"enUS",
},
[72981] = {
"Aggron",
"Siege of Orgrimmar",
"enUS",
},
[93968] = {
"Shadowfel Warden",
"Hellfire Citadel",
"enUS",
},
[69910] = {
"Drakkari Frost Warden",
"Throne of Thunder",
"enUS",
},
[205820] = {
"Crawling Goo",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[15975] = {
"Carrion Spinner",
"Naxxramas",
"enUS",
},
[208380] = {
"Val'kyr Shadowguard",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[16167] = {
"Bony Construct",
"Naxxramas",
"enUS",
},
[56718] = {
"Hopper",
"Stormstout Brewery",
"enUS",
},
[61453] = {
"Mu'Shiba",
"Mogu'shan Palace",
"enUS",
},
[123402] = {
"Garothi Decimator",
"Antorus, the Burning Throne",
"enUS",
},
[230904] = {
"Shadeguard Speaker",
"Nightfall Sanctum",
"enUS",
},
[259570] = {
"Chair",
"Return to Karazhan",
"enUS",
},
[59150] = {
"Flameweaver Koegler",
"Scarlet Halls",
"enUS",
},
[102672] = {
"Nythendra",
"The Emerald Nightmare",
"enUS",
},
[124171] = {
"Shadowguard Subjugator",
"Seat of the Triumvirate",
"enUS",
},
[56719] = {
"Sha of Violence",
"Shado-Pan Monastery",
"enUS",
},
[162828] = {
"Corrosive Digester",
"Ny'alotha, the Waking City",
"enUS",
},
[94995] = {
"Graggra",
"Hellfire Citadel",
"enUS",
},
[215040] = {
"Kobyss Bonechewer",
"Tak-Rethan Abyss",
"enUS",
},
[162317] = {
"Gorechop",
"Theater of Pain",
},
[18894] = {
"Felguard Brute",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[112655] = {
"Celestial Acolyte",
"The Nighthold",
"enUS",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
"enUS",
},
[74009] = {
"Crawler Mine",
"Siege of Orgrimmar",
"enUS",
},
[216578] = {
"Swarm-Maven Donmiss",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[246779] = {
"Font of Power",
"Brackenhide Hollow",
"enUS",
},
[72986] = {
"Shanna Sparkfizz",
"Siege of Orgrimmar",
"enUS",
},
[77337] = {
"Aknor Steelbringer",
"Blackrock Foundry",
"enUS",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[194569] = {
"Ulduar Teleporter",
"Ulduar",
"enUS",
},
[201736] = {
"Sundered Arcanist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[117776] = {
"Shadow Council Warlock",
"Tomb of Sargeras",
"enUS",
},
[204808] = {
"Fractured Causality",
"10.1.5 Time Rifts - Murloc (Azmerloth)",
"enUS",
},
[69916] = {
"Gurubashi Berserker",
"Throne of Thunder",
"enUS",
},
[70684] = {
"Frostmane Mauler",
"Blood in the Snow",
"enUS",
},
[17871] = {
"Underbog Shambler",
"Coilfang: The Underbog",
"enUS",
},
[26125] = {
"Telbrav",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[118289] = {
"Maiden of Vigilance",
"Tomb of Sargeras",
"enUS",
},
[216583] = {
"Chittering Fearmonger",
"Earthcrawl Mines",
"enUS",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
"enUS",
},
[216584] = {
"Nerubian Captain",
"Earthcrawl Mines",
"enUS",
},
[80411] = {
"Iron Marksman",
"Blackrock Foundry",
"enUS",
},
[59153] = {
"Rattlegore",
"Scholomance",
"enUS",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[15976] = {
"Venom Stalker",
"Naxxramas",
"enUS",
},
[159768] = {
"Deresh of the Nothingness",
"Ny'alotha, the Waking City",
"enUS",
},
[217610] = {
"Deviant Skardyn",
"Hall of Awakening",
"enUS",
},
[102679] = {
"Ysondre",
"The Emerald Nightmare",
"enUS",
},
[193553] = {
"Nokhud Warhound",
"The Nokhud Offensive",
"enUS",
},
[216076] = {
"Net",
"Naval Battle Scenario",
"enUS",
},
[179733] = {
"Invigorating Fish Stick",
"Tazavesh, the Veiled Market",
},
[444374] = {
"Minecart",
"The Stonevault",
"enUS",
},
[202256] = {
"Djaradin Lavamancer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[58898] = {
"Vigilant Watchman",
"Scarlet Halls",
"enUS",
},
[193555] = {
"Nokhud Villager",
"The Nokhud Offensive",
"enUS",
},
[202257] = {
"Djaradin Magmashaper",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[190484] = {
"Kyrakka",
"Ruby Life Pools",
"enUS",
},
[162331] = {
"Corrupted Neuron",
"Ny'alotha, the Waking City",
"enUS",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[117269] = {
"Kil'jaeden",
"Tomb of Sargeras",
"enUS",
},
[202258] = {
"Djaradin Skullcrusher",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[190485] = {
"Erkhart Stormvein",
"Ruby Life Pools",
"enUS",
},
[196116] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[222222] = {
"Swarmspike",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[202259] = {
"Djaradin Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[22927] = {
"Yor",
"Auchindoun: Mana-Tombs",
"enUS",
},
[196117] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[117782] = {
"Eredar Bloodmage",
"Tomb of Sargeras",
"enUS",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[70690] = {
"Blood of Y'Shaarj",
"Heart of the Old God Scenario",
"enUS",
},
[60051] = {
"Cobalt Guardian",
"Mogu'shan Vaults",
"enUS",
},
[202262] = {
"Blazing Dreadsquall",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[102683] = {
"Emeriss",
"The Emerald Nightmare",
"enUS",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[214548] = {
"Slippery Syphoner",
"Tak-Rethan Abyss",
"enUS",
},
[70691] = {
"Mouth of Terror",
"Heart of the Old God Scenario",
"enUS",
},
[112153] = {
"Dire Shaman",
"The Emerald Nightmare",
"enUS",
},
[112665] = {
"Nighthold Protector",
"The Nighthold",
"enUS",
},
[189467] = {
"Qalashi Bonesplitter",
"Neltharus",
"enUS",
},
[202264] = {
"Primal Lava Elemental",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[122135] = {
"Shatug",
"Antorus, the Burning Throne",
"enUS",
},
[201753] = {
"Sundered Destroyer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214550] = {
"Deepwater Snapper",
"Tak-Rethan Abyss",
"enUS",
},
[201754] = {
"Sarkareth",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[259596] = {
"Chair",
"Return to Karazhan",
"enUS",
},
[223253] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[381946] = {
"Challenger's Cache",
"The Azure Vault",
"enUS",
},
[57109] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[114714] = {
"Ghostly Steward",
"Return to Karazhan",
"enUS",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[87841] = {
"Grom'kar Firemender",
"Blackrock Foundry",
"enUS",
},
[426994] = {
"Whispering Explosives",
"The Spiral Weave",
"enUS",
},
[276503] = {
"Boon of Life",
"Antorus, the Burning Throne",
"enUS",
},
[207387] = {
"Refreshment Table",
"Shado-Pan Monastery",
"enUS",
},
[114715] = {
"Ghostly Chef",
"Return to Karazhan",
"enUS",
},
[189472] = {
"Qalashi Lavabearer",
"Neltharus",
"enUS",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[92961] = {
"Gorebound Brute",
"Hellfire Citadel",
"enUS",
},
[16297] = {
"Mutated Grub",
"Naxxramas",
"enUS",
},
[203806] = {
"Whisper in the Dark",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[93985] = {
"Corrupted Talonpriest",
"Hellfire Citadel",
"enUS",
},
[114716] = {
"Ghostly Baker",
"Return to Karazhan",
"enUS",
},
[381955] = {
"Challenger's Cache",
"Ruby Life Pools",
"enUS",
},
[115484] = {
"Fel Bat",
"Return to Karazhan",
"enUS",
},
[80677] = {
"Iron Journeyman",
"Blackrock Foundry",
"enUS",
},
[68904] = {
"Suen",
"Throne of Thunder",
"enUS",
},
[196642] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[189988] = {
"Thing From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[203809] = {
"Entropic Hatred",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[129050] = {
"Antoran Felguard",
"Antorus, the Burning Throne",
"enUS",
},
[193572] = {
"Nokhud Warsmith",
"The Nokhud Offensive",
"enUS",
},
[64917] = {
"Sra'thik Ambercaller",
"Heart of Fear",
"enUS",
},
[68905] = {
"Lu'lin",
"Throne of Thunder",
"enUS",
},
[61334] = {
"Cursed Mogu Sculpture",
"Mogu'shan Vaults",
"enUS",
},
[189478] = {
"Forgemaster Gorek",
"Neltharus",
"enUS",
},
[203811] = {
"Incarnation of Entropy",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[62358] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[196645] = {
"Desecrated Bakar",
"The Nokhud Offensive",
"enUS",
},
[80423] = {
"Thunderlord Beast-Tender",
"Blackrock Foundry",
"enUS",
},
[157231] = {
"Shad'har the Insatiable",
"Ny'alotha, the Waking City",
"enUS",
},
[381966] = {
"Challenger's Cache",
"The Nokhud Offensive",
"enUS",
},
[203812] = {
"Voice From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[413703] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[381967] = {
"Challenger's Cache",
"Algeth'ar Academy",
"enUS",
},
[219681] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[199718] = {
"Nokhud Huntmaster",
"The Nokhud Offensive",
"enUS",
},
[56472] = {
"Fragrant Lotus",
"Shado-Pan Monastery",
"enUS",
},
[404492] = {
"Gilded Vase",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[378899] = {
"Grand Banquet of the Kalu'ak",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
"enUS",
},
[71979] = {
"Kor'kron Warbringer",
"Siege of Orgrimmar",
"enUS",
},
[220196] = {
"Treasure Urn",
"Crypt of Forgotten Kings",
"enUS",
},
[65581] = {
"Essence of Hate",
"Crypt of Forgotten Kings",
"enUS",
},
[17491] = {
"Laughing Skull Rogue",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[59800] = {
"Krik'thik Rager",
"Gate of the Setting Sun",
"enUS",
},
[303147] = {
"Summoning Portal",
"Neltharus",
"enUS",
},
[112162] = {
"Grisly Trapper",
"The Emerald Nightmare",
"enUS",
},
[421903] = {
"Earthen Console",
"Hall of Awakening",
"enUS",
},
[56473] = {
"Flying Snow",
"Shado-Pan Monastery",
"enUS",
},
[68397] = {
"Lei Shen",
"Throne of Thunder",
"enUS",
},
[123680] = {
"Dark Keeper Aedis",
"Antorus, the Burning Throne",
"enUS",
},
[190510] = {
"Vault Guard",
"The Azure Vault",
"enUS",
},
[215592] = {
"Siegehold Fortifier",
"The Spiral Weave",
"enUS",
},
[62360] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[112675] = {
"Duskwatch Sentinel",
"The Nighthold",
"enUS",
},
[72237] = {
"Embodied Fear",
"Siege of Orgrimmar",
"enUS",
},
[161334] = {
"Gnashing Terror",
"Ny'alotha, the Waking City",
"enUS",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[90409] = {
"Gorebound Felcaster",
"Hellfire Citadel",
"enUS",
},
[201773] = {
"Eternal Blaze",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[161335] = {
"Void Horror",
"Ny'alotha, the Waking City",
"enUS",
},
[70702] = {
"Flame Hound",
"The Secrets of Ragefire",
"enUS",
},
[195119] = {
"Primalist Shockcaster",
"Ruby Life Pools",
"enUS",
},
[64280] = {
"Maki Waterblade",
"Arena of Annihilation",
"enUS",
},
[112676] = {
"Nobleborn Warpcaster",
"The Nighthold",
"enUS",
},
[201774] = {
"Essence of Shadow",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[65304] = {
"Hateful Monstrosity",
"Crypt of Forgotten Kings",
"enUS",
},
[61337] = {
"Glintrok Ironhide",
"Mogu'shan Palace",
"enUS",
},
[90410] = {
"Felfire Crusher",
"Hellfire Citadel",
"enUS",
},
[70703] = {
"Core Spider",
"The Secrets of Ragefire",
"enUS",
},
[70959] = {
"Urtharges the Destroyer",
"Heart of the Old God Scenario",
"enUS",
},
[71983] = {
"Farseer Wolf Rider",
"Siege of Orgrimmar",
"enUS",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
},
[210478] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[81197] = {
"Iron Raider",
"Blackrock Foundry",
"enUS",
},
[73775] = {
"War Master Kragg",
"Siege of Orgrimmar",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
"enUS",
},
[210479] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[165946] = {
"Mordretha, the Endless Empress",
"Theater of Pain",
},
[203825] = {
"Voracious Magma Worm",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[112678] = {
"Shal'dorei Naturalist",
"The Nighthold",
"enUS",
},
[56731] = {
"Habanero Brew",
"Stormstout Brewery",
"enUS",
},
[203826] = {
"Colossal Draconic Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214576] = {
"Iron-Runed Protector",
"Hall of Awakening",
"enUS",
},
[210482] = {
"Fine Chair",
"Scarlet Halls",
"enUS",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
},
[214066] = {
"Cursedforge Stoneshaper",
"The Stonevault",
"enUS",
},
[210483] = {
"Fine Chair",
"Scarlet Halls",
"enUS",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[56732] = {
"Liu Flameheart",
"Temple of the Jade Serpent",
"enUS",
},
[69427] = {
"Dark Animus",
"Throne of Thunder",
"enUS",
},
[24723] = {
"Selin Fireheart",
"Magisters' Terrace",
"enUS",
},
[210485] = {
"Admiral Barean Westwind",
"Scarlet Halls",
"enUS",
},
[203831] = {
"Crystalline Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
},
[210486] = {
"Dorgar Stoenbrow",
"Scarlet Halls",
"enUS",
},
[17429] = {
"Fel Orc Neophyte",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[210487] = {
"Fellari Swiftarrow",
"Scarlet Halls",
"enUS",
},
[403508] = {
"Cat Toy",
"Naxxramas",
"enUS",
},
[210488] = {
"Ferren Marcus",
"Scarlet Halls",
"enUS",
},
[73012] = {
"Klaxxi Skirmisher",
"Siege of Orgrimmar",
"enUS",
},
[208441] = {
"Water Elemental",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[210489] = {
"Harthal Truesight",
"Scarlet Halls",
"enUS",
},
[215608] = {
"Siegehold Drone",
"The Spiral Weave",
"enUS",
},
[157255] = {
"Aqir Drone",
"Ny'alotha, the Waking City",
"enUS",
},
[194622] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[167493] = {
"Venomous Sniper",
"Plaguefall",
},
[15979] = {
"Tomb Horror",
"Naxxramas",
"enUS",
},
[95280] = {
"Kaz'rogal",
"Hellfire Citadel",
"enUS",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
"enUS",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
"enUS",
},
[217658] = {
"Sir Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[60701] = {
"Zian of the Endless Shadow",
"Mogu'shan Vaults",
"enUS",
},
[202814] = {
"Twisted Aberration",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[210493] = {
"Valea Twinblades",
"Scarlet Halls",
"enUS",
},
[194625] = {
"Flee to the Surface",
"Ulduar",
"enUS",
},
[179269] = {
"Oasis Security",
"Tazavesh, the Veiled Market",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
"enUS",
},
[210494] = {
"Yana Bloodspear",
"Scarlet Halls",
"enUS",
},
[195138] = {
"Detonating Crystal",
"The Azure Vault",
"enUS",
},
[69944] = {
"Sand Elemental",
"Throne of Thunder",
"enUS",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
"enUS",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
"enUS",
},
[159308] = {
"Zealous Adherent",
"Ny'alotha, the Waking City",
"enUS",
},
[60958] = {
"Pinning Arrow",
"Mogu'shan Vaults",
"enUS",
},
[159309] = {
"Leeching Parasite",
"Ny'alotha, the Waking City",
"enUS",
},
[58783] = {
"Scarlet Initiate",
"Scarlet Monastery",
"enUS",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[207939] = {
"Baron Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[126764] = {
"Bladesworn Ravager",
"Antorus, the Burning Throne",
"enUS",
},
[63518] = {
"Den Mother Moof",
"Brewmoon Festival",
"enUS",
},
[221760] = {
"Risen Mage",
"Priory of the Sacred Flame",
"enUS",
},
[70202] = {
"Manchu",
"Throne of Thunder",
"enUS",
},
[207940] = {
"Prioress Murrpray",
"Priory of the Sacred Flame",
"enUS",
},
[159312] = {
"Living Blood",
"Ny'alotha, the Waking City",
"enUS",
},
[86071] = {
"Rokkaa",
"Highmaul",
"enUS",
},
[201288] = {
"Sundered Champion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[202824] = {
"Erratic Remnant",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[207943] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[86072] = {
"Oro",
"Highmaul",
"enUS",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
"enUS",
},
[59808] = {
"Shado-Pan Stormbringer",
"Shado-Pan Monastery",
"enUS",
},
[60576] = {
"Stone Quilen",
"Mogu'shan Vaults",
"enUS",
},
[61216] = {
"Glintrok Hexxer",
"Mogu'shan Palace",
"enUS",
},
[86073] = {
"Lokk",
"Highmaul",
"enUS",
},
[86329] = {
"Breaker Ritualist",
"Highmaul",
"enUS",
},
[70205] = {
"Weisheng",
"Throne of Thunder",
"enUS",
},
[207946] = {
"Captain Dailcry",
"Priory of the Sacred Flame",
"enUS",
},
[217672] = {
"Deranged Skardyn",
"Hall of Awakening",
"enUS",
},
[94008] = {
"Dark Devourer",
"Hellfire Citadel",
"enUS",
},
[63520] = {
"Li Te",
"Brewmoon Festival",
"enUS",
},
[86330] = {
"Breaker Ritualist",
"Highmaul",
"enUS",
},
[70206] = {
"Untrained Quilen",
"Throne of Thunder",
"enUS",
},
[15980] = {
"Naxxramas Cultist",
"Naxxramas",
"enUS",
},
[16236] = {
"Eye Stalk",
"Naxxramas",
"enUS",
},
[207949] = {
"Zealous Templar",
"Priory of the Sacred Flame",
"enUS",
},
[208461] = {
"Scorching Brambles",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[94777] = {
"Morkronn",
"Hellfire Citadel",
"enUS",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
"enUS",
},
[59426] = {
"Bopper",
"Stormstout Brewery",
"enUS",
},
[70464] = {
"Frostmane Witch Doctor",
"Blood in the Snow",
"enUS",
},
[115765] = {
"Abstract Nullifier",
"Return to Karazhan",
"enUS",
},
[30549] = {
"Baron Rivendare",
"Naxxramas",
"enUS",
},
[70209] = {
"Untrained Quilen",
"Throne of Thunder",
"enUS",
},
[70465] = {
"Frostmane Bonechiller",
"Blood in the Snow",
"enUS",
},
[59299] = {
"Scarlet Guardian",
"Scarlet Halls",
"enUS",
},
[196694] = {
"Arcane Forager",
"Algeth'ar Academy",
"enUS",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
"enUS",
},
[115767] = {
"Mistress Sassz'ine",
"Tomb of Sargeras",
"enUS",
},
[76865] = {
"Beastlord Darmac",
"Blackrock Foundry",
"enUS",
},
[61347] = {
"Kingsguard",
"Mogu'shan Vaults",
"enUS",
},
[69699] = {
"Massive Anima Golem",
"Throne of Thunder",
"enUS",
},
[70979] = {
"Water Elemental",
"Blood in the Snow",
"enUS",
},
[217684] = {
"Deranged Skardyn",
"Hall of Awakening",
"enUS",
},
[121399] = {
"Inquisitor Sebilus",
"Tomb of Sargeras",
"enUS",
},
[174175] = {
"Loyal Stoneborn",
"Halls of Atonement",
},
[69700] = {
"Large Anima Golem",
"Throne of Thunder",
"enUS",
},
[123191] = {
"Fel Hound",
"Antorus, the Burning Throne",
"enUS",
},
[70212] = {
"Flaming Head",
"Throne of Thunder",
"enUS",
},
[70468] = {
"Bonechiller Barafu",
"Blood in the Snow",
"enUS",
},
[219221] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[71492] = {
"Maragor",
"Crypt of Forgotten Kings",
"enUS",
},
[121400] = {
"Accusator Gnazh",
"Tomb of Sargeras",
"enUS",
},
[69701] = {
"Anima Golem",
"Throne of Thunder",
"enUS",
},
[90432] = {
"Felfire Flamebelcher",
"Hellfire Citadel",
"enUS",
},
[207450] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[112955] = {
"Shadescale Wyrm",
"The Nighthold",
"enUS",
},
[126776] = {
"Slobbering Fiend",
"Antorus, the Burning Throne",
"enUS",
},
[69702] = {
"Ritualist Malus",
"Throne of Thunder",
"enUS",
},
[111164] = {
"Twilight Stardancer",
"The Nighthold",
"enUS",
},
[15981] = {
"Naxxramas Acolyte",
"Naxxramas",
"enUS",
},
[161895] = {
"Thing From Beyond",
"Horrific Vision of Orgrimmar",
},
[70982] = {
"Frost Totem",
"Blood in the Snow",
"enUS",
},
[112956] = {
"Shimmering Manaspine",
"The Nighthold",
"enUS",
},
[60709] = {
"Qiang the Merciless",
"Mogu'shan Vaults",
"enUS",
},
[80708] = {
"Iron Taskmaster",
"Blackrock Foundry",
"enUS",
},
[207453] = {
"Fungal Rotspreader",
"Mycomancer Cavern",
"enUS",
},
[216155] = {
"Skittering Ambusher",
"The Spiral Weave",
"enUS",
},
[228952] = {
"Nerubian Skulker",
"The Spiral Weave",
"enUS",
},
[24664] = {
"Kael'thas Sunstrider",
"Magisters' Terrace",
"enUS",
},
[70471] = {
"Frostmane Berserker",
"Blood in the Snow",
"enUS",
},
[61989] = {
"Cursed Mogu Sculpture",
"Mogu'shan Vaults",
"enUS",
},
[207454] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[228953] = {
"Skittering Intruder",
"Earthcrawl Mines",
"enUS",
},
[181861] = {
"Magmatusk",
"Neltharus",
"enUS",
},
[59302] = {
"Sergeant Verdone",
"Scarlet Halls",
"enUS",
},
[90435] = {
"Kormrok",
"Hellfire Citadel",
"enUS",
},
[123451] = {
"Felguard",
"Antorus, the Burning Throne",
"enUS",
},
[17626] = {
"Laughing Skull Legionnaire",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[207456] = {
"Fungal Speartender",
"Mycomancer Cavern",
"enUS",
},
[17882] = {
"The Black Stalker",
"Coilfang: The Underbog",
"enUS",
},
[184422] = {
"Emberon",
"Uldaman: Legacy of Tyr",
"enUS",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
"enUS",
},
[60710] = {
"Subetai the Swift",
"Mogu'shan Vaults",
"enUS",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
"enUS",
},
[123452] = {
"Fel Lord",
"Antorus, the Burning Throne",
"enUS",
},
[70473] = {
"Frostmane Headhunter",
"Blood in the Snow",
"enUS",
},
[208994] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[214625] = {
"Kobyss Necromancer",
"Tak-Rethan Abyss",
"enUS",
},
[198757] = {
"Void Lasher",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[207459] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[69194] = {
"Alliance Cannoneer",
"Naval Battle Scenario",
"enUS",
},
[167533] = {
"Advent Nevermore",
"Theater of Pain",
},
[63526] = {
"Bataari Flamecaller",
"Brewmoon Festival",
"enUS",
},
[70474] = {
"Farastu",
"Blood in the Snow",
"enUS",
},
[128060] = {
"Priestess of Delirium",
"Antorus, the Burning Throne",
"enUS",
},
[203877] = {
"Kobold Thwacker",
"Kriegval's Rest",
"enUS",
},
[88902] = {
"Mol'dana Two-Blade",
"Blackrock Foundry",
"enUS",
},
[203878] = {
"Kobold Mystic",
"Kriegval's Rest",
"enUS",
},
[196200] = {
"Algeth'ar Echoknight",
"Algeth'ar Academy",
"enUS",
},
[70219] = {
"Putrid Waste",
"Throne of Thunder",
"enUS",
},
[70987] = {
"Solid Ice",
"Blood in the Snow",
"enUS",
},
[95813] = {
"Weaponlord Mehlkhior",
"Hellfire Citadel",
"enUS",
},
[188011] = {
"Primal Terrasentry",
"Ruby Life Pools",
"enUS",
},
[443526] = {
"Supply Bag",
"Nightfall Sanctum",
"enUS",
},
[58664] = {
"Instructor Chillheart's Phylactery",
"Scholomance",
"enUS",
},
[76874] = {
"Dreadwing",
"Blackrock Foundry",
"enUS",
},
[69196] = {
"Alliance Swashbuckler",
"Naval Battle Scenario",
"enUS",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
"enUS",
},
[63527] = {
"Bataari Yaungol",
"Brewmoon Festival",
"enUS",
},
[71244] = {
"Kor'kron Shadowblade",
"The Secrets of Ragefire",
"enUS",
},
[196203] = {
"Ethereal Restorer",
"Algeth'ar Academy",
"enUS",
},
[180335] = {
"Cartel Smuggler",
"Tazavesh, the Veiled Market",
},
[409747] = {
"Construct Canker",
"Mycomancer Cavern",
"enUS",
},
[69197] = {
"Alliance Officer",
"Naval Battle Scenario",
"enUS",
},
[180336] = {
"Cartel Wiseguy",
"Tazavesh, the Veiled Market",
},
[71245] = {
"Kor'kron Dark Shaman",
"The Secrets of Ragefire",
"enUS",
},
[62632] = {
"Sik'thik Engineer",
"Siege of Niuzao Temple",
"enUS",
},
[63528] = {
"Warbringer Qobi",
"Brewmoon Festival",
"enUS",
},
[234597] = {
"Woodbench",
"SMV Alliance Garrison Level 2",
"enUS",
},
[443537] = {
"Lost Supplies",
"The Spiral Weave",
"enUS",
},
[16142] = {
"Bile Sludge",
"Naxxramas",
"enUS",
},
[234598] = {
"Woodbench",
"SMV Alliance Garrison Level 2",
"enUS",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
"enUS",
},
[69455] = {
"Zandalari Water-Binder",
"Throne of Thunder",
"enUS",
},
[234599] = {
"Woodbench",
"SMV Alliance Garrison Level 2",
"enUS",
},
[112709] = {
"Promenade Guard",
"The Nighthold",
"enUS",
},
[62633] = {
"Sik'thik Builder",
"Siege of Niuzao Temple",
"enUS",
},
[189555] = {
"Astral Attendant",
"The Azure Vault",
"enUS",
},
[63529] = {
"Karsar the Bloodletter",
"Brewmoon Festival",
"enUS",
},
[181366] = {
"Four Horsemen Chest",
"Naxxramas",
"enUS",
},
[127810] = {
"Slobbering Fiend",
"Antorus, the Burning Throne",
"enUS",
},
[108359] = {
"Volatile Scorpid",
"The Nighthold",
"enUS",
},
[72272] = {
"Minion of Y'Shaarj",
"Siege of Orgrimmar",
"enUS",
},
[56747] = {
"Gu Cloudstrike",
"Shado-Pan Monastery",
"enUS",
},
[56875] = {
"Krik'thik Demolisher",
"Gate of the Setting Sun",
"enUS",
},
[191605] = {
"Portable Mailbox",
"Ny'alotha, the Waking City",
"enUS",
},
[94283] = {
"Shadow Infuser",
"Hellfire Citadel",
"enUS",
},
[61610] = {
"Seething Sha",
"Crypt of Forgotten Kings",
"enUS",
},
[116550] = {
"Spectral Patron",
"Return to Karazhan",
"enUS",
},
[217200] = {
"Void Crystal Monstrosity",
"Hall of Awakening",
"enUS",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[234604] = {
"Woodbench",
"SMV Alliance Garrison Level 2",
"enUS",
},
[80719] = {
"Iron Smith",
"Blackrock Foundry",
"enUS",
},
[59051] = {
"Strife",
"Temple of the Jade Serpent",
"enUS",
},
[114247] = {
"The Curator",
"Return to Karazhan",
"enUS",
},
[94284] = {
"Fiery Enkindler",
"Hellfire Citadel",
"enUS",
},
[177787] = {
"Mawsworn Hopebreaker",
"Sanctum of Domination",
},
[108361] = {
"Crystalline Scorpid",
"The Nighthold",
"enUS",
},
[243308] = {
"Spoils of the Assault",
"Hellfire Citadel",
"enUS",
},
[56876] = {
"Krik'thik Sapper",
"Gate of the Setting Sun",
"enUS",
},
[94285] = {
"Fel Extractor",
"Hellfire Citadel",
"enUS",
},
[86607] = {
"Iron Flame Technician",
"Highmaul",
"enUS",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[234609] = {
"Chair",
"SMV Alliance Garrison Level 2",
"enUS",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[413874] = {
"Rich Bismuth",
"Earthcrawl Mines",
"enUS",
},
[183423] = {
"Reformed Bachelor",
"Return to Karazhan",
"enUS",
},
[234611] = {
"Chair",
"SMV Alliance Garrison Level 2",
"enUS",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[207482] = {
"Invasive Sporecap",
"Kriegval's Rest",
"enUS",
},
[179841] = {
"Veteran Sparkcaster",
"Tazavesh, the Veiled Market",
},
[449709] = {
"Bouncy Shroom",
"Kriegval's Rest",
"enUS",
},
[158343] = {
"Organ of Corruption",
"Ny'alotha, the Waking City",
"enUS",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
"enUS",
},
[179842] = {
"Commerce Enforcer",
"Tazavesh, the Veiled Market",
},
[115019] = {
"Coldmist Widow",
"Return to Karazhan",
"enUS",
},
[70230] = {
"Zandalari Blade Initiate",
"Throne of Thunder",
"enUS",
},
[103758] = {
"Star Augur Etraeus",
"The Nighthold",
"enUS",
},
[114252] = {
"Mana Devourer",
"Return to Karazhan",
"enUS",
},
[61485] = {
"General Pa'valak",
"Siege of Niuzao Temple",
"enUS",
},
[115020] = {
"Arcanid",
"Return to Karazhan",
"enUS",
},
[86611] = {
"Mind Fungus",
"Highmaul",
"enUS",
},
[120651] = {
"Explosives",
"Atal'Dazar",
},
[112973] = {
"Duskwatch Weaver",
"The Nighthold",
"enUS",
},
[179334] = {
"Portalmancer Zo'nyy",
"Tazavesh, the Veiled Market",
},
[94802] = {
"Voidscribe Aathalos",
"Hellfire Citadel",
"enUS",
},
[213119] = {
"Void Speaker Eirich",
"The Stonevault",
"enUS",
},
[211584] = {
"Ancient Control Console",
"Mogu'shan Vaults",
"enUS",
},
[69465] = {
"Jin'rokh the Breaker",
"Throne of Thunder",
"enUS",
},
[94803] = {
"Grute",
"Hellfire Citadel",
"enUS",
},
[194181] = {
"Vexamus",
"Algeth'ar Academy",
"enUS",
},
[199812] = {
"Zaqali Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[204931] = {
"Fyrakk",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[82519] = {
"Highmaul Conscript",
"Highmaul",
"enUS",
},
[70746] = {
"Frostmane Flesh-Eater",
"Blood in the Snow",
"enUS",
},
[70235] = {
"Frozen Head",
"Throne of Thunder",
"enUS",
},
[202375] = {
"Zskarn",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[66652] = {
"Lesser Volatile Energy",
"Shado-Pan Monastery",
"enUS",
},
[71259] = {
"Huntmaster S'thoc",
"A Brewing Storm",
"enUS",
},
[62511] = {
"Amber-Shaper Un'sok",
"Heart of Fear",
"enUS",
},
[59184] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[90199] = {
"Gorefiend",
"Hellfire Citadel",
"enUS",
},
[94806] = {
"Fel Hellweaver",
"Hellfire Citadel",
"enUS",
},
[60208] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[219270] = {
"Rope Pile",
"Naval Battle Scenario",
"enUS",
},
[148120] = {
"Kul Tiran Marine",
"Battle of Dazar'alor",
},
[215177] = {
"Waximus",
"New Candle, New Hope",
"enUS",
},
[77404] = {
"The Butcher",
"Highmaul",
"enUS",
},
[217225] = {
"Machinist Protector",
"Hall of Awakening",
"enUS",
},
[94808] = {
"Hellfire Guardian",
"Hellfire Citadel",
"enUS",
},
[116563] = {
"Ancient Core Hound",
"Return to Karazhan",
"enUS",
},
[104534] = {
"D'zorykx the Trapper",
"The Nighthold",
"enUS",
},
[56754] = {
"Azure Serpent",
"Shado-Pan Monastery",
"enUS",
},
[190609] = {
"Echo of Doragosa",
"Algeth'ar Academy",
"enUS",
},
[122450] = {
"Garothi Worldbreaker",
"Antorus, the Burning Throne",
"enUS",
},
[58674] = {
"Angry Hound",
"Scarlet Halls",
"enUS",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[114261] = {
"Toe Knee",
"Return to Karazhan",
"enUS",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
},
[205968] = {
"Fragment of Shadow",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[104536] = {
"Inquisitor Vethriz",
"The Nighthold",
"enUS",
},
[177816] = {
"Interrogation Specialist",
"Tazavesh, the Veiled Market",
},
[85341] = {
"Lunarfall Raccoon",
"SMV Alliance Garrison Level 2",
"enUS",
},
[123476] = {
"Hulking Demolisher",
"Antorus, the Burning Throne",
"enUS",
},
[177817] = {
"Support Officer",
"Tazavesh, the Veiled Market",
},
[103769] = {
"Xavius",
"The Emerald Nightmare",
"enUS",
},
[104537] = {
"Fel Lord Kuraz'mal",
"The Nighthold",
"enUS",
},
[205971] = {
"Fragment of Fire",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[58803] = {
"Residual Hatred",
"Shado-Pan Monastery",
"enUS",
},
[158367] = {
"Basher Tentacle",
"Ny'alotha, the Waking City",
"enUS",
},
[114263] = {
"Odyn",
"Trial of Valor",
"enUS",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
},
[123477] = {
"Antoran Doomguard",
"Antorus, the Burning Throne",
"enUS",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
"enUS",
},
[220305] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[56884] = {
"Corrupted Taran Zhu",
"Shado-Pan Monastery",
"enUS",
},
[114264] = {
"Midnight",
"Return to Karazhan",
"enUS",
},
[123478] = {
"Antoran Felguard",
"Antorus, the Burning Throne",
"enUS",
},
[203927] = {
"Failed Prototype",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[58676] = {
"Scarlet Defender",
"Scarlet Halls",
"enUS",
},
[214677] = {
"Invading Hurler",
"Tak-Rethan Abyss",
"enUS",
},
[101468] = {
"Jagganoth",
"Dreadscar Rift",
"enUS",
},
[114265] = {
"Gang Ruffian",
"Return to Karazhan",
"enUS",
},
[17377] = {
"Keli'dan the Breaker",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[63539] = {
"Flamecoaxing Spirit",
"Arena of Annihilation",
"enUS",
},
[112474] = {
"Corrupted Totem",
"The Emerald Nightmare",
"enUS",
},
[173729] = {
"Manifestation of Pride",
"Theater of Pain",
},
[114266] = {
"Shoreline Tidespeaker",
"Return to Karazhan",
"enUS",
},
[123480] = {
"Antoran Champion",
"Antorus, the Burning Throne",
"enUS",
},
[120153] = {
"Eonic Defender",
"Tomb of Sargeras",
"enUS",
},
[220311] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[158375] = {
"Corruptor Tentacle",
"Ny'alotha, the Waking City",
"enUS",
},
[94816] = {
"Togdrov",
"Hellfire Citadel",
"enUS",
},
[78948] = {
"Tectus",
"Highmaul",
"enUS",
},
[16145] = {
"Death Knight Captain",
"Naxxramas",
"enUS",
},
[220314] = {
"Bogpiper",
"Mycomancer Cavern",
"enUS",
},
[478443] = {
"Mislaid Curiosity",
"Kriegval's Rest",
"enUS",
},
[70247] = {
"Venomous Head",
"Throne of Thunder",
"enUS",
},
[214684] = {
"Invading Scrapper",
"Tak-Rethan Abyss",
"enUS",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
"enUS",
},
[92514] = {
"Shao'ghun",
"Hellfire Citadel",
"enUS",
},
[185508] = {
"Claw Fighter",
"Brackenhide Hollow",
"enUS",
},
[216221] = {
"Earthen-Ward Sentinel",
"Hall of Awakening",
"enUS",
},
[451830] = {
"|cff1EFF00Heavy Trunk",
"Earthcrawl Mines",
"enUS",
},
[67177] = {
"Zar'thik Supplicant",
"Heart of Fear",
"enUS",
},
[104288] = {
"Trilliax",
"The Nighthold",
"enUS",
},
[56631] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[114526] = {
"Ghostly Understudy",
"Return to Karazhan",
"enUS",
},
[237722] = {
"Full Garrison Cache",
"SMV Alliance Garrison Level 2",
"enUS",
},
[94563] = {
"Gorebound Fanatic",
"Hellfire Citadel",
"enUS",
},
[203939] = {
"Animation Fluid",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[58807] = {
"Vestige of Hatred",
"Shado-Pan Monastery",
"enUS",
},
[63030] = {
"Enslaved Bonesmasher",
"Heart of Fear",
"enUS",
},
[59191] = {
"Commander Lindon",
"Scarlet Halls",
"enUS",
},
[79208] = {
"Blackrock Enforcer",
"Blackrock Foundry",
"enUS",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
"enUS",
},
[192680] = {
"Guardian Sentry",
"Algeth'ar Academy",
"enUS",
},
[61239] = {
"Glintrok Oracle",
"Mogu'shan Palace",
"enUS",
},
[205478] = {
"Conduit Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[422154] = {
"Brann's Cozy Campfire",
"Kriegval's Rest",
"enUS",
},
[16803] = {
"Death Knight Understudy",
"Naxxramas",
"enUS",
},
[76906] = {
"Operator Thogar",
"Blackrock Foundry",
"enUS",
},
[1863] = {
"Aliersia",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[66413] = {
"Yeasty Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[64183] = {
"Enormous Stone Quilen",
"Mogu'shan Vaults",
"enUS",
},
[403731] = {
"Frozen Rune",
"Naxxramas",
"enUS",
},
[71788] = {
"Crawler Mine",
"Siege of Orgrimmar",
"enUS",
},
[125535] = {
"Riftworld Assistant",
"Antorus, the Burning Throne",
"enUS",
},
[84841] = {
"Iron Dockworker",
"Blackrock Foundry",
"enUS",
},
[61240] = {
"Glintrok Skulker",
"Mogu'shan Palace",
"enUS",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[128095] = {
"Sister of the Lash",
"Antorus, the Burning Throne",
"enUS",
},
[33983] = {
"Constrictor Tentacle",
"Ulduar",
"enUS",
},
[63032] = {
"Sra'thik Shield Master",
"Heart of Fear",
"enUS",
},
[59193] = {
"Boneweaver",
"Scholomance",
"enUS",
},
[59705] = {
"Scarlet Flamethrower",
"Scarlet Monastery",
"enUS",
},
[16018] = {
"Bile Retcher",
"Naxxramas",
"enUS",
},
[16146] = {
"Death Knight",
"Naxxramas",
"enUS",
},
[56762] = {
"Yu'lon",
"Temple of the Jade Serpent",
"enUS",
},
[56890] = {
"Krik'thik Infiltrator",
"Gate of the Setting Sun",
"enUS",
},
[174773] = {
"Spiteful Shade",
"The Azure Vault",
"enUS",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[24674] = {
"Phoenix",
"Magisters' Terrace",
"enUS",
},
[62009] = {
"Shadows of Anger",
"Crypt of Forgotten Kings",
"enUS",
},
[203951] = {
"Kobold Skullface",
"Kriegval's Rest",
"enUS",
},
[58810] = {
"Fragment of Hatred",
"Shado-Pan Monastery",
"enUS",
},
[17252] = {
"Shaamawl",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[122467] = {
"Asara, Mother of Night",
"Antorus, the Burning Throne",
"enUS",
},
[17380] = {
"Broggok",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[64185] = {
"Bataari War Yeti",
"Brewmoon Festival",
"enUS",
},
[92523] = {
"Vazeel'fazag",
"Hellfire Citadel",
"enUS",
},
[56763] = {
"Regenerating Sha",
"Shado-Pan Monastery",
"enUS",
},
[122468] = {
"Noura, Mother of Flames",
"Antorus, the Burning Throne",
"enUS",
},
[114534] = {
"Helhound",
"Trial of Valor",
"enUS",
},
[111975] = {
"Shadowfeather",
"The Emerald Nightmare",
"enUS",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[58555] = {
"Scarlet Fanatic",
"Scarlet Monastery",
"enUS",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[122469] = {
"Diima, Mother of Gloom",
"Antorus, the Burning Throne",
"enUS",
},
[412967] = {
"Helm of Memories",
"Kriegval's Rest",
"enUS",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[59835] = {
"Krik'thik Swarmer",
"Gate of the Setting Sun",
"enUS",
},
[228015] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[56636] = {
"Commander Ri'mok",
"Gate of the Setting Sun",
"enUS",
},
[113512] = {
"Putrid Sludge",
"The Nighthold",
"enUS",
},
[61243] = {
"Gekkan",
"Mogu'shan Palace",
"enUS",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[156866] = {
"Ra-den",
"Ny'alotha, the Waking City",
"enUS",
},
[194745] = {
"Rotfang Hyena",
"Brackenhide Hollow",
"enUS",
},
[217268] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[92526] = {
"Zerik'shekor",
"Hellfire Citadel",
"enUS",
},
[58684] = {
"Scarlet Scourge Hewer",
"Scarlet Halls",
"enUS",
},
[58812] = {
"Hateful Essence",
"Shado-Pan Monastery",
"enUS",
},
[63035] = {
"Zar'thik Zealot",
"Heart of Fear",
"enUS",
},
[114537] = {
"Helya",
"Trial of Valor",
"enUS",
},
[111210] = {
"Searing Infernal",
"The Nighthold",
"enUS",
},
[218805] = {
"Cache of Ancient Treasures",
"Throne of Thunder",
"enUS",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[92527] = {
"Dag'gorath",
"Hellfire Citadel",
"enUS",
},
[56637] = {
"Ook-Ook",
"Stormstout Brewery",
"enUS",
},
[56765] = {
"Destroying Sha",
"Shado-Pan Monastery",
"enUS",
},
[93295] = {
"Darkcaster Adept",
"Hellfire Citadel",
"enUS",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[18341] = {
"Pandemonius",
"Auchindoun: Mana-Tombs",
"enUS",
},
[114538] = {
"Kvaldir Spiritrender",
"Trial of Valor",
"enUS",
},
[114794] = {
"Skeletal Hound",
"Return to Karazhan",
"enUS",
},
[58685] = {
"Scarlet Evangelist",
"Scarlet Halls",
"enUS",
},
[63036] = {
"Kor'thik Extremist",
"Heart of Fear",
"enUS",
},
[77428] = {
"Imperator Mar'gok",
"Highmaul",
"enUS",
},
[114539] = {
"Kvaldir Reefcaller",
"Trial of Valor",
"enUS",
},
[94832] = {
"Gorebound Assassin",
"Hellfire Citadel",
"enUS",
},
[71030] = {
"Overseer Elaglo",
"The Secrets of Ragefire",
"enUS",
},
[71542] = {
"Blood",
"Siege of Orgrimmar",
"enUS",
},
[213179] = {
"Avanoxx",
"Ara-Kara, City of Echoes",
"enUS",
},
[210108] = {
"E.D.N.A",
"The Stonevault",
"enUS",
},
[56766] = {
"Volatile Energy",
"Shado-Pan Monastery",
"enUS",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
},
[81780] = {
"Guard Captain Thag",
"Highmaul",
"enUS",
},
[114796] = {
"Wholesome Hostess",
"Return to Karazhan",
"enUS",
},
[210109] = {
"Earth Infused Golem",
"The Stonevault",
"enUS",
},
[87411] = {
"Workshop Guardian",
"Blackrock Foundry",
"enUS",
},
[62397] = {
"Wind Lord Mel'jarak",
"Heart of Fear",
"enUS",
},
[33988] = {
"Immortal Guardian",
"Ulduar",
"enUS",
},
[93298] = {
"Shadowheart Fiend",
"Hellfire Citadel",
"enUS",
},
[188100] = {
"Shrieking Whelp",
"The Azure Vault",
"enUS",
},
[64061] = {
"Mogu'shan Warden",
"Mogu'shan Vaults",
"enUS",
},
[95602] = {
"Mystic Velruun",
"Hellfire Citadel",
"enUS",
},
[56511] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[125547] = {
"Feltouched Skitterer",
"Antorus, the Burning Throne",
"enUS",
},
[56895] = {
"Weak Spot",
"Gate of the Setting Sun",
"enUS",
},
[81270] = {
"Gorian Guardsman",
"Highmaul",
"enUS",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
"enUS",
},
[213696] = {
"Molten Scorpid",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[462136] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[211137] = {
"Sliding Door",
"Stormstout Brewery",
"enUS",
},
[462137] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[462138] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[228030] = {
"Sir Finley Mrrgglton",
"Nightfall Sanctum",
"enUS",
},
[122477] = {
"F'harg",
"Antorus, the Burning Throne",
"enUS",
},
[90485] = {
"Felfire Artillery",
"Hellfire Citadel",
"enUS",
},
[462140] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[64446] = {
"Training Dummy",
"Scarlet Monastery",
"enUS",
},
[125549] = {
"Hungering Stalker",
"Antorus, the Burning Throne",
"enUS",
},
[462142] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[211140] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[81272] = {
"Gorian Runemaster",
"Highmaul",
"enUS",
},
[93813] = {
"Contracted Engineer",
"Hellfire Citadel",
"enUS",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
"enUS",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
"enUS",
},
[224962] = {
"Cursedforge Mender",
"The Stonevault",
"enUS",
},
[68220] = {
"Gastropod",
"Throne of Thunder",
"enUS",
},
[68476] = {
"Horridon",
"Throne of Thunder",
"enUS",
},
[69756] = {
"Anima Orb",
"Throne of Thunder",
"enUS",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[78714] = {
"Kargath Bladefist",
"Highmaul",
"enUS",
},
[64063] = {
"Mogu'shan Arcanist",
"Mogu'shan Vaults",
"enUS",
},
[180431] = {
"Focused Ritualist",
"Tazavesh, the Veiled Market",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[68221] = {
"Bore Worm",
"Throne of Thunder",
"enUS",
},
[93303] = {
"Slavering Hound",
"Hellfire Citadel",
"enUS",
},
[18343] = {
"Tavarok",
"Auchindoun: Mana-Tombs",
"enUS",
},
[114546] = {
"Risen Bonethrall",
"Trial of Valor",
"enUS",
},
[217799] = {
"Machinist Protector",
"Hall of Awakening",
"enUS",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[123760] = {
"Fel-Infused Destructor",
"Antorus, the Burning Throne",
"enUS",
},
[180433] = {
"Wandering Pulsar",
"Tazavesh, the Veiled Market",
},
[67966] = {
"Whirl Turtle",
"Throne of Thunder",
"enUS",
},
[68222] = {
"Bow Fly Swarm",
"Throne of Thunder",
"enUS",
},
[248513] = {
"Felbound Chest",
"The Nighthold",
"enUS",
},
[114547] = {
"Ancient Bonethrall",
"Trial of Valor",
"enUS",
},
[114803] = {
"Spectral Stable Hand",
"Return to Karazhan",
"enUS",
},
[221896] = {
"Web General Ab'enar",
"Earthcrawl Mines",
"enUS",
},
[15956] = {
"Anub'Rekhan",
"Naxxramas",
"enUS",
},
[16020] = {
"Mad Scientist",
"Naxxramas",
"enUS",
},
[184018] = {
"Bromach",
"Uldaman: Legacy of Tyr",
"enUS",
},
[16148] = {
"Spectral Death Knight",
"Naxxramas",
"enUS",
},
[113012] = {
"Felsworn Chaos-Mage",
"The Nighthold",
"enUS",
},
[201934] = {
"Shadowflame Amalgamation",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[16244] = {
"Infectious Ghoul",
"Naxxramas",
"enUS",
},
[220362] = {
"Pirate Hat",
"Naval Battle Scenario",
"enUS",
},
[102263] = {
"Skorpyron",
"The Nighthold",
"enUS",
},
[114804] = {
"Spectral Charger",
"Return to Karazhan",
"enUS",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[200912] = {
"Neldris",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[113013] = {
"Felsworn Shadowblade",
"The Nighthold",
"enUS",
},
[84860] = {
"Iron Earthbinder",
"Blackrock Foundry",
"enUS",
},
[77182] = {
"Oregorger",
"Blackrock Foundry",
"enUS",
},
[208591] = {
"Haunted War Drum",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59458] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[178392] = {
"Gatewarden Zo'mazz",
"Tazavesh, the Veiled Market",
},
[228044] = {
"Reno Jackson",
"Nightfall Sanctum",
"enUS",
},
[18344] = {
"Nexus-Prince Shaffar",
"Auchindoun: Mana-Tombs",
"enUS",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
"enUS",
},
[61634] = {
"Commander Vo'jak",
"Siege of Niuzao Temple",
"enUS",
},
[62402] = {
"Kor'thik Elite Blademaster",
"Heart of Fear",
"enUS",
},
[222927] = {
"Sacred Flame Vintner",
"Priory of the Sacred Flame",
"enUS",
},
[93308] = {
"Portal Guardian",
"Hellfire Citadel",
"enUS",
},
[59459] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[198870] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[120182] = {
"Tormented Priestess",
"Tomb of Sargeras",
"enUS",
},
[200918] = {
"Rionthus",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[198871] = {
"Sundered Scaleguard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[216275] = {
"Brann's Epic Egg",
"Tak-Rethan Abyss",
"enUS",
},
[217299] = {
"Ostiary Wystan",
"Hall of Awakening",
"enUS",
},
[70787] = {
"Skullcrusher Gundu",
"Blood in the Snow",
"enUS",
},
[211669] = {
"Polyformic Acid Potion",
"Scholomance",
"enUS",
},
[218324] = {
"Nakt",
"Ara-Kara, City of Echoes",
"enUS",
},
[121975] = {
"Aggramar",
"Antorus, the Burning Throne",
"enUS",
},
[73091] = {
"Blackfuse Sellsword",
"Siege of Orgrimmar",
"enUS",
},
[59460] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[218325] = {
"Swarming Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[78978] = {
"Darkshard Gnasher",
"Blackrock Foundry",
"enUS",
},
[95614] = {
"Binder Eloah",
"Hellfire Citadel",
"enUS",
},
[111227] = {
"Felweaver Pharamere",
"The Nighthold",
"enUS",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
},
[70789] = {
"Zandalari Rage Banner",
"Blood in the Snow",
"enUS",
},
[91520] = {
"Adjunct Kuroh",
"Hellfire Citadel",
"enUS",
},
[112251] = {
"Putrid Sludge",
"The Nighthold",
"enUS",
},
[120697] = {
"Worshiper of Elune",
"Tomb of Sargeras",
"enUS",
},
[413046] = {
"Bismuth",
"Earthcrawl Mines",
"enUS",
},
[59461] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[15989] = {
"Sapphiron",
"Naxxramas",
"enUS",
},
[64068] = {
"Mogu'shan Engine Keeper",
"Mogu'shan Vaults",
"enUS",
},
[91521] = {
"Vindicator Bramu",
"Hellfire Citadel",
"enUS",
},
[413049] = {
"Ironclaw",
"Kriegval's Rest",
"enUS",
},
[16149] = {
"Spectral Horse",
"Naxxramas",
"enUS",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
},
[200927] = {
"Smolderon",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[24744] = {
"Vexallus",
"Magisters' Terrace",
"enUS",
},
[91522] = {
"Protector Bajunt",
"Hellfire Citadel",
"enUS",
},
[71303] = {
"Whale Shark",
"Naval Battle Scenario",
"enUS",
},
[62405] = {
"Sra'thik Amber-Trapper",
"Heart of Fear",
"enUS",
},
[58822] = {
"Risen Guard",
"Scholomance",
"enUS",
},
[59078] = {
"Failed Student",
"Scholomance",
"enUS",
},
[114813] = {
"Kvaldir Tide Witch",
"Trial of Valor",
"enUS",
},
[168681] = {
"Forsworn Helion",
"Spires of Ascension",
},
[59974] = {
"Campari",
"Scarlet Monastery",
"enUS",
},
[17770] = {
"Hungarfen",
"Coilfang: The Underbog",
"enUS",
},
[64453] = {
"Set'thik Windblade",
"Heart of Fear",
"enUS",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[67977] = {
"Tortos",
"Throne of Thunder",
"enUS",
},
[441724] = {
"X-treme Water Blaster Display",
"Uldaman: Legacy of Tyr",
"enUS",
},
[213216] = {
"Speaker Dorlita",
"The Stonevault",
"enUS",
},
[61766] = {
"Crypt Guardian",
"Crypt of Forgotten Kings",
"enUS",
},
[112255] = {
"Sludgerax",
"The Nighthold",
"enUS",
},
[213217] = {
"Speaker Brokk",
"The Stonevault",
"enUS",
},
[58823] = {
"Scholomance Neophyte",
"Scholomance",
"enUS",
},
[19306] = {
"Mana Leech",
"Auchindoun: Mana-Tombs",
"enUS",
},
[254168] = {
"Spoils of the Nightmare",
"The Emerald Nightmare",
"enUS",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[210147] = {
"Harbinger of Incineration",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[219361] = {
"Machinist Protector",
"Hall of Awakening",
"enUS",
},
[64454] = {
"Zar'thik Augurer",
"Heart of Fear",
"enUS",
},
[219874] = {
"High Speaker's Construct",
"Hall of Awakening",
"enUS",
},
[16427] = {
"Soldier of the Frozen Wastes",
"Naxxramas",
"enUS",
},
[24745] = {
"Pure Energy",
"Magisters' Terrace",
"enUS",
},
[120191] = {
"Eternal Soulguard",
"Tomb of Sargeras",
"enUS",
},
[92038] = {
"Hulking Terror",
"Hellfire Citadel",
"enUS",
},
[210150] = {
"Flametouched Enforcer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190187] = {
"Draconic Image",
"The Azure Vault",
"enUS",
},
[59080] = {
"Darkmaster Gandling",
"Scholomance",
"enUS",
},
[93830] = {
"Iron Dragoon",
"Hellfire Citadel",
"enUS",
},
[59464] = {
"Hopper",
"Stormstout Brewery",
"enUS",
},
[17771] = {
"Murkblood Oracle",
"Coilfang: The Underbog",
"enUS",
},
[92039] = {
"Bleeding Grunt",
"Hellfire Citadel",
"enUS",
},
[442763] = {
"Soggy Chest",
"Tak-Rethan Abyss",
"enUS",
},
[195820] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[401814] = {
"Void-Touched Chest",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[195821] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[62408] = {
"Zar'thik Battle-Mender",
"Heart of Fear",
"enUS",
},
[58569] = {
"Scarlet Purifier",
"Scarlet Monastery",
"enUS",
},
[428434] = {
"Treasure Chest",
"The Spiral Weave",
"enUS",
},
[63048] = {
"Kor'thik Slicer",
"Heart of Fear",
"enUS",
},
[19307] = {
"Nexus Terror",
"Auchindoun: Mana-Tombs",
"enUS",
},
[15990] = {
"Kel'Thuzad",
"Naxxramas",
"enUS",
},
[16022] = {
"Surgical Assistant",
"Naxxramas",
"enUS",
},
[120194] = {
"Ghostly Acolyte",
"Tomb of Sargeras",
"enUS",
},
[112260] = {
"Dreadsoul Defiler",
"The Emerald Nightmare",
"enUS",
},
[92041] = {
"Bleeding Darkcaster",
"Hellfire Citadel",
"enUS",
},
[16150] = {
"Spectral Rider",
"Naxxramas",
"enUS",
},
[117123] = {
"Tidescale Legionnaire",
"Tomb of Sargeras",
"enUS",
},
[125569] = {
"Riftworld Assistant",
"Antorus, the Burning Throne",
"enUS",
},
[56906] = {
"Saboteur Kip'tilak",
"Gate of the Setting Sun",
"enUS",
},
[24554] = {
"Eramas Brightblaze",
"Magisters' Terrace",
"enUS",
},
[16428] = {
"Unstoppable Abomination",
"Naxxramas",
"enUS",
},
[115844] = {
"Goroth",
"Tomb of Sargeras",
"enUS",
},
[112261] = {
"Dreadsoul Corruptor",
"The Emerald Nightmare",
"enUS",
},
[213741] = {
"Voidstone Awakened",
"The Rookery",
"enUS",
},
[125570] = {
"Riftworld Assistant",
"Antorus, the Burning Throne",
"enUS",
},
[58826] = {
"Zao Sunseeker",
"Temple of the Jade Serpent",
"enUS",
},
[63049] = {
"Set'thik Swiftblade",
"Heart of Fear",
"enUS",
},
[59722] = {
"Pile of Corpses",
"Scarlet Monastery",
"enUS",
},
[70544] = {
"Hekima the Wise",
"Blood in the Snow",
"enUS",
},
[71312] = {
"Alliance Deckhand",
"Naval Battle Scenario",
"enUS",
},
[56395] = {
"Shado-Pan Novice",
"Shado-Pan Monastery",
"enUS",
},
[213743] = {
"Enraged Skardyn",
"Hall of Awakening",
"enUS",
},
[80526] = {
"Stubborn Ironhoof",
"Blackrock Foundry",
"enUS",
},
[81806] = {
"Gorian Royal Guardsman",
"Highmaul",
"enUS",
},
[94859] = {
"Armored Skullsmasher",
"Hellfire Citadel",
"enUS",
},
[186615] = {
"The Raging Tempest",
"The Nokhud Offensive",
"enUS",
},
[101002] = {
"Krosus",
"The Nighthold",
"enUS",
},
[157439] = {
"Fury of N'Zoth",
"Ny'alotha, the Waking City",
"enUS",
},
[186616] = {
"Granyth",
"The Nokhud Offensive",
"enUS",
},
[81807] = {
"Councilor Nouk",
"Highmaul",
"enUS",
},
[59467] = {
"Candlestick Mage",
"Scholomance",
"enUS",
},
[94604] = {
"Gorebound Corruptor",
"Hellfire Citadel",
"enUS",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[191736] = {
"Crawth",
"Algeth'ar Academy",
"enUS",
},
[64458] = {
"Kor'thik Warsinger",
"Heart of Fear",
"enUS",
},
[61131] = {
"Mogu'shan Secret-Keeper",
"Mogu'shan Vaults",
"enUS",
},
[114312] = {
"Moroes",
"Return to Karazhan",
"enUS",
},
[81808] = {
"Councilor Magknor",
"Highmaul",
"enUS",
},
[16429] = {
"Soul Weaver",
"Naxxramas",
"enUS",
},
[24683] = {
"Sunblade Mage Guard",
"Magisters' Terrace",
"enUS",
},
[94861] = {
"Grim Ambusher",
"Hellfire Citadel",
"enUS",
},
[186107] = {
"Vault Keeper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162049] = {
"Vestige of Doubt",
"Sanguine Depths",
},
[62795] = {
"Sik'thik Warden",
"Siege of Niuzao Temple",
"enUS",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
"enUS",
},
[81809] = {
"Councilor Gorluk",
"Highmaul",
"enUS",
},
[59980] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[95630] = {
"Construct Peacekeeper",
"Hellfire Citadel",
"enUS",
},
[454055] = {
"Luredrop",
"Tak-Rethan Abyss",
"enUS",
},
[190205] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[69013] = {
"Diffused Lightning",
"Throne of Thunder",
"enUS",
},
[94607] = {
"Gorebound Cauterizer",
"Hellfire Citadel",
"enUS",
},
[214264] = {
"Cursedforge Honor Guard",
"The Stonevault",
"enUS",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
"enUS",
},
[120201] = {
"Spectral Guardian",
"Tomb of Sargeras",
"enUS",
},
[210170] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
"enUS",
},
[59213] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[81811] = {
"High Councilor Mal'gris",
"Highmaul",
"enUS",
},
[95632] = {
"Sargerei Enforcer",
"Hellfire Citadel",
"enUS",
},
[364997] = {
"Teleportation Pad",
"Tomb of Sargeras",
"enUS",
},
[16215] = {
"Unholy Staff",
"Naxxramas",
"enUS",
},
[194816] = {
"Forgewrought Monstrosity",
"Neltharus",
"enUS",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
"enUS",
},
[24556] = {
"Zelfan",
"Magisters' Terrace",
"enUS",
},
[24684] = {
"Sunblade Blood Knight",
"Magisters' Terrace",
"enUS",
},
[210173] = {
"Zaqali Steelshaper",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[187139] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
"enUS",
},
[68248] = {
"Corpse Spider",
"Throne of Thunder",
"enUS",
},
[186116] = {
"Gutshot",
"Brackenhide Hollow",
"enUS",
},
[63053] = {
"Garalon's Leg",
"Heart of Fear",
"enUS",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
"enUS",
},
[184581] = {
"Baelog",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59598] = {
"Lesser Sha",
"Temple of the Jade Serpent",
"enUS",
},
[59726] = {
"Peril",
"Temple of the Jade Serpent",
"enUS",
},
[157452] = {
"Nightmare Antigen",
"Ny'alotha, the Waking City",
"enUS",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[80534] = {
"Ornery Ironhoof",
"Blackrock Foundry",
"enUS",
},
[69017] = {
"Primordius",
"Throne of Thunder",
"enUS",
},
[114318] = {
"Baron Rafe Dreuger",
"Return to Karazhan",
"enUS",
},
[123532] = {
"Dark Keeper",
"Antorus, the Burning Throne",
"enUS",
},
[58319] = {
"Lesser Sha",
"Temple of the Jade Serpent",
"enUS",
},
[186120] = {
"Treemouth",
"Brackenhide Hollow",
"enUS",
},
[236796] = {
"Chair",
"SMV Alliance Garrison Level 2",
"enUS",
},
[176395] = {
"Overloaded Mailemental",
"Tazavesh, the Veiled Market",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[123533] = {
"Tarneth",
"Antorus, the Burning Throne",
"enUS",
},
[186121] = {
"Decatriarch Wratheye",
"Brackenhide Hollow",
"enUS",
},
[95636] = {
"Sargerei Adjutant",
"Hellfire Citadel",
"enUS",
},
[212739] = {
"Radiating Voidstone",
"The Rookery",
"enUS",
},
[176396] = {
"Defective Sorter",
"Tazavesh, the Veiled Market",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[186122] = {
"Rira Hackclaw",
"Brackenhide Hollow",
"enUS",
},
[56912] = {
"Krik'thik Engulfer",
"Gate of the Setting Sun",
"enUS",
},
[114320] = {
"Lord Robin Daris",
"Return to Karazhan",
"enUS",
},
[24685] = {
"Sunblade Magister",
"Magisters' Terrace",
"enUS",
},
[120463] = {
"Undersea Custodian",
"Tomb of Sargeras",
"enUS",
},
[120719] = {
"Lunar Priestess",
"Tomb of Sargeras",
"enUS",
},
[62543] = {
"Blade Lord Ta'yak",
"Heart of Fear",
"enUS",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
},
[186124] = {
"Gashtooth",
"Brackenhide Hollow",
"enUS",
},
[191243] = {
"Wild Lasher",
"Brackenhide Hollow",
"enUS",
},
[114321] = {
"Lord Crispin Ference",
"Return to Karazhan",
"enUS",
},
[106643] = {
"Elisande",
"The Nighthold",
"enUS",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[95638] = {
"Sargerei Bannerman",
"Hellfire Citadel",
"enUS",
},
[224516] = {
"Skardyn Invader",
"The Stonevault",
"enUS",
},
[120720] = {
"Lunar Guard",
"Tomb of Sargeras",
"enUS",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
"enUS",
},
[61392] = {
"Harthak Flameseeker",
"Mogu'shan Palace",
"enUS",
},
[192781] = {
"Ore Elemental",
"Neltharus",
"enUS",
},
[193293] = {
"Qalashi Warden",
"Neltharus",
"enUS",
},
[78491] = {
"Brackenspore",
"Highmaul",
"enUS",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
"enUS",
},
[215816] = {
"Bench",
"Temple of the Jade Serpent",
"enUS",
},
[159510] = {
"Eye of the Depths",
"Ny'alotha, the Waking City",
"enUS",
},
[113043] = {
"Abyss Watcher",
"The Nighthold",
"enUS",
},
[219912] = {
"Crawler",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[114323] = {
"Guarm",
"Trial of Valor",
"enUS",
},
[217353] = {
"Master Machinist Dunstan",
"Hall of Awakening",
"enUS",
},
[15928] = {
"Thaddius",
"Naxxramas",
"enUS",
},
[16024] = {
"Embalming Slime",
"Naxxramas",
"enUS",
},
[95640] = {
"Sargerei Soul Cleaver",
"Hellfire Citadel",
"enUS",
},
[195855] = {
"Risen Warrior",
"The Nokhud Offensive",
"enUS",
},
[16216] = {
"Unholy Swords",
"Naxxramas",
"enUS",
},
[214795] = {
"Ancient Mogu Treasure",
"Mogu'shan Palace",
"enUS",
},
[130192] = {
"Hulking Demolisher",
"Antorus, the Burning Throne",
"enUS",
},
[187154] = {
"Unstable Curator",
"The Azure Vault",
"enUS",
},
[24686] = {
"Sunblade Warlock",
"Magisters' Terrace",
"enUS",
},
[94873] = {
"Felfire Flamebelcher",
"Hellfire Citadel",
"enUS",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
"enUS",
},
[71327] = {
"Admiral Hodgson",
"Naval Battle Scenario",
"enUS",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[192786] = {
"Qalashi Plunderer",
"Neltharus",
"enUS",
},
[157467] = {
"Void Ascendant",
"Ny'alotha, the Waking City",
"enUS",
},
[186644] = {
"Leymor",
"The Azure Vault",
"enUS",
},
[216333] = {
"Bloodstained Assistant",
"Ara-Kara, City of Echoes",
"enUS",
},
[204560] = {
"Incorporeal Being",
"Neltharus",
"enUS",
},
[192787] = {
"Qalashi Spinecrusher",
"Neltharus",
"enUS",
},
[94618] = {
"Cattwen",
"Hellfire Citadel",
"enUS",
},
[95642] = {
"Korvos",
"Hellfire Citadel",
"enUS",
},
[71328] = {
"Lieutenant Fuseblast",
"Naval Battle Scenario",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
"enUS",
},
[217870] = {
"Devouring Shade",
"Nightfall Sanctum",
"enUS",
},
[214287] = {
"Earth Burst Totem",
"The Stonevault",
"enUS",
},
[56915] = {
"Sun",
"Temple of the Jade Serpent",
"enUS",
},
[192789] = {
"Nokhud Longbow",
"The Nokhud Offensive",
"enUS",
},
[187159] = {
"Shrieking Whelp",
"The Azure Vault",
"enUS",
},
[216336] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[187160] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[216337] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[63570] = {
"Sra'thik Pool-Tender",
"Heart of Fear",
"enUS",
},
[197398] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[19632] = {
"Lykul Stinger",
"Coilfang: The Underbog",
"enUS",
},
[215826] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[216338] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[113048] = {
"Corrupted Deer",
"The Emerald Nightmare",
"enUS",
},
[61139] = {
"Shan-xi Watershaper",
"Mogu'shan Vaults",
"enUS",
},
[114584] = {
"Phantom Crew",
"Return to Karazhan",
"enUS",
},
[24687] = {
"Sunblade Physician",
"Magisters' Terrace",
"enUS",
},
[24815] = {
"Sunblade Imp",
"Magisters' Terrace",
"enUS",
},
[216340] = {
"Sentry Stagshell",
"Ara-Kara, City of Echoes",
"enUS",
},
[192794] = {
"Nokhud Beastmaster",
"The Nokhud Offensive",
"enUS",
},
[218388] = {
"Sewer Grate",
"Throne of Thunder",
"enUS",
},
[194330] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[59220] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[70308] = {
"Soul-Fed Construct",
"Throne of Thunder",
"enUS",
},
[64339] = {
"Instructor Tak'thok",
"Heart of Fear",
"enUS",
},
[163619] = {
"Zolramus Bonecarver",
"The Necrotic Wake",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
"enUS",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
},
[214296] = {
"Blade of the Anointed",
"Scarlet Monastery",
"enUS",
},
[120473] = {
"Tidescale Combatant",
"Tomb of Sargeras",
"enUS",
},
[216856] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[113307] = {
"Chronowraith",
"The Nighthold",
"enUS",
},
[81315] = {
"Iron Crack-Shot",
"Blackrock Foundry",
"enUS",
},
[15929] = {
"Stalagg",
"Naxxramas",
"enUS",
},
[16025] = {
"Stitched Giant",
"Naxxramas",
"enUS",
},
[16057] = {
"Rotting Maggot",
"Naxxramas",
"enUS",
},
[64340] = {
"Instructor Maltik",
"Heart of Fear",
"enUS",
},
[155433] = {
"Void-Touched Emissary",
"Freehold",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
"enUS",
},
[113052] = {
"Dreadguard",
"The Nighthold",
"enUS",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[77477] = {
"Marak the Blooded",
"Blackrock Foundry",
"enUS",
},
[20465] = {
"Underbog Frenzy",
"Coilfang: The Underbog",
"enUS",
},
[24688] = {
"Wretched Skulker",
"Magisters' Terrace",
"enUS",
},
[212765] = {
"Void Bound Despoiler",
"The Stonevault",
"enUS",
},
[221979] = {
"Void Bound Howler",
"The Stonevault",
"enUS",
},
[93858] = {
"Hulking Berserker",
"Hellfire Citadel",
"enUS",
},
[192803] = {
"War Ohuna",
"The Nokhud Offensive",
"enUS",
},
[70824] = {
"Fiery Anger",
"Heart of the Old God Scenario",
"enUS",
},
[64341] = {
"Instructor Zarik",
"Heart of Fear",
"enUS",
},
[456183] = {
"Explorers' League Rope",
"Tak-Rethan Abyss",
"enUS",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
"enUS",
},
[61398] = {
"Xin the Weaponmaster",
"Mogu'shan Palace",
"enUS",
},
[186151] = {
"Balakar Khan",
"The Nokhud Offensive",
"enUS",
},
[79015] = {
"Ko'ragh",
"Highmaul",
"enUS",
},
[120477] = {
"Deep Stalker",
"Tomb of Sargeras",
"enUS",
},
[124828] = {
"Argus the Unmaker",
"Antorus, the Burning Throne",
"enUS",
},
[80551] = {
"Shard of Tectus",
"Highmaul",
"enUS",
},
[186664] = {
"Stonevault Ambusher",
"Uldaman: Legacy of Tyr",
"enUS",
},
[195878] = {
"Ukhel Beastcaller",
"The Nokhud Offensive",
"enUS",
},
[59479] = {
"Yan-Zhu the Uncasked",
"Stormstout Brewery",
"enUS",
},
[60375] = {
"Zandalari Skullcharger",
"Mogu'shan Vaults",
"enUS",
},
[213795] = {
"Stormstout Secrets",
"Stormstout Brewery",
"enUS",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
"enUS",
},
[24689] = {
"Wretched Bruiser",
"Magisters' Terrace",
"enUS",
},
[61783] = {
"Crypt Guardian",
"Crypt of Forgotten Kings",
"enUS",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
"enUS",
},
[62807] = {
"Hungry Virmen",
"Brewmoon Festival",
"enUS",
},
[63191] = {
"Garalon",
"Heart of Fear",
"enUS",
},
[17395] = {
"Shadowmoon Summoner",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[59480] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[70060] = {
"Shadowed Voodoo Spirit",
"Throne of Thunder",
"enUS",
},
[156980] = {
"Essence of Void",
"Ny'alotha, the Waking City",
"enUS",
},
[112290] = {
"Horrid Eagle",
"The Emerald Nightmare",
"enUS",
},
[114338] = {
"Mana Confluence",
"Return to Karazhan",
"enUS",
},
[86185] = {
"Night-Twisted Supplicant",
"Highmaul",
"enUS",
},
[31216] = {
"Schuerkí",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[112803] = {
"Astrologer Jarin",
"The Nighthold",
"enUS",
},
[117154] = {
"Razorjaw Acolyte",
"Tomb of Sargeras",
"enUS",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
},
[15930] = {
"Feugen",
"Naxxramas",
"enUS",
},
[91305] = {
"Fel Iron Summoner",
"Hellfire Citadel",
"enUS",
},
[120482] = {
"Tidescale Seacaller",
"Tomb of Sargeras",
"enUS",
},
[112804] = {
"Trained Shadescale",
"The Nighthold",
"enUS",
},
[216363] = {
"Reinforced Drone",
"Ara-Kara, City of Echoes",
"enUS",
},
[24690] = {
"Wretched Husk",
"Magisters' Terrace",
"enUS",
},
[216364] = {
"Blood Overseer",
"Ara-Kara, City of Echoes",
"enUS",
},
[336432] = {
"Lavish Refreshment Table",
"Brackenhide Hollow",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
"enUS",
},
[80557] = {
"Mote of Tectus",
"Highmaul",
"enUS",
},
[76974] = {
"Franzok",
"Blackrock Foundry",
"enUS",
},
[216365] = {
"Winged Carrier",
"Ara-Kara, City of Echoes",
"enUS",
},
[77231] = {
"Enforcer Sorka",
"Blackrock Foundry",
"enUS",
},
[90284] = {
"Iron Reaver",
"Hellfire Citadel",
"enUS",
},
[205618] = {
"Thorak Greenscale",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[112039] = {
"Screeching Spiderling",
"The Emerald Nightmare",
"enUS",
},
[146753] = {
"Kul Tiran Marine",
"Battle of Dazar'alor",
},
[205619] = {
"Sarek Cinderbreath",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[212786] = {
"Voidrider",
"The Rookery",
"enUS",
},
[205620] = {
"Malgosa Spellbinder",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[218417] = {
"Displacement Pad",
"Throne of Thunder",
"enUS",
},
[111528] = {
"Deathroot Ancient",
"The Emerald Nightmare",
"enUS",
},
[80048] = {
"Vul'gor",
"Highmaul",
"enUS",
},
[218418] = {
"Displacement Pad",
"Throne of Thunder",
"enUS",
},
[56924] = {
"Inflamed Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[78001] = {
"Cloudburst Totem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205622] = {
"Krono Sandtongue",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[184124] = {
"Sentinel Talondras",
"Uldaman: Legacy of Tyr",
"enUS",
},
[33890] = {
"Brain of Yogg-Saron",
"Ulduar",
"enUS",
},
[205623] = {
"Drazos Blackwing",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[113321] = {
"Shambling Hungerer",
"The Nighthold",
"enUS",
},
[59100] = {
"Expired Test Subject",
"Scholomance",
"enUS",
},
[184125] = {
"Chrono-Lord Deios",
"Uldaman: Legacy of Tyr",
"enUS",
},
[210231] = {
"Tainted Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[17653] = {
"Shadowmoon Channeler",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[56541] = {
"Master Snowdrift",
"Shado-Pan Monastery",
"enUS",
},
[214840] = {
"Engorged Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[212793] = {
"Void Ascendant",
"The Rookery",
"enUS",
},
[189247] = {
"Tamed Phoenix",
"Neltharus",
"enUS",
},
[165189] = {
"Sul'raka",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205628] = {
"Twisted Elementium",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[211259] = {
"Iron Gate",
"Scholomance",
"enUS",
},
[67255] = {
"Darkhatched Shaman",
"Dagger in the Dark",
"enUS",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[211260] = {
"Iron Gate",
"Scholomance",
"enUS",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[67256] = {
"Darkhatched Oracle",
"Dagger in the Dark",
"enUS",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
"enUS",
},
[58590] = {
"Scarlet Zealot",
"Scarlet Monastery",
"enUS",
},
[17398] = {
"Nascent Fel Orc",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[59614] = {
"Bored Student",
"Scholomance",
"enUS",
},
[415296] = {
"Repair Kit",
"Tak-Rethan Abyss",
"enUS",
},
[67257] = {
"Darkhatched Skulker",
"Dagger in the Dark",
"enUS",
},
[184134] = {
"Scavenging Leaper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[121004] = {
"Razorjaw Myrmidon",
"Tomb of Sargeras",
"enUS",
},
[181575] = {
"Naxxramas Portal",
"Naxxramas",
"enUS",
},
[56927] = {
"Hozen Party Animal",
"Stormstout Brewery",
"enUS",
},
[114350] = {
"Shade of Medivh",
"Return to Karazhan",
"enUS",
},
[181576] = {
"Naxxramas Portal",
"Naxxramas",
"enUS",
},
[194373] = {
"Witherling",
"Brackenhide Hollow",
"enUS",
},
[211777] = {
"Spitfire Fusetender",
"Kriegval's Rest",
"enUS",
},
[67258] = {
"Darkhatched Skinflayer",
"Dagger in the Dark",
"enUS",
},
[87989] = {
"Forgemistress Flamehand",
"Blackrock Foundry",
"enUS",
},
[71865] = {
"Garrosh Hellscream",
"Siege of Orgrimmar",
"enUS",
},
[104881] = {
"Spellblade Aluriel",
"The Nighthold",
"enUS",
},
[165197] = {
"Skeletal Monstrosity",
"The Necrotic Wake",
},
[105393] = {
"Il'gynoth",
"The Emerald Nightmare",
"enUS",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59359] = {
"Flesh Horror",
"Scholomance",
"enUS",
},
[59487] = {
"Bubble Shield",
"Stormstout Brewery",
"enUS",
},
[214338] = {
"Kobyss Spearfisher",
"Tak-Rethan Abyss",
"enUS",
},
[70586] = {
"Eternal Guardian",
"Throne of Thunder",
"enUS",
},
[67259] = {
"Darkhatched Flesh-hunter",
"Dagger in the Dark",
"enUS",
},
[193352] = {
"Hextrick Totem",
"Brackenhide Hollow",
"enUS",
},
[105906] = {
"Eye of Il'gynoth",
"The Emerald Nightmare",
"enUS",
},
[192329] = {
"Territorial Eagle",
"Algeth'ar Academy",
"enUS",
},
[213828] = {
"Candleclaw Pyromancer",
"New Candle, New Hope",
"enUS",
},
[226625] = {
"Cave Skipper",
"Tak-Rethan Abyss",
"enUS",
},
[70587] = {
"Shale Stalker",
"Throne of Thunder",
"enUS",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[213829] = {
"Candleclaw Soilseer",
"New Candle, New Hope",
"enUS",
},
[59360] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[213830] = {
"Candleclaw Kobold",
"New Candle, New Hope",
"enUS",
},
[220485] = {
"Peculiar Nerubian",
"The Spiral Weave",
"enUS",
},
[233282] = {
"Refreshment Table",
"Heart of the Old God Scenario",
"enUS",
},
[213831] = {
"Candleclaw Underboss",
"New Candle, New Hope",
"enUS",
},
[214343] = {
"Kobyss Trickster",
"Tak-Rethan Abyss",
"enUS",
},
[56929] = {
"Krik'thik Protectorate",
"Gate of the Setting Sun",
"enUS",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
"enUS",
},
[90296] = {
"Soulbound Construct",
"Hellfire Citadel",
"enUS",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[163157] = {
"Amarth",
"The Necrotic Wake",
},
[213833] = {
"Candleclaw Knight",
"New Candle, New Hope",
"enUS",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
"enUS",
},
[390748] = {
"Challenger's Cache",
"Neltharus",
"enUS",
},
[15932] = {
"Gluth",
"Naxxramas",
"enUS",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[16028] = {
"Patchwerk",
"Naxxramas",
"enUS",
},
[390750] = {
"Challenger's Cache",
"Uldaman: Legacy of Tyr",
"enUS",
},
[204109] = {
"Cavernous Shrieker",
"Kriegval's Rest",
"enUS",
},
[16124] = {
"Unrelenting Trainee",
"Naxxramas",
"enUS",
},
[16156] = {
"Dark Touched Warrior",
"Naxxramas",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
"enUS",
},
[194896] = {
"Primal Stormshield",
"The Nokhud Offensive",
"enUS",
},
[191313] = {
"Bubbling Sapling",
"The Azure Vault",
"enUS",
},
[93881] = {
"Contracted Engineer",
"Hellfire Citadel",
"enUS",
},
[192337] = {
"Void Tendril",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189266] = {
"Qalashi Trainee",
"Neltharus",
"enUS",
},
[214348] = {
"Undersea Abomination",
"Tak-Rethan Abyss",
"enUS",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
"enUS",
},
[67264] = {
"Broodmaster Noshi",
"Dagger in the Dark",
"enUS",
},
[121011] = {
"Tidescale Witch",
"Tomb of Sargeras",
"enUS",
},
[58722] = {
"Lilian Voss",
"Scholomance",
"enUS",
},
[194898] = {
"Primalist Arcblade",
"The Nokhud Offensive",
"enUS",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
"enUS",
},
[185685] = {
"Urh Relic",
"Sanguine Depths",
},
[64353] = {
"Set'thik Gale-Slicer",
"Heart of Fear",
"enUS",
},
[60386] = {
"Zandalari Terror Rider",
"Mogu'shan Vaults",
"enUS",
},
[114614] = {
"Kvaldir Spiritrender",
"Trial of Valor",
"enUS",
},
[190294] = {
"Nokhud Stormcaster",
"The Nokhud Offensive",
"enUS",
},
[207186] = {
"Unruly Stormrook",
"The Rookery",
"enUS",
},
[67266] = {
"Rak'gor Bloodrazor",
"Dagger in the Dark",
"enUS",
},
[205651] = {
"Bubbling Slime",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[77504] = {
"Slag Behemoth",
"Blackrock Foundry",
"enUS",
},
[163678] = {
"Clotted Corruption",
"Ny'alotha, the Waking City",
"enUS",
},
[70594] = {
"Mist Lurker",
"Throne of Thunder",
"enUS",
},
[116407] = {
"Harjatan",
"Tomb of Sargeras",
"enUS",
},
[211284] = {
"Lever",
"Gate of the Setting Sun",
"enUS",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
"enUS",
},
[185691] = {
"Vicious Hyena",
"Brackenhide Hollow",
"enUS",
},
[70595] = {
"Frostmane Prowler",
"Blood in the Snow",
"enUS",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
"enUS",
},
[68036] = {
"Durumu the Forgotten",
"Throne of Thunder",
"enUS",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
"enUS",
},
[188252] = {
"Melidrussa Chillworn",
"Ruby Life Pools",
"enUS",
},
[205656] = {
"Sundered Chemist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[64355] = {
"Kor'thik Silentwing",
"Heart of Fear",
"enUS",
},
[104636] = {
"Cenarius",
"The Emerald Nightmare",
"enUS",
},
[68037] = {
"Darkhatched Screecher",
"Dagger in the Dark",
"enUS",
},
[18105] = {
"Ghaz'an",
"Coilfang: The Underbog",
"enUS",
},
[186206] = {
"Cruel Bonecrusher",
"Brackenhide Hollow",
"enUS",
},
[170850] = {
"Raging Bloodhorn",
"Theater of Pain",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
"enUS",
},
[70341] = {
"Tormented Spirit",
"Throne of Thunder",
"enUS",
},
[211289] = {
"Taener Duelmal",
"Priory of the Sacred Flame",
"enUS",
},
[187231] = {
"Wither Biter",
"Brackenhide Hollow",
"enUS",
},
[441966] = {
"Moldy Chest",
"Mycomancer Cavern",
"enUS",
},
[186208] = {
"Rotbow Ranger",
"Brackenhide Hollow",
"enUS",
},
[211290] = {
"Elaena Emberlanz",
"Priory of the Sacred Flame",
"enUS",
},
[212826] = {
"Guard Captain Suleyman",
"Priory of the Sacred Flame",
"enUS",
},
[213338] = {
"Forgebound Mender",
"The Stonevault",
"enUS",
},
[197982] = {
"Storm Warrior",
"Ruby Life Pools",
"enUS",
},
[211291] = {
"Sergeant Shaynemail",
"Priory of the Sacred Flame",
"enUS",
},
[16061] = {
"Instructor Razuvious",
"Naxxramas",
"enUS",
},
[212827] = {
"High Priest Aemya",
"Priory of the Sacred Flame",
"enUS",
},
[384641] = {
"Portal to Valdrakken",
"Brackenhide Hollow",
"enUS",
},
[207197] = {
"Cursed Rookguard",
"The Rookery",
"enUS",
},
[162664] = {
"Aqir Swarmer",
"Ny'alotha, the Waking City",
"enUS",
},
[114364] = {
"Mana-Gorged Wyrm",
"Return to Karazhan",
"enUS",
},
[118715] = {
"Reanimated Templar",
"Tomb of Sargeras",
"enUS",
},
[217435] = {
"Master Machinist Dunstan",
"Hall of Awakening",
"enUS",
},
[24696] = {
"Coilskar Witch",
"Magisters' Terrace",
"enUS",
},
[210781] = {
"Vault of Souls",
"Scholomance",
"enUS",
},
[207198] = {
"Cursed Thunderer",
"The Rookery",
"enUS",
},
[204127] = {
"Kobold Taskfinder",
"Kriegval's Rest",
"enUS",
},
[156523] = {
"Maut",
"Ny'alotha, the Waking City",
"enUS",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
"enUS",
},
[207199] = {
"Cursed Rooktender",
"The Rookery",
"enUS",
},
[73415] = {
"Ichor of Y'Shaarj",
"Siege of Orgrimmar",
"enUS",
},
[163690] = {
"Shath'Yar Scribe",
"Ny'alotha, the Waking City",
"enUS",
},
[59494] = {
"Yeasty Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[91331] = {
"Archimonde",
"Hellfire Citadel",
"enUS",
},
[71112] = {
"Quivering Blood",
"Heart of the Old God Scenario",
"enUS",
},
[64357] = {
"Kor'thik Swarmer",
"Heart of Fear",
"enUS",
},
[212831] = {
"Forge Master Damian",
"Priory of the Sacred Flame",
"enUS",
},
[213343] = {
"Forge Loader",
"The Stonevault",
"enUS",
},
[187238] = {
"Witherling",
"Brackenhide Hollow",
"enUS",
},
[61670] = {
"Sik'thik Demolisher",
"Siege of Niuzao Temple",
"enUS",
},
[111295] = {
"Domesticated Manasaber",
"The Nighthold",
"enUS",
},
[207202] = {
"Void Fragment",
"The Rookery",
"enUS",
},
[232284] = {
"Mailbox",
"SMV Alliance Garrison Level 2",
"enUS",
},
[121021] = {
"Shadowsworn Invader",
"Tomb of Sargeras",
"enUS",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
"enUS",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
"enUS",
},
[69834] = {
"Lightning Guardian",
"Throne of Thunder",
"enUS",
},
[94916] = {
"Fel Touched Seer",
"Hellfire Citadel",
"enUS",
},
[119742] = {
"Felguard Invader",
"Tomb of Sargeras",
"enUS",
},
[64358] = {
"Set'thik Tempest",
"Heart of Fear",
"enUS",
},
[212835] = {
"Risen Footman",
"Priory of the Sacred Flame",
"enUS",
},
[113088] = {
"Corrupted Feeler",
"The Emerald Nightmare",
"enUS",
},
[121790] = {
"Fleetlord Dominator",
"Tomb of Sargeras",
"enUS",
},
[207205] = {
"Stormguard Gorren",
"The Rookery",
"enUS",
},
[187242] = {
"Tarasek Looter",
"The Azure Vault",
"enUS",
},
[114624] = {
"Arcane Warden",
"Return to Karazhan",
"enUS",
},
[24697] = {
"Sister of Torment",
"Magisters' Terrace",
"enUS",
},
[33134] = {
"Sara",
"Ulduar",
"enUS",
},
[206694] = {
"Fervent Sharpshooter",
"Priory of the Sacred Flame",
"enUS",
},
[205671] = {
"Shadow Additive",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[207207] = {
"Voidstone Monstrosity",
"The Rookery",
"enUS",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[212838] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[205672] = {
"Flame Additive",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59752] = {
"Shado-Pan Ambusher",
"Shado-Pan Monastery",
"enUS",
},
[206696] = {
"Arathi Knight",
"Priory of the Sacred Flame",
"enUS",
},
[17723] = {
"Bog Giant",
"Coilfang: The Underbog",
"enUS",
},
[212327] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[205673] = {
"Sundered Devourer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[206697] = {
"Devout Priest",
"Priory of the Sacred Flame",
"enUS",
},
[187246] = {
"Nullmagic Hornswog",
"The Azure Vault",
"enUS",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
"enUS",
},
[201579] = {
"Magmorax",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[206698] = {
"Fanatical Conjuror",
"Priory of the Sacred Flame",
"enUS",
},
[113091] = {
"Tainted Plainstrider",
"The Emerald Nightmare",
"enUS",
},
[206699] = {
"War Lynx",
"Priory of the Sacred Flame",
"enUS",
},
[211306] = {
"Fiery Vines",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[59241] = {
"Scarlet Treasurer",
"Scarlet Halls",
"enUS",
},
[114627] = {
"Shrieking Terror",
"Return to Karazhan",
"enUS",
},
[63592] = {
"Set'thik Gustwing",
"Heart of Fear",
"enUS",
},
[186737] = {
"Telash Greywing",
"The Azure Vault",
"enUS",
},
[16126] = {
"Unrelenting Rider",
"Naxxramas",
"enUS",
},
[113092] = {
"Swarming Dread",
"The Emerald Nightmare",
"enUS",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[186738] = {
"Umbrelskul",
"The Azure Vault",
"enUS",
},
[114628] = {
"Skeletal Waiter",
"Return to Karazhan",
"enUS",
},
[24698] = {
"Ethereum Smuggler",
"Magisters' Terrace",
"enUS",
},
[33136] = {
"Guardian of Yogg-Saron",
"Ulduar",
"enUS",
},
[186227] = {
"Monstrous Decay",
"Brackenhide Hollow",
"enUS",
},
[186739] = {
"Azureblade",
"The Azure Vault",
"enUS",
},
[189299] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[215405] = {
"Anub'zekt",
"Ara-Kara, City of Echoes",
"enUS",
},
[208239] = {
"Skittering Menace",
"Earthcrawl Mines",
"enUS",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
"enUS",
},
[63593] = {
"Set'thik Zephyrian",
"Heart of Fear",
"enUS",
},
[206704] = {
"Ardent Paladin",
"Priory of the Sacred Flame",
"enUS",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
"enUS",
},
[120516] = {
"Razorjaw Swiftfin",
"Tomb of Sargeras",
"enUS",
},
[214383] = {
"Cache of Pure Energy",
"Mogu'shan Vaults",
"enUS",
},
[206705] = {
"Arathi Footman",
"Priory of the Sacred Flame",
"enUS",
},
[215407] = {
"Ki'katal the Harvester",
"Ara-Kara, City of Echoes",
"enUS",
},
[208241] = {
"Ankle Biter",
"Earthcrawl Mines",
"enUS",
},
[163708] = {
"Umbral Gatekeeper",
"Ny'alotha, the Waking City",
"enUS",
},
[451226] = {
"Unraveling Sands",
"Shado-Pan Monastery",
"enUS",
},
[423585] = {
"Ironfuse Bomb",
"Hall of Awakening",
"enUS",
},
[111303] = {
"Nightborne Sage",
"The Nighthold",
"enUS",
},
[208242] = {
"Nerubian Darkcaster",
"Earthcrawl Mines",
"enUS",
},
[213873] = {
"Waxy Globule",
"New Candle, New Hope",
"enUS",
},
[210290] = {
"Firelands Flameguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[208243] = {
"Nerubian Slasher",
"Earthcrawl Mines",
"enUS",
},
[63594] = {
"Coagulated Amber",
"Heart of Fear",
"enUS",
},
[94924] = {
"Iron Peon",
"Hellfire Citadel",
"enUS",
},
[208244] = {
"Nerubian Threadmancer",
"Earthcrawl Mines",
"enUS",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[214387] = {
"Cache of Pure Energy",
"Mogu'shan Vaults",
"enUS",
},
[208245] = {
"Skittering Swarmer",
"Earthcrawl Mines",
"enUS",
},
[163712] = {
"Dying Voidspawn",
"Ny'alotha, the Waking City",
"enUS",
},
[210293] = {
"Firelands Destroyer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[206710] = {
"Lightspawn",
"Priory of the Sacred Flame",
"enUS",
},
[162689] = {
"Surgeon Stitchflesh",
"The Necrotic Wake",
},
[210294] = {
"Flamespreader",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[243566] = {
"Sargerei Warspoils",
"Hellfire Citadel",
"enUS",
},
[118728] = {
"Ghastly Bonewarden",
"Tomb of Sargeras",
"enUS",
},
[210295] = {
"Flamewaker Infernoguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[211319] = {
"Relief Bucket",
"Stormstout Brewery",
"enUS",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
},
[60396] = {
"Emperor's Rage",
"Mogu'shan Vaults",
"enUS",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
},
[162692] = {
"Amarth",
"The Necrotic Wake",
},
[114634] = {
"Undying Servant",
"Return to Karazhan",
"enUS",
},
[165764] = {
"Rockbound Vanquisher",
"Castle Nathria",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
},
[58605] = {
"Scarlet Judicator",
"Scarlet Monastery",
"enUS",
},
[202108] = {
"Djaradin Dragonhunter",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[122313] = {
"Zuraal the Ascended",
"Seat of the Triumvirate",
"enUS",
},
[216441] = {
"Pale Illusion",
"Tak-Rethan Abyss",
"enUS",
},
[59373] = {
"Scarlet Pupil",
"Scarlet Halls",
"enUS",
},
[59501] = {
"Reanimated Corpse",
"Scholomance",
"enUS",
},
[202109] = {
"Djaradin Commander",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[16063] = {
"Sir Zeliek",
"Naxxramas",
"enUS",
},
[60397] = {
"Emperor's Strength",
"Mogu'shan Vaults",
"enUS",
},
[116939] = {
"Fallen Avatar",
"Tomb of Sargeras",
"enUS",
},
[213883] = {
"Dripear the Waxy",
"New Candle, New Hope",
"enUS",
},
[114636] = {
"Phantom Guardsman",
"Return to Karazhan",
"enUS",
},
[398015] = {
"Doodad_Icecrown_ThroneFrostyWind01",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[173447] = {
"Mushroom Mine",
"Plaguefall",
},
[196482] = {
"Overgrown Ancient",
"Algeth'ar Academy",
"enUS",
},
[63597] = {
"Coagulated Amber",
"Heart of Fear",
"enUS",
},
[63853] = {
"Zar'thik Supplicant",
"Heart of Fear",
"enUS",
},
[17726] = {
"Wrathfin Myrmidon",
"Coilfang: The Underbog",
"enUS",
},
[220029] = {
"Gearsweep",
"Hall of Awakening",
"enUS",
},
[60398] = {
"Emperor's Courage",
"Mogu'shan Vaults",
"enUS",
},
[68313] = {
"Roaming Fog",
"Throne of Thunder",
"enUS",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[204162] = {
"Ashbeard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[18430] = {
"Ethereal Apprentice",
"Auchindoun: Mana-Tombs",
"enUS",
},
[213888] = {
"Taran Zhu's Personal Stash",
"Shado-Pan Monastery",
"enUS",
},
[113103] = {
"Corrupted Swoop",
"The Emerald Nightmare",
"enUS",
},
[80599] = {
"Night-Twisted Earthwarper",
"Highmaul",
"enUS",
},
[114639] = {
"Kvaldir Reefcaller",
"Trial of Valor",
"enUS",
},
[59503] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[91349] = {
"Mannoroth",
"Hellfire Citadel",
"enUS",
},
[60143] = {
"Gara'jal the Spiritbinder",
"Mogu'shan Vaults",
"enUS",
},
[60399] = {
"Qin-xi",
"Mogu'shan Vaults",
"enUS",
},
[444098] = {
"Webbed Chest",
"The Spiral Weave",
"enUS",
},
[16447] = {
"Plagued Ghoul",
"Naxxramas",
"enUS",
},
[59632] = {
"Champion Sithiss",
"A Brewing Storm",
"enUS",
},
[17727] = {
"Wrathfin Sentry",
"Coilfang: The Underbog",
"enUS",
},
[60400] = {
"Jan-xi",
"Mogu'shan Vaults",
"enUS",
},
[113106] = {
"Sickly Cougar",
"The Emerald Nightmare",
"enUS",
},
[81114] = {
"Gronnling Laborer",
"Blackrock Foundry",
"enUS",
},
[18431] = {
"Ethereal Beacon",
"Auchindoun: Mana-Tombs",
"enUS",
},
[209801] = {
"Quartermaster Koratite",
"The Rookery",
"enUS",
},
[161173] = {
"Abyssal Watcher",
"Ny'alotha, the Waking City",
"enUS",
},
[112595] = {
"Shal'dorei Archmage",
"The Nighthold",
"enUS",
},
[58737] = {
"Viletongue Raider",
"A Brewing Storm",
"enUS",
},
[3977] = {
"High Inquisitor Whitemane",
"Scarlet Monastery",
"enUS",
},
[160663] = {
"Essence of Nightmare",
"Ny'alotha, the Waking City",
"enUS",
},
[271099] = {
"Spoils of the Legion's Fall",
"Tomb of Sargeras",
"enUS",
},
[16064] = {
"Thane Korth'azz",
"Naxxramas",
"enUS",
},
[116691] = {
"Belac",
"Tomb of Sargeras",
"enUS",
},
[60913] = {
"Energy Charge",
"Mogu'shan Vaults",
"enUS",
},
[122322] = {
"Famished Broken",
"Seat of the Triumvirate",
"enUS",
},
[122578] = {
"Kin'garoth",
"Antorus, the Burning Throne",
"enUS",
},
[114900] = {
"Gripping Tentacle",
"Trial of Valor",
"enUS",
},
[87515] = {
"Iron Flame Binder",
"Blackrock Foundry",
"enUS",
},
[87771] = {
"Slagshop Worker",
"Blackrock Foundry",
"enUS",
},
[58738] = {
"Viletongue Skirmisher",
"A Brewing Storm",
"enUS",
},
[81117] = {
"Karnor the Cruel",
"Blackrock Foundry",
"enUS",
},
[217485] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[17728] = {
"Murkblood Tribesman",
"Coilfang: The Underbog",
"enUS",
},
[162715] = {
"Fanatical Cultist",
"Ny'alotha, the Waking City",
"enUS",
},
[60402] = {
"Zandalari Fire-Dancer",
"Mogu'shan Vaults",
"enUS",
},
[115115] = {
"Coldmist Stalker",
"Return to Karazhan",
"enUS",
},
[69131] = {
"Frost King Malakk",
"Throne of Thunder",
"enUS",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
},
[70798] = {
"Kor'kron Emberguard",
"The Secrets of Ragefire",
"enUS",
},
[60043] = {
"Jade Guardian",
"Mogu'shan Vaults",
"enUS",
},
[56717] = {
"Hoptallus",
"Stormstout Brewery",
"enUS",
},
[94894] = {
"Keen-Eyed Gronnstalker",
"Hellfire Citadel",
"enUS",
},
[66181] = {
"Zar'thik Supplicant",
"Heart of Fear",
"enUS",
},
[114541] = {
"Spectral Patron",
"Return to Karazhan",
"enUS",
},
[67457] = {
"Darkhatched Swarmling",
"Dagger in the Dark",
"enUS",
},
[24560] = {
"Priestess Delrissa",
"Magisters' Terrace",
"enUS",
},
[162717] = {
"Sinister Soulcarver",
"Ny'alotha, the Waking City",
"enUS",
},
[211135] = {
"Sliding Door",
"Stormstout Brewery",
"enUS",
},
[120789] = {
"Lieutenant Silvermight",
"Tomb of Sargeras",
"enUS",
},
[69905] = {
"Gurubashi Berserker",
"Throne of Thunder",
"enUS",
},
[156575] = {
"Dark Inquisitor Xanesh",
"Ny'alotha, the Waking City",
"enUS",
},
[58739] = {
"Borokhula the Destroyer",
"A Brewing Storm",
"enUS",
},
[159514] = {
"Blood of Ny'alotha",
"Ny'alotha, the Waking City",
"enUS",
},
[72929] = {
"Sra'thik Amber-Master",
"Siege of Orgrimmar",
"enUS",
},
[162718] = {
"Iron-Willed Enforcer",
"Ny'alotha, the Waking City",
"enUS",
},
[77687] = {
"Grom'kar Man-at-Arms",
"Blackrock Foundry",
"enUS",
},
[237452] = {
"Iron Horde Chest",
"Blackrock Foundry",
"enUS",
},
[114532] = {
"Bonespeaker Soulbinder",
"Trial of Valor",
"enUS",
},
[82399] = {
"Ogron Earthshaker",
"Highmaul",
"enUS",
},
[33966] = {
"Crusher Tentacle",
"Ulduar",
"enUS",
},
[157354] = {
"Vexiona",
"Ny'alotha, the Waking City",
"enUS",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
},
[162719] = {
"Void Ascendant",
"Ny'alotha, the Waking City",
"enUS",
},
[104154] = {
"Gul'dan",
"The Nighthold",
"enUS",
},
[106087] = {
"Elerethe Renferal",
"The Emerald Nightmare",
"enUS",
},
[61247] = {
"Glintrok Greenhorn",
"Mogu'shan Palace",
"enUS",
},
[17397] = {
"Shadowmoon Adept",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[214419] = {
"Void Cursed Crusher",
"The Rookery",
"enUS",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
"enUS",
},
[61623] = {
"Sap Globule",
"Siege of Niuzao Temple",
"enUS",
},
[72154] = {
"Desecrated Weapon",
"Siege of Orgrimmar",
"enUS",
},
[234615] = {
"Chair",
"SMV Alliance Garrison Level 2",
"enUS",
},
[302854] = {
"Portal to Boralus",
"Ny'alotha, the Waking City",
"enUS",
},
[15978] = {
"Crypt Reaver",
"Naxxramas",
"enUS",
},
[82400] = {
"Ogron Brute",
"Highmaul",
"enUS",
},
[16017] = {
"Patchwork Golem",
"Naxxramas",
"enUS",
},
[157602] = {
"Drest'agath",
"Ny'alotha, the Waking City",
"enUS",
},
[16056] = {
"Diseased Maggot",
"Naxxramas",
"enUS",
},
[433777] = {
"Summoning Portal",
"Mogu'shan Vaults",
"enUS",
},
[56862] = {
"Drunken Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[207740] = {
"Gnarled Lasher",
"Kriegval's Rest",
"enUS",
},
[18315] = {
"Ethereal Theurgist",
"Auchindoun: Mana-Tombs",
"enUS",
},
[113113] = {
"Essence of Nightmare",
"The Emerald Nightmare",
"enUS",
},
[214421] = {
"Coalescing Void Diffuser",
"The Rookery",
"enUS",
},
[56764] = {
"Consuming Sha",
"Shado-Pan Monastery",
"enUS",
},
[58683] = {
"Scarlet Myrmidon",
"Scarlet Halls",
"enUS",
},
[67691] = {
"Corrupted Swarmling",
"Dagger in the Dark",
"enUS",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
"enUS",
},
[63031] = {
"Set'thik Fanatic",
"Heart of Fear",
"enUS",
},
[115417] = {
"Rat",
"Return to Karazhan",
"enUS",
},
[189340] = {
"Chargath, Bane of Scales",
"Neltharus",
"enUS",
},
[59764] = {
"Healing Tide Totem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[91103] = {
"Felfire Demolisher",
"Hellfire Citadel",
"enUS",
},
[17729] = {
"Murkblood Spearman",
"Coilfang: The Underbog",
"enUS",
},
[87520] = {
"Animated Slag",
"Blackrock Foundry",
"enUS",
},
[197509] = {
"Primal Thundercloud",
"Ruby Life Pools",
"enUS",
},
[93023] = {
"Siegemaster Mar'tak",
"Hellfire Citadel",
"enUS",
},
[105304] = {
"Dominator Tentacle",
"The Emerald Nightmare",
"enUS",
},
[82532] = {
"Krush",
"Highmaul",
"enUS",
},
[93068] = {
"Xhul'horac",
"Hellfire Citadel",
"enUS",
},
[113626] = {
"Venomous Spiderling",
"The Emerald Nightmare",
"enUS",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
},
[61242] = {
"Glintrok Ironhide",
"Mogu'shan Palace",
"enUS",
},
[207468] = {
"Gnarled Reviver",
"Mycomancer Cavern",
"enUS",
},
[210288] = {
"Ancient Core Hound",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[185534] = {
"Bonebolt Hunter",
"Brackenhide Hollow",
"enUS",
},
[86612] = {
"Spore Shooter",
"Highmaul",
"enUS",
},
[115418] = {
"Spider",
"Return to Karazhan",
"enUS",
},
[60240] = {
"Spirit Totem",
"Mogu'shan Vaults",
"enUS",
},
[60731] = {
"Undying Shadows",
"Mogu'shan Vaults",
"enUS",
},
[87521] = {
"Iron Slag-Shaper",
"Blackrock Foundry",
"enUS",
},
[116689] = {
"Atrigan",
"Tomb of Sargeras",
"enUS",
},
[112603] = {
"Terrace Grove-Tender",
"The Nighthold",
"enUS",
},
[24559] = {
"Warlord Salaris",
"Magisters' Terrace",
"enUS",
},
[70232] = {
"Muckbat",
"Throne of Thunder",
"enUS",
},
[186740] = {
"Arcane Construct",
"The Azure Vault",
"enUS",
},
[93913] = {
"Fel Scorcher",
"Hellfire Citadel",
"enUS",
},
[114260] = {
"Mrrgria",
"Return to Karazhan",
"enUS",
},
[16021] = {
"Living Monstrosity",
"Naxxramas",
"enUS",
},
[224663] = {
"Mesmerized Flyer",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[168357] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[214649] = {
"Ancient Mogu Vault",
"Mogu'shan Palace",
"enUS",
},
[115419] = {
"Ancient Tome",
"Return to Karazhan",
"enUS",
},
[169893] = {
"Nefarious Darkspeaker",
"Theater of Pain",
},
[70663] = {
"Embercore",
"The Secrets of Ragefire",
"enUS",
},
[16065] = {
"Lady Blaumeux",
"Naxxramas",
"enUS",
},
[64947] = {
"Mogu'shan Warden",
"Mogu'shan Vaults",
"enUS",
},
[201320] = {
"Rashok",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[202971] = {
"Null Glimmer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
"enUS",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
"enUS",
},
[90114] = {
"Iron Dragoon",
"Hellfire Citadel",
"enUS",
},
[69383] = {
"Quivering Blob",
"Throne of Thunder",
"enUS",
},
[70683] = {
"Dark Shaman Xorenth",
"The Secrets of Ragefire",
"enUS",
},
[69351] = {
"Greater Cave Bat",
"Throne of Thunder",
"enUS",
},
[72966] = {
"Resonating Amber",
"Siege of Orgrimmar",
"enUS",
},
[114637] = {
"Spectral Sentry",
"Return to Karazhan",
"enUS",
},
[63312] = {
"Jol'Grum",
"Arena of Annihilation",
"enUS",
},
[79200] = {
"Blackrock Forge Specialist",
"Blackrock Foundry",
"enUS",
},
[63313] = {
"Little Liuyang",
"Arena of Annihilation",
"enUS",
},
[72927] = {
"Kovok",
"Siege of Orgrimmar",
"enUS",
},
[179821] = {
"Commander Zo'far",
"Tazavesh, the Veiled Market",
},
[104528] = {
"High Botanist Tel'arn",
"The Nighthold",
"enUS",
},
[104415] = {
"Chronomatic Anomaly",
"The Nighthold",
"enUS",
},
[16037] = {
"Plagued Bat",
"Naxxramas",
"enUS",
},
[70240] = {
"Shan'ze Celestial Shaper",
"Throne of Thunder",
"enUS",
},
[62837] = {
"Grand Empress Shek'zeer",
"Heart of Fear",
"enUS",
},
[93154] = {
"Gorebound Crone",
"Hellfire Citadel",
"enUS",
},
[58998] = {
"Scarlet Defender",
"Scarlet Halls",
"enUS",
},
[67681] = {
"Kor'kron Bodyguard",
"Dagger in the Dark",
"enUS",
},
[69352] = {
"Vampiric Cave Bat",
"Throne of Thunder",
"enUS",
},
[198872] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[164266] = {
"Domina Venomblade",
"Plaguefall",
},
[208478] = {
"Volcoross",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[78233] = {
"Darkshard Crystalback",
"Blackrock Foundry",
"enUS",
},
[157612] = {
"Eye of Drest'agath",
"Ny'alotha, the Waking City",
"enUS",
},
[17730] = {
"Murkblood Healer",
"Coilfang: The Underbog",
"enUS",
},
[93952] = {
"Fel Raven",
"Hellfire Citadel",
"enUS",
},
[87780] = {
"Slagshop Brute",
"Blackrock Foundry",
"enUS",
},
[167536] = {
"Harugia the Bloodthirsty",
"Theater of Pain",
},
[56439] = {
"Sha of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[114632] = {
"Spectral Attendant",
"Return to Karazhan",
"enUS",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
"enUS",
},
[157613] = {
"Maw of Drest'agath",
"Ny'alotha, the Waking City",
"enUS",
},
[390747] = {
"Challenger's Cache",
"Brackenhide Hollow",
"enUS",
},
[33985] = {
"Corruptor Tentacle",
"Ulduar",
"enUS",
},
[80409] = {
"Markog Aba'dir",
"Blackrock Foundry",
"enUS",
},
[218961] = {
"Starved Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[61814] = {
"Jin Ironfist",
"Crypt of Forgotten Kings",
"enUS",
},
[111071] = {
"Pulsauron",
"The Nighthold",
"enUS",
},
[94947] = {
"Fel-Starved Trainee",
"Hellfire Citadel",
"enUS",
},
[157614] = {
"Tentacle of Drest'agath",
"Ny'alotha, the Waking City",
"enUS",
},
[91648] = {
"Somber Guardian",
"Hellfire Citadel",
"enUS",
},
[108360] = {
"Acidmaw Scorpid",
"The Nighthold",
"enUS",
},
[71401] = {
"Proto-Drake Whelp",
"The Secrets of Ragefire",
"enUS",
},
[114633] = {
"Spectral Valet",
"Return to Karazhan",
"enUS",
},
[93391] = {
"Captured Prisoner",
"Hellfire Citadel",
"enUS",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[113093] = {
"Infected Gazelle",
"The Emerald Nightmare",
"enUS",
},
[93156] = {
"Eredar Faithbreaker",
"Hellfire Citadel",
"enUS",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[73095] = {
"Blackfuse Engineer",
"Siege of Orgrimmar",
"enUS",
},
[200926] = {
"Igira the Cruel",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[72964] = {
"Goro'dan",
"Siege of Orgrimmar",
"enUS",
},
[71329] = {
"Lieutenant Boltblaster",
"Naval Battle Scenario",
"enUS",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
},
[179944] = {
"Meeting Stone Summoning Portal",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[116549] = {
"Backup Singer",
"Return to Karazhan",
"enUS",
},
[70236] = {
"Zandalari Storm-Caller",
"Throne of Thunder",
"enUS",
},
[254243] = {
"Observatory Door",
"The Nighthold",
"enUS",
},
[94804] = {
"Shambling Hulk",
"Hellfire Citadel",
"enUS",
},
[79068] = {
"Iron Grunt",
"Highmaul",
"enUS",
},
[87448] = {
"Ironworker",
"Blackrock Foundry",
"enUS",
},
[161251] = {
"Cultist Sycophant",
"Ny'alotha, the Waking City",
"enUS",
},
[209230] = {
"Kyrioss",
"The Rookery",
"enUS",
},
[194389] = {
"Lava Spawn",
"Neltharus",
"enUS",
},
[213834] = {
"Candleclaw Mole",
"New Candle, New Hope",
"enUS",
},
[57080] = {
"Corrupted Scroll",
"Temple of the Jade Serpent",
"enUS",
},
[114625] = {
"Phantom Guest",
"Return to Karazhan",
"enUS",
},
[85711] = {
"Aquatic Technician",
"Blackrock Foundry",
"enUS",
},
[62254] = {
"Quilen Watcher",
"Crypt of Forgotten Kings",
"enUS",
},
[94693] = {
"Siegeworks Technician",
"Hellfire Citadel",
"enUS",
},
[213577] = {
"Spitfire Charger",
"Kriegval's Rest",
"enUS",
},
[208459] = {
"Fiery Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[113089] = {
"Defiled Keeper",
"The Emerald Nightmare",
"enUS",
},
[69078] = {
"Sul the Sandcrawler",
"Throne of Thunder",
"enUS",
},
[212389] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[214350] = {
"Turned Speaker",
"The Stonevault",
"enUS",
},
[62711] = {
"Amber Monstrosity",
"Heart of Fear",
"enUS",
},
[205735] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[78801] = {
"Darkshard Acidback",
"Blackrock Foundry",
"enUS",
},
[186284] = {
"Gutchewer Bear",
"Brackenhide Hollow",
"enUS",
},
[16243] = {
"Plague Slime",
"Naxxramas",
"enUS",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
"enUS",
},
[211277] = {
"Coffer of Forgotten Souls",
"Scholomance",
"enUS",
},
[122847] = {
"Umbral Priestess",
"Tomb of Sargeras",
"enUS",
},
[159224] = {
"Gryth'ax the Executioner",
"Ny'alotha, the Waking City",
"enUS",
},
[205736] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[70179] = {
"Ritual Guard",
"Throne of Thunder",
"enUS",
},
[157620] = {
"Prophet Skitra",
"Ny'alotha, the Waking City",
"enUS",
},
[17731] = {
"Fen Ray",
"Coilfang: The Underbog",
"enUS",
},
[416398] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[113090] = {
"Corrupted Gatewarden",
"The Emerald Nightmare",
"enUS",
},
[191311] = {
"Infinite Whelp",
"Uldaman: Legacy of Tyr",
"enUS",
},
[92391] = {
"Gorebound Bloodletter",
"Hellfire Citadel",
"enUS",
},
[205737] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214439] = {
"Corrupted Oracle",
"The Rookery",
"enUS",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
"enUS",
},
[85225] = {
"Gorian Sorcerer",
"Highmaul",
"enUS",
},
[112718] = {
"Sidereal Familiar",
"The Nighthold",
"enUS",
},
[73452] = {
"Harbinger of Y'Shaarj",
"Siege of Orgrimmar",
"enUS",
},
[17381] = {
"The Maker",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[118460] = {
"Engine of Souls",
"Tomb of Sargeras",
"enUS",
},
[111075] = {
"Chaotoid",
"The Nighthold",
"enUS",
},
[111331] = {
"Lurking Horror",
"The Emerald Nightmare",
"enUS",
},
[71123] = {
"Echo of Y'Shaarj",
"Heart of the Old God Scenario",
"enUS",
},
[16125] = {
"Unrelenting Death Knight",
"Naxxramas",
"enUS",
},
[205644] = {
"Oozing Sludge",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[70227] = {
"Skittering Spiderling",
"Throne of Thunder",
"enUS",
},
[94663] = {
"Grand Corruptor U'rogg",
"Hellfire Citadel",
"enUS",
},
[160182] = {
"Void Initiate",
"Ny'alotha, the Waking City",
"enUS",
},
[68078] = {
"Iron Qon",
"Throne of Thunder",
"enUS",
},
[90316] = {
"Shadow-Lord Iskar",
"Hellfire Citadel",
"enUS",
},
[164185] = {
"Echelon",
"Halls of Atonement",
},
[59309] = {
"Obedient Hound",
"Scarlet Halls",
"enUS",
},
[111933] = {
"Venomous Spiderling",
"The Emerald Nightmare",
"enUS",
},
[221158] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[71504] = {
"Siegecrafter Blackfuse",
"Siege of Orgrimmar",
"enUS",
},
[160183] = {
"Void Fanatic",
"Ny'alotha, the Waking City",
"enUS",
},
[76877] = {
"Gruul",
"Blackrock Foundry",
"enUS",
},
[61399] = {
"Glintrok Scout",
"Mogu'shan Palace",
"enUS",
},
[63106] = {
"Sik'thik Swarmer",
"Siege of Niuzao Temple",
"enUS",
},
[16034] = {
"Plague Beast",
"Naxxramas",
"enUS",
},
[214251] = {
"Kobyss Witherer",
"Tak-Rethan Abyss",
"enUS",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[68079] = {
"Ro'shak",
"Throne of Thunder",
"enUS",
},
[60793] = {
"Celestial Protector",
"Mogu'shan Vaults",
"enUS",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
},
[214443] = {
"Crystal Shard",
"The Stonevault",
"enUS",
},
[69712] = {
"Ji-Kun",
"Throne of Thunder",
"enUS",
},
[205638] = {
"Sundered Flame Banner",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[162744] = {
"Nekthara the Mangler",
"Theater of Pain",
},
[221160] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[122850] = {
"Umbral Guard",
"Tomb of Sargeras",
"enUS",
},
[176565] = {
"Disruptive Patron",
"Tazavesh, the Veiled Market",
},
[94697] = {
"Siegeworks Technician",
"Hellfire Citadel",
"enUS",
},
[111333] = {
"Taintheart Trickster",
"The Emerald Nightmare",
"enUS",
},
[61945] = {
"Gurthan Iron Maw",
"Mogu'shan Palace",
"enUS",
},
[59544] = {
"The Nodding Tiger",
"Temple of the Jade Serpent",
"enUS",
},
[187315] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[71407] = {
"Amber",
"Siege of Orgrimmar",
"enUS",
},
[181578] = {
"Naxxramas Portal",
"Naxxramas",
"enUS",
},
[217516] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[68080] = {
"Quet'zal",
"Throne of Thunder",
"enUS",
},
[198869] = {
"Sundered Devastator",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[93162] = {
"Umbral Supplicant",
"Hellfire Citadel",
"enUS",
},
[59801] = {
"Krik'thik Wind Shaper",
"Gate of the Setting Sun",
"enUS",
},
[182607] = {
"Proximity Bomb",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[61442] = {
"Kuai the Brute",
"Mogu'shan Palace",
"enUS",
},
[122851] = {
"Umbral Archer",
"Tomb of Sargeras",
"enUS",
},
[217517] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[114361] = {
"Hymdall",
"Trial of Valor",
"enUS",
},
[91627] = {
"Felfire Brazier",
"Hellfire Citadel",
"enUS",
},
[85245] = {
"Night-Twisted Ritualist",
"Highmaul",
"enUS",
},
[17732] = {
"Lykul Wasp",
"Coilfang: The Underbog",
"enUS",
},
[71152] = {
"Skeer the Bloodseeker",
"Siege of Orgrimmar",
"enUS",
},
[120158] = {
"Volatile Corruption",
"Tomb of Sargeras",
"enUS",
},
[60410] = {
"Elegon",
"Mogu'shan Vaults",
"enUS",
},
[217518] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[68081] = {
"Dam'ren",
"Throne of Thunder",
"enUS",
},
[303148] = {
"Soulwell",
"Magisters' Terrace",
"enUS",
},
[59545] = {
"The Golden Beetle",
"Temple of the Jade Serpent",
"enUS",
},
[17370] = {
"Laughing Skull Enforcer",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[59372] = {
"Scarlet Scholar",
"Scarlet Halls",
"enUS",
},
[93931] = {
"Gorebound Felcaster",
"Hellfire Citadel",
"enUS",
},
[61434] = {
"Sik'thik Vanguard",
"Siege of Niuzao Temple",
"enUS",
},
[217519] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[61946] = {
"Harthak Stormcaller",
"Mogu'shan Palace",
"enUS",
},
[218543] = {
"Feather of Ji-Kun",
"Throne of Thunder",
"enUS",
},
[405286] = {
"Torn Page",
"Return to Karazhan",
"enUS",
},
[30085] = {
"Vigilant Shade",
"Naxxramas",
"enUS",
},
[71153] = {
"Hisek the Swarmkeeper",
"Siege of Orgrimmar",
"enUS",
},
[16194] = {
"Unholy Axe",
"Naxxramas",
"enUS",
},
[69069] = {
"Living Fluid",
"Throne of Thunder",
"enUS",
},
[111350] = {
"Skittering Shadows",
"The Emerald Nightmare",
"enUS",
},
[193462] = {
"Batak",
"The Nokhud Offensive",
"enUS",
},
[61929] = {
"Sik'thik Amber-Weaver",
"Siege of Niuzao Temple",
"enUS",
},
[15954] = {
"Noth the Plaguebringer",
"Naxxramas",
"enUS",
},
[80071] = {
"Bladespire Sorcerer",
"Highmaul",
"enUS",
},
[59242] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[59293] = {
"Scarlet Cannoneer",
"Scarlet Halls",
"enUS",
},
[181577] = {
"Naxxramas Portal",
"Naxxramas",
"enUS",
},
[61418] = {
"Crypt Guardian",
"Crypt of Forgotten Kings",
"enUS",
},
[60009] = {
"Feng the Accursed",
"Mogu'shan Vaults",
"enUS",
},
[59771] = {
"Zombified Corpse",
"Scarlet Monastery",
"enUS",
},
[78832] = {
"Grom'kar Man-at-Arms",
"Blackrock Foundry",
"enUS",
},
[205309] = {
"Overlord Mechagon",
"10.1.5 Time Rifts - Robot (A.Z.E.R.O.T.H.)",
"enUS",
},
[71154] = {
"Ka'roz the Locust",
"Siege of Orgrimmar",
"enUS",
},
[212403] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[61928] = {
"Sik'thik Guardian",
"Siege of Niuzao Temple",
"enUS",
},
[159764] = {
"Jesh'ra",
"Ny'alotha, the Waking City",
"enUS",
},
[113128] = {
"Withered Skulker",
"The Nighthold",
"enUS",
},
[59369] = {
"Doctor Theolen Krastinov",
"Scholomance",
"enUS",
},
[413563] = {
"|cff1EFF00Heavy Trunk",
"Kriegval's Rest",
"enUS",
},
[61947] = {
"Kargesh Ribcrusher",
"Mogu'shan Palace",
"enUS",
},
[341820] = {
"Vault of the Black Empire",
"Ny'alotha, the Waking City",
"enUS",
},
[65402] = {
"Gurthan Swiftblade",
"Mogu'shan Palace",
"enUS",
},
[33288] = {
"Yogg-Saron",
"Ulduar",
"enUS",
},
[209333] = {
"Gnarlroot",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[111081] = {
"Fulminant",
"The Nighthold",
"enUS",
},
[161217] = {
"Aqir Skitterer",
"Ny'alotha, the Waking City",
"enUS",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
},
[58108] = {
"Krik'thik Infiltrator",
"Gate of the Setting Sun",
"enUS",
},
[71155] = {
"Korven the Prime",
"Siege of Orgrimmar",
"enUS",
},
[212405] = {
"Aspiring Forgehand",
"The Stonevault",
"enUS",
},
[92142] = {
"Blademaster Jubei'thos",
"Hellfire Citadel",
"enUS",
},
[210481] = {
"Fine Chair",
"Scarlet Halls",
"enUS",
},
[92330] = {
"Soul of Socrethar",
"Hellfire Citadel",
"enUS",
},
[161218] = {
"Aqir Crusher",
"Ny'alotha, the Waking City",
"enUS",
},
[58876] = {
"Starving Hound",
"Scarlet Halls",
"enUS",
},
[157461] = {
"Mycelial Cyst",
"Ny'alotha, the Waking City",
"enUS",
},
[59368] = {
"Krastinovian Carver",
"Scholomance",
"enUS",
},
[24761] = {
"Brightscale Wyrm",
"Magisters' Terrace",
"enUS",
},
[192955] = {
"Draconic Illusion",
"The Azure Vault",
"enUS",
},
[86256] = {
"Gorian High Sorcerer",
"Highmaul",
"enUS",
},
[210172] = {
"Zaqali Juggernaut",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[17724] = {
"Underbat",
"Coilfang: The Underbog",
"enUS",
},
[121473] = {
"Coercitor Nixa",
"Tomb of Sargeras",
"enUS",
},
[220085] = {
"Strange Bowl of Dice",
"Naval Battle Scenario",
"enUS",
},
[71156] = {
"Kaz'tik the Manipulator",
"Siege of Orgrimmar",
"enUS",
},
[196559] = {
"Volatile Sapling",
"The Azure Vault",
"enUS",
},
[120808] = {
"Lylth the Silent",
"Tomb of Sargeras",
"enUS",
},
[58856] = {
"Haunting Sha",
"Temple of the Jade Serpent",
"enUS",
},
[16036] = {
"Frenzied Bat",
"Naxxramas",
"enUS",
},
[92911] = {
"Hulking Berserker",
"Hellfire Citadel",
"enUS",
},
[60033] = {
"Frenzied Spirit",
"Scarlet Monastery",
"enUS",
},
[157254] = {
"Tek'ris",
"Ny'alotha, the Waking City",
"enUS",
},
[18309] = {
"Ethereal Scavenger",
"Auchindoun: Mana-Tombs",
"enUS",
},
[159417] = {
"Demented Knife-Twister",
"Ny'alotha, the Waking City",
"enUS",
},
[61436] = {
"Sik'thik Bladedancer",
"Siege of Niuzao Temple",
"enUS",
},
[114922] = {
"Dark Seraph",
"Trial of Valor",
"enUS",
},
[157253] = {
"Ka'zir",
"Ny'alotha, the Waking City",
"enUS",
},
[189886] = {
"Blazebound Firestorm",
"Ruby Life Pools",
"enUS",
},
[125590] = {
"Antoran Felguard",
"Antorus, the Burning Throne",
"enUS",
},
[59751] = {
"Shado-Pan Warden",
"Shado-Pan Monastery",
"enUS",
},
[71157] = {
"Xaril the Poisoned Mind",
"Siege of Orgrimmar",
"enUS",
},
[73414] = {
"Kor'kron Reaper",
"Siege of Orgrimmar",
"enUS",
},
[92144] = {
"Dia Darkwhisper",
"Hellfire Citadel",
"enUS",
},
[94779] = {
"Sovokk",
"Hellfire Citadel",
"enUS",
},
[135246] = {
"\"Stabby\" Lottie",
"Skittering Hollow (Islands 5)",
},
[61341] = {
"Mounted Mogu",
"Mogu'shan Vaults",
"enUS",
},
[59303] = {
"Houndmaster Braun",
"Scarlet Halls",
"enUS",
},
[260526] = {
"Spoils",
"Trial of Valor",
"enUS",
},
[201261] = {
"Kazzara, the Hellforged",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[87229] = {
"Iron Blood Mage",
"Highmaul",
"enUS",
},
[112671] = {
"Duskwatch Battle-Magus",
"The Nighthold",
"enUS",
},
[213434] = {
"Sporbit",
"Mycomancer Cavern",
"enUS",
},
[16193] = {
"Skeletal Smith",
"Naxxramas",
"enUS",
},
[159305] = {
"Maddened Conscript",
"Ny'alotha, the Waking City",
"enUS",
},
[16067] = {
"Deathcharger Steed",
"Naxxramas",
"enUS",
},
[111852] = {
"Rothos",
"The Emerald Nightmare",
"enUS",
},
[71158] = {
"Rik'kal the Dissector",
"Siege of Orgrimmar",
"enUS",
},
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
"enUS",
},
[405307] = {
"Demonic Gateway",
"Antorus, the Burning Throne",
"enUS",
},
[16163] = {
"Death Knight Cavalier",
"Naxxramas",
"enUS",
},
[59175] = {
"Master Archer",
"Scarlet Halls",
"enUS",
},
[88818] = {
"Security Guard",
"Blackrock Foundry",
"enUS",
},
[219066] = {
"Afflicted Civilian",
"The Rookery",
"enUS",
},
[189232] = {
"Kokia Blazehoof",
"Ruby Life Pools",
"enUS",
},
[157475] = {
"Synthesis Growth",
"Ny'alotha, the Waking City",
"enUS",
},
[77557] = {
"Admiral Gar'an",
"Blackrock Foundry",
"enUS",
},
[59551] = {
"Bopper",
"Stormstout Brewery",
"enUS",
},
[61565] = {
"Quilen Statue",
"Crypt of Forgotten Kings",
"enUS",
},
[219149] = {
"Deranged Skardyn",
"Hall of Awakening",
"enUS",
},
[15953] = {
"Grand Widow Faerlina",
"Naxxramas",
"enUS",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
},
[163621] = {
"Goregrind",
"The Necrotic Wake",
},
[62205] = {
"Wing Leader Ner'onok",
"Siege of Niuzao Temple",
"enUS",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[92146] = {
"Gurtogg Bloodboil",
"Hellfire Citadel",
"enUS",
},
[67832] = {
"Corrupted Darkhatched Slayer",
"Dagger in the Dark",
"enUS",
},
[202278] = {
"Orb of Naxxramas",
"Naxxramas",
"enUS",
},
[192791] = {
"Nokhud Warspear",
"The Nokhud Offensive",
"enUS",
},
[16385] = {
"Lightning Totem",
"Naxxramas",
"enUS",
},
[266483] = {
"Gift of the Nightborne",
"The Nighthold",
"enUS",
},
[59518] = {
"Bloated Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[85748] = {
"Iron Mauler",
"Blackrock Foundry",
"enUS",
},
[17414] = {
"Shadowmoon Technician",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[217533] = {
"Atik",
"Ara-Kara, City of Echoes",
"enUS",
},
[189471] = {
"Qalashi Blacksmith",
"Neltharus",
"enUS",
},
[30083] = {
"Marauding Geist",
"Naxxramas",
"enUS",
},
[17735] = {
"Wrathfin Warrior",
"Coilfang: The Underbog",
"enUS",
},
[17734] = {
"Underbog Lord",
"Coilfang: The Underbog",
"enUS",
},
[71160] = {
"Iyyokuk the Lucid",
"Siege of Orgrimmar",
"enUS",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[105322] = {
"Deathglare Tentacle",
"The Emerald Nightmare",
"enUS",
},
[17990] = {
"Underbog Mushroom",
"Coilfang: The Underbog",
"enUS",
},
[189893] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[88820] = {
"Furnace Engineer",
"Blackrock Foundry",
"enUS",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
"enUS",
},
[259592] = {
"Chair",
"Return to Karazhan",
"enUS",
},
[93233] = {
"Lord Aram'el",
"Hellfire Citadel",
"enUS",
},
[200131] = {
"Sha-Touched Guardian",
"Temple of the Jade Serpent",
"enUS",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
"enUS",
},
[162103] = {
"Executor Tarvold",
"Sanguine Depths",
},
[127723] = {
"Imperator Deconix",
"Antorus, the Burning Throne",
"enUS",
},
[161229] = {
"Aqir Venomweaver",
"Ny'alotha, the Waking City",
"enUS",
},
[95408] = {
"Anetheron",
"Hellfire Citadel",
"enUS",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
"enUS",
},
[71161] = {
"Kil'ruk the Wind-Reaver",
"Siege of Orgrimmar",
"enUS",
},
[59684] = {
"Hozen Party Animal",
"Stormstout Brewery",
"enUS",
},
[60708] = {
"Meng the Demented",
"Mogu'shan Vaults",
"enUS",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[201668] = {
"Neltharion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[88821] = {
"Bellows Operator",
"Blackrock Foundry",
"enUS",
},
[212764] = {
"Engine Speaker",
"The Stonevault",
"enUS",
},
[246148] = {
"Heart of the Overlord",
"Dreadscar Rift",
"enUS",
},
[163891] = {
"Rotmarrow Slime",
"Plaguefall",
},
[111405] = {
"Shadow Pounder",
"The Emerald Nightmare",
"enUS",
},
[157238] = {
"Prophet Skitra",
"Ny'alotha, the Waking City",
"enUS",
},
[59519] = {
"Stout Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[213954] = {
"Rock Smasher",
"The Stonevault",
"enUS",
},
[127724] = {
"Fanatical Pyromancer",
"Antorus, the Burning Throne",
"enUS",
},
[70589] = {
"Cavern Burrower",
"Throne of Thunder",
"enUS",
},
[111856] = {
"Guardian Gorroc",
"The Emerald Nightmare",
"enUS",
},
[195875] = {
"Desecrated Bakar",
"The Nokhud Offensive",
"enUS",
},
[61567] = {
"Vizier Jin'bak",
"Siege of Niuzao Temple",
"enUS",
},
[114360] = {
"Hyrja",
"Trial of Valor",
"enUS",
},
[56448] = {
"Wise Mari",
"Temple of the Jade Serpent",
"enUS",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[277355] = {
"The Pantheon's Bounty",
"Antorus, the Burning Throne",
"enUS",
},
[95282] = {
"Azgalor",
"Hellfire Citadel",
"enUS",
},
[72954] = {
"Kor'thik Honor Guard",
"Siege of Orgrimmar",
"enUS",
},
[220437] = {
"Overseer Kaskel",
"The Spiral Weave",
"enUS",
},
[63521] = {
"Disturbed Saurok",
"Brewmoon Festival",
"enUS",
},
[214551] = {
"Wandering Gutter",
"Tak-Rethan Abyss",
"enUS",
},
[455489] = {
"|cff1EFF00Sturdy Chest",
"Kriegval's Rest",
"enUS",
},
[67263] = {
"Darkhatched Lizard-Lord",
"Dagger in the Dark",
"enUS",
},
[127725] = {
"Felblade Shocktrooper",
"Antorus, the Burning Throne",
"enUS",
},
[216341] = {
"Jabbing Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[69821] = {
"Thunder Lord",
"Throne of Thunder",
"enUS",
},
[440229] = {
"Minecart",
"The Stonevault",
"enUS",
},
[86326] = {
"Breaker Ritualist",
"Highmaul",
"enUS",
},
[59746] = {
"Scarlet Centurion",
"Scarlet Monastery",
"enUS",
},
[15936] = {
"Heigan the Unclean",
"Naxxramas",
"enUS",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[61250] = {
"Sorcerer Mogu",
"Mogu'shan Vaults",
"enUS",
},
[161746] = {
"Ossirat",
"Ny'alotha, the Waking City",
"enUS",
},
[85240] = {
"Night-Twisted Soothsayer",
"Highmaul",
"enUS",
},
[15952] = {
"Maexxna",
"Naxxramas",
"enUS",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
"enUS",
},
[111398] = {
"Nightmare Amalgamation",
"The Emerald Nightmare",
"enUS",
},
[217541] = {
"Nightfall Initiate",
"Nightfall Sanctum",
"enUS",
},
[63743] = {
"Dirty Virmen",
"Brewmoon Festival",
"enUS",
},
[63519] = {
"Water Spirit",
"Brewmoon Festival",
"enUS",
},
[61345] = {
"Mogu Archer",
"Mogu'shan Vaults",
"enUS",
},
[111858] = {
"Guardian Rurson",
"The Emerald Nightmare",
"enUS",
},
[219148] = {
"Skardyn Metamorphosis",
"Hall of Awakening",
"enUS",
},
[155434] = {
"Emissary of the Tides",
"Freehold",
},
[168393] = {
"Plaguebelcher",
"Plaguefall",
},
[204188] = {
"Tomb-Raider Drywhisker",
"Kriegval's Rest",
"enUS",
},
[222149] = {
"Injured Earthen",
"The Stonevault",
"enUS",
},
[189901] = {
"Warlord Sargha",
"Neltharus",
"enUS",
},
[199719] = {
"Nokhud Wardog",
"The Nokhud Offensive",
"enUS",
},
[85241] = {
"Night-Twisted Brute",
"Highmaul",
"enUS",
},
[18311] = {
"Ethereal Crypt Raider",
"Auchindoun: Mana-Tombs",
"enUS",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
"enUS",
},
[216582] = {
"Kx",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[165430] = {
"Malignant Spawn",
"Plaguefall",
},
[16127] = {
"Spectral Trainee",
"Naxxramas",
"enUS",
},
[214277] = {
"The Dark Grimoire",
"Scholomance",
"enUS",
},
[92913] = {
"Gorebound Berserker",
"Hellfire Citadel",
"enUS",
},
[17725] = {
"Underbog Lurker",
"Coilfang: The Underbog",
"enUS",
},
[77692] = {
"Kromog",
"Blackrock Foundry",
"enUS",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
"enUS",
},
[114923] = {
"Shatterbone Skeleton",
"Trial of Valor",
"enUS",
},
[195851] = {
"Ukhel Deathspeaker",
"The Nokhud Offensive",
"enUS",
},
[60381] = {
"Zandalari Infiltrator",
"Mogu'shan Vaults",
"enUS",
},
[111980] = {
"Nightmother",
"The Emerald Nightmare",
"enUS",
},
[161312] = {
"Crushing Tendril",
"Ny'alotha, the Waking City",
"enUS",
},
[59613] = {
"Professor Slate",
"Scholomance",
"enUS",
},
[73904] = {
"Kor'kron Iron Sentinel",
"Siege of Orgrimmar",
"enUS",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[30071] = {
"Stitched Colossus",
"Naxxramas",
"enUS",
},
[59521] = {
"Bubbling Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[159303] = {
"Monstrous Behemoth",
"Ny'alotha, the Waking City",
"enUS",
},
[63872] = {
"Batu",
"Arena of Annihilation",
"enUS",
},
[17826] = {
"Swamplord Musel'ek",
"Coilfang: The Underbog",
"enUS",
},
[111860] = {
"Bo'lan the Marked",
"The Emerald Nightmare",
"enUS",
},
[111004] = {
"Gelatinized Decay",
"The Emerald Nightmare",
"enUS",
},
[87719] = {
"Ogron Hauler",
"Blackrock Foundry",
"enUS",
},
[192464] = {
"Raging Ember",
"Neltharus",
"enUS",
},
[16164] = {
"Shade of Naxxramas",
"Naxxramas",
"enUS",
},
[81779] = {
"Ogron Mauler",
"Highmaul",
"enUS",
},
[56706] = {
"Krik'thik Bombardier",
"Gate of the Setting Sun",
"enUS",
},
[59240] = {
"Scarlet Hall Guardian",
"Scarlet Halls",
"enUS",
},
[85243] = {
"Void Aberration",
"Highmaul",
"enUS",
},
[17477] = {
"Hellfire Imp",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[69375] = {
"Hidden Fog",
"Throne of Thunder",
"enUS",
},
[18331] = {
"Ethereal Darkcaster",
"Auchindoun: Mana-Tombs",
"enUS",
},
[114932] = {
"Deepbrine Monstrosity",
"Trial of Valor",
"enUS",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[61340] = {
"Glintrok Hexxer",
"Mogu'shan Palace",
"enUS",
},
[178133] = {
"Murkbrine Wavejumper",
"Tazavesh, the Veiled Market",
},
[70448] = {
"Ancient Python",
"Throne of Thunder",
"enUS",
},
[17371] = {
"Shadowmoon Warlock",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[84859] = {
"Iron Cleaver",
"Blackrock Foundry",
"enUS",
},
[61339] = {
"Glintrok Oracle",
"Mogu'shan Palace",
"enUS",
},
[56877] = {
"Raigonn",
"Gate of the Setting Sun",
"enUS",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
"enUS",
},
[59804] = {
"Gripping Hatred",
"Shado-Pan Monastery",
"enUS",
},
[210894] = {
"Gold Coins",
"Scarlet Halls",
"enUS",
},
[89890] = {
"Fel Lord Zakuun",
"Hellfire Citadel",
"enUS",
},
[70224] = {
"Rotting Scavenger",
"Throne of Thunder",
"enUS",
},
[80676] = {
"Iron Flametwister",
"Blackrock Foundry",
"enUS",
},
[80422] = {
"Iron Marksman",
"Blackrock Foundry",
"enUS",
},
[59522] = {
"Sudsy Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
},
[59778] = {
"Krik'thik Striker",
"Gate of the Setting Sun",
"enUS",
},
[69927] = {
"Zandalari Prelate",
"Throne of Thunder",
"enUS",
},
[455510] = {
"|cff1EFF00Sturdy Chest",
"Kriegval's Rest",
"enUS",
},
[112118] = {
"Tainted Bloodpetal",
"The Emerald Nightmare",
"enUS",
},
[71591] = {
"Automated Shredder",
"Siege of Orgrimmar",
"enUS",
},
[212400] = {
"Void Touched Elemental",
"The Stonevault",
"enUS",
},
[455511] = {
"|cff1EFF00Sturdy Chest",
"Kriegval's Rest",
"enUS",
},
[70276] = {
"No'ku Stormsayer",
"Throne of Thunder",
"enUS",
},
[15977] = {
"Poisonous Skitterer",
"Naxxramas",
"enUS",
},
[73767] = {
"Kor'kron Shredder",
"Siege of Orgrimmar",
"enUS",
},
[93435] = {
"Felfire Transporter",
"Hellfire Citadel",
"enUS",
},
[18312] = {
"Ethereal Spellbinder",
"Auchindoun: Mana-Tombs",
"enUS",
},
[158041] = {
"N'Zoth the Corruptor",
"Ny'alotha, the Waking City",
"enUS",
},
[217039] = {
"Nerubian Hauler",
"Ara-Kara, City of Echoes",
"enUS",
},
[69232] = {
"Ball Lightning",
"Throne of Thunder",
"enUS",
},
[70822] = {
"Earthborn Hatred",
"Heart of the Old God Scenario",
"enUS",
},
[277381] = {
"Portal",
"Antorus, the Burning Throne",
"enUS",
},
[189363] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[61910] = {
"Resin Flake",
"Siege of Niuzao Temple",
"enUS",
},
[193457] = {
"Balara",
"The Nokhud Offensive",
"enUS",
},
[462141] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[64916] = {
"Kor'thik Swarmguard",
"Heart of Fear",
"enUS",
},
[19016] = {
"Hellfire Familiar",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[94617] = {
"Glynevere",
"Hellfire Citadel",
"enUS",
},
[59884] = {
"Fallen Crusader",
"Scarlet Monastery",
"enUS",
},
[16029] = {
"Sludge Belcher",
"Naxxramas",
"enUS",
},
[105721] = {
"Nightmare Ichor",
"The Emerald Nightmare",
"enUS",
},
[159425] = {
"Occult Shadowmender",
"Ny'alotha, the Waking City",
"enUS",
},
[17401] = {
"Felhound Manastalker",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[59223] = {
"Brother Korloff",
"Scarlet Monastery",
"enUS",
},
[118930] = {
"Ixallon the Soulbreaker",
"Tomb of Sargeras",
"enUS",
},
[185584] = {
"Blasphemy",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[127732] = {
"Clobex",
"Antorus, the Burning Throne",
"enUS",
},
[63318] = {
"Chagan Firehoof",
"Arena of Annihilation",
"enUS",
},
[67748] = {
"Darkhatched Sorcerer",
"Dagger in the Dark",
"enUS",
},
[61445] = {
"Haiyan the Unstoppable",
"Mogu'shan Palace",
"enUS",
},
[94018] = {
"Shadow Burster",
"Hellfire Citadel",
"enUS",
},
[71330] = {
"Lieutenant Fizzboil",
"Naval Battle Scenario",
"enUS",
},
[184303] = {
"Skittering Crawler",
"Uldaman: Legacy of Tyr",
"enUS",
},
[216487] = {
"Skardyn Remnants",
"Hall of Awakening",
"enUS",
},
[59605] = {
"Sodden Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[179386] = {
"Corsair Officer",
"Tazavesh, the Veiled Market",
},
[199659] = {
"Warlord Kagni",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[78237] = {
"Phemos",
"Highmaul",
"enUS",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[61699] = {
"Sik'thik Amberwing",
"Siege of Niuzao Temple",
"enUS",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[91646] = {
"Grim Collaborator",
"Hellfire Citadel",
"enUS",
},
[17624] = {
"Laughing Skull Warden",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[100497] = {
"Ursoc",
"The Emerald Nightmare",
"enUS",
},
[17400] = {
"Felguard Annihilator",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[78238] = {
"Pol",
"Highmaul",
"enUS",
},
[58756] = {
"Scarlet Evoker",
"Scarlet Halls",
"enUS",
},
[178142] = {
"Murkbrine Fishmancer",
"Tazavesh, the Veiled Market",
},
[205734] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[127235] = {
"Garothi Demolisher",
"Antorus, the Burning Throne",
"enUS",
},
[179388] = {
"Hourglass Tidesage",
"Tazavesh, the Veiled Market",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[122478] = {
"Void Discharge",
"Seat of the Triumvirate",
"enUS",
},
[71326] = {
"Lieutenant Parker",
"Naval Battle Scenario",
"enUS",
},
[111354] = {
"Taintheart Befouler",
"The Emerald Nightmare",
"enUS",
},
[265605] = {
"Sealed Tome",
"Return to Karazhan",
"enUS",
},
[207320] = {
"Hero's Call Board",
"SMV Alliance Garrison Level 2",
"enUS",
},
[216293] = {
"Trilling Attendant",
"Ara-Kara, City of Echoes",
"enUS",
},
[63569] = {
"Amber Searsting",
"Heart of Fear",
"enUS",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
"enUS",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[86609] = {
"Iron Warmaster",
"Highmaul",
"enUS",
},
[194108] = {
"Summoning Portal",
"Neltharus",
"enUS",
},
[70557] = {
"Zandalari Prophet",
"Throne of Thunder",
"enUS",
},
[122104] = {
"Portal Keeper Hasabel",
"Antorus, the Burning Throne",
"enUS",
},
[18313] = {
"Ethereal Sorcerer",
"Auchindoun: Mana-Tombs",
"enUS",
},
[127233] = {
"Flameweaver",
"Antorus, the Burning Throne",
"enUS",
},
[61444] = {
"Ming the Cunning",
"Mogu'shan Palace",
"enUS",
},
[200388] = {
"Malformed Sha",
"Temple of the Jade Serpent",
"enUS",
},
[61389] = {
"Kargesh Highguard",
"Mogu'shan Palace",
"enUS",
},
[111355] = {
"Taintheart Tormenter",
"The Emerald Nightmare",
"enUS",
},
[82528] = {
"Gorian Arcanist",
"Highmaul",
"enUS",
},
[59794] = {
"Krik'thik Disruptor",
"Gate of the Setting Sun",
"enUS",
},
[146409] = {
"Lady Jaina Proudmoore",
"Battle of Dazar'alor",
},
[297873] = {
"Titan's Cache",
"Ulduar",
"enUS",
},
[17399] = {
"Seductress",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[198874] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[58757] = {
"Scholomance Acolyte",
"Scholomance",
"enUS",
},
[62980] = {
"Imperial Vizier Zor'lok",
"Heart of Fear",
"enUS",
},
[198873] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
"enUS",
},
[69382] = {
"Malignant Ooze",
"Throne of Thunder",
"enUS",
},
[125545] = {
"Blazing Imp",
"Antorus, the Burning Throne",
"enUS",
},
[16060] = {
"Gothik the Harvester",
"Naxxramas",
"enUS",
},
[70463] = {
"Frostmane Snowstalker",
"Blood in the Snow",
"enUS",
},
[112596] = {
"Duskwatch Warden",
"The Nighthold",
"enUS",
},
[126333] = {
"Felseeker Ritualist",
"Antorus, the Burning Throne",
"enUS",
},
[455534] = {
"|cff1EFF00Sturdy Chest",
"Mycomancer Cavern",
"enUS",
},
[222923] = {
"Repurposed Loaderbot",
"The Stonevault",
"enUS",
},
[63568] = {
"Amber-Ridden Mushan",
"Heart of Fear",
"enUS",
},
[120449] = {
"Defensive Countermeasure",
"Tomb of Sargeras",
"enUS",
},
[16165] = {
"Necro Knight",
"Naxxramas",
"enUS",
},
[72198] = {
"Empowered Desecrated Weapon",
"Siege of Orgrimmar",
"enUS",
},
[94733] = {
"Felfire Demolisher",
"Hellfire Citadel",
"enUS",
},
[186338] = {
"Maruuk",
"The Nokhud Offensive",
"enUS",
},
[203230] = {
"Dragonfire Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[122367] = {
"Admiral Svirax",
"Antorus, the Burning Throne",
"enUS",
},
[118523] = {
"Huntress Kasparian",
"Tomb of Sargeras",
"enUS",
},
[192481] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[86275] = {
"Gorian Enforcer",
"Highmaul",
"enUS",
},
[61701] = {
"Sik'thik Warrior",
"Siege of Niuzao Temple",
"enUS",
},
[65522] = {
"Bubble Shield",
"Stormstout Brewery",
"enUS",
},
[186339] = {
"Teera",
"The Nokhud Offensive",
"enUS",
},
[111226] = {
"Summoner Xiv",
"The Nighthold",
"enUS",
},
[16506] = {
"Naxxramas Worshipper",
"Naxxramas",
"enUS",
},
[200913] = {
"Thadrion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[196577] = {
"Spellbound Battleaxe",
"Algeth'ar Academy",
"enUS",
},
[158328] = {
"Il'gynoth",
"Ny'alotha, the Waking City",
"enUS",
},
[114548] = {
"Rotsoul Giant",
"Trial of Valor",
"enUS",
},
[63311] = {
"Scar-Shell",
"Arena of Annihilation",
"enUS",
},
[76806] = {
"Heart of the Mountain",
"Blackrock Foundry",
"enUS",
},
[56658] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[195580] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[216541] = {
"Threadmaestro Fothis",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[120721] = {
"Lunar Archer",
"Tomb of Sargeras",
"enUS",
},
[159405] = {
"Aqir Scarab",
"Ny'alotha, the Waking City",
"enUS",
},
[17827] = {
"Claw",
"Coilfang: The Underbog",
"enUS",
},
[73098] = {
"Kor'kron Overseer",
"Siege of Orgrimmar",
"enUS",
},
[92554] = {
"Mek'barash",
"Hellfire Citadel",
"enUS",
},
[69388] = {
"Zandalari Spear-Shaper",
"Throne of Thunder",
"enUS",
},
[90269] = {
"Tyrant Velhari",
"Hellfire Citadel",
"enUS",
},
[120188] = {
"Wailing Soul",
"Tomb of Sargeras",
"enUS",
},
[112638] = {
"Astral Defender",
"The Nighthold",
"enUS",
},
[184019] = {
"Burly Rock-Thrower",
"Uldaman: Legacy of Tyr",
"enUS",
},
[16011] = {
"Loatheb",
"Naxxramas",
"enUS",
},
[111413] = {
"Dark Devourers",
"The Emerald Nightmare",
"enUS",
},
[61709] = {
"Spawn of Anger",
"Crypt of Forgotten Kings",
"enUS",
},
[90378] = {
"Kilrogg Deadeye",
"Hellfire Citadel",
"enUS",
},
[18314] = {
"Nexus Stalker",
"Auchindoun: Mana-Tombs",
"enUS",
},
[93955] = {
"Delusional Zealot",
"Hellfire Citadel",
"enUS",
},
[62691] = {
"Living Amber",
"Heart of Fear",
"enUS",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
"enUS",
},
[70153] = {
"Fungal Growth",
"Throne of Thunder",
"enUS",
},
[16168] = {
"Stoneskin Gargoyle",
"Naxxramas",
"enUS",
},
[70665] = {
"Kor'kron Dire Soldier",
"The Secrets of Ragefire",
"enUS",
},
[15931] = {
"Grobbulus",
"Naxxramas",
"enUS",
},
[111166] = {
"Resolute Courtesan",
"The Nighthold",
"enUS",
},
[216544] = {
"Sureki String Leader",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[59789] = {
"Thalnos the Soulrender",
"Scarlet Monastery",
"enUS",
},
[67093] = {
"Sik'thik Battle-Mender",
"Siege of Niuzao Temple",
"enUS",
},
[24561] = {
"Yazzai",
"Magisters' Terrace",
"enUS",
},
[416] = {
"Tarpit",
"Mogu'shan Vaults",
"enUS",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[73745] = {
"Kor'kron Iron Sentinel",
"Siege of Orgrimmar",
"enUS",
},
[16154] = {
"Risen Squire",
"Naxxramas",
"enUS",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
"enUS",
},
[23561] = {
"Soldier of the Frozen Wastes",
"Naxxramas",
"enUS",
},
[229854] = {
"Inquisitor Speaker",
"Nightfall Sanctum",
"enUS",
},
[94724] = {
"Bryanda",
"Hellfire Citadel",
"enUS",
},
[114334] = {
"Damaged Golem",
"Return to Karazhan",
"enUS",
},
[213835] = {
"Candleclaw Scrambler",
"New Candle, New Hope",
"enUS",
},
[61707] = {
"Abomination of Anger",
"Crypt of Forgotten Kings",
"enUS",
},
[115831] = {
"Mana Devourer",
"Return to Karazhan",
"enUS",
},
[61387] = {
"Quilen Guardian",
"Mogu'shan Palace",
"enUS",
},
[114811] = {
"Kvaldir Coral Maiden",
"Trial of Valor",
"enUS",
},
[229855] = {
"Shadeguard Speaker",
"Nightfall Sanctum",
"enUS",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[64902] = {
"Kor'thik Fleshrender",
"Heart of Fear",
"enUS",
},
[76809] = {
"Foreman Feldspar",
"Blackrock Foundry",
"enUS",
},
[113920] = {
"Flail of Il'gynoth",
"The Emerald Nightmare",
"enUS",
},
[122366] = {
"Varimathras",
"Antorus, the Burning Throne",
"enUS",
},
[220310] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
},
["indicator_scale"] = 1.039999961853027,
["aura_grow_direction"] = 1,
["indicator_anchor"] = {
["x"] = 0,
},
["health_selection_overlay_alpha"] = 0.199999988079071,
["minor_height_scale"] = 0.9999999403953552,
["transparency_behavior_on_friendlies"] = true,
["extra_icon_show_enrage_border"] = {
0,
0,
0,
},
["aura_padding"] = 0.7999999523162842,
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 66,
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["PlaterCore"] = 1,
["Desc"] = "Change the color for the heal absorb, heal prediction and shield amount indicators.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}           \n    \n    --make sure to enable the desired indicators at /plater options > Advanced tab > Show Heal/Shield Prediction\n    \n    --color when the heal absorb indicator\n    envTable.HealAbsorbColor = \"maroon\"\n    \n    --color of incoming heal indicator\n    envTable.IncomingHealColor = \"darkgreen\"\n    \n    --color of shield indicator\n    envTable.ShieldsColor = \"#C59000\"    \n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --heal absorb\n    unitFrame.healthBar.healAbsorbIndicator:SetVertexColor (DetailsFramework:ParseColors (envTable.HealAbsorbColor))\n    \n    --shield absorb\n    unitFrame.healthBar.shieldAbsorbIndicator:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldsColor))\n    \n    --incoming heal\n    unitFrame.healthBar.incomingHealIndicator:SetVertexColor (DetailsFramework:ParseColors (envTable.IncomingHealColor))\n    \nend\n\n\n",
},
["Prio"] = 99,
["Time"] = 1650439879,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["HooksTemp"] = {
},
["Name"] = "Change Prediction Color",
["Icon"] = 1035048,
["Options"] = {
},
},
{
["Enabled"] = true,
["Revision"] = 69,
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["PlaterCore"] = 1,
["Desc"] = "Adds a pixels perfect border around the cast bar.",
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \n    --create thee border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end\n    \nend\n\n\n\n\n",
},
["Prio"] = 99,
["Time"] = 1649227841,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["HooksTemp"] = {
},
["Name"] = "Cast Bar Border",
["Icon"] = 133004,
["Options"] = {
},
},
{
["Enabled"] = true,
["Revision"] = 57,
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["PlaterCore"] = 1,
["Desc"] = "Adds a pixels perfect border around the cast bar spell icon.",
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.castBar.IconOverlayFrame) then\n        unitFrame.castBar.IconOverlayFrame:Hide()\n    end\n    \nend\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.AnchorSide = \"right\"\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    function envTable.BuildFrames (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.IconBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.IconBorder:SetBorderSizes (size, size, size, size)\n        castBar.IconBorder:UpdateSizes()\n        \n        local icon = castBar.Icon\n        if (envTable.AnchorSide == \"left\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\")\n            icon:SetPoint (\"bottomright\", castBar, \"bottomleft\")\n            icon:SetWidth (icon:GetHeight())\n            \n        elseif (envTable.AnchorSide == \"right\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\")\n            icon:SetPoint (\"bottomleft\", castBar, \"bottomright\")\n            icon:SetWidth (icon:GetHeight())\n            \n        end\n        \n        icon:Show()\n        castBar.IconOverlayFrame:Show()\n    end\n    \n    if (not unitFrame.castBar.IconOverlayFrame) then\n        --icon support frame\n        unitFrame.castBar.IconOverlayFrame = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"topleft\", unitFrame.castBar.Icon, \"topleft\")\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"bottomright\", unitFrame.castBar.Icon, \"bottomright\")\n        \n        unitFrame.castBar.IconBorder = CreateFrame (\"frame\", nil,  unitFrame.castBar.IconOverlayFrame, \"NamePlateFullBorderTemplate\")\n    end    \n    \nend\n\n\n\n\n",
},
["Prio"] = 99,
["Time"] = 1649227840,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["HooksTemp"] = {
},
["Name"] = "Cast Icon Border",
["Icon"] = 133004,
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --normal Marker\n    envTable.Size = 18\n    envTable.Anchor = {\n        side = 8, -- Right side\n        x = -2, \n        y = 0,\n    }\n    \n    --Name only Marker\n    envTable.SpecialSize = 22\n    envTable.SpecialAnchor = {\n        side = 8, -- Right side\n        x = -2, \n        y = 2,\n    }\n    \n    envTable.UpdateRaidMark = function (unitFrame, unitId)\n        local plateFrame = C_NamePlate.GetNamePlateForUnit (unitId)\n        local marker = plateFrame.unitFrame.PlaterRaidTargetFrame\n        if marker then\n            if plateFrame.IsFriendlyPlayerWithoutHealthBar or\n            plateFrame.IsNpcWithoutHealthBar then\n                marker:SetSize (envTable.SpecialSize, envTable.SpecialSize)\n                Plater.SetAnchor (marker, envTable.SpecialAnchor, unitFrame.ActorNameSpecial)\n            else\n                --marker:SetSize (envTable.Size, envTable.Size)\n                --Plater.SetAnchor (marker, envTable.Anchor, unitFrame.unitName)\n            end\n        end\n    end\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateRaidMark (unitFrame, unitId)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1649227841,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 878218,
["Enabled"] = true,
["Revision"] = 651,
["semver"] = "",
["Author"] = "호불-아즈샤라",
["Desc"] = "Raidmark in the Unitname",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Raidmark in the Unitname",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    local mark = unitId and GetRaidTargetIndex(unitId)\n    envTable.namer(unitId, mark, true, false, false, \"Created\")\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    -- Catch all \n    envTable.namer(unitId, GetRaidTargetIndex(unitId), true, false, false, \"Updated\")\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    envTable.namer(unitId, GetRaidTargetIndex(unitId), true, false, false, \"Added\")\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFEAEA0D\", -- Yellow 5 Point Star\n        [2] = \"FFEAB10D\", -- Orange Circle\n        [3] = \"FFCD00FF\", -- Purple Diamond\n        [4] = \"FF06D425\", -- Green Triangle\n        [5] = \"FFB3E3D8\", -- Light Blue Moon\n        [6] = \"FF0CD2EA\", -- Blue Square\n        [7] = \"FFD6210B\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    -- Old way was some degen fucking shit this is easier\n    local nameBlacklist = {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,  \n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true, \n        [\"Terror\"] = true, \n        [\"Totem\"] = true, \n        [\"Waycrest\"] = true,\n        [\"Dummy\"] = true, -- Testing Purposes\n        [\"Aspect\"] = true\n    }\n    \n    \n    -- Override for names, Thanks to Nnoggie for all of the dungeon ones\n    local renameTable = {\n        -- Testing\n        [\"Fleshripper Vulture\"] = \"Shit Bird\",\n        [\"Roaming Nibbler\"] = \"Roaming Saurid\",\n        -- Grand Delusions\n        [\"Thing From Beyond\"] = \"Ion Hazzikostas\",\n        -- Plaguefall\n        [\"Plagueroc\"] = \"Plaguecock\",\n        [\"Doctor Ickus\"] = \"Dickus\",\n        -- Sanguine Depths\n        [\"Animated Weapon\"] = \"Assclapper\",\n        [\"Kryxis the Voracious\"] = \"Steroid Stomper\",\n        [\"Frenzied Ghoul\"] = \"Death\",\n        [\"General Kaal\"] = \"Mommy Kaal\",\n        -- Mists of Tirna Scithe\n        [\"Droman Oulfarran\"] = \"Simp Tree\",\n        [\"Mistcaller\"] = \"Lady UwU\",\n        [\"Tred'ova\"] = \"Tred'killya\",\n        -- M+ Encrypted Affix\n        [\"Urh Relic\"] = \"CDR Relic\",\n        [\"Wo Relic\"] = \"Invis Relic\",\n        [\"Vy Relic\"] = \"Hate Relic\",\n        [\"Urh Dismantler\"] = \"CDR boi\",\n        [\"Wo Drifter\"] = \"Invis boi\",\n        [\"Vy Interceptor\"] = \"Haste boi\",\n    }\n    \n    \n    \n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs, Do i want this?? no idea\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    function envTable.namer(unitId, marker, nameColouring, isBoss, debugMode, debugEntry)\n        if unitId then\n            \n            local name = UnitName(unitId)\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            local unitName\n            -- Testing mode\n            if debugMode then\n                print(\"DebugMode: \"..debugEntry..\" - Checking for dummy name\")\n                if b == \"Dummy\" or c == \"Dummy\" or d == \"Dummy\" or e == \"Dummy\" or f == \"Dummy\" then\n                    local lastName = b:find(\"Dummy\") and b or c:find(\"Dummy\") and c or d:find(\"Dummy\") and d\n                    print(\"DebugMode: \"..debugEntry..\" - Dummy Found!\")\n                    unitName = name ~=nil and lastName\n                end\n            end\n            \n            \n            if nameBlacklist[b] then\n                unitName = name ~=nil and (a or b or c or d or e or f) or nil\n            else\n                unitName = name ~=nil and (f or e or d or c or b or a) or ni\n            end\n            \n            if unitId and marker == nil and nameColouring then\n                marker = 8\n            end\n            \n            \n            \n            if unitName == nil then\n                unitName = name\n            end\n            \n            \n            if renameTable[name] then\n                unitName = renameTable[name]\n            end\n            \n            if unitId and marker and nameColouring then\n                unitFrame.healthBar.unitName:SetText(WrapTextInColorCode(unitName, markerToHex[marker]))\n            elseif unitId then\n                unitFrame.healthBar.unitName:SetText(unitName)\n            end\n        end   \n    end\nend",
},
["Time"] = 1653546694,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 629482,
["Enabled"] = true,
["Revision"] = 129,
["semver"] = "",
["Author"] = "Rhk-Tarren Mill",
["Desc"] = "Aimed at making calls in dungeons simpler by using the last name of a mob or first name of certains ones i.e Jessie Howlis -> Jessie",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "M+ Renamer",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckForQuest (unitFrame)\n    \nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.ExtraQuestMarker22154:Hide()\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckForQuest (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.ExtraQuestMarker22154) then\n        \n        unitFrame.ExtraQuestMarker22154:Hide()\n        \n    end    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.Texture = [[Interface\\OPTIONSFRAME\\UI-OptionsFrame-NewFeatureIcon]]\n    envTable.Size = 18\n    envTable.Anchor = {\n        side = 3, --right side\n        x = 2,\n        y = 0\n    }\n    \n    if (not unitFrame.ExtraQuestMarker22154) then\n        unitFrame.ExtraQuestMarker22154 = unitFrame:CreateTexture (nil, \"overlay\")\n        local texture = unitFrame.ExtraQuestMarker22154\n        \n        texture:SetTexture (envTable.Texture)\n        texture:SetSize (envTable.Size, envTable.Size)\n        Plater.SetAnchor (texture, envTable.Anchor)\n    end\n    \n    function envTable.CheckForQuest (unitFrame)\n        if (unitFrame.namePlateIsQuestObjective) then\n            unitFrame.ExtraQuestMarker22154:Show()\n            \n        else\n            unitFrame.ExtraQuestMarker22154:Hide()\n            \n        end\n    end\nend\n\n\n\n\n\n\n",
},
["Time"] = 1650439916,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/platerquesticon/2",
["Icon"] = "Interface\\OptionsFrame\\UI-OptionsFrame-NewFeatureIcon",
["Enabled"] = false,
["Revision"] = 45,
["semver"] = "1.0.1",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show an extra icon if the unit is a part of a quest you're current doing. You may adjust where the exclamation mark is shown in the Constructor.",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Name"] = "Extra Quest Icon",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --percent of total cast bar size, default: 60% spell name\n    local spellNameSize = 0.40\n    \n    --update function\n    function envTable.UpdateCastBarName(unitId, castBar)\n        --do nothing if interrupted\n        if castBar.IsInterrupted then\n            return\n            \n        end\n        \n        --get the target's unitId \n        local targetUnitId = unitId .. \"target\"\n        \n        --does the unit exists?\n        if (UnitExists(targetUnitId)) then\n            \n            --get the target name\n            local targetName = UnitName(targetUnitId)\n            \n            --does the target name exists?\n            if (targetName) then\n                --get the current spell name\n                local spellName = castBar.SpellName\n                --reset the text in the cast bar\n                castBar.Text:SetText(spellName)\n                \n                --paint the target name with the player's class color\n                local targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                \n                --castbar width\n                local castBarWidth = castBar:GetWidth()\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth * spellNameSize)\n                \n                --set the new text in the castbar spell name fontstring\n                local currentText = castBar.Text:GetText()\n                if (currentText ~= nil and currentText ~= '') then \n                    castBar.Text:SetText(currentText .. \" -> \" .. targetNameByColor)\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth)    \n                end                \n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1649228051,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/VOuCDrV8Y/1",
["Icon"] = 2126355,
["Enabled"] = true,
["Revision"] = 76,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show the cast target name with the spell name",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Name"] = "Cast Target on Spell Name",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Player Logon"] = "function()\n    \n    --Reload after importing or changing anything\n    --Choose the Arrow from the Target Tab\n    \n    Plater.TargetIndicators  [\"EthricArrow\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        width = 26, -- Change size\n        height = 26,\n        x = 17, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow2\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow2.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow3\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow2.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow4\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow4.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow5\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow5.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow6\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow6.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow7\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow7.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 14, -- Change size\n        height = 14,\n        x = 18, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow8\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow8.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 17, -- Change size\n        height = 17,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow9\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow9.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow10\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow10.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0, \n    }\n    \nend",
},
["Time"] = 1650382647,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/okQgj8zoy/6",
["Icon"] = "INTERFACE\\ICONS\\70_inscription_vantus_rune_nightmare",
["Enabled"] = true,
["Revision"] = 22,
["semver"] = "1.0.5",
["Author"] = "Ethric-Twisting Nether",
["Desc"] = "Target Arrows",
["Prio"] = 99,
["Name"] = "Ethric's Arrows",
["PlaterCore"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["version"] = 6,
},
{
["LastHookEdited"] = "Initialization",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptId(unitFrame)\nend\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    unitFrame.castBar:UpdateCastColor()\nend",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptIDs()\n    modTable.updateInterruptId(unitFrame)\nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not envTable.lastUpdateTime or (envTable.lastUpdateTime < modTable.lastUpdateTime) then\n        modTable.setCastColorFunction (unitFrame)\n        envTable.lastUpdateTime = modTable.lastUpdateTime\n    end\nend",
["Initialization"] = "function (modTable)\n    \n    --Disable for classic - for now\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function modTable.updateInterruptIDs () end\n        function modTable.setCastColorFunction (unitFrame) end\n        function modTable.updateInterruptId (unitFrame) end\n        return\n    end\n    \n    -- settings:\n    local noKickReadyColor = modTable.config.noKickReadyColor or \"blue\"\n    local kickReadyInTimeColor = modTable.config.kickReadyInTimeColor or \"purple\"\n    local kickOutOfRangeColor = modTable.config.kickOutOfRangeColor or \"orange\"\n    local kickOutOfRangeEnabled = modTable.config.kickOutOfRangeEnabled\n    local kickReadyInTimeGraceTime = modTable.config.kickReadyInTimeGraceTime or 0.5 --sec - additional time on the CD to account for reaction, lag, etc\n    local checkCovenant = true\n    local showSpark = modTable.config.showSpark\n    local sparkColor = modTable.config.sparkColor\n    local sparkWidth = modTable.config.sparkWidth\n    local sparkTexture = modTable.config.sparkTexture\n    \n    local specialCastColorsEnabled = modTable.config.specialColorsEnabled\n    local specialColorsData = modTable.config.specialColors\n    local platerCastColorsEnabled = modTable.config.platerCastColorsEnabled\n    local specialColorsForNonInterruptibleEnabled = modTable.config.specialColorsForNonInterruptibleEnabled\n    local specialColors = {}\n    \n    if platerCastColorsEnabled or specialColorsForNonInterruptibleEnabled then\n        for id, colorData in pairs(Plater.db.profile.cast_colors) do\n            if colorData and colorData[1] and colorData[2] then\n                specialColors[tonumber(id) or id] = {Plater:ParseColors(colorData[2])}\n            end\n        end\n    end\n    if specialCastColorsEnabled or specialColorsForNonInterruptibleEnabled then\n        for id, color in pairs(specialColorsData) do\n            specialColors[tonumber(id) or id] = {Plater:ParseColors(color)}\n        end\n    end\n    local useSpecial = specialCastColorsEnabled or platerCastColorsEnabled\n    \n    \n    -- functions:\n    \n    -- determine interrupt spell according to spec\n    function modTable.updateInterruptIDs ()\n        local specId = GetSpecializationInfo(GetSpecialization())\n        modTable.knownSpecID = specId\n        local interruptIDs = {} -- contains: [spellID] = <is player ability>, false meaning pet or weird workarounds needed\n        if Plater.PlayerClass == \"ROGUE\" then\n            interruptIDs[1766] = true\n        elseif Plater.PlayerClass == \"DEATHKNIGHT\" then\n            interruptIDs[47528] = true\n        elseif Plater.PlayerClass == \"DEMONHUNTER\" then\n            interruptIDs[183752] = true\n        elseif Plater.PlayerClass == \"DRUID\" then\n            if specId == 103 or specId == 104 then\n                interruptIDs[106839] = true -- feral/guardian\n            elseif specId == 102 then\n                interruptIDs[78675] = true -- moonkin\n            end\n        elseif Plater.PlayerClass == \"HUNTER\" then\n            if specId == 255 then\n                interruptIDs[187707] = true -- SV\n            else\n                interruptIDs[147362] = true -- BM/MS\n            end\n        elseif Plater.PlayerClass == \"MONK\" then\n            if specId == 268 or specId == 269 then\n                interruptIDs[116705] = true --WW/BM\n            end\n        elseif Plater.PlayerClass == \"PALADIN\" then\n            if specId == 66 or specId == 70 then\n                interruptIDs[96231] = true --prot/ret\n            end\n            if specId == 66 then\n                interruptIDs[31935] = true --prot\n                if checkCovenant and IsPlayerSpell(304971) then\n                    interruptIDs[304971] = true --kyrian\n                end\n            end\n        elseif Plater.PlayerClass == \"SHAMAN\" then\n            interruptIDs[57994] = true\n        elseif Plater.PlayerClass == \"WARRIOR\" then\n            interruptIDs[6552] = true\n        elseif Plater.PlayerClass == \"MAGE\" then\n            interruptIDs[2139] = true\n        elseif Plater.PlayerClass == \"PRIEST\" then\n            if specId == 258 then\n                interruptIDs[15487] = true\n            end\n        elseif Plater.PlayerClass == \"WARLOCK\" then\n            interruptIDs[119910] = 119898 --Spell Lock (command ability)\n            if IsPlayerSpell(108503) then --GoSac\n                interruptIDs[132409] = 119898 --sacrificed Spell Lock (command ability)\n            end\n            if IsPlayerSpell(212619) then --Call Felhunter (PVP ability)\n                interruptIDs[212619] = true\n            end\n            if specId == 266 then\n                interruptIDs[119914] = 119898 --demo/fel guard  Axe Toss (command ability)\n            end\n        end\n        modTable.interruptSpellIDs = interruptIDs\n    end\n    \n    function modTable.updateInterruptId (unitFrame)\n        local specId = GetSpecializationInfo(GetSpecialization())\n        if not modTable.interruptSpellIDs or modTable.knownSpecID ~= specId then\n            modTable.updateInterruptIDs()\n        end\n        unitFrame.castBar.interruptSpellIDs = modTable.interruptSpellIDs\n    end\n    \n    function modTable.setCastColorFunction (unitFrame)\n        -- create spark (if needed)\n        local castBar = unitFrame.castBar\n        if not castBar.InterruptSpark then\n            castBar.InterruptSpark = castBar:CreateTexture (nil, \"overlay\")\n            castBar.InterruptSpark:SetDrawLayer (\"overlay\", 4)\n            castBar.InterruptSpark:SetBlendMode (\"ADD\")\n            castBar.InterruptSpark:SetHeight(castBar:GetHeight() + 6)\n        end\n        castBar.InterruptSpark:SetTexture(Plater.SparkTextures[sparkTexture])\n        castBar.InterruptSpark:SetVertexColor(Plater:ParseColors(sparkColor))\n        castBar.InterruptSpark:SetWidth(sparkWidth)\n        \n        -- overwrite the color function:\n        castBar.GetCastColor = function (self)\n            \n            self.InterruptSpark:Hide()\n            \n            local interruptCD, interruptReadyInTime = nil, false\n            local interruptDur, interruptStart = 0, 0\n            local spellOutOfRange = false --skip per default\n            if self.interruptSpellIDs and UnitCanAttack(\"player\", self.unit) then\n                \n                for interruptSpellId, playerAbility in pairs(self.interruptSpellIDs) do\n                    if playerAbility == true then\n                        \n                        if IsSpellKnown(interruptSpellId) then\n                            local cdStart, cdDur =  GetSpellCooldown(interruptSpellId)\n                            local tmpInterruptCD = (cdStart > 0 and  cdDur - (GetTime() - cdStart)) or 0\n                            if not interruptCD or (tmpInterruptCD < interruptCD) then\n                                interruptCD = tmpInterruptCD\n                                interruptDur = cdDur\n                                interruptStart = cdStart\n                                spellOutOfRange = IsSpellInRange(GetSpellInfo(interruptSpellId), self.unit) == 0\n                            end\n                        end\n                    else\n                        if type(playerAbility) == \"number\" then\n                            -- workaround for spell overrides (on WL command ability, etc.)\n                            if FindSpellOverrideByID(playerAbility) == interruptSpellId then\n                                local cdStart, cdDur =  GetSpellCooldown(interruptSpellId)\n                                local tmpInterruptCD = (cdStart > 0 and  cdDur - (GetTime() - cdStart)) or 0\n                                if tmpInterruptCD > 0 and (not interruptCD or  (tmpInterruptCD < interruptCD)) then\n                                    interruptCD = tmpInterruptCD\n                                    interruptDur = cdDur\n                                    interruptStart = cdStart\n                                    spellOutOfRange = IsSpellInRange(GetSpellInfo(interruptSpellId), self.unit) == 0\n                                end \n                            end\n                        end\n                    end\n                end\n                \n                if not interruptCD then\n                    interruptCD = 0\n                end\n                \n                if self.channeling then\n                    interruptReadyInTime = (interruptCD + kickReadyInTimeGraceTime) < self.value\n                else\n                    interruptReadyInTime = (interruptCD + kickReadyInTimeGraceTime) < (self.maxValue - self.value)\n                end\n            end\n            \n            if not interruptCD then\n                interruptCD = 0\n            end\n            \n            if (not self.canInterrupt) then\n                return (specialColorsForNonInterruptibleEnabled and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.NonInterruptible\n                \n            elseif (self.failed) then\n                return self.Colors.Failed\n                \n            elseif (self.interrupted) then\n                return self.Colors.Interrupted\n                \n            elseif (self.finished) then\n                return self.Colors.Finished\n                \n            elseif interruptCD > 0 and interruptReadyInTime then\n                if showSpark then\n                    self.InterruptSpark:Show()\n                    local sparkPosition = (interruptStart + interruptDur - self.spellStartTime + kickReadyInTimeGraceTime)/self.maxValue\n                    if self.channeling then\n                        sparkPosition = 1-sparkPosition\n                    end\n                    self.InterruptSpark:SetPoint (\"center\", self, \"left\", sparkPosition  * self:GetWidth(), 0)\n                end\n                return kickReadyInTimeColor\n                \n            elseif interruptCD > 0 then\n                return noKickReadyColor\n                \n            elseif kickOutOfRangeEnabled and spellOutOfRange then\n                return kickOutOfRangeColor\n                \n            elseif (self.channeling) then\n                return self.Colors.Channeling\n                \n            else\n                return (useSpecial and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.Casting\n                \n            end\n        end\n    end\n    \n    modTable.lastUpdateTime = time()\n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptId(unitFrame)\n    modTable.setCastColorFunction(unitFrame)\nend",
},
["Time"] = 1650437255,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/jHilJiXiY/37",
["Icon"] = 132219,
["Enabled"] = true,
["Revision"] = 767,
["semver"] = "1.2.12",
["Author"] = "Viash-Thrall",
["Desc"] = "Sets the cast bar color to the specified one if your interrupt spell is not ready. Uses other Plater color settings otherwise.",
["Prio"] = 99,
["Name"] = "Interrupt not ready Cast Color",
["PlaterCore"] = 1,
["version"] = 37,
["HooksTemp"] = {
},
["Options"] = {
{
["Type"] = 5,
["Name"] = "General:",
["Value"] = "General:",
["Key"] = "option8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Kick not Ready Color",
["Value"] = {
0,
0,
1,
1,
},
["Key"] = "noKickReadyColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Kick Ready in Time Color",
["Value"] = {
0.50196078431373,
0,
1,
1,
},
["Key"] = "kickReadyInTimeColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Kick out of Range Color",
["Value"] = {
1,
0.54901960784314,
0,
1,
},
["Key"] = "kickOutOfRangeColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Check 'Out Of Range'",
["Value"] = false,
["Key"] = "kickOutOfRangeEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Name"] = "Reaction grace Time",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "kickReadyInTimeGraceTime",
},
{
["Type"] = 4,
["Name"] = "Enable special Colors",
["Value"] = false,
["Key"] = "specialColorsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Enable Plater Cast Colors",
["Value"] = false,
["Key"] = "platerCastColorsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Colors for not-interruptible",
["Value"] = false,
["Key"] = "specialColorsForNonInterruptibleEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 10",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Spark:",
["Value"] = "Spark:",
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Spark",
["Value"] = true,
["Key"] = "showSpark",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0,
1,
0,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 12,
["Name"] = "Spark Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "sparkWidth",
},
{
["Type"] = 2,
["Max"] = 8,
["Desc"] = "",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Name"] = "Spark Texure",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "sparkTexture",
},
{
["Type"] = 7,
["Name"] = "Special Cast Colors",
["Value"] = {
{
"116",
"navy",
},
},
["Key"] = "specialColors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
},
{
["Enabled"] = true,
["Revision"] = 203,
["semver"] = "1.0.0",
["HooksTemp"] = {
},
["LastHookEdited"] = "Constructor",
["Author"] = "Fragile-烈焰峰",
["version"] = 1,
["Desc"] = "",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local raidMark = Plater.GetRaidMark (unitFrame)\n    \n    local color = envTable.MarkToColor[raidMark]\n    \n    if raidMark then\n        \n        Plater.SetNameplateColor (unitFrame, color)\n        envTable.HasRaidMark = true\n        \n    end\n    \nend\n\n\n\n",
["Raid Target"] = "function (self, unitId, unitFrame, envTable)\n    \n    local raidMark = Plater.GetRaidMark (unitFrame)    \n    \n    if (not raidMark) then\n        if envTable.HasRaidMark then\n            \n            Plater.RefreshNameplateColor(unitFrame)\n            envTable.HasRaidMark = nil\n            \n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.MarkToColor = {\n        [1] = \"#d9cf45\",--YellowStar\n        [2] = \"#ed820f\", --Orange Circle\n        [3] = \"#b30fd6\", --Purple Diamond\n        [4] = \"#24a824\", --Green Triangle\n        [5] = \"#99bfd9\", --Silver Moon\n        [6] = \"#00a3ff\", --Blue Square\n        [7] = \"#d12e2e\", --Red Cross\n        [8] = \"#e3d4bd\", --White Skull    \n    }\n    \nend\n\n\n",
},
["Prio"] = 99,
["Time"] = 1650437263,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "https://wago.io/tEQKn0Ns8/1",
["Icon"] = "INTERFACE\\ICONS\\Achievement_DoubleRainbow",
["Name"] = "Target Mark Color Change",
},
{
["LastHookEdited"] = "Initialization",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    -- settings:\n    \n    -- for the LibCustomGlow implementation:\n    modTable.options = {\n        glowType = \"pixel\",\n        color = modTable.config.glowColor,--\"red\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = modTable.config.antsAmount, --8, -- number of lines. Defaul value is 8;\n        frequency = modTable.config.frequency, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = modTable.config.antsLength, -- length of lines. Default value depends on region size and number of lines;\n        th = modTable.config.antsThickness, -- thickness of lines. Default value is 2;\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        border = modTable.config.antsBorder, -- set to true to create border under lines;\n        key = \"StealPurgeAuraGlow\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local buffSpecialGlow = true\n    \n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n                if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                    auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                    local offset = modTable.config.antsThickness\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                end\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                    if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                        auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                        local offset = modTable.config.antsThickness\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                    end\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
},
["Time"] = 1650437628,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/turHC0a5k/7",
["Icon"] = "INTERFACE\\ICONS\\Ability_Creature_Cursed_04",
["Enabled"] = false,
["Revision"] = 283,
["semver"] = "1.0.6",
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
["Prio"] = 99,
["Name"] = "Steal/Purge Aura Glow",
["PlaterCore"] = 1,
["version"] = 7,
["HooksTemp"] = {
},
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "@scriptname Options:",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
1,
0,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the glow ants.",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "Amount of ants in the glow effect.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 6,
["Name"] = "Ants Amount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "antsAmount",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Ants move speed",
["Min"] = -1,
["Fraction"] = true,
["Value"] = 0.25,
["Name"] = "Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "frequency",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 4,
["Name"] = "Ants length",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "antsLength",
},
{
["Type"] = 2,
["Max"] = 4,
["Desc"] = "",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 2,
["Name"] = "Ants Thickness",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "antsThickness",
},
{
["Type"] = 4,
["Name"] = "Ants Border",
["Value"] = false,
["Key"] = "antsBorder",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Outer Glow",
["Value"] = false,
["Key"] = "outerGlow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "Constructor",
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    unitFrame.questProgressIconFrame:Hide()\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateQuestProgress(unitFrame)\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateQuestProgress(unitFrame)\n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- Updated for Shadowlands --\n    \n    -- text settings\n    local textColor = \"orange\";\n    local textSize = 10;\n    local textOutline = \"OUTLINE\";--\"NONE\", \"OUTLINE\", \"THICKOUTLINE\"\n    local textShadowAlpha = 0; -- 0 = transparent, 1 = 100% solid\n    local textX = 0;\n    local textY = -25;\n    local textAnchor = \"center\"; -- \"center\", \"top\", \"bottom\", \"topleft\", \"left\", \"bottomleft\", \"topright\", \"right\", \"bottomright\"\n    local textIconAnchor = \"center\"; -- \"center\", \"top\", \"bottom\", \"topleft\", \"left\", \"bottomleft\", \"topright\", \"right\", \"bottomright\"\n    local TextType = \" / \"\n    \n    --icon settings\n    local iconSize = 25\n    \n    -- positioning\n    local iconAnchor = {\n        side = 8, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 0, --x offset\n        y = 20, --y offset\n    };\n    \n    -- icon options\n    --    local iconQuestHR = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\JimmosQuestIcon.tga]];\n    local iconQuestHR = [[Interface\\OPTIONSFRAME\\UI-OptionsFrame-NewFeatureIcon]];\n    \n    \n    ------------------------------------------------------------------------------------------------------------- \n    --frames:\n    \n    --create the icon frame that will show the quest need\n    if (not unitFrame.questProgressIconFrame) then\n        envTable.questProgressIconFrame = unitFrame:CreateTexture (nil, \"overlay\")\n        envTable.questProgressIconFrame:SetTexture (iconQuestHR)\n        envTable.questProgressIconFrame:SetSize (iconSize, iconSize)\n        Plater.SetAnchor (envTable.questProgressIconFrame, iconAnchor)\n        unitFrame.questProgressIconFrame = envTable.questProgressIconFrame\n    end\n    \n    \n    --create the text frame that will show the quest progress\n    if (not  unitFrame.healthBar.questProgressTextFrame) then\n        envTable.questProgressTextFrame = Plater:CreateLabel (unitFrame.healthBar);\n        Plater:SetFontSize (envTable.questProgressTextFrame, textSize);\n        Plater:SetFontColor (envTable.questProgressTextFrame, textColor);\n        Plater:SetFontOutline (envTable.questProgressTextFrame, textOutline);\n        envTable.questProgressTextFrame:SetPoint (textAnchor, unitFrame.questProgressIconFrame, textIconAnchor, textX, textY);\n        DetailsFramework:SetFontShadow (envTable.questProgressTextFrame, 0, 0, 0, textShadowAlpha);\n        unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n        envTable.questProgressTextFrame:SetText(\"\")\n    end\n    \n    ------------------------------------------------------------------------------------------------------------- \n    --functions\n    \n    function envTable.updateQuestProgress (unitFrame)\n        if unitFrame and unitFrame.namePlateIsQuestObjective then\n            --            print(unitFrame.QuestAmountCurrent)\n            --            print(unitFrame.QuestAmountTotal)\n            if unitFrame.QuestAmountCurrent then\n                if unitFrame.QuestAmountTotal then\n                    TextType = (unitFrame.QuestAmountCurrent or 0) .. \" / \"\n                    .. unitFrame.QuestAmountTotal\n                    unitFrame.questProgressIconFrame:SetTexture (iconQuestHR);\n                else\n                    TextType = (unitFrame.QuestAmountCurrent) .. \"%\"\n                    unitFrame.questProgressIconFrame:SetTexture (iconQuestHR);\n                end\n            end\n            unitFrame.questProgressIconFrame:Show();\n            unitFrame.healthBar.questProgressTextFrame:SetText(TextType)\n        else\n            unitFrame.questProgressIconFrame:Hide();\n            unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n        end\n    end\n    \nend",
},
["Time"] = 1650439946,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/CCzSeTp-U/6",
["Icon"] = 134411,
["Enabled"] = true,
["Revision"] = 76,
["semver"] = "2.1.3",
["Author"] = "Jimmo-Frostmourne",
["Desc"] = "Adds a custom Quest Icon to show quest related mobs and progress towards completion.",
["Prio"] = 99,
["Name"] = "Jimmo's Quest Marker",
["PlaterCore"] = 1,
["version"] = 6,
["HooksTemp"] = {
},
["Options"] = {
},
},
},
["last_news_time"] = 1550158598,
["auras_per_row_auto"] = false,
["cast_statusbar_fadeout_time"] = 0.3999999761581421,
["aura_stack_size"] = 9,
["auras_per_row_amount2"] = 4,
["aura_width"] = 22,
["aura_height2"] = 14,
["ghost_auras"] = {
["auras"] = {
["WARLOCK"] = {
{
[172] = true,
[980] = true,
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
},
},
["buff_frame_anchor_and_size_migrated"] = true,
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1683596223,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 146,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Vertical Line Alpha",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Name"] = "Fill Alpha",
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["version"] = -1,
["Name"] = "Add - Health Markers [P]",
["NpcNames"] = {
},
["__TrashAt"] = 1725100665,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1669327146,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 65,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["NpcNames"] = {
},
["Name"] = "Aura is Shield [P]",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["__TrashAt"] = 1725100665,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1670202265,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 620,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animSpeed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
["__TrashAt"] = 1725100665,
},
},
["health_cutoff"] = false,
["aura_border_colors"] = {
["enrage"] = {
0,
0,
0,
},
["steal_or_purge"] = {
0.27843137254902,
0.92156862745098,
0.98039215686275,
},
["offensive"] = {
nil,
0,
0,
},
["crowdcontrol"] = {
0,
0,
0,
},
["is_show_all"] = {
0,
0,
0,
},
["defensive"] = {
0,
0,
0,
},
["is_buff"] = {
nil,
0,
0,
},
},
["castbar_target_anchor"] = {
["y"] = 8.349998474121094,
["x"] = 24.72999572753906,
["side"] = 6,
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["script_auto_imported"] = {
["Cast - Important by Color [P]"] = 2,
["Relics 9.2 M Dungeons"] = 2,
["Cast - Effect After Cast [P]"] = 2,
["Explosion Affix M+"] = 14,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Fixate On You"] = 11,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Aura - Buff Alert"] = 15,
["Aura - Invalidate Unit"] = 1,
["Add - Important [P]"] = 4,
["Aura - Is Cast Bar [P]"] = 1,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Unit Power"] = 1,
["Add - Tag Number [P]"] = 2,
["Unit - Health Markers"] = 12,
["Fixate"] = 11,
["Cast - Special Ability [P]"] = 3,
["Cast - Tank Interrupt"] = 12,
["Unit - Important"] = 11,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Fixate by Unit Buff [P]"] = 2,
["Cast - On Going Cast [P]"] = 2,
["Cast - Important Target [P]"] = 2,
["Cast - Glowing [P]"] = 10,
["Cast - Quick Flash"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Cast - Shield Interrupt"] = 2,
["Cast - AoE Hit All [P]"] = 3,
["Countdown"] = 11,
["Auto Set Skull"] = 11,
["Aura is Shield [P]"] = 5,
["Cast - Debuff [P]"] = 2,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Cast - Stop Casting"] = 4,
["Cast - Heal Cut [P]"] = 3,
["Color Change"] = 1,
["Spiteful Affix"] = 3,
["Add - Warning [P]"] = 5,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Very Important"] = 15,
["Aura Border Color"] = 1,
["Cast - Voidzone [P]"] = 2,
["Cast - AoE With Range [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Add - Explode on Die [P]"] = 1,
["Cast - Heroic Leap [P]"] = 3,
["Cast - Shining Green [P]"] = 3,
["Cast - Circular Swipe"] = 4,
["Unit - Show Energy"] = 11,
},
["target_highlight_color"] = {
1,
1,
},
["extra_icon_anchor"] = {
["y"] = -13,
["x"] = 0,
["side"] = 8,
},
["extra_icon_wide_icon"] = false,
["range_check_alpha"] = 1,
["extra_icon_auras"] = {
"Adrenaline Rush",
"Alliance Flag",
"Alter Time",
"Anti-Magic Shell",
"Arcane Power",
"Archangel",
"Ardent Defender",
"Aspect of the Turtle",
"Asphyxiate",
"Astral Shift",
"Aura Mastery",
"Avatar",
"Avenger's Shield",
"Axe Toss",
"Banish",
"Barkskin",
"Berserker Rage",
"Binding Shot",
"Bladestorm",
"Blazing Barrier",
"Blessing of Freedom",
"Blessing of Protection",
"Blessing of Sacrifice",
"Blind",
"Blinding Light",
"Blinding Sleet",
"Bloodlust",
"Heroism",
"Time Warp",
"Blur",
"Casting Circle",
"Celestial Alignment",
"Chaos Nova",
"Charge",
"Cheap Shot",
"Cheat Death",
"Cloak of Shadows",
"Combat Readiness",
"Corpse Shield",
"Dampen Harm",
"Dark Archangel Form",
"Dark Pact",
"Deterrence",
"Die by the Sword",
"Diffuse Magic",
"Disarm",
"Dispersion",
"Divine Shield",
"Dragon's Breath",
"Duel",
"Earthgrab Totem",
"Entangling Roots",
"Entrapment",
"Ethereal Form",
"Evasion",
"Eye for an Eye",
"Fear",
"Fel Eruption",
"Fists of Fury",
"Fortifying Brew",
"Freeze",
"Freezing Arrow",
"Frost Nova",
"Freezing Trap",
"Garrote",
"Gnaw",
"Gouge",
"Grounding Totem Effect",
"Guardian Spirit",
"Guardian of Ancient Kings",
"Guardian of the Forgotten Queen",
"Hammer of Justice",
"Hand of Thros",
"Haunted Urn",
"Hex",
"Holy Word: Chastise",
"Horde Flag",
"Howl of Terror",
"Ice Block",
"Ice Floes",
"Ice Form",
"Icebound Fortitude",
"Icy Veins",
217832,
"Incapacitating Roar",
"Innervate",
"Intimidating Shout",
"Intimidating Roar",
"Ironbark",
"Kidney Shot",
"Killing Spree",
"Last Word",
"Leap",
"Leg Sweep",
"Life Cocoon",
"Maim",
"Mass Entanglement",
"Master of the Elements",
"Mending Bandage",
"Mesmerize",
162264,
"Meteor Strike Infernal",
"Mighty Bash",
"Mind Bomb",
"Mind Control",
"Mortal Coil",
"Narrow Escape",
"Nether Bond",
"Nether Ward",
"Netherstorm Flag",
"Netherwalk",
"Pain Suppression",
"Paralysis",
51271,
"Polymorph",
"Power Infusion",
"Predatory Swiftness",
"Prismatic Barrier",
"Psychic Scream",
163505,
"Recklessness",
"Repentance",
"Ring of Frost",
"Roar of Sacrifice",
6770,
"Scatter Shot",
"Seduction",
"Serenity",
"Shackle Undead",
"Shadow Blades",
"Shadow Reflection",
"Shadowfury",
"Shield Wall",
"Shockwave",
"Sigil of Misery",
"Sigil of Silence",
"Silenced",
"Sin and Punishment",
"Smoke Bomb",
"Solar Beam",
"Soul Harvest",
"Spectral Sight",
"Spell Reflection",
"Static Charge",
"Storm Bolt",
137639,
"Strangulate",
"Survival Instinct",
"Temporal Shield",
"Touch of Karma",
"Tracker's Net",
"Undying Rage",
"Unending Resolve Cooldown Reduction",
"Vampiric Embrace",
"Voidform",
"War Banner",
"Wracking Pains Proc",
"Wyvern Sting",
"Zen Meditation",
"Immolate",
"Immolate",
},
["castbar_target_font"] = "Naowh",
["ui_parent_cast_level"] = 1,
["semver"] = "1.0.7",
["ui_parent_buff2_level"] = 1,
["range_check_in_range_or_target_alpha_friendlies"] = 1,
["aura_frame2_anchor"] = {
["y"] = 31.09999084472656,
["x"] = -0.600006103515625,
["side"] = 3,
},
["use_color_lerp"] = true,
["aura_alpha"] = 0.5999999642372131,
["auto_toggle_friendly"] = {
["cities"] = false,
["world"] = false,
},
["indicator_faction"] = false,
["debuff_show_cc"] = false,
["extra_icon_height"] = 26,
["aura_x_offset"] = 0.8699951171875,
["range_check_alpha_friendlies"] = 1,
["transparency_behavior"] = 3,
["spell_animations"] = false,
["ui_parent_scale_tune"] = 1.109999895095825,
["debuff_show_cc_border"] = {
0,
0,
0,
},
["aura_stack_color"] = {
nil,
0.94509803921569,
0.93725490196078,
},
["aura_consolidate"] = true,
["ui_parent_buff_level"] = 1,
["health_statusbar_bgtexture"] = "Clean",
["auto_toggle_combat_enabled"] = true,
["extra_icon_width"] = 26,
["tank"] = {
["colors"] = {
["anothertank"] = {
0.73333333333333,
0.19607843137255,
},
["aggro"] = {
0.38039215686275,
0.87450980392157,
0.23137254901961,
},
["noaggro"] = {
0.99607843137255,
0.29803921568627,
0.30980392156863,
},
["nocombat"] = {
0.99607843137255,
0.29803921568627,
0.30980392156863,
},
["pulling"] = {
nil,
0.93333333333333,
0.43137254901961,
},
},
},
["health_statusbar_texture"] = "Clean",
["hook_auto_imported"] = {
["Attacking Specific Unit"] = 2,
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Bwonsamdi Reaping"] = 1,
["Aura Reorder"] = 3,
["Jaina Encounter"] = 6,
["Blockade Encounter"] = 1,
["Cast Bar Icon Config"] = 2,
["Hide Neutral Units"] = 1,
["Extra Border"] = 2,
["Combo Points"] = 6,
["Target Color"] = 3,
["Execute Range"] = 1,
["Targetting Alpha"] = 3,
},
["castbar_target_show"] = true,
["cast_statusbar_color"] = {
nil,
0.93333333333333,
0.43137254901961,
0.96000000089407,
},
["update_throttle"] = 0.1200000047683716,
["minor_width_scale"] = 0.9999999403953552,
["indicator_pet"] = false,
["color_lerp_speed"] = 7,
["aura_frame1_anchor"] = {
["y"] = 7.5,
["x"] = 0.8699951171875,
["side"] = 7,
},
["tocversion"] = 100206,
["castbar_icon_show"] = false,
["indicator_extra_raidmark"] = false,
["honor_blizzard_plate_alpha"] = true,
["aura_timer_text_font"] = "Naowh",
["extra_icon_timer_font"] = "GothamNarrowUltra",
["not_affecting_combat_alpha"] = 1,
["extra_icon_stack_font"] = "GothamNarrowUltra",
["border_color"] = {
nil,
nil,
nil,
1,
},
["aura_height"] = 14,
["non_targeted_alpha_enabled"] = true,
["use_health_animation"] = true,
["cast_statusbar_bgtexture"] = "Clean",
["aura2_x_offset"] = -0.600006103515625,
["target_indicator"] = "EthricArrow2",
["indicator_rare"] = false,
["extra_icon_show_defensive_border"] = {
0,
0,
0,
},
["auto_toggle_stacking_enabled"] = true,
["extra_icon_show_purge_border"] = {
nil,
0,
0,
},
["aura_cooldown_edge_texture"] = "Interface\\GLUES\\loadingOld",
["aura_show_buff_by_the_unit"] = false,
["healthbar_framelevel"] = 0,
["target_shady_alpha"] = 0.5999999642372131,
["cast_statusbar_texture"] = "Clean",
["tap_denied_color"] = {
0.37254901960784,
0.37254901960784,
0.37254901960784,
},
["aura2_grow_direction"] = 3,
["health_statusbar_bgcolor"] = {
0.1294117647058823,
0.1294117647058823,
0.1294117647058823,
0.8762810155749321,
},
["extra_icon_show_offensive_border"] = {
nil,
0,
0,
},
["saved_cvars"] = {
["ShowClassColorInNameplate"] = "1",
["nameplateOverlapV"] = "0.7789871096611",
["nameplateLargeTopInset"] = "0.10000000149012",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplatePersonalShowInCombat"] = "1",
["nameplateTargetRadialPosition"] = "1",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateShowAll"] = "1",
["nameplateMaxDistance"] = "39",
["nameplateShowFriendlyMinions"] = "0",
["nameplateSelfScale"] = "1",
["nameplateTargetBehindMaxDistance"] = "30",
["SoftTargetInteract"] = "3",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplatePersonalShowAlways"] = "0",
["nameplateMotionSpeed"] = "0.05",
["nameplateGlobalScale"] = "1",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "1.4143263101578",
["nameplateShowFriends"] = "0",
["nameplateMotion"] = "1",
["nameplateShowOnlyNames"] = "1",
["nameplateMinScale"] = "1",
["SoftTargetIconGameObject"] = "1",
["nameplateOtherTopInset"] = "0.10000000149012",
["nameplatePersonalShowWithTarget"] = "1",
["nameplateSelfBottomInset"] = "0.2",
["nameplateSelfAlpha"] = "1",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateOccludedAlphaMult"] = "0.4",
["NamePlateHorizontalScale"] = "1",
["nameplateSelfTopInset"] = "0.5",
["ShowNamePlateLoseAggroFlash"] = "1",
["nameplateMinAlphaDistance"] = "-158489.31924611",
},
["dps"] = {
["colors"] = {
["notontank"] = {
0.99607843137255,
0.29803921568627,
0.30980392156863,
},
["aggro"] = {
0.99607843137255,
0.29803921568627,
0.30980392156863,
},
["noaggro"] = {
0.73333333333333,
0.19607843137255,
},
["pulling"] = {
nil,
0.93333333333333,
0.43137254901961,
},
},
},
["aura_cooldown_show_swipe"] = false,
["login_counter"] = 16763,
["extra_icon_caster_name"] = false,
["click_space_friendly"] = {
50,
1,
},
["aura_width2"] = 22,
["target_highlight_height"] = 12,
["hover_highlight_alpha"] = 0.5,
["indicator_spec"] = false,
["aura_timer_text_outline"] = "NONE",
["extra_icon_auras_mine"] = {
["Axe Toss"] = true,
["Mortal Coil"] = true,
},
["castbar_icon_attach_to_side"] = "right",
["aura_stack_font"] = "Naowh",
["patch_version"] = 37,
["version"] = 8,
["range_check_in_range_or_target_alpha"] = 1,
["aura_timer_text_size"] = 9,
["aura_height_personal"] = 19,
["auto_toggle_combat"] = {
["enemy_ooc"] = true,
["enemy_ic"] = true,
["blizz_healthbar_ooc"] = true,
["blizz_healthbar_ic"] = true,
},
["number_region_first_run"] = true,
["news_frame"] = {
["PlaterNewsFrame"] = {
["scale"] = 1,
},
},
["target_highlight_alpha"] = 0.239999994635582,
["aura_tracker"] = {
["buff_tracked"] = {
[295425] = true,
},
["debuff_banned"] = {
["264263"] = true,
["339137"] = true,
},
},
["ui_parent_target_strata"] = "MEDIUM",
["profile_name"] = "Claudio",
["hide_friendly_castbars"] = true,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1.100000023841858,
},
},
["first_run3"] = true,
["pet_height_scale"] = 0.9999999403953552,
["extra_icon_use_blizzard_border_color"] = false,
["transparency_behavior_use_division"] = true,
["indicator_elite"] = false,
["castbar_target_outline"] = "NONE",
["resources"] = {
["y_offset_target"] = 20,
["y_offset_target_withauras"] = 32,
},
["aura_cooldown_reverse"] = false,
["pet_width_scale"] = 0.9999999403953552,
["indicator_raidmark_anchor"] = {
["y"] = 2,
["x"] = 0,
["side"] = 9,
},
["auras_per_row_amount"] = 4,
["npc_colors"] = {
[165872] = {
true,
false,
"deepskyblue",
},
[177889] = {
true,
false,
"mediumslateblue",
},
[165076] = {
true,
false,
"aqua",
},
[179388] = {
true,
false,
"aqua",
},
[162049] = {
true,
false,
"mediumslateblue",
},
[177891] = {
true,
false,
"deepskyblue",
},
[148120] = {
false,
false,
"blue",
},
[168393] = {
true,
false,
"deepskyblue",
},
[177892] = {
true,
false,
"deepskyblue",
},
[167533] = {
true,
false,
"deepskyblue",
},
[173016] = {
true,
false,
"aqua",
},
[165430] = {
true,
false,
"deepskyblue",
},
[162689] = {
true,
false,
"deepskyblue",
},
[169861] = {
true,
false,
"deepskyblue",
},
[169893] = {
true,
false,
"mediumslateblue",
},
[170690] = {
true,
false,
"deepskyblue",
},
[176396] = {
true,
false,
"mediumslateblue",
},
[170850] = {
true,
false,
"deepskyblue",
},
[170882] = {
true,
false,
"aqua",
},
[168396] = {
true,
false,
"deepskyblue",
},
[146753] = {
false,
false,
"blue",
},
[162691] = {
true,
false,
"mediumslateblue",
},
[163520] = {
true,
false,
"deepskyblue",
},
[169927] = {
true,
false,
"mediumslateblue",
},
[161895] = {
true,
false,
"magenta",
},
[162692] = {
true,
false,
"deepskyblue",
},
[165529] = {
true,
false,
"aqua",
},
[179841] = {
true,
false,
"aqua",
},
[174773] = {
true,
false,
"magenta",
},
[168717] = {
true,
false,
"deepskyblue",
},
[164414] = {
true,
false,
"aqua",
},
[163458] = {
true,
false,
"aqua",
},
[164510] = {
true,
false,
"deepskyblue",
},
[179842] = {
true,
false,
"deepskyblue",
},
[168718] = {
true,
false,
"aqua",
},
[163459] = {
true,
false,
"aqua",
},
[160495] = {
true,
false,
"aqua",
},
[168942] = {
true,
false,
"deepskyblue",
},
[163619] = {
false,
false,
"white",
},
[165946] = {
true,
false,
"deepskyblue",
},
[179334] = {
true,
false,
"mediumslateblue",
},
[163620] = {
true,
false,
"deepskyblue",
},
[120651] = {
true,
false,
"darksalmon",
},
[163621] = {
true,
false,
"deepskyblue",
},
[146409] = {
false,
false,
"darkgreen",
},
[168658] = {
true,
false,
"deepskyblue",
},
[164929] = {
true,
false,
"deepskyblue",
},
[167607] = {
true,
false,
"deepskyblue",
},
[166396] = {
true,
false,
"aqua",
},
[170572] = {
true,
false,
"aqua",
},
[176565] = {
true,
false,
"aqua",
},
[162317] = {
true,
false,
"deepskyblue",
},
[165919] = {
true,
false,
"deepskyblue",
},
[174175] = {
true,
false,
"deepskyblue",
},
[166302] = {
true,
false,
"aqua",
},
[165824] = {
true,
false,
"mediumslateblue",
},
[155433] = {
false,
false,
"magenta",
},
[169905] = {
true,
false,
"deepskyblue",
},
[155434] = {
false,
false,
"violet",
},
[165762] = {
true,
false,
"deepskyblue",
},
[168886] = {
true,
false,
"deepskyblue",
},
[172265] = {
true,
false,
"aqua",
},
[163882] = {
true,
false,
"deepskyblue",
},
[185685] = {
true,
false,
"orangered",
},
[167612] = {
true,
false,
"aqua",
},
[163086] = {
true,
false,
"deepskyblue",
},
[165222] = {
true,
false,
"aqua",
},
[165764] = {
true,
false,
"mediumslateblue",
},
[179821] = {
true,
false,
"mediumslateblue",
},
[165414] = {
true,
false,
"aqua",
},
[171343] = {
true,
false,
"deepskyblue",
},
[166275] = {
true,
false,
"aqua",
},
[173447] = {
false,
false,
"white",
},
[178133] = {
false,
false,
"aqua",
},
[178165] = {
true,
false,
"mediumslateblue",
},
[171376] = {
true,
false,
"deepskyblue",
},
[163121] = {
true,
false,
"deepskyblue",
},
[167998] = {
true,
false,
"deepskyblue",
},
[168572] = {
true,
false,
"deepskyblue",
},
[177816] = {
true,
false,
"deepskyblue",
},
[162038] = {
true,
false,
"deepskyblue",
},
[168318] = {
true,
false,
"deepskyblue",
},
[180335] = {
true,
false,
"deepskyblue",
},
[164557] = {
true,
false,
"deepskyblue",
},
[162039] = {
true,
false,
"aqua",
},
[168446] = {
true,
false,
"mediumslateblue",
},
[162103] = {
true,
false,
"deepskyblue",
},
[180336] = {
true,
false,
"aqua",
},
[164185] = {
true,
false,
"deepskyblue",
},
[162040] = {
true,
false,
"deepskyblue",
},
[178392] = {
true,
false,
"deepskyblue",
},
[166276] = {
true,
false,
"deepskyblue",
},
[177817] = {
true,
false,
"aqua",
},
[168443] = {
true,
false,
"deepskyblue",
},
[135246] = {
false,
false,
"white",
},
[177787] = {
true,
false,
"aqua",
},
[162047] = {
true,
false,
"deepskyblue",
},
[164921] = {
true,
false,
"aqua",
},
[180433] = {
true,
false,
"orangered",
},
[167965] = {
true,
false,
"aqua",
},
[163157] = {
true,
false,
"deepskyblue",
},
[173729] = {
true,
false,
"mediumslateblue",
},
[163894] = {
true,
false,
"deepskyblue",
},
[165137] = {
true,
false,
"deepskyblue",
},
[173044] = {
true,
false,
"aqua",
},
[163891] = {
true,
false,
"aqua",
},
[179733] = {
true,
false,
"orangered",
},
[163126] = {
true,
false,
"aqua",
},
[167493] = {
true,
false,
"aqua",
},
[172981] = {
true,
false,
"deepskyblue",
},
[167876] = {
true,
false,
"deepskyblue",
},
[162744] = {
true,
false,
"deepskyblue",
},
[167111] = {
true,
false,
"deepskyblue",
},
[168418] = {
true,
false,
"aqua",
},
[170490] = {
true,
false,
"aqua",
},
[168992] = {
true,
false,
"aqua",
},
[167536] = {
true,
false,
"deepskyblue",
},
[166299] = {
true,
false,
"aqua",
},
[168578] = {
true,
false,
"aqua",
},
[164266] = {
true,
false,
"deepskyblue",
},
[164562] = {
true,
false,
"deepskyblue",
},
[176395] = {
true,
false,
"deepskyblue",
},
[178141] = {
true,
false,
"deepskyblue",
},
[163128] = {
true,
false,
"aqua",
},
[166589] = {
true,
false,
"deepskyblue",
},
[179269] = {
true,
false,
"deepskyblue",
},
[178142] = {
true,
false,
"aqua",
},
[168681] = {
true,
false,
"mediumslateblue",
},
[164506] = {
true,
false,
"mediumslateblue",
},
[168420] = {
true,
false,
"aqua",
},
[163862] = {
true,
false,
"deepskyblue",
},
[171799] = {
true,
false,
"deepskyblue",
},
[163618] = {
true,
false,
"deepskyblue",
},
[165197] = {
true,
false,
"mediumslateblue",
},
[163524] = {
true,
false,
"mediumslateblue",
},
[168357] = {
true,
false,
"aqua",
},
[174210] = {
true,
false,
"aqua",
},
[179386] = {
true,
false,
"deepskyblue",
},
[180431] = {
true,
false,
"aqua",
},
[174197] = {
true,
false,
"aqua",
},
[168627] = {
true,
false,
"aqua",
},
},
["cast_statusbar_spark_width"] = 4,
["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator7",
},
},
}
PlaterLanguage = {
["language"] = "enUS",
["version"] = 1,
}
PlaterLogs = {
["_general_logs"] = {
"2024-10-09 08:25:45 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
"2024-10-08 17:24:46 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
"2024-10-08 16:52:43 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
"2024-10-08 10:46:35 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
"2024-10-07 20:42:37 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
"2024-10-07 20:35:03 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
"2024-10-07 20:33:32 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükisan",
"2024-10-07 16:07:26 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
"2024-10-04 16:32:31 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
"2024-10-04 15:39:18 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
"2024-09-26 20:49:08 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Yükimp",
"2024-09-25 20:11:39 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Yükimp",
"2024-09-25 20:09:33 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Yükisan",
"2024-09-25 15:06:28 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Yükimp",
"2024-09-24 21:30:25 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Yükisan",
"2024-09-24 21:29:58 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Yükisan",
"2024-09-24 21:29:39 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Yükisan",
"2024-09-24 20:58:24 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Yükisan",
"2024-09-24 20:57:53 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Yükisan",
},
["_error_logs"] = {
},
}
PlaterBackup = {
}
