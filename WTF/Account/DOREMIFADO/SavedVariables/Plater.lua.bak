
PlaterDB = {
["captured_spells"] = {
[445830] = {
["isChanneled"] = false,
["source"] = "Rampaging Deepflayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218657,
},
[59386] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Vrykul Skeleton",
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23970,
},
[343504] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Opeth",
["npcID"] = 174783,
},
[322681] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Stitchflesh's Creation",
["npcID"] = 164578,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2389,
},
[59019] = {
["isChanneled"] = false,
["source"] = "Spitting Cobra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29774,
},
[327664] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2389,
},
[153485] = {
["isChanneled"] = false,
["source"] = "Shadow-Chasm Worm",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217962,
},
[450177] = {
["type"] = "DEBUFF",
["source"] = "Vileroot",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214783,
},
[328687] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brittlebone Crossbowman",
["npcID"] = 166079,
},
[48400] = {
["encounterName"] = "Prince Keleseth",
["type"] = "DEBUFF",
["source"] = "Frost Tomb",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 23965,
},
[458610] = {
["isChanneled"] = false,
["source"] = "Toadstomper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207803,
},
[386176] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17252,
},
[446475] = {
["isChanneled"] = false,
["source"] = "Toadstomper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207803,
},
[343509] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Opeth",
["npcID"] = 174783,
},
[8599] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Metalworker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24078,
},
[449031] = {
["isChanneled"] = false,
["source"] = "Nerubian Slashjaw",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218654,
},
[320771] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Nalthor the Rimebinder",
["npcID"] = 162693,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2390,
},
[48193] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Skarvald the Constructor",
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24200,
},
[320772] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Nalthor the Rimebinder",
["npcID"] = 162693,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2390,
},
[454782] = {
["source"] = "Proscenium Punk",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 215791,
},
[58972] = {
["isChanneled"] = false,
["source"] = "Drakkari Fire Weaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29822,
},
[115804] = {
["source"] = "EagleGuard",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[59020] = {
["isChanneled"] = false,
["source"] = "Spitting Cobra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29774,
},
[22907] = {
["encounterName"] = "Frozen Commander",
["source"] = "Horde Ranger",
["isChanneled"] = false,
["encounterID"] = 519,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26801,
},
[135029] = {
["isChanneled"] = false,
["source"] = "Elémentaire d'eau",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208441,
},
[59611] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Overseer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24085,
},
[49966] = {
["isChanneled"] = false,
["source"] = "EagleCharge",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[440222] = {
["type"] = "DEBUFF",
["source"] = "Dark-Crazed Harvester",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 206067,
},
[59707] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["isChanneled"] = false,
["encounterID"] = 2025,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23954,
},
[42972] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Strategist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23956,
},
[320012] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["npcID"] = 163157,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2388,
},
[378394] = {
["isChanneled"] = false,
["source"] = "Rising Kelp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221062,
},
[334321] = {
["encounterName"] = "Surgeon Stitchflesh",
["type"] = "BUFF",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2389,
},
[47699] = {
["isChanneled"] = false,
["source"] = "Crystalline Keeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26782,
},
[455812] = {
["isChanneled"] = false,
["source"] = "Crazed Cabbage Smacker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206514,
},
[58973] = {
["isChanneled"] = false,
["source"] = "Drakkari God Hunter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29820,
},
[444826] = {
["isChanneled"] = false,
["source"] = "King Thoras Trollbane",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221635,
},
[377502] = {
["isChanneled"] = false,
["source"] = "Proscenium Puddlestomper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216072,
},
[59021] = {
["isChanneled"] = false,
["source"] = "Unyielding Constrictor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29768,
},
[448276] = {
["isChanneled"] = false,
["source"] = "Fungarian Sporeflinger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218667,
},
[320655] = {
["encounterName"] = "Blightbone",
["source"] = "Blightbone",
["npcID"] = 162691,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2387,
},
[455815] = {
["isChanneled"] = false,
["source"] = "Crazed Cabbage Smacker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206514,
},
[55077] = {
["isChanneled"] = false,
["source"] = "Savage Worg",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29735,
},
[59692] = {
["isChanneled"] = false,
["source"] = "Enslaved Proto-Drake",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24083,
},
[440231] = {
["type"] = "DEBUFF",
["source"] = "Dark-Crazed Harvester",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 206067,
},
[118905] = {
["isChanneled"] = false,
["source"] = "Capacitor Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61245,
},
[453773] = {
["source"] = "Nazgrim",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221634,
},
[61353] = {
["isChanneled"] = false,
["source"] = "Warp-Huntress Kula",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 32711,
},
[275563] = {
["isChanneled"] = false,
["source"] = "Shadowstarved Bullfrog",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214406,
},
[59389] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Prince Keleseth",
["isChanneled"] = false,
["encounterID"] = 2026,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23953,
},
[48179] = {
["encounterName"] = "Keristrasza",
["source"] = "Keristrasza",
["isChanneled"] = false,
["encounterID"] = 2011,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26723,
},
[455564] = {
["source"] = "Roth the Earthwound",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 226300,
},
[320788] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Nalthor the Rimebinder",
["npcID"] = 162693,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2390,
},
[323471] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Flesh Crafter",
["npcID"] = 165872,
},
[47748] = {
["encounterName"] = "Anomalus",
["source"] = "Anomalus",
["isChanneled"] = false,
["encounterID"] = 2009,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26763,
},
[47780] = {
["isChanneled"] = false,
["source"] = "Steward",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26729,
},
[42702] = {
["isChanneled"] = false,
["source"] = "Tunneling Ghoul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24084,
},
[59613] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Overseer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24085,
},
[55078] = {
["source"] = "Rune Weapon",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 27893,
},
[55142] = {
["encounterName"] = "Moorabi",
["source"] = "Moorabi",
["isChanneled"] = false,
["encounterID"] = 1980,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29305,
},
[31707] = {
["isChanneled"] = false,
["source"] = "Elémentaire d'eau",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208441,
},
[414945] = {
["isChanneled"] = false,
["source"] = "Fungarian Sporeflinger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218667,
},
[324372] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Monstrosity",
["npcID"] = 165197,
},
[448162] = {
["isChanneled"] = true,
["source"] = "Enormous Kelp-Snaggler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221061,
},
[450718] = {
["isChanneled"] = false,
["source"] = "Moth'ethk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206203,
},
[58975] = {
["isChanneled"] = false,
["source"] = "Drakkari Golem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29832,
},
[58991] = {
["isChanneled"] = false,
["source"] = "Drakkari Rhino",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29931,
},
[456212] = {
["type"] = "DEBUFF",
["source"] = "Webbed Ore Deposit",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 226716,
},
[59023] = {
["type"] = "DEBUFF",
["source"] = "Unyielding Constrictor",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 29768,
},
[440372] = {
["isChanneled"] = false,
["source"] = "Understalker Tunneler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216249,
},
[59614] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Overseer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24085,
},
[321821] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blight Bag",
["npcID"] = 165138,
},
[59694] = {
["isChanneled"] = false,
["source"] = "Proto-Drake Handler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24082,
},
[458771] = {
["type"] = "DEBUFF",
["source"] = "Ravageant",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 207826,
},
[452895] = {
["isChanneled"] = true,
["source"] = "Rabaan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228343,
},
[324381] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Monstrosity",
["npcID"] = 165197,
},
[58992] = {
["isChanneled"] = false,
["source"] = "Drakkari Rhino",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29931,
},
[29544] = {
["encounterName"] = "Frozen Commander",
["type"] = "DEBUFF",
["source"] = "Commander Kolurg",
["encounterID"] = 519,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26798,
},
[448173] = {
["source"] = "Enormous Kelp-Snaggler",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221061,
},
[334476] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2389,
},
[1604] = {
["source"] = "Proscenium Punk",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 215791,
},
[321575] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zolramus Necromancer",
["npcID"] = 163618,
},
[320170] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["npcID"] = 162692,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2388,
},
[449709] = {
["isChanneled"] = false,
["source"] = "Gorloc Springcaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218650,
},
[452903] = {
["source"] = "Rabaan",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 228343,
},
[320171] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["npcID"] = 163157,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2388,
},
[324387] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Monstrosity",
["npcID"] = 165197,
},
[448944] = {
["isChanneled"] = false,
["source"] = "Kobold Snuffercrusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218662,
},
[56837] = {
["isChanneled"] = false,
["source"] = "Mage Hunter Ascendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26727,
},
[21049] = {
["isChanneled"] = false,
["source"] = "Horde Berserker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26799,
},
[452905] = {
["source"] = "Rabaan",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 228343,
},
[444474] = {
["isChanneled"] = false,
["source"] = "Highlord Darion Mograine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221632,
},
[58993] = {
["isChanneled"] = false,
["source"] = "Living Mojo",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29830,
},
[446519] = {
["type"] = "BUFF",
["source"] = "Penumbral Shalehorn",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 227933,
},
[323496] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flesh Crafter",
["npcID"] = 165872,
},
[59616] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Dragonflayer Runecaster",
["isChanneled"] = false,
["encounterID"] = 2026,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23960,
},
[59696] = {
["isChanneled"] = false,
["source"] = "Proto-Drake Handler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24082,
},
[343556] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2389,
},
[324394] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Monstrosity",
["npcID"] = 165197,
},
[263841] = {
["isChanneled"] = false,
["source"] = "Basilic",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[59824] = {
["encounterName"] = "Gal'darah",
["source"] = "Gal'darah",
["isChanneled"] = false,
["encounterID"] = 1981,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29306,
},
[50131] = {
["isChanneled"] = false,
["source"] = "Mage Slayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26730,
},
[343558] = {
["encounterName"] = "Surgeon Stitchflesh",
["type"] = "BUFF",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2389,
},
[334488] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2389,
},
[50195] = {
["type"] = "BUFF",
["source"] = "Mage Hunter Ascendant",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26727,
},
[47688] = {
["isChanneled"] = false,
["source"] = "Chaotic Rift",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26918,
},
[445504] = {
["isChanneled"] = false,
["source"] = "Highlord Darion Mograine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221632,
},
[56934] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["isChanneled"] = false,
["encounterID"] = 2010,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26731,
},
[58994] = {
["isChanneled"] = false,
["source"] = "Living Mojo",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29830,
},
[465051] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Xal'atath",
["npcID"] = 230937,
},
[38618] = {
["encounterName"] = "Frozen Commander",
["source"] = "Commander Kolurg",
["isChanneled"] = false,
["encounterID"] = 519,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26798,
},
[320822] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zolramus Bonemender",
["npcID"] = 165222,
},
[59601] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Forge Master",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24079,
},
[444740] = {
["isChanneled"] = false,
["source"] = "King Thoras Trollbane",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221635,
},
[445507] = {
["isChanneled"] = false,
["source"] = "King Thoras Trollbane",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221635,
},
[334748] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Corpse Harvester",
["npcID"] = 166302,
},
[444741] = {
["source"] = "High Inquisitor Whitemane",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221633,
},
[320696] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stitched Vanguard",
["npcID"] = 163121,
},
[445508] = {
["isChanneled"] = false,
["source"] = "Nazgrim",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221634,
},
[1126] = {
["source"] = "Crenna Earth-Daughter",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209072,
},
[91800] = {
["source"] = "Bâfreracine",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26125,
},
[326574] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2389,
},
[59825] = {
["encounterName"] = "Gal'darah",
["type"] = "DEBUFF",
["source"] = "Gal'darah",
["encounterID"] = 1981,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 29306,
},
[56775] = {
["isChanneled"] = false,
["source"] = "Azure Magus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26722,
},
[338456] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kyrian Stitchwerk",
["npcID"] = 172981,
},
[35361] = {
["type"] = "BUFF",
["source"] = "Grove Walker",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 31228,
},
[333602] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brittlebone Mage",
["npcID"] = 163126,
},
[56919] = {
["encounterName"] = "Frozen Commander",
["source"] = "Horde Cleric",
["isChanneled"] = false,
["encounterID"] = 519,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26803,
},
[320573] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Zolramus Sorcerer",
["npcID"] = 163128,
},
[446535] = {
["source"] = "Alert Shalehorn",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 222618,
},
[333477] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Goregrind",
["npcID"] = 163621,
},
[81262] = {
["isChanneled"] = false,
["source"] = "Efflorescence",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47649,
},
[57063] = {
["encounterName"] = "Anomalus",
["source"] = "Anomalus",
["isChanneled"] = false,
["encounterID"] = 2009,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26763,
},
[320703] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stitched Vanguard",
["npcID"] = 163121,
},
[19134] = {
["encounterName"] = "Frozen Commander",
["source"] = "Commander Kolurg",
["isChanneled"] = false,
["encounterID"] = 519,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26798,
},
[348170] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stitchflesh's Creation",
["npcID"] = 164578,
},
[333479] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rotspew",
["npcID"] = 163620,
},
[55163] = {
["isChanneled"] = false,
["source"] = "Moorabi",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29305,
},
[335141] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nar'zudah",
["npcID"] = 165824,
},
[59826] = {
["encounterName"] = "Gal'darah",
["source"] = "Gal'darah",
["isChanneled"] = false,
["encounterID"] = 1981,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29306,
},
[461870] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Xal'atath",
["npcID"] = 229227,
},
[423801] = {
["isChanneled"] = false,
["source"] = "Moth'ethk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206203,
},
[333482] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rotspew",
["npcID"] = 163620,
},
[335143] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zolramus Bonemender",
["npcID"] = 165222,
},
[317898] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Brittlebone Mage",
["npcID"] = 163126,
},
[43650] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Dalronn the Controller",
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24201,
},
[58996] = {
["encounterName"] = "Slad'ran",
["source"] = "Slad'ran Viper",
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29680,
},
[333485] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Rotspew",
["npcID"] = 163620,
},
[42724] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["isChanneled"] = false,
["encounterID"] = 2025,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23954,
},
[59603] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Heartsplitter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24071,
},
[320200] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2389,
},
[55563] = {
["isChanneled"] = false,
["source"] = "Drakkari Earthshaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29829,
},
[345623] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nar'zudah",
["npcID"] = 165824,
},
[333488] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["npcID"] = 163157,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2388,
},
[48058] = {
["isChanneled"] = false,
["source"] = "Crystalline Frayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26793,
},
[321226] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["npcID"] = 163157,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2388,
},
[440162] = {
["isChanneled"] = false,
["source"] = "Fungarian Creepcap",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218665,
},
[413207] = {
["isChanneled"] = false,
["source"] = "Threadling Egg",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206083,
},
[79833] = {
["type"] = "BUFF",
["source"] = "Hyjal Protector",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 52216,
},
[458685] = {
["isChanneled"] = false,
["source"] = "Moth'ethk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206203,
},
[58981] = {
["isChanneled"] = false,
["source"] = "Drakkari Medicine Man",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29826,
},
[320717] = {
["encounterName"] = "Blightbone",
["type"] = "DEBUFF",
["source"] = "Carrion Worm",
["npcID"] = 164702,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2387,
},
[400050] = {
["isChanneled"] = false,
["source"] = "Disturbed Deepflayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215773,
},
[320462] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zolramus Sorcerer",
["npcID"] = 163128,
},
[60067] = {
["encounterName"] = "Frozen Commander",
["source"] = "Commander Kolurg",
["isChanneled"] = false,
["encounterID"] = 519,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26798,
},
[159786] = {
["type"] = "BUFF",
["source"] = "Unknown",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[413348] = {
["type"] = "BUFF",
["source"] = "Nisa Cindersteel",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 206135,
},
[450153] = {
["isChanneled"] = false,
["source"] = "Witherthorn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214790,
},
[275564] = {
["isChanneled"] = false,
["source"] = "Shadowstarved Bullfrog",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214406,
},
[320208] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Stitchflesh's Creation",
["npcID"] = 164578,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2389,
},
[446477] = {
["isChanneled"] = false,
["source"] = "Toadstomper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207803,
},
[320464] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zolramus Sorcerer",
["npcID"] = 163128,
},
[449965] = {
["isChanneled"] = false,
["source"] = "Witherthorn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214790,
},
[29882] = {
["isChanneled"] = false,
["source"] = "Crazed Mana-Surge",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26737,
},
[60227] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Strategist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23956,
},
[57091] = {
["encounterName"] = "Keristrasza",
["source"] = "Keristrasza",
["isChanneled"] = false,
["encounterID"] = 2011,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26723,
},
[448854] = {
["isChanneled"] = false,
["source"] = "Enraged Drunkard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218655,
},
[338606] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Separation Assistant",
["npcID"] = 167731,
},
[457797] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Deployed Battle Supplies",
["npcID"] = 227453,
},
[50155] = {
["encounterName"] = "Keristrasza",
["source"] = "Keristrasza",
["isChanneled"] = false,
["encounterID"] = 2011,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26723,
},
[445513] = {
["isChanneled"] = false,
["source"] = "High Inquisitor Whitemane",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221633,
},
[56776] = {
["isChanneled"] = false,
["source"] = "Azure Magus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26722,
},
[50994] = {
["isChanneled"] = false,
["source"] = "Crystalline Tender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28231,
},
[42669] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["isChanneled"] = false,
["encounterID"] = 2025,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23954,
},
[51587] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Spiritualist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28410,
},
[57052] = {
["isChanneled"] = false,
["source"] = "Crystalline Keeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26782,
},
[59397] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Vrykul Skeleton",
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23970,
},
[338353] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Corpse Collector",
["npcID"] = 173016,
},
[320596] = {
["encounterName"] = "Blightbone",
["source"] = "Blightbone",
["npcID"] = 162691,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2387,
},
[57082] = {
["encounterName"] = "Ormorok the Tree-Shaper",
["source"] = "Ormorok the Tree-Shaper",
["isChanneled"] = false,
["encounterID"] = 2012,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26794,
},
[61564] = {
["encounterName"] = "Ormorok the Tree-Shaper",
["source"] = "Ormorok the Tree-Shaper",
["isChanneled"] = false,
["encounterID"] = 2012,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26794,
},
[54878] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Elemental",
["isChanneled"] = false,
["encounterID"] = 1983,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29573,
},
[327240] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Loyal Creation",
["npcID"] = 165911,
},
[338610] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Separation Assistant",
["npcID"] = 167731,
},
[57054] = {
["isChanneled"] = true,
["source"] = "Crystalline Tender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28231,
},
[57051] = {
["isChanneled"] = false,
["source"] = "Crystalline Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26792,
},
[448859] = {
["source"] = "Enraged Drunkard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218655,
},
[290577] = {
["isChanneled"] = false,
["source"] = "Abomination",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 149555,
},
[333629] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Reanimated Crossbowman",
["npcID"] = 168246,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2388,
},
[57050] = {
["isChanneled"] = false,
["source"] = "Crystalline Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26792,
},
[57066] = {
["encounterName"] = "Ormorok the Tree-Shaper",
["source"] = "Ormorok the Tree-Shaper",
["isChanneled"] = false,
["encounterID"] = 2012,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26794,
},
[456653] = {
["isChanneled"] = false,
["source"] = "Rabaan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228343,
},
[47700] = {
["type"] = "DEBUFF",
["source"] = "Crystalline Keeper",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26782,
},
[338357] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kyrian Stitchwerk",
["npcID"] = 172981,
},
[59685] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Dragonflayer Strategist",
["isChanneled"] = false,
["encounterID"] = 2026,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23956,
},
[30633] = {
["isChanneled"] = false,
["source"] = "Crystalline Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26792,
},
[48053] = {
["isChanneled"] = false,
["source"] = "Crystalline Frayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26793,
},
[57056] = {
["isChanneled"] = true,
["source"] = "Crystalline Frayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26793,
},
[448351] = {
["isChanneled"] = false,
["source"] = "Kobold Snuffercrusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218662,
},
[48082] = {
["isChanneled"] = false,
["source"] = "Crystalline Frayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26793,
},
[317791] = {
["isChanneled"] = false,
["source"] = "Magus of the Dead",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163366,
},
[57047] = {
["isChanneled"] = false,
["source"] = "Crazed Mana-Surge",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26737,
},
[57062] = {
["encounterName"] = "Anomalus",
["source"] = "Anomalus",
["isChanneled"] = false,
["encounterID"] = 2009,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26763,
},
[54719] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Colossus",
["isChanneled"] = false,
["encounterID"] = 1983,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29307,
},
[317792] = {
["isChanneled"] = false,
["source"] = "Magus of the Dead",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163366,
},
[343470] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Marauder",
["npcID"] = 165919,
},
[47737] = {
["encounterName"] = "Anomalus",
["source"] = "Chaotic Rift",
["isChanneled"] = false,
["encounterID"] = 2009,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26918,
},
[56827] = {
["isChanneled"] = false,
["source"] = "Mage Hunter Ascendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26727,
},
[47747] = {
["encounterName"] = "Anomalus",
["source"] = "Anomalus",
["isChanneled"] = true,
["encounterID"] = 2009,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26763,
},
[58966] = {
["isChanneled"] = false,
["source"] = "Drakkari Battle Rider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29836,
},
[57046] = {
["isChanneled"] = false,
["source"] = "Crazed Mana-Surge",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26737,
},
[321754] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Nalthor the Rimebinder",
["npcID"] = 162693,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2390,
},
[56937] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["isChanneled"] = false,
["encounterID"] = 2010,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26930,
},
[15284] = {
["isChanneled"] = false,
["source"] = "Azure Enforcer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26734,
},
[47781] = {
["type"] = "DEBUFF",
["source"] = "Steward",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26729,
},
[321755] = {
["encounterName"] = "Nalthor the Rimebinder",
["type"] = "DEBUFF",
["source"] = "Nalthor the Rimebinder",
["npcID"] = 162693,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2390,
},
[56860] = {
["isChanneled"] = false,
["source"] = "Mage Hunter Initiate",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26728,
},
[47789] = {
["isChanneled"] = false,
["source"] = "Mage Hunter Ascendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26727,
},
[25058] = {
["isChanneled"] = false,
["source"] = "Mage Hunter Initiate",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26728,
},
[56825] = {
["isChanneled"] = false,
["source"] = "Mage Hunter Ascendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26727,
},
[30849] = {
["isChanneled"] = false,
["source"] = "Mage Slayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26730,
},
[59606] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Ironhelm",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23961,
},
[59617] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Dragonflayer Runecaster",
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23960,
},
[59638] = {
["isChanneled"] = false,
["source"] = "Mirror Image",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 31216,
},
[1459] = {
["source"] = "Meredy Huntswell",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209059,
},
[55582] = {
["isChanneled"] = false,
["source"] = "Drakkari Medicine Man",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29826,
},
[55598] = {
["isChanneled"] = false,
["source"] = "Drakkari Medicine Man",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29826,
},
[321247] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["npcID"] = 163157,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2388,
},
[47779] = {
["isChanneled"] = false,
["source"] = "Steward",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26729,
},
[328146] = {
["encounterName"] = "Blightbone",
["source"] = "Carrion Worm",
["npcID"] = 164702,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2387,
},
[58460] = {
["isChanneled"] = false,
["source"] = "Azure Enforcer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26734,
},
[47784] = {
["isChanneled"] = false,
["source"] = "Mage Hunter Ascendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26727,
},
[56969] = {
["encounterName"] = "Frozen Commander",
["source"] = "Azure Scale-Binder",
["isChanneled"] = false,
["encounterID"] = 519,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26735,
},
[33833] = {
["encounterName"] = "Frozen Commander",
["source"] = "Crazed Mana-Wraith",
["isChanneled"] = false,
["encounterID"] = 519,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26746,
},
[338653] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stitching Assistant",
["npcID"] = 173044,
},
[38619] = {
["encounterName"] = "Frozen Commander",
["source"] = "Commander Kolurg",
["isChanneled"] = false,
["encounterID"] = 519,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26798,
},
[38384] = {
["isChanneled"] = false,
["source"] = "Mage Hunter Ascendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26727,
},
[31403] = {
["encounterName"] = "Frozen Commander",
["source"] = "Commander Kolurg",
["isChanneled"] = false,
["encounterID"] = 519,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26798,
},
[56920] = {
["encounterName"] = "Frozen Commander",
["source"] = "Horde Cleric",
["isChanneled"] = false,
["encounterID"] = 519,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26803,
},
[440313] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Xal'atath",
["npcID"] = 230937,
},
[43651] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Skarvald the Constructor",
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24200,
},
[327127] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flesh Crafter",
["npcID"] = 165872,
},
[49722] = {
["isChanneled"] = false,
["source"] = "Enslaved Proto-Drake",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24083,
},
[47774] = {
["isChanneled"] = false,
["source"] = "Horde Berserker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26799,
},
[415403] = {
["isChanneled"] = false,
["source"] = "Drakkari God Hunter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29820,
},
[451812] = {
["isChanneled"] = false,
["source"] = "Burkhalt",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228671,
},
[50182] = {
["isChanneled"] = false,
["source"] = "Mage Hunter Ascendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26727,
},
[50132] = {
["type"] = "DEBUFF",
["source"] = "Mage Slayer",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26730,
},
[320358] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2389,
},
[413488] = {
["type"] = "BUFF",
["source"] = "Invasive Lashroom",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 206194,
},
[320614] = {
["encounterName"] = "Blightbone",
["source"] = "Carrion Worm",
["npcID"] = 164702,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2387,
},
[59575] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Dalronn the Controller",
["isChanneled"] = false,
["encounterID"] = 2024,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24201,
},
[320359] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2389,
},
[327130] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flesh Crafter",
["npcID"] = 165872,
},
[263852] = {
["isChanneled"] = false,
["source"] = "Oiseau de proie",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[59691] = {
["isChanneled"] = false,
["source"] = "Enslaved Proto-Drake",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24083,
},
[55567] = {
["isChanneled"] = false,
["source"] = "Drakkari Earthshaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29829,
},
[328664] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Brittlebone Mage",
["npcID"] = 163126,
},
[445811] = {
["source"] = "Waxen Bones",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 229808,
},
[55104] = {
["encounterName"] = "Moorabi",
["source"] = "Moorabi",
["isChanneled"] = false,
["encounterID"] = 1980,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29305,
},
[321894] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Nalthor the Rimebinder",
["npcID"] = 162693,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2390,
},
[320839] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Zolramus Siphoner",
["npcID"] = 164815,
},
[388897] = {
["type"] = "DEBUFF",
["source"] = "Wandering Scuttleshell",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 229820,
},
[199373] = {
["isChanneled"] = false,
["source"] = "Army of the Dead",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24207,
},
[457266] = {
["isChanneled"] = false,
["source"] = "Greenhorn Extra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228307,
},
[440912] = {
["isChanneled"] = false,
["source"] = "Invasive Lashroom",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206194,
},
[33907] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Broll Bearmantle",
["npcID"] = 142294,
},
[324323] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Marauder",
["npcID"] = 165919,
},
[48094] = {
["isChanneled"] = false,
["source"] = "Keristrasza",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26723,
},
[328667] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brittlebone Mage",
["npcID"] = 163126,
},
[321807] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zolramus Bonecarver",
["npcID"] = 163619,
},
[59455] = {
["encounterName"] = "Drakkari Colossus",
["type"] = "DEBUFF",
["source"] = "Drakkari Colossus",
["encounterID"] = 1983,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 29307,
},
[59734] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["isChanneled"] = false,
["encounterID"] = 2025,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23954,
},
[31567] = {
["isChanneled"] = false,
["source"] = "Drakkari God Hunter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29820,
},
[324293] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Marauder",
["npcID"] = 165919,
},
[59599] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Bonecrusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24069,
},
[59607] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Ironhelm",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23961,
},
[449368] = {
["isChanneled"] = false,
["source"] = "Wanderer Ida",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220953,
},
[47743] = {
["encounterName"] = "Anomalus",
["source"] = "Anomalus",
["isChanneled"] = false,
["encounterID"] = 2009,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26763,
},
[61556] = {
["encounterName"] = "Ormorok the Tree-Shaper",
["type"] = "DEBUFF",
["source"] = "Crystalline Tangler",
["encounterID"] = 2012,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 32665,
},
[320366] = {
["encounterName"] = "Surgeon Stitchflesh",
["type"] = "DEBUFF",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2389,
},
[47791] = {
["type"] = "BUFF",
["source"] = "Mage Hunter Ascendant",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26727,
},
[334747] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Corpse Harvester",
["npcID"] = 166302,
},
[327393] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zolramus Necromancer",
["npcID"] = 163618,
},
[338636] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Separation Assistant",
["npcID"] = 167731,
},
[59608] = {
["isChanneled"] = false,
["source"] = "Dragonflayer Metalworker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24078,
},
[448441] = {
["isChanneled"] = false,
["source"] = "Gorloc Springcaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218650,
},
[61684] = {
["isChanneled"] = false,
["source"] = "Basilic",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[59687] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Ticking Time Bomb",
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 32246,
},
[399701] = {
["isChanneled"] = false,
["source"] = "Disturbed Deepflayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215773,
},
[445819] = {
["isChanneled"] = false,
["source"] = "Rampaging Deepflayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218657,
},
[377589] = {
["source"] = "Rampechancre",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26125,
},
[442487] = {
["source"] = "Springbubble",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 219262,
},
[399702] = {
["isChanneled"] = false,
["source"] = "Disturbed Deepflayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215773,
},
[426869] = {
["isChanneled"] = false,
["source"] = "Rabaan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228343,
},
[327396] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Zolramus Necromancer",
["npcID"] = 163618,
},
[48583] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Skarvald the Constructor",
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24200,
},
[13446] = {
["isChanneled"] = false,
["source"] = "Tunneling Ghoul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24084,
},
[39376] = {
["isChanneled"] = true,
["source"] = "Mage Hunter Ascendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26727,
},
[55106] = {
["encounterName"] = "Moorabi",
["source"] = "Moorabi",
["isChanneled"] = false,
["encounterID"] = 1980,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29305,
},
[321576] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Brittlebone Warrior",
["npcID"] = 163122,
},
[224125] = {
["source"] = "Spirit Wolf",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 100820,
},
[59695] = {
["isChanneled"] = false,
["source"] = "Proto-Drake Handler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24082,
},
[42771] = {
["type"] = "BUFF",
["source"] = "Dragonflayer Ironhelm",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 23961,
},
[55098] = {
["encounterName"] = "Moorabi",
["source"] = "Moorabi",
["isChanneled"] = false,
["encounterID"] = 1980,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29305,
},
[449960] = {
["isChanneled"] = false,
["source"] = "Elma",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228419,
},
[48191] = {
["encounterName"] = "Frozen Commander",
["source"] = "Horde Ranger",
["isChanneled"] = true,
["encounterID"] = 519,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26801,
},
[54850] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Colossus",
["isChanneled"] = false,
["encounterID"] = 1983,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29307,
},
[320571] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zolramus Sorcerer",
["npcID"] = 163128,
},
[17253] = {
["isChanneled"] = false,
["source"] = "Basilic",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[224729] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brittlebone Mage",
["npcID"] = 163126,
},
[61362] = {
["isChanneled"] = false,
["source"] = "Drakkari Fire Weaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29822,
},
[15580] = {
["isChanneled"] = false,
["source"] = "Drakkari Inciter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29874,
},
[108446] = {
["isChanneled"] = false,
["source"] = "Unknown",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 417,
},
[320630] = {
["encounterName"] = "Blightbone",
["type"] = "DEBUFF",
["source"] = "Carrion Worm",
["npcID"] = 164702,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2387,
},
[321780] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zolramus Necromancer",
["npcID"] = 163618,
},
[449522] = {
["isChanneled"] = false,
["source"] = "Nerubian Disruptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216356,
},
[224127] = {
["source"] = "Spirit Wolf",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 212489,
},
[2649] = {
["isChanneled"] = false,
["source"] = "EagleCharge",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[57086] = {
["encounterName"] = "Ormorok the Tree-Shaper",
["source"] = "Ormorok the Tree-Shaper",
["isChanneled"] = false,
["encounterID"] = 2012,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26794,
},
[320376] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Stitchflesh's Creation",
["npcID"] = 164578,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2389,
},
[322548] = {
["encounterName"] = "Surgeon Stitchflesh",
["type"] = "BUFF",
["source"] = "Stitchflesh's Creation",
["npcID"] = 164578,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2389,
},
[432030] = {
["isChanneled"] = false,
["source"] = "Nerubian Slashjaw",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218654,
},
[390256] = {
["isChanneled"] = false,
["source"] = "Proscenium Punk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215791,
},
[59146] = {
["isChanneled"] = false,
["source"] = "Drakkari God Hunter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29820,
},
[59839] = {
["encounterName"] = "Slad'ran",
["source"] = "Slad'ran",
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29304,
},
[160060] = {
["isChanneled"] = false,
["source"] = "EagleGuard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[459753] = {
["isChanneled"] = false,
["source"] = "Fenryr",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228224,
},
[201754] = {
["isChanneled"] = false,
["source"] = "EagleCharge",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[446409] = {
["isChanneled"] = false,
["source"] = "Enormous Kelp-Snaggler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221061,
},
[55218] = {
["encounterName"] = "Gal'darah",
["source"] = "Gal'darah",
["isChanneled"] = false,
["encounterID"] = 1981,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29306,
},
[326629] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2389,
},
[320637] = {
["encounterName"] = "Blightbone",
["source"] = "Blightbone",
["npcID"] = 162691,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2387,
},
},
["profileKeys"] = {
["Yükisan - Dalaran"] = "ClaudioWithin",
["Yükidnapé - Dalaran"] = "Default",
["Pwout - Dalaran"] = "Claudio",
["Canplay - Dalaran"] = "Claudio",
["Yükatechisme - Dalaran"] = "Default",
["Wifi - Dalaran"] = "Claudio",
["Yukiwaifu - Dalaran"] = "Default",
["Pantoufle - Dalaran"] = "Default",
["Superbarbe - Dalaran"] = "Claudio",
["Peestache - Dalaran"] = "Claudio",
["Yükikstarter - Dalaran"] = "Default",
["Yükringe - Dalaran"] = "Default",
["Yükimp - Dalaran"] = "ClaudioWithin",
},
["profiles"] = {
["Default"] = {
["use_ui_parent"] = true,
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Extra Border"] = 2,
["Cast Bar Icon Config"] = 2,
["Execute Range"] = 1,
["Hide Neutral Units"] = 1,
["Attacking Specific Unit"] = 2,
["Target Color"] = 3,
["Aura Reorder"] = 3,
["Combo Points"] = 6,
},
["expansion_triggerwipe"] = {
[9] = true,
[10] = true,
},
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 632,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Buff Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = false,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["NpcNames"] = {
},
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Effect After Cast [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = false,
["Revision"] = 533,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Explosion Affix M+ [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 368,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Desc"] = "Add the debuff name in the trigger box.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Debuff Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Alert + Timer [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = false,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Ultra Important [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Health Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1719452142,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 156,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["NpcNames"] = {
"214840",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Health Markers [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Small Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 572,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Important [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "nameplateSizeOffset",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullAlpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Key"] = "skullScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1626382829,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Revision"] = 375,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Key"] = "timeleftToBlink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Timeleft to Blink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "blinkSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Key"] = "blinkMaxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Warning",
["Value"] = 8,
["Key"] = "timeLeftWarning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Critical",
["Value"] = 3,
["Key"] = "timeLeftCritical",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Tag Number [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = false,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Glowing [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Important Target [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetNameSize",
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetFrameWidth",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Name"] = "Frame Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = false,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Quick Flash [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["NpcNames"] = {
},
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Name"] = "Aura is Shield [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color of  add",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Warning [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["Icon"] = 236209,
["Enabled"] = true,
["Revision"] = 18,
["semver"] = "",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura While Casting [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = false,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Big Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Stop Casting [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1611844883,
["url"] = "",
["Icon"] = 135945,
["Enabled"] = true,
["Revision"] = 186,
["semver"] = "",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Time to die Spiteful affix",
["NpcNames"] = {
"174773",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "M+ Spiteful",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.07058823529411765,
0.6196078431372549,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1604696441,
["url"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Enabled"] = false,
["Revision"] = 63,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Auto Set Skull",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["Icon"] = 136048,
["Enabled"] = true,
["Revision"] = 233,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Unit - Show Energy [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Key"] = "fontSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.803921568627451,
0.803921568627451,
0.803921568627451,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Enabled"] = true,
["Revision"] = 111,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Non Elite Trash [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Scale",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Shield Interrupt [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = false,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Circle AoE [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "rotationDuration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animStartDuration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Start Alpha",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureScale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureAlpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - On Going Cast [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Dots Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Key"] = "speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Key"] = "minAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Enabled"] = true,
["Revision"] = 33,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Fixate by Unit Buff [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the reference of the arrow texture\n    local movingArrowTexture = unitFrame._movingArrowTexture\n    \n    --if it doesn't exists yet, create now\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    local mAT = movingArrowTexture\n    \n    if (not mAT.movingAnimation) then\n        local onPlay = function()\n            mAT:Show() \n        end\n        \n        local onStop =  function()\n            mAT:Hide() \n        end\n        \n        mAT.movingAnimation = Plater:CreateAnimationHub( mAT, onPlay, onStop )\n        mAT.movingAnimation:SetLooping( \"REPEAT\" )\n    end\n    \n    if (not mAT.arrowAnimation) then\n        local arrowAnimation = Plater:CreateAnimation (mAT.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n        mAT.arrowAnimation = arrowAnimation\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    mAT.movingAnimation:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    local maxAlpha = scriptTable.config.arrowAlpha\n    \n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = mAT.movingAnimation:GetProgress()\n    \n    if (percent < 0.20) then\n        local value = DetailsFramework.Math.MapRangeClamped(0, 0.20, 0, maxAlpha, percent)\n        mAT:SetAlpha(value)\n        \n    elseif (percent > 0.8) then\n        local value = DetailsFramework.Math.MapRangeClamped(0.8, 1, maxAlpha, 0, percent)\n        mAT:SetAlpha(value)\n    end\n    \n    self.ThrottleUpdate = 0\n    \n    --mAT:SetAlpha(1)\nend",
["Time"] = 1719788095,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 754,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
431494,
426860,
448213,
434407,
439789,
434824,
453161,
435012,
439506,
443500,
434779,
451543,
439621,
441384,
441381,
447395,
456711,
448105,
323137,
321968,
331718,
331721,
325223,
340160,
321834,
320596,
324323,
333488,
323496,
333477,
256627,
257292,
454438,
269029,
257862,
425027,
449130,
428202,
448640,
427869,
116,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Frontal Cone [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animSpeed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Option 8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bChangeSpellName",
["Value"] = true,
["Name"] = "Change Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the spell name to the text entered below",
},
{
["Type"] = 3,
["Key"] = "spellNameText",
["Value"] = "Frontal",
["Name"] = "New Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The customized spell name",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    \n    mAT:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    mAT:SetSize(16, self:GetHeight())\n    mAT:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    mAT:SetParent(self.FrameOverlay)\n    mAT:SetDrawLayer(\"overlay\",  7)\n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    mAT:SetDesaturated(scriptTable.config.desaturateArrow)        \n    \n    mAT:ClearAllPoints()\n    mAT:SetPoint(\"left\", self, \"left\", -16, 0)\n    \n    local arrowAnimation = mAT.arrowAnimation\n    arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    arrowAnimation:SetOffset(self:GetWidth(), 0)\n    \n    mAT.movingAnimation:Play()\n    \n    if (scriptTable.config.bChangeSpellName) then\n        self.Text:SetText(scriptTable.config.spellNameText)\n    end\n    \n    --DetailsFramework:DebugVisibility(mAT)\n\nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = true,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Explode on Die [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["Icon"] = 1029718,
["Enabled"] = true,
["Revision"] = 269,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Fixate [Plater]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604354364,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 206,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Countdown",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = false,
["Revision"] = 828,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Very Important [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604087921,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 266,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["NpcNames"] = {
},
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["Name"] = "Fixate On You [Plater]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage(unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    self.BigSparkle = self.BigSparkle or Plater:CreateImage(self.FrameOverlay)\n    self.BigSparkle.texture = [[Interface\\AddOns\\Plater\\images\\cast_bar_vertical_spark.png]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    self.BigSparkle:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    self.BigSparkle:ClearAllPoints()\n    self.BigSparkle:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 0)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\nend\n\n\n\n\n",
["Time"] = 1719711112,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_important_bycolor.png",
["Enabled"] = true,
["Revision"] = 831,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode, summon or transform if the cast passes.",
["NpcNames"] = {
},
["SpellIds"] = {
432967,
446717,
451379,
451067,
448013,
448057,
322486,
341709,
321226,
429428,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Important by Color [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation changing the cast bar color.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "To get a list of color names, use: /plater colors",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Health Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 6,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    self.BigSparkle:Show()\n    self.BigSparkle:SetWidth(8)\n    self.BigSparkle:SetHeight(self:GetHeight() + unitFrame.healthBar:GetHeight())\n    self.BigSparkle:SetScale(1)\n    self.BigSparkle:SetVertexColor(1,1, 1, 1)\n    envTable.overlaySpark:Hide()\n    \n    self.Spark:Hide()\n    \n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.dotAnimation:SetPoint(\"bottomright\", self, \"bottomright\", scriptTable.config.xOffset, -scriptTable.config.yOffset)\n    \n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711125,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_shining_green.png",
["Enabled"] = true,
["Revision"] = 873,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
434802,
448248,
453840,
337249,
324293,
49184,
449455,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Shining Green [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    --envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1719788204,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_special_ability.png",
["Enabled"] = true,
["Revision"] = 613,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "For unique abilities that are an important part of the fight against a bosses or mini bosse.",
["NpcNames"] = {
},
["SpellIds"] = {
451026,
452127,
446615,
433766,
432117,
448560,
440218,
441289,
447146,
438860,
448847,
449687,
456751,
449939,
336499,
322550,
320208,
321894,
276068,
423200,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Special Ability [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 139,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["NpcNames"] = {
},
["SpellIds"] = {
447141,
432967,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heroic Leap [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
},
{
["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.Spark:SetVertexColor( unpack(Plater.db.profile.cast_statusbar_spark_color) )\n    PixelUtil.SetSize( self.Spark, Plater.db.profile.cast_statusbar_spark_width, self:GetHeight() )\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1719711134,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_spark.png",
["Enabled"] = true,
["Revision"] = 75,
["semver"] = "",
["Author"] = "Tennah-These Go To Eleven",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Change the spark color to differentiate a cast from another.",
["NpcNames"] = {
},
["SpellIds"] = {
453140,
456713,
450088,
322614,
323730,
257348,
272422,
429427,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Spark Color [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "In the box at right, add the spell id and the color.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "To get a list of colors, use: /plater colors",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "sparkWithScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Spark Width Scale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Name"] = "Spark Height Scale",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "sparkHeightScale",
},
{
["Type"] = 7,
["Key"] = "sparkColor",
["Value"] = {
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the spark color\n    local sparkColor = scriptTable.config.sparkColor[tostring(envTable._SpellID)]\n    \n    self.Spark:SetVertexColor(DetailsFramework:ParseColors(sparkColor))\n    \n    self.Spark:SetWidth( self.Spark:GetWidth() * scriptTable.config.sparkWithScale )\n    self.Spark:SetHeight( self.Spark:GetHeight() * scriptTable.config.sparkHeightScale )\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719679972,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 551,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Healing effect that cannot be interrupted.",
["NpcNames"] = {
},
["SpellIds"] = {
432520,
320822,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heal Stun [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719757483,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2_icon.png",
["Enabled"] = true,
["Revision"] = 318,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
451102,
426787,
448888,
439811,
434796,
434793,
438879,
438473,
434252,
434829,
440468,
436205,
436246,
441395,
437533,
451965,
456902,
456900,
451996,
451939,
450077,
450079,
324909,
324922,
460092,
272711,
269266,
425974,
424879,
426771,
426786,
423324,
428879,
116,
},
["PlaterCore"] = 1,
["Name"] = "Cast - AoE Hit All [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "How much time takes for one revolution.",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.05,
["Name"] = "Animation Start Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 1,
["Key"] = "textureStartAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.9,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.6392157077789307,
0.6392157077789307,
0.6392157077789307,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.1, 0.5)\n    \n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    if (envTable._CanInterrupt) then\n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    else        \n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    end    \n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719694337,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_debuff.png",
["Enabled"] = true,
["Revision"] = 741,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["NpcNames"] = {
},
["SpellIds"] = {
432448,
431309,
451107,
451119,
438618,
436322,
443507,
443436,
439341,
447261,
449444,
451224,
451241,
450095,
451612,
451395,
324987,
327393,
256709,
268230,
275836,
426308,
449153,
427461,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Debuff [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9686275124549866,
0.9764706492424011,
1,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Trail Color",
["Value"] = {
0.4901961088180542,
0,
0.5490196347236633,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (IsInRaid()) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    --textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:SetTexture([[Interface\\AddOns\\Plater\\images\\tail_rounded_white.png]])\n    textureStretched:SetHeight(castBar:GetHeight() + 2)\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    \n    --trail\n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    --local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    --Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    self.simpleInterruptFlash = self.simpleInterruptFlash or  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    \n    self.simpleInterruptFlash:SetBlendMode (\"ADD\")\n    self.simpleInterruptFlash:SetDrawLayer(\"OVERLAY\", 7)\n    self.simpleInterruptFlash:SetPoint (\"center\", self, \"center\")\n    self.simpleInterruptFlash:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    self.simpleInterruptFlashAnimHub = self.simpleInterruptFlashAnimHub or Plater:CreateAnimationHub (self.simpleInterruptFlash, \n        function()\n            self.simpleInterruptFlash:Show()\n        end,\n        function()\n            self.simpleInterruptFlash:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    self.simpleInterruptFlashAnimHub.fadeIn = self.simpleInterruptFlashAnimHub.fadeIn or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    self.simpleInterruptFlashAnimHub.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    self.simpleInterruptFlashAnimHub.fadeOut = self.simpleInterruptFlashAnimHub.fadeOut or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    self.simpleInterruptFlashAnimHub.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    self.simpleInterruptFlashAnimHub:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711128,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 958,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start.",
["NpcNames"] = {
},
["SpellIds"] = {
431333,
442210,
443430,
443433,
451871,
76711,
334748,
334749,
328667,
338353,
445207,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Simple Interrupt [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    self.simpleInterruptFlash:SetHeight(self:GetHeight() * 2.5 )\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    self.simpleInterruptFlashAnimHub:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Enabled"] = true,
["Revision"] = 158,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["NpcNames"] = {
},
["SpellIds"] = {
431364,
423327,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Ongoing Cast [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Name"] = "Dots Y Offset",
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Min Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "maxAlpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1722866303,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Enabled"] = true,
["Revision"] = 1254,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heal Cut [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.TextureWatchStep) then\n        \n        unitFrame.TextureWatchStep = true\n        \n        local animationFrame = CreateFrame(\"frame\", nil, unitFrame)\n        \n        \n        --> single animation group\n        local bearTrapAnimation = animationFrame:CreateAnimationGroup(\"beartrapAnimationGroup\")\n        bearTrapAnimation:SetLooping(\"NONE\")\n        \n        --> widgets:\n        \n        ----------------------------------------------\n        \n        local leftTrap  = animationFrame:CreateTexture(\"$parentleftTrapTexture\", \"ARTWORK\")\n        leftTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        leftTrap:SetDrawLayer(\"ARTWORK\", 0)\n        leftTrap:SetPoint(\"center\", animationFrame, \"center\", -48, 0)\n        leftTrap:SetSize(100, 100)\n        leftTrap:SetTexCoord(1, 0.0010000000149012, 0.0010000000149012, 1)\n        \n        --> animations for leftTrap\n        \n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(1)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetStartDelay(0.39999997615814)\n        leftTrap.rotation:SetDegrees(-90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(6)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetDegrees(90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        leftTrap.alpha:SetTarget(leftTrap)\n        leftTrap.alpha:SetOrder(6)\n        leftTrap.alpha:SetDuration(0.195999994874)\n        leftTrap.alpha:SetFromAlpha(1)\n        leftTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local rightTrap  = animationFrame:CreateTexture(\"$parentrightTrapTexture\", \"ARTWORK\")\n        rightTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        rightTrap:SetDrawLayer(\"ARTWORK\", 0)\n        rightTrap:SetPoint(\"center\", animationFrame, \"center\", 0, 0)\n        rightTrap:SetSize(100, 100)\n        \n        --> animations for rightTrap\n        \n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(1)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetStartDelay(0.39999997615814)\n        rightTrap.rotation:SetDegrees(90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(6)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetDegrees(-90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        rightTrap.alpha:SetTarget(rightTrap)\n        rightTrap.alpha:SetOrder(6)\n        rightTrap.alpha:SetDuration(0.195999994874)\n        rightTrap.alpha:SetFromAlpha(1)\n        rightTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local boots  = animationFrame:CreateTexture(\"$parentbootsTexture\", \"BORDER\")\n        boots:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_shoes.png]])\n        boots:SetDrawLayer(\"BORDER\", 0)\n        boots:SetPoint(\"center\", animationFrame, \"center\", -88, 35)\n        boots:SetSize(50, 50)\n        \n        --> animations for boots\n        \n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(1)\n        boots.alpha:SetDuration(0.31599998474121)\n        boots.alpha:SetFromAlpha(0)\n        boots.alpha:SetToAlpha(1)\n        boots.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        boots.rotation:SetTarget(boots)\n        boots.rotation:SetOrder(1)\n        boots.rotation:SetDuration(0.2960000038147)\n        boots.rotation:SetStartDelay(0.19999998807907)\n        boots.rotation:SetDegrees(40)\n        boots.rotation:SetOrigin(\"center\", 0, 0)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(1)\n        boots.translation:SetDuration(0.59599995613098)\n        boots.translation:SetOffset(63, -33)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(2)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(3)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(4)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(5)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(6)\n        boots.alpha:SetDuration(0.39599999785423)\n        boots.alpha:SetFromAlpha(1)\n        boots.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        unitFrame.BearTrapTextures = {leftTrap, rightTrap, boots}\n        unitFrame.BearTrapAnimationFrame = animationFrame\n        unitFrame.BearTrapAnimation = bearTrapAnimation\n        \n        \n        bearTrapAnimation:SetScript(\"OnPlay\", function()\n                boots:SetAlpha(0)\n                boots:Show()\n                leftTrap:Show()\n                rightTrap:Show()            \n        end)\n        \n        bearTrapAnimation:SetScript(\"OnFinished\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)       \n        \n        bearTrapAnimation:SetScript(\"OnStop\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)           \n        \n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1720031975,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_voidzone.png",
["Enabled"] = true,
["Revision"] = 220,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play an animation when the cast creates small zones in the ground that will damage if the player doesn't move.",
["NpcNames"] = {
},
["SpellIds"] = {
450784,
451423,
445813,
445838,
438658,
433845,
456696,
451391,
324923,
323138,
340189,
326021,
320571,
321780,
345623,
333479,
334476,
320772,
257882,
424903,
426345,
422233,
445541,
428703,
439559,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Voidzone [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Settings for the animation played when the cast creates small void zones in the ground.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimationFrame:SetSize(1, 1)\n    unitFrame.BearTrapAnimationFrame:ClearAllPoints()\n    unitFrame.BearTrapAnimationFrame:SetPoint(\"center\", unitFrame, \"center\", 30, 63)\n    unitFrame.BearTrapAnimationFrame:SetScale(0.5)\n    \n    unitFrame.BearTrapAnimation:Play()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719758013,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 281,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
453212,
451098,
427001,
438622,
446086,
447271,
437700,
439646,
448877,
451387,
331743,
320637,
327240,
257170,
257326,
257169,
423538,
428508,
428520,
116,
},
["PlaterCore"] = 1,
["Name"] = "Cast - AoE With Range [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.2,
["Name"] = "Animation Start Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 0.3,
["Key"] = "textureStartAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.7411764860153198,
0.7411764860153198,
0.7411764860153198,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719788550,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
["Enabled"] = true,
["Revision"] = 27,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show a castbar for the aura duration.",
["NpcNames"] = {
},
["SpellIds"] = {
438494,
335141,
},
["PlaterCore"] = 1,
["Name"] = "Aura - Is Cast Bar [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
},
},
["aura2_x_offset"] = 0,
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Kastfall-Azralon",
["Name"] = "Color Automation [Plater]",
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1547392935,
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Name"] = "Hide Neutral Units [Plater]",
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1541606242,
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 93,
["Options"] = {
},
["HooksTemp"] = {
},
["version"] = -1,
["Author"] = "Kastfall-Azralon",
["LastHookEdited"] = "",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["semver"] = "",
["Time"] = 1596791840,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 574574,
["Name"] = "Reorder Nameplate [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Name"] = "Don't Have Aura [Plater]",
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
},
["Time"] = 1554138845,
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Tecno-Azralon",
["Name"] = "Extra Border [Plater]",
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["Time"] = 1547409079,
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Name"] = "Current Target Color [Plater]",
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1552354619,
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 878211,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 348,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Name"] = "Icon Size Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconSizeOffset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Key"] = "iconPadding",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.3056715726852417,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 10,
["Name"] = "Texture Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureWidth",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Key"] = "textureHeightMod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Texture Position",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "texturePosition",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
},
["HooksTemp"] = {
},
["version"] = -1,
["Author"] = "Ditador-Azralon",
["LastHookEdited"] = "",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["semver"] = "",
["Time"] = 1597097268,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["Name"] = "Cast Bar Icon Settings [P]",
},
{
["Enabled"] = false,
["Revision"] = 84,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Ahwa-Azralon",
["Name"] = "Execute Range [Plater]",
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1547406548,
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 363,
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.5019607843137255,
0.5019607843137255,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["HooksTemp"] = {
},
["version"] = -1,
["Author"] = "Kastfall-Azralon",
["LastHookEdited"] = "",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["semver"] = "",
["Time"] = 1620377377,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Name"] = "Attacking Specific Unit [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 284,
["Options"] = {
},
["HooksTemp"] = {
},
["version"] = -1,
["Author"] = "Izimode-Azralon",
["LastHookEdited"] = "",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["semver"] = "",
["Time"] = 1621935143,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 135426,
["Name"] = "Combo Points [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Name"] = "Players Targeting a Target [Plater]",
["Desc"] = "Show how many raid members are targeting the unit",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["Time"] = 1548278227,
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 356,
["Options"] = {
},
["HooksTemp"] = {
},
["version"] = -1,
["Author"] = "Ditador-Azralon",
["LastHookEdited"] = "",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["semver"] = "",
["Time"] = 1608663128,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Name"] = "Aura Reorder [Plater]",
},
},
["aura_x_offset"] = 0,
["saved_cvars_last_change"] = {
["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:1572",
["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:1572",
["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:1572",
["nameplateShowSelf"] = "Interface/AddOns/Plater/Plater.lua:1572",
["SoftTargetIconGameObject"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:216",
["nameplateShowEnemies"] = "Interface/AddOns/Plater/Plater.lua:1572",
["nameplateShowFriends"] = "Interface/AddOns/Plater/Plater.lua:1572",
["SoftTargetInteract"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:216",
},
["resources_settings"] = {
["chr"] = {
["Player-1621-0B537E85"] = "Chi",
["Player-1621-0B583EDB"] = "ComboPoints",
["Player-1621-0B592714"] = "Runes",
},
},
["npc_cache"] = {
[214101] = {
"In the Shadow of the Light",
"Scholomance",
"enUS",
},
[56863] = {
"Sleepy Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[186124] = {
"Gashtooth",
"Brackenhide Hollow",
"enUS",
},
[189318] = {
"Infected Bear",
"Brackenhide Hollow",
"enUS",
},
[56927] = {
"Hozen Party Animal",
"Stormstout Brewery",
"enUS",
},
[56448] = {
"Wise Mari",
"Temple of the Jade Serpent",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
"enUS",
},
[59051] = {
"Strife",
"Temple of the Jade Serpent",
"enUS",
},
[210781] = {
"Vault of Souls",
"Scholomance",
"enUS",
},
[58684] = {
"Scarlet Scourge Hewer",
"Scarlet Halls",
"enUS",
},
[59722] = {
"Pile of Corpses",
"Scarlet Monastery",
"enUS",
},
[61814] = {
"Jin Ironfist",
"Crypt of Forgotten Kings",
"enUS",
},
[58812] = {
"Hateful Essence",
"Shado-Pan Monastery",
"enUS",
},
[62405] = {
"Sra'thik Amber-Trapper",
"Heart of Fear",
"enUS",
},
[58876] = {
"Starving Hound",
"Scarlet Halls",
"enUS",
},
[62485] = {
"Gagoon",
"Unga Ingoo",
"enUS",
},
[66652] = {
"Lesser Volatile Energy",
"Shado-Pan Monastery",
"enUS",
},
[56912] = {
"Krik'thik Engulfer",
"Gate of the Setting Sun",
"enUS",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
"enUS",
},
[194816] = {
"Forgewrought Monstrosity",
"Neltharus",
"enUS",
},
[212254] = {
"Unga Mug",
"Unga Ingoo",
"enUS",
},
[58605] = {
"Scarlet Judicator",
"Scarlet Monastery",
"enUS",
},
[58685] = {
"Scarlet Evangelist",
"Scarlet Halls",
"enUS",
},
[61783] = {
"Crypt Guardian",
"Crypt of Forgotten Kings",
"enUS",
},
[59771] = {
"Zombified Corpse",
"Scarlet Monastery",
"enUS",
},
[62358] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[59835] = {
"Krik'thik Swarmer",
"Gate of the Setting Sun",
"enUS",
},
[59372] = {
"Scarlet Scholar",
"Scarlet Halls",
"enUS",
},
[60410] = {
"Elegon",
"Mogu'shan Vaults",
"enUS",
},
[62486] = {
"Oku-Oku",
"Unga Ingoo",
"enUS",
},
[189901] = {
"Warlord Sargha",
"Neltharus",
"enUS",
},
[194373] = {
"Brackenhide Gnoll",
"Brackenhide Hollow",
"enUS",
},
[71030] = {
"Overseer Elaglo",
"The Secrets of Ragefire",
"enUS",
},
[58590] = {
"Scarlet Zealot",
"Scarlet Monastery",
"enUS",
},
[59213] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[59293] = {
"Scarlet Cannoneer",
"Scarlet Halls",
"enUS",
},
[59309] = {
"Obedient Hound",
"Scarlet Halls",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
"enUS",
},
[58319] = {
"Lesser Sha",
"Temple of the Jade Serpent",
"enUS",
},
[59884] = {
"Fallen Crusader",
"Scarlet Monastery",
"enUS",
},
[189266] = {
"Qalashi Trainee",
"Neltharus",
"enUS",
},
[59980] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[59501] = {
"Reanimated Corpse",
"Scholomance",
"enUS",
},
[64132] = {
"Amber Growth",
"Heart of Fear",
"enUS",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[213795] = {
"Stormstout Secrets",
"Stormstout Brewery",
"enUS",
},
[59613] = {
"Professor Slate",
"Scholomance",
"enUS",
},
[62711] = {
"Amber Monstrosity",
"Heart of Fear",
"enUS",
},
[59150] = {
"Flameweaver Koegler",
"Scarlet Halls",
"enUS",
},
[380834] = {
"Decay Tainted Chest",
"Brackenhide Hollow",
"enUS",
},
[60731] = {
"Undying Shadows",
"Mogu'shan Vaults",
"enUS",
},
[451226] = {
"Unraveling Sands",
"Scarlet Halls",
"enUS",
},
[58783] = {
"Scarlet Initiate",
"Scarlet Monastery",
"enUS",
},
[193293] = {
"Qalashi Warden",
"Neltharus",
"enUS",
},
[62408] = {
"Zar'thik Battle-Mender",
"Heart of Fear",
"enUS",
},
[60396] = {
"Emperor's Rage",
"Mogu'shan Vaults",
"enUS",
},
[65522] = {
"Bubble Shield",
"Stormstout Brewery",
"enUS",
},
[56867] = {
"Fiery Trickster",
"Stormstout Brewery",
"enUS",
},
[62009] = {
"Shadows of Anger",
"Crypt of Forgotten Kings",
"enUS",
},
[192464] = {
"Raging Ember",
"Neltharus",
"enUS",
},
[59518] = {
"Bloated Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[61610] = {
"Seething Sha",
"Crypt of Forgotten Kings",
"enUS",
},
[61131] = {
"Mogu'shan Secret-Keeper",
"Mogu'shan Vaults",
"enUS",
},
[59614] = {
"Bored Student",
"Scholomance",
"enUS",
},
[70683] = {
"Dark Shaman Xorenth",
"The Secrets of Ragefire",
"enUS",
},
[186206] = {
"Cruel Bonecrusher",
"Brackenhide Hollow",
"enUS",
},
[59726] = {
"Peril",
"Temple of the Jade Serpent",
"enUS",
},
[200131] = {
"Sha-Touched Guardian",
"Temple of the Jade Serpent",
"enUS",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
"enUS",
},
[192786] = {
"Qalashi Plunderer",
"Neltharus",
"enUS",
},
[64453] = {
"Set'thik Windblade",
"Heart of Fear",
"enUS",
},
[59359] = {
"Flesh Horror",
"Scholomance",
"enUS",
},
[60397] = {
"Emperor's Strength",
"Mogu'shan Vaults",
"enUS",
},
[70684] = {
"Frostmane Mauler",
"Blood in the Snow",
"enUS",
},
[56884] = {
"Taran Zhu",
"Shado-Pan Monastery",
"enUS",
},
[186208] = {
"Rotbow Ranger",
"Brackenhide Hollow",
"enUS",
},
[59982] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[59487] = {
"Bubble Shield",
"Stormstout Brewery",
"enUS",
},
[59503] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[59519] = {
"Stout Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[59551] = {
"Bopper",
"Stormstout Brewery",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
"enUS",
},
[187231] = {
"Wither Biter",
"Brackenhide Hollow",
"enUS",
},
[189467] = {
"Qalashi Bonesplitter",
"Neltharus",
"enUS",
},
[61707] = {
"Abomination of Anger",
"Crypt of Forgotten Kings",
"enUS",
},
[60701] = {
"Zian of the Endless Shadow",
"Mogu'shan Vaults",
"enUS",
},
[59184] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[212271] = {
"Zip Line",
"Unga Ingoo",
"enUS",
},
[189340] = {
"Chargath, Bane of Scales",
"Neltharus",
"enUS",
},
[212974] = {
"Tiger Temple Gong",
"Arena of Annihilation",
"enUS",
},
[70877] = {
"Volatile Earth",
"Heart of the Old God Scenario",
"enUS",
},
[185508] = {
"Claw Fighter",
"Brackenhide Hollow",
"enUS",
},
[64917] = {
"Sra'thik Ambercaller",
"Heart of Fear",
"enUS",
},
[64454] = {
"Zar'thik Augurer",
"Heart of Fear",
"enUS",
},
[59360] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
"enUS",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[59520] = {
"Fizzy Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
"enUS",
},
[70463] = {
"Frostmane Snowstalker",
"Blood in the Snow",
"enUS",
},
[194389] = {
"Lava Spawn",
"Neltharus",
"enUS",
},
[189471] = {
"Qalashi Blacksmith",
"Neltharus",
"enUS",
},
[210486] = {
"Dorgar Stoenbrow",
"Scarlet Halls",
"enUS",
},
[57109] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[58674] = {
"Angry Hound",
"Scarlet Halls",
"enUS",
},
[58722] = {
"Lilian Voss",
"Scholomance",
"enUS",
},
[189472] = {
"Qalashi Lavabearer",
"Neltharus",
"enUS",
},
[210487] = {
"Fellari Swiftarrow",
"Scarlet Halls",
"enUS",
},
[64902] = {
"Kor'thik Fleshrender",
"Heart of Fear",
"enUS",
},
[61341] = {
"Mounted Mogu",
"Mogu'shan Vaults",
"enUS",
},
[70464] = {
"Frostmane Witch Doctor",
"Blood in the Snow",
"enUS",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[60399] = {
"Qin-xi",
"Mogu'shan Vaults",
"enUS",
},
[210488] = {
"Ferren Marcus",
"Scarlet Halls",
"enUS",
},
[58898] = {
"Vigilant Watchman",
"Scarlet Halls",
"enUS",
},
[187238] = {
"Witherling",
"Brackenhide Hollow",
"enUS",
},
[211319] = {
"Relief Bucket",
"Stormstout Brewery",
"enUS",
},
[56439] = {
"Sha of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[61565] = {
"Quilen Statue",
"Crypt of Forgotten Kings",
"enUS",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
"enUS",
},
[70465] = {
"Frostmane Bonechiller",
"Blood in the Snow",
"enUS",
},
[61709] = {
"Spawn of Anger",
"Crypt of Forgotten Kings",
"enUS",
},
[56631] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[214387] = {
"Cache of Pure Energy",
"Mogu'shan Vaults",
"enUS",
},
[65414] = {
"Ethereal Sha",
"Shado-Pan Monastery",
"enUS",
},
[58803] = {
"Residual Hatred",
"Shado-Pan Monastery",
"enUS",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[60400] = {
"Jan-xi",
"Mogu'shan Vaults",
"enUS",
},
[62476] = {
"Trained Jungle Lory",
"Unga Ingoo",
"enUS",
},
[59426] = {
"Bopper",
"Stormstout Brewery",
"enUS",
},
[62508] = {
"Unga Brewstealer",
"Unga Ingoo",
"enUS",
},
[211259] = {
"Iron Gate",
"Scholomance",
"enUS",
},
[186284] = {
"Gutchewer Bear",
"Brackenhide Hollow",
"enUS",
},
[63594] = {
"Coagulated Amber",
"Heart of Fear",
"enUS",
},
[60033] = {
"Frenzied Spirit",
"Scarlet Monastery",
"enUS",
},
[56472] = {
"Fragrant Lotus",
"Shado-Pan Monastery",
"enUS",
},
[211260] = {
"Iron Gate",
"Scholomance",
"enUS",
},
[70595] = {
"Frostmane Prowler",
"Blood in the Snow",
"enUS",
},
[65581] = {
"Essence of Hate",
"Crypt of Forgotten Kings",
"enUS",
},
[58676] = {
"Scarlet Defender",
"Scarlet Halls",
"enUS",
},
[211261] = {
"Iron Gate",
"Scholomance",
"enUS",
},
[70787] = {
"Skullcrusher Gundu",
"Blood in the Snow",
"enUS",
},
[59746] = {
"Scarlet Centurion",
"Scarlet Monastery",
"enUS",
},
[214519] = {
"Snowdrift's Possessions",
"Shado-Pan Monastery",
"enUS",
},
[58756] = {
"Scarlet Evoker",
"Scarlet Halls",
"enUS",
},
[59794] = {
"Krik'thik Disruptor",
"Gate of the Setting Sun",
"enUS",
},
[59299] = {
"Scarlet Guardian",
"Scarlet Halls",
"enUS",
},
[70468] = {
"Bonechiller Barafu",
"Blood in the Snow",
"enUS",
},
[62397] = {
"Wind Lord Mel'jarak",
"Heart of Fear",
"enUS",
},
[211326] = {
"Tap Tool",
"Stormstout Brewery",
"enUS",
},
[210496] = {
"Fine Chair",
"Scarlet Halls",
"enUS",
},
[62477] = {
"Jibberwing Rider",
"Unga Ingoo",
"enUS",
},
[211135] = {
"Sliding Door",
"Stormstout Brewery",
"enUS",
},
[59459] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[210497] = {
"Fine Chair",
"Scarlet Halls",
"enUS",
},
[56473] = {
"Flying Snow",
"Shado-Pan Monastery",
"enUS",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
"enUS",
},
[71491] = {
"Guardian of Sacrifice",
"Crypt of Forgotten Kings",
"enUS",
},
[66413] = {
"Yeasty Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[57080] = {
"Corrupted Scroll",
"Temple of the Jade Serpent",
"enUS",
},
[65304] = {
"Hateful Monstrosity",
"Crypt of Forgotten Kings",
"enUS",
},
[62254] = {
"Quilen Watcher",
"Crypt of Forgotten Kings",
"enUS",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[70789] = {
"Zandalari Rage Banner",
"Blood in the Snow",
"enUS",
},
[56713] = {
"Master Snowdrift",
"Shado-Pan Monastery",
"enUS",
},
[71492] = {
"Maragor",
"Crypt of Forgotten Kings",
"enUS",
},
[186227] = {
"Monstrous Decay",
"Brackenhide Hollow",
"enUS",
},
[64458] = {
"Kor'thik Warsinger",
"Heart of Fear",
"enUS",
},
[62494] = {
"Unga Nibstabber",
"Unga Ingoo",
"enUS",
},
[59460] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[70822] = {
"Earthborn Hatred",
"Heart of the Old God Scenario",
"enUS",
},
[62590] = {
"Unga Scallywag",
"Unga Ingoo",
"enUS",
},
[189478] = {
"Forgemaster Gorek",
"Neltharus",
"enUS",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[70471] = {
"Frostmane Berserker",
"Blood in the Snow",
"enUS",
},
[189669] = {
"Binding Spear",
"Neltharus",
"enUS",
},
[187315] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
"enUS",
},
[181861] = {
"Magmatusk",
"Neltharus",
"enUS",
},
[194467] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[70663] = {
"Embercore",
"The Secrets of Ragefire",
"enUS",
},
[59684] = {
"Hozen Party Animal",
"Stormstout Brewery",
"enUS",
},
[194469] = {
"Wither Slasher",
"Brackenhide Hollow",
"enUS",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[213888] = {
"Taran Zhu's Personal Stash",
"Shado-Pan Monastery",
"enUS",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
"enUS",
},
[58683] = {
"Scarlet Myrmidon",
"Scarlet Halls",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[61345] = {
"Mogu Archer",
"Mogu'shan Vaults",
"enUS",
},
[56762] = {
"Yu'lon",
"Temple of the Jade Serpent",
"enUS",
},
[58822] = {
"Risen Guard",
"Scholomance",
"enUS",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[59789] = {
"Thalnos the Soulrender",
"Scarlet Monastery",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[62495] = {
"Unga Villager",
"Unga Ingoo",
"enUS",
},
[62479] = {
"Trained Jungle Lory",
"Unga Ingoo",
"enUS",
},
[197857] = {
"Gutstabber",
"Brackenhide Hollow",
"enUS",
},
[56890] = {
"Krik'thik Infiltrator",
"Gate of the Setting Sun",
"enUS",
},
[59461] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[70824] = {
"Fiery Anger",
"Heart of the Old God Scenario",
"enUS",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[58555] = {
"Scarlet Fanatic",
"Scarlet Monastery",
"enUS",
},
[210483] = {
"Fine Chair",
"Scarlet Halls",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
"enUS",
},
[70473] = {
"Frostmane Headhunter",
"Blood in the Snow",
"enUS",
},
[59078] = {
"Failed Student",
"Scholomance",
"enUS",
},
[59605] = {
"Sodden Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
"enUS",
},
[71112] = {
"Quivering Blood",
"Heart of the Old God Scenario",
"enUS",
},
[59522] = {
"Sudsy Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[70665] = {
"Kor'kron Dire Soldier",
"The Secrets of Ragefire",
"enUS",
},
[62360] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[187192] = {
"Rageclaw",
"Brackenhide Hollow",
"enUS",
},
[61250] = {
"Sorcerer Mogu",
"Mogu'shan Vaults",
"enUS",
},
[62837] = {
"Grand Empress Shek'zeer",
"Heart of Fear",
"enUS",
},
[56658] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[211137] = {
"Sliding Door",
"Stormstout Brewery",
"enUS",
},
[62847] = {
"Dissonance Field",
"Heart of Fear",
"enUS",
},
[56731] = {
"Habanero Brew",
"Stormstout Brewery",
"enUS",
},
[56747] = {
"Gu Cloudstrike",
"Shado-Pan Monastery",
"enUS",
},
[58807] = {
"Vestige of Hatred",
"Shado-Pan Monastery",
"enUS",
},
[58823] = {
"Scholomance Neophyte",
"Scholomance",
"enUS",
},
[186120] = {
"Treemouth",
"Brackenhide Hollow",
"enUS",
},
[63570] = {
"Sra'thik Pool-Tender",
"Heart of Fear",
"enUS",
},
[59302] = {
"Sergeant Verdone",
"Scarlet Halls",
"enUS",
},
[66195] = {
"Unga Rocket Surgeon",
"Unga Ingoo",
"enUS",
},
[62480] = {
"Trained Jungle Lory",
"Unga Ingoo",
"enUS",
},
[56875] = {
"Krik'thik Demolisher",
"Gate of the Setting Sun",
"enUS",
},
[214277] = {
"The Dark Grimoire",
"Scholomance",
"enUS",
},
[64061] = {
"Mogu'shan Warden",
"Mogu'shan Vaults",
"enUS",
},
[376176] = {
"Meat Storage",
"Brackenhide Hollow",
"enUS",
},
[59494] = {
"Yeasty Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[64916] = {
"Kor'thik Swarmguard",
"Heart of Fear",
"enUS",
},
[71401] = {
"Proto-Drake Whelp",
"The Secrets of Ragefire",
"enUS",
},
[185534] = {
"Bonebolt Hunter",
"Brackenhide Hollow",
"enUS",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[214278] = {
"Kel'Thuzad's Deep Knowledge",
"Scholomance",
"enUS",
},
[62492] = {
"Unga Totemchipper",
"Unga Ingoo",
"enUS",
},
[61139] = {
"Shan-xi Watershaper",
"Mogu'shan Vaults",
"enUS",
},
[58810] = {
"Fragment of Hatred",
"Shado-Pan Monastery",
"enUS",
},
[199916] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[58632] = {
"Armsmaster Harlan",
"Scarlet Halls",
"enUS",
},
[56636] = {
"Commander Ri'mok",
"Gate of the Setting Sun",
"enUS",
},
[58664] = {
"Instructor Chillheart's Phylactery",
"Scholomance",
"enUS",
},
[59191] = {
"Commander Lindon",
"Scarlet Halls",
"enUS",
},
[211277] = {
"Coffer of Forgotten Souls",
"Scholomance",
"enUS",
},
[59223] = {
"Brother Korloff",
"Scarlet Monastery",
"enUS",
},
[210894] = {
"Gold Coins",
"Scarlet Halls",
"enUS",
},
[212293] = {
"Inactive Beach Bomb",
"Unga Ingoo",
"enUS",
},
[214280] = {
"Forbidden Rites and other Rituals Necromantic",
"Scholomance",
"enUS",
},
[56732] = {
"Liu Flameheart",
"Temple of the Jade Serpent",
"enUS",
},
[61347] = {
"Kingsguard",
"Mogu'shan Vaults",
"enUS",
},
[56764] = {
"Consuming Sha",
"Shado-Pan Monastery",
"enUS",
},
[59752] = {
"Shado-Pan Ambusher",
"Shado-Pan Monastery",
"enUS",
},
[60708] = {
"Meng the Demented",
"Mogu'shan Vaults",
"enUS",
},
[62497] = {
"Unga Keg-Blocker",
"Unga Ingoo",
"enUS",
},
[67027] = {
"Jungle Brewstealer",
"Unga Ingoo",
"enUS",
},
[62465] = {
"Captain Ook",
"Unga Ingoo",
"enUS",
},
[62481] = {
"Unga Spearscamp",
"Unga Ingoo",
"enUS",
},
[56876] = {
"Krik'thik Sapper",
"Gate of the Setting Sun",
"enUS",
},
[56924] = {
"Inflamed Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[60710] = {
"Subetai the Swift",
"Mogu'shan Vaults",
"enUS",
},
[59479] = {
"Yan-Zhu the Uncasked",
"Stormstout Brewery",
"enUS",
},
[70746] = {
"Frostmane Flesh-Eater",
"Blood in the Snow",
"enUS",
},
[56395] = {
"Shado-Pan Novice",
"Shado-Pan Monastery",
"enUS",
},
[58198] = {
"Shado-Pan Disciple",
"Shado-Pan Monastery",
"enUS",
},
[59153] = {
"Rattlegore",
"Scholomance",
"enUS",
},
[62701] = {
"Mutated Construct",
"Heart of Fear",
"enUS",
},
[59080] = {
"Darkmaster Gandling",
"Scholomance",
"enUS",
},
[58569] = {
"Scarlet Purifier",
"Scarlet Monastery",
"enUS",
},
[56541] = {
"Master Snowdrift",
"Shado-Pan Monastery",
"enUS",
},
[59521] = {
"Bubbling Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[56637] = {
"Ook-Ook",
"Stormstout Brewery",
"enUS",
},
[58633] = {
"Instructor Chillheart",
"Scholomance",
"enUS",
},
[215816] = {
"Bench",
"Temple of the Jade Serpent",
"enUS",
},
[60709] = {
"Qiang the Merciless",
"Mogu'shan Vaults",
"enUS",
},
[71244] = {
"Kor'kron Shadowblade",
"The Secrets of Ragefire",
"enUS",
},
[186242] = {
"Skulking Gutstabber",
"Brackenhide Hollow",
"enUS",
},
[59751] = {
"Shado-Pan Warden",
"Shado-Pan Monastery",
"enUS",
},
[59240] = {
"Scarlet Hall Guardian",
"Scarlet Halls",
"enUS",
},
[67081] = {
"Forgotten King",
"Crypt of Forgotten Kings",
"enUS",
},
[56717] = {
"Hoptallus",
"Stormstout Brewery",
"enUS",
},
[3977] = {
"High Inquisitor Whitemane",
"Scarlet Monastery",
"enUS",
},
[64446] = {
"Training Dummy",
"Scarlet Monastery",
"enUS",
},
[56765] = {
"Destroying Sha",
"Shado-Pan Monastery",
"enUS",
},
[62402] = {
"Kor'thik Elite Blademaster",
"Heart of Fear",
"enUS",
},
[70798] = {
"Kor'kron Emberguard",
"The Secrets of Ragefire",
"enUS",
},
[59368] = {
"Krastinovian Carver",
"Scholomance",
"enUS",
},
[64063] = {
"Mogu'shan Arcanist",
"Mogu'shan Vaults",
"enUS",
},
[70702] = {
"Flame Hound",
"The Secrets of Ragefire",
"enUS",
},
[56877] = {
"Raigonn",
"Gate of the Setting Sun",
"enUS",
},
[186116] = {
"Gutshot",
"Brackenhide Hollow",
"enUS",
},
[71245] = {
"Kor'kron Dark Shaman",
"The Secrets of Ragefire",
"enUS",
},
[59464] = {
"Hopper",
"Stormstout Brewery",
"enUS",
},
[63568] = {
"Amber-Ridden Mushan",
"Heart of Fear",
"enUS",
},
[59480] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[59808] = {
"Shado-Pan Stormbringer",
"Shado-Pan Monastery",
"enUS",
},
[61766] = {
"Crypt Guardian",
"Crypt of Forgotten Kings",
"enUS",
},
[59544] = {
"The Nodding Tiger",
"Temple of the Jade Serpent",
"enUS",
},
[70982] = {
"Frost Totem",
"Blood in the Snow",
"enUS",
},
[189247] = {
"Tamed Phoenix",
"Neltharus",
"enUS",
},
[70474] = {
"Farastu",
"Blood in the Snow",
"enUS",
},
[58757] = {
"Scholomance Acolyte",
"Scholomance",
"enUS",
},
[56763] = {
"Regenerating Sha",
"Shado-Pan Monastery",
"enUS",
},
[56865] = {
"Aqua Dancer",
"Stormstout Brewery",
"enUS",
},
[56754] = {
"Azure Serpent",
"Shado-Pan Monastery",
"enUS",
},
[59373] = {
"Scarlet Pupil",
"Scarlet Halls",
"enUS",
},
[70703] = {
"Core Spider",
"The Secrets of Ragefire",
"enUS",
},
[59193] = {
"Boneweaver",
"Scholomance",
"enUS",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[63311] = {
"Scar-Shell",
"Arena of Annihilation",
"enUS",
},
[59241] = {
"Scarlet Treasurer",
"Scarlet Halls",
"enUS",
},
[59303] = {
"Houndmaster Braun",
"Scarlet Halls",
"enUS",
},
[56718] = {
"Hopper",
"Stormstout Brewery",
"enUS",
},
[59800] = {
"Krik'thik Rager",
"Gate of the Setting Sun",
"enUS",
},
[70959] = {
"Urtharges the Destroyer",
"Heart of the Old God Scenario",
"enUS",
},
[56766] = {
"Volatile Energy",
"Shado-Pan Monastery",
"enUS",
},
[60197] = {
"Training Dummy",
"Scarlet Monastery",
"enUS",
},
[70544] = {
"Hekima the Wise",
"Blood in the Snow",
"enUS",
},
[59175] = {
"Master Archer",
"Scarlet Halls",
"enUS",
},
[59458] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[59467] = {
"Candlestick Mage",
"Scholomance",
"enUS",
},
[56862] = {
"Drunken Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[62499] = {
"Unga Beachbummer",
"Unga Ingoo",
"enUS",
},
[62511] = {
"Amber-Shaper Un'sok",
"Heart of Fear",
"enUS",
},
[60208] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[70691] = {
"Mouth of Terror",
"Heart of the Old God Scenario",
"enUS",
},
[70979] = {
"Water Elemental",
"Blood in the Snow",
"enUS",
},
[59804] = {
"Gripping Hatred",
"Shado-Pan Monastery",
"enUS",
},
[60040] = {
"Commander Durand",
"Scarlet Monastery",
"enUS",
},
[59545] = {
"The Golden Beetle",
"Temple of the Jade Serpent",
"enUS",
},
[186121] = {
"Decatriarch Wratheye",
"Brackenhide Hollow",
"enUS",
},
[56511] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[59778] = {
"Krik'thik Striker",
"Gate of the Setting Sun",
"enUS",
},
[59220] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[62691] = {
"Living Amber",
"Heart of Fear",
"enUS",
},
[58108] = {
"Krik'thik Infiltrator",
"Gate of the Setting Sun",
"enUS",
},
[185691] = {
"Vicious Hyena",
"Brackenhide Hollow",
"enUS",
},
[194745] = {
"Rotfang Hyena",
"Brackenhide Hollow",
"enUS",
},
[186122] = {
"Rira Hackclaw",
"Brackenhide Hollow",
"enUS",
},
[59705] = {
"Scarlet Flamethrower",
"Scarlet Monastery",
"enUS",
},
[210489] = {
"Harthal Truesight",
"Scarlet Halls",
"enUS",
},
[70690] = {
"Blood of Y'Shaarj",
"Heart of the Old God Scenario",
"enUS",
},
[59242] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[71123] = {
"Echo of Y'Shaarj",
"Heart of the Old God Scenario",
"enUS",
},
[56719] = {
"Sha of Violence",
"Shado-Pan Monastery",
"enUS",
},
[59801] = {
"Krik'thik Wind Shaper",
"Gate of the Setting Sun",
"enUS",
},
[200388] = {
"Malformed Sha",
"Temple of the Jade Serpent",
"enUS",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
"enUS",
},
[59598] = {
"Lesser Sha",
"Temple of the Jade Serpent",
"enUS",
},
},
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["ui_parent_scale_tune"] = 1.562500034924597,
["script_auto_imported"] = {
["Cast - Important by Color [P]"] = 2,
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Cast - Special Ability [P]"] = 3,
["Cast - Glowing [P]"] = 10,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Unit - Show Energy"] = 11,
["Explosion Affix M+"] = 14,
["Cast - Important Target [P]"] = 2,
["Cast - Quick Flash"] = 2,
["Cast - Stop Casting"] = 4,
["Add - Explode on Die [P]"] = 1,
["Cast - Shield Interrupt"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Cast - Shining Green [P]"] = 3,
["Fixate by Unit Buff [P]"] = 2,
["Aura is Shield [P]"] = 5,
["Cast - Debuff [P]"] = 2,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Countdown"] = 11,
["Cast - Heal Cut [P]"] = 3,
["Add - Warning [P]"] = 5,
["Auto Set Skull"] = 11,
["Cast - On Going Cast [P]"] = 2,
["Add - Non Elite Trash [P]"] = 4,
["Spiteful Affix"] = 3,
["Cast - Very Important"] = 15,
["Cast - Voidzone [P]"] = 2,
["Cast - AoE With Range [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Fixate"] = 11,
["Cast - AoE Hit All [P]"] = 3,
["Cast - Heroic Leap [P]"] = 3,
["Aura - Is Cast Bar [P]"] = 1,
["Fixate On You"] = 11,
},
["patch_version"] = 37,
["saved_cvars"] = {
["nameplateMinAlpha"] = "0.90135484",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["SoftTargetIconGameObject"] = "1",
["nameplateShowEnemies"] = "1",
["nameplateShowFriends"] = "0",
["SoftTargetInteract"] = "3",
},
["number_region_first_run"] = true,
["aura2_y_offset"] = 5,
["login_counter"] = 190,
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1625793282,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1154,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["NpcNames"] = {
},
["Name"] = "Cast - Alert + Timer [P]",
["SpellIds"] = {
350421,
355787,
348513,
},
["PlaterCore"] = 1,
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Value"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
["Key"] = "timerList",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["__TrashAt"] = 1715858480,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1683596223,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 146,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["NpcNames"] = {
},
["Name"] = "Add - Health Markers [P]",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Name"] = "Vertical Line Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Name"] = "Fill Alpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["__TrashAt"] = 1728633929,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1669327146,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 65,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["NpcNames"] = {
},
["Name"] = "Aura is Shield [P]",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["__TrashAt"] = 1728633929,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1670202265,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 620,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["Name"] = "Cast - Frontal Cone [Plater]",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "animSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["__TrashAt"] = 1728633929,
},
},
["aura_tracker"] = {
["buff_tracked"] = {
[209859] = true,
},
},
["first_run3"] = true,
["plate_config"] = {
["global_health_width"] = 112,
["global_health_height"] = 12,
},
["ghost_auras"] = {
["auras"] = {
["WARLOCK"] = {
{
[172] = true,
[980] = true,
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
},
},
["aura_y_offset"] = 5,
},
["Dalaran"] = {
["ui_parent_scale_tune"] = 1.559999942779541,
["use_ui_parent"] = true,
["aura_tracker"] = {
["buff_tracked"] = {
[209859] = true,
},
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Extra Border"] = 2,
["Cast Bar Icon Config"] = 2,
["Execute Range"] = 1,
["Hide Neutral Units"] = 1,
["Attacking Specific Unit"] = 2,
["Target Color"] = 3,
["Aura Reorder"] = 3,
["Combo Points"] = 6,
},
["expansion_triggerwipe"] = {
[9] = true,
},
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 632,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["NpcNames"] = {
},
["SpellIds"] = {
398151,
377738,
378149,
},
["PlaterCore"] = 1,
["Name"] = "Aura - Buff Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = true,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["NpcNames"] = {
},
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Effect After Cast [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = true,
["Revision"] = 533,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["NpcNames"] = {
},
["SpellIds"] = {
240446,
385339,
198077,
210261,
360857,
},
["PlaterCore"] = 1,
["Name"] = "Explosion Affix M+ [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 368,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Desc"] = "Add the debuff name in the trigger box.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Debuff Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["NpcNames"] = {
},
["SpellIds"] = {
350421,
355787,
348513,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Alert + Timer [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = true,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["NpcNames"] = {
},
["SpellIds"] = {
383823,
382670,
388537,
372851,
200682,
192307,
196838,
193827,
194043,
209410,
211464,
361180,
156718,
395859,
358320,
374045,
386757,
367500,
370225,
376200,
372107,
388923,
376934,
384899,
373960,
374724,
385551,
259732,
373424,
373084,
87618,
255041,
428926,
76634,
200050,
197546,
198079,
199193,
266181,
253544,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Ultra Important [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Health Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1683596223,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 146,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["NpcNames"] = {
"197697",
"59544",
"186227",
"184020",
"91005",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Health Markers [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Name"] = "Vertical Line Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Name"] = "Fill Alpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
376851,
396044,
381517,
373932,
397801,
208165,
392576,
198750,
387843,
387411,
211299,
198595,
198934,
198962,
156722,
350554,
348513,
351779,
328180,
319898,
281420,
274383,
259092,
367521,
374544,
385039,
382474,
369823,
377500,
260879,
186269,
378818,
371875,
372225,
200658,
266036,
265407,
164965,
429176,
428526,
418200,
407124,
200630,
415437,
264050,
267824,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Small Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 572,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["NpcNames"] = {
"196548",
"195580",
"195820",
"195821",
"189886",
"75966",
"102019",
"187159",
"194897",
"104251",
"101326",
"189669",
"192464",
190381,
92538,
192464,
131009,
127315,
133361,
136330,
214117,
212483,
101008,
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Important [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "nameplateSizeOffset",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullAlpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Key"] = "skullScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1626382829,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Revision"] = 375,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Key"] = "timeleftToBlink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Timeleft to Blink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "blinkSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Key"] = "blinkMaxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Warning",
["Value"] = 8,
["Key"] = "timeLeftWarning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Critical",
["Value"] = 3,
["Key"] = "timeLeftCritical",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["NpcNames"] = {
"195138",
"192955",
"190294",
"76518",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Tag Number [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = true,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["NpcNames"] = {
},
["SpellIds"] = {
376644,
386781,
384823,
385536,
392398,
375596,
387135,
360850,
212784,
199033,
199034,
200969,
394512,
397881,
396020,
374430,
384353,
265376,
193941,
411002,
169445,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Glowing [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Important Target [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetNameSize",
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetFrameWidth",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Name"] = "Frame Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["NpcNames"] = {
},
["SpellIds"] = {
392640,
397888,
209033,
385029,
374563,
377341,
369675,
369365,
369411,
278961,
202108,
88186,
255824,
252781,
250096,
200248,
197797,
264520,
418202,
201839,
412012,
411958,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Quick Flash [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1669327146,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 65,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura is Shield [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color of  add",
["NpcNames"] = {
"190187",
"189893",
"99922",
"104822",
129758,
190426,
186696,
101075,
100818,
98081,
52019,
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Warning [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["Icon"] = 236209,
["Enabled"] = true,
["Revision"] = 18,
["semver"] = "",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["NpcNames"] = {
},
["SpellIds"] = {
372743,
372749,
384933,
},
["PlaterCore"] = 1,
["Name"] = "Aura While Casting [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
396640,
372743,
377389,
396812,
388392,
387955,
386546,
377503,
384808,
386024,
387615,
387606,
225100,
211401,
211470,
215433,
192563,
198959,
152818,
156776,
398206,
153524,
396073,
396018,
345202,
377950,
372223,
350421,
352158,
349985,
329239,
328400,
384194,
392451,
392924,
397889,
209413,
207980,
257397,
257736,
382787,
374699,
377402,
369602,
369465,
369400,
381593,
265091,
265433,
382791,
376780,
225573,
278444,
164887,
168082,
76813,
227913,
265368,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Big Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["NpcNames"] = {
},
["SpellIds"] = {
377004,
381516,
196543,
199726,
200291,
268202,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Stop Casting [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1611844883,
["url"] = "",
["Icon"] = 135945,
["Enabled"] = true,
["Revision"] = 186,
["semver"] = "",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Time to die Spiteful affix",
["NpcNames"] = {
"174773",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "M+ Spiteful",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.07058823529411765,
0.6196078431372549,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1604696441,
["url"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Enabled"] = false,
["Revision"] = 63,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["NpcNames"] = {
"163520",
"163618",
"164506",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Auto Set Skull",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["Icon"] = 136048,
["Enabled"] = true,
["Revision"] = 233,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["NpcNames"] = {
"164406",
"164407",
"162100",
"162099",
"162329",
"164558",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Unit - Show Energy [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Key"] = "fontSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.803921568627451,
0.803921568627451,
0.803921568627451,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Enabled"] = true,
["Revision"] = 111,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["NpcNames"] = {
"194622",
"190205",
"197398",
"77006",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Non Elite Trash [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Scale",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["NpcNames"] = {
},
["SpellIds"] = {
373688,
391050,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Shield Interrupt [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
385916,
386063,
388822,
373087,
397785,
106864,
193660,
198263,
387910,
370766,
375591,
384336,
209404,
209378,
210875,
396001,
397899,
386559,
382555,
258672,
258777,
257756,
257784,
256405,
256589,
393793,
388046,
375079,
390290,
369811,
369703,
226287,
410999,
372561,
256882,
172578,
412063,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Circle AoE [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "rotationDuration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animStartDuration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Start Alpha",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureScale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureAlpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = true,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["NpcNames"] = {
},
["SpellIds"] = {
388886,
209676,
377912,
},
["PlaterCore"] = 1,
["Name"] = "Cast - On Going Cast [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Dots Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Key"] = "speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Key"] = "minAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Enabled"] = true,
["Revision"] = 33,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["NpcNames"] = {
},
["SpellIds"] = {
426662,
426663,
},
["PlaterCore"] = 1,
["Name"] = "Fixate by Unit Buff [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1670202265,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 620,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
375943,
385958,
388623,
377034,
374361,
381525,
386660,
385578,
384699,
153501,
153686,
154442,
192018,
219488,
372087,
391726,
391723,
377383,
388976,
370764,
387067,
391118,
391136,
382233,
209027,
212031,
207261,
207979,
198888,
199805,
199050,
191508,
152792,
153395,
352833,
330403,
209495,
257426,
255952,
257870,
413147,
383107,
377559,
388060,
376170,
384524,
375351,
390111,
369791,
369573,
369563,
369335,
369061,
375727,
265016,
265019,
260793,
260292,
272457,
272609,
269843,
183465,
226296,
188169,
183088,
410873,
411012,
88308,
382708,
375251,
375439,
372311,
373742,
372201,
374533,
377204,
201226,
204667,
198379,
200768,
253239,
250258,
255567,
194956,
427510,
426645,
412505,
412129,
419351,
401482,
404916,
200345,
200261,
198641,
265372,
271174,
264694,
264923,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Frontal Cone [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "animSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = true,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["NpcNames"] = {
"194895",
"105703",
"59598",
"58319",
200388,
189299,
131402,
135052,
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Explode on Die [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["Icon"] = 1029718,
["Enabled"] = true,
["Revision"] = 269,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["NpcNames"] = {
"165560",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Fixate [Plater]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604354364,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 206,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["NpcNames"] = {
"164427",
"164414",
"164185",
"164567",
"165408",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Countdown",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = true,
["Revision"] = 828,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
350687,
372735,
373017,
350687,
392488,
257732,
256060,
257899,
384633,
374339,
395694,
391634,
372701,
369328,
265487,
413044,
183526,
88194,
87762,
413385,
411001,
378282,
384161,
259572,
255371,
427460,
429172,
426500,
413607,
412922,
417481,
201399,
411994,
415770,
260907,
260703,
260741,
265876,
263959,
266225,
253517,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Very Important [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604087921,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 266,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["NpcNames"] = {
},
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["Name"] = "Fixate On You [Plater]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
},
},
["aura2_x_offset"] = 0,
["aura2_y_offset"] = 5,
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Kastfall-Azralon",
["Time"] = 1547392935,
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Name"] = "Color Automation [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Time"] = 1541606242,
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["Name"] = "Hide Neutral Units [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Kastfall-Azralon",
["Name"] = "Reorder Nameplate [Plater]",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1596791840,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 574574,
["Options"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Time"] = 1554138845,
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
},
["Name"] = "Don't Have Aura [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Tecno-Azralon",
["Time"] = 1547409079,
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["Name"] = "Extra Border [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Time"] = 1552354619,
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["Name"] = "Current Target Color [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 878211,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 348,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Ditador-Azralon",
["Name"] = "Cast Bar Icon Settings [P]",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1597097268,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Name"] = "Icon Size Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconSizeOffset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Key"] = "iconPadding",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.3056715726852417,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 10,
["Name"] = "Texture Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureWidth",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Key"] = "textureHeightMod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Texture Position",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "texturePosition",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
},
},
{
["Enabled"] = false,
["Revision"] = 84,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Ahwa-Azralon",
["Time"] = 1547406548,
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Name"] = "Execute Range [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 363,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Kastfall-Azralon",
["Name"] = "Attacking Specific Unit [Plater]",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1620377377,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.5019607843137255,
0.5019607843137255,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["Enabled"] = false,
["Revision"] = 284,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["Name"] = "Combo Points [Plater]",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1621935143,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 135426,
["Options"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Time"] = 1548278227,
["Desc"] = "Show how many raid members are targeting the unit",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["Name"] = "Players Targeting a Target [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 356,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Ditador-Azralon",
["Name"] = "Aura Reorder [Plater]",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1608663128,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Options"] = {
},
},
},
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1625793282,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1154,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["NpcNames"] = {
},
["Name"] = "Cast - Alert + Timer [P]",
["SpellIds"] = {
350421,
355787,
348513,
},
["PlaterCore"] = 1,
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Value"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
["Key"] = "timerList",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["__TrashAt"] = 1715880147,
},
},
["patch_version"] = 35,
["aura_x_offset"] = 0,
["script_auto_imported"] = {
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 2,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Cast - Glowing [P]"] = 10,
["Cast - Important Target [P]"] = 2,
["Cast - Shield Interrupt"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Aura is Shield [P]"] = 2,
["Add - Warning [P]"] = 5,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Unit - Show Energy"] = 11,
["Explosion Affix M+"] = 14,
["Auto Set Skull"] = 11,
["Cast - Quick Flash"] = 2,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Stop Casting"] = 4,
["Add - Explode on Die [P]"] = 1,
["Cast - On Going Cast [P]"] = 2,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 15,
["Fixate"] = 11,
["Countdown"] = 11,
["Spiteful Affix"] = 3,
["Cast - Very Important"] = 15,
["Fixate On You"] = 11,
},
["ghost_auras"] = {
["auras"] = {
["WARLOCK"] = {
{
[172] = true,
[980] = true,
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
},
},
["aura_y_offset"] = 5,
},
["ClaudioWithin"] = {
["extra_icon_use_blizzard_border_color"] = false,
["aura_sort"] = true,
["saved_cvars_last_change"] = {
["ShowClassColorInNameplate"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateOverlapV"] = "Interface/AddOns/Plater/Plater.lua:1581",
["ShowNamePlateLoseAggroFlash"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowEnemyMinus"] = "Interface/AddOns/Plater/Plater.lua:1581",
["NamePlateClassificationScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowFriendlyTotems"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplatePersonalHideDelaySeconds"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowFriendlyPets"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplatePersonalShowInCombat"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplatePersonalShowWithTarget"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateResourceOnTarget"] = "Interface/AddOns/Plater/Plater.lua:1581",
["clampTargetNameplateToScreen"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowAll"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowFriendlyMinions"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelfScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateTargetBehindMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:1581",
["SoftTargetInteract"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:216",
["nameplateShowEnemies"] = "Interface/AddOns/Blizzard_SharedXMLBase/CvarUtil.lua:72",
["NamePlateVerticalScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowSelf"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelfTopInset"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateMotionSpeed"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateGlobalScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowEnemyMinions"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowEnemyPets"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowFriendlyNPCs"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelectedScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:5288",
["SoftTargetIconGameObject"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:216",
["nameplateOverlapH"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplatePersonalShowAlways"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowFriends"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateMotion"] = "Interface/AddOns/Plater/Plater.lua:8674",
["nameplateOccludedAlphaMult"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateMinScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelfAlpha"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateOtherTopInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:5218",
["NamePlateHorizontalScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelfBottomInset"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowEnemyTotems"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowFriendlyGuardians"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowEnemyGuardians"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateTargetRadialPosition"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateLargeTopInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:5219",
["nameplateShowOnlyNames"] = "Interface/AddOns/Plater/Plater.lua:1581",
},
["aura_cache_by_name"] = {
["fiery brand"] = {
204021,
204022,
207744,
207771,
209245,
209247,
320962,
343010,
},
},
["url"] = "https://wago.io/6D--AVMf2/3",
["hover_highlight"] = false,
["aura2_y_offset"] = 1.009994506835938,
["aura_timer_text_anchor"] = {
["y"] = -0.3000011444091797,
},
["health_selection_overlay"] = "Bars",
["expansion_triggerwipe"] = {
[8] = true,
[10] = true,
[9] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.70588237047195,
0.73333334922791,
0.69411766529083,
1,
},
["npc_cache"] = {
[164815] = {
"Zolramus Siphoner",
"The Necrotic Wake",
"enUS",
},
[40788] = {
"Mindbender Ghur'sha",
"Throne of the Tides",
"enUS",
},
[200126] = {
"Fallen Waterspeaker",
"Scarlet Monastery",
"enUS",
},
[194241] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
"enUS",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
"enUS",
},
[26799] = {
"Horde Berserker",
"The Nexus",
"enUS",
},
[99200] = {
"Dresaron",
"Darkheart Thicket",
"enUS",
},
[22897] = {
"Summoned Windfury Totem",
"Black Temple",
"enUS",
},
[22929] = {
"Greater Shadowfiend",
"Black Temple",
"enUS",
},
[190405] = {
"Infuser Sariya",
"Halls of Infusion",
"enUS",
},
[227507] = {
"Sureki Skirmisher",
"Nerub-ar Palace",
"enUS",
},
[213434] = {
"Sporbit",
"Fungal Folly",
"enUS",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[210108] = {
"E.D.N.A",
"The Stonevault",
"enUS",
},
[220599] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[213179] = {
"Avanoxx",
"Ara-Kara, City of Echoes",
"enUS",
},
[210109] = {
"Earth Infused Golem",
"The Stonevault",
"enUS",
},
[212412] = {
"Sootsnout",
"Darkflame Cleft",
"enUS",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
"enUS",
},
[29774] = {
"Spitting Cobra",
"Gundrak",
"enUS",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[29838] = {
"Drakkari Rhino",
"Gundrak",
"enUS",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[200131] = {
"Sha-Touched Guardian",
"Temple of the Jade Serpent",
"enUS",
},
[200387] = {
"Shambling Infester",
"Scarlet Monastery",
"enUS",
},
[219066] = {
"Afflicted Civilian",
"The Rookery",
"enUS",
},
[217531] = {
"Ixin",
"Ara-Kara, City of Echoes",
"enUS",
},
[23953] = {
"Prince Keleseth",
"Utgarde Keep",
"enUS",
},
[98691] = {
"Risen Scout",
"Black Rook Hold",
"enUS",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
},
[217533] = {
"Atik",
"Ara-Kara, City of Echoes",
"enUS",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
"enUS",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[430335] = {
"Webbed Ore Deposit",
"Earthcrawl Mines",
"enUS",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
"enUS",
},
[24849] = {
"Proto-Drake Rider",
"Utgarde Keep",
"enUS",
},
[180433] = {
"Wandering Pulsar",
"Tazavesh, the Veiled Market",
},
[131817] = {
"Cragmaw the Infested",
"The Underrot",
},
[102019] = {
"Stormforged Obliterator",
"Halls of Valor",
},
[131818] = {
"Marked Sister",
"Waycrest Manor",
},
[213954] = {
"Rock Smasher",
"The Stonevault",
"enUS",
},
[228539] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
"enUS",
},
[211140] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[451834] = {
"Collision",
"Nerub-ar Palace",
"enUS",
},
[228540] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
"enUS",
},
[184018] = {
"Bromach",
"Uldaman: Legacy of Tyr",
"enUS",
},
[178133] = {
"Murkbrine Wavejumper",
"Tazavesh, the Veiled Market",
},
[422154] = {
"Brann's Cozy Campfire",
"Kriegval's Rest",
"enUS",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
"enUS",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
"enUS",
},
[218306] = {
"Scarab Captain Vul'akan",
"Nerub-ar Palace",
"enUS",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
"enUS",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
},
[228030] = {
"Sir Finley Mrrgglton",
"The Waterworks",
"enUS",
},
[222145] = {
"Voracious Stagshell",
"Nerub-ar Palace",
"enUS",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[39960] = {
"Deep Murloc Drudge",
"Throne of the Tides",
"enUS",
},
[100486] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[227775] = {
"Captured Waxtail",
"Nerub-ar Palace",
"enUS",
},
[178392] = {
"Gatewarden Zo'mazz",
"Tazavesh, the Veiled Market",
},
[217541] = {
"Nightfall Initiate",
"Nightfall Sanctum",
"enUS",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[98696] = {
"Illysanna Ravencrest",
"Black Rook Hold",
"enUS",
},
[146409] = {
"Lady Jaina Proudmoore",
"Battle of Dazar'alor",
},
[26801] = {
"Horde Ranger",
"The Nexus",
"enUS",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[26929] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[131825] = {
"Sister Briar",
"Waycrest Manor",
"enUS",
},
[222149] = {
"Injured Earthen",
"The Stonevault",
"enUS",
},
[22963] = {
"Bonechewer Worker",
"Black Temple",
"enUS",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
"enUS",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
},
[220616] = {
"Corridor Sleeper",
"Darkflame Cleft",
"enUS",
},
[29680] = {
"Slad'ran Viper",
"Gundrak",
"enUS",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[221896] = {
"Web General Ab'enar",
"Earthcrawl Mines",
"enUS",
},
[23795] = {
"Dark Iron Antagonist",
"Blackrock Depths",
"enUS",
},
[178142] = {
"Murkbrine Fishmancer",
"Tazavesh, the Veiled Market",
},
[225479] = {
"Sureki Webmage",
"The Dawnbreaker",
"enUS",
},
[218315] = {
"Kaheti Sentry",
"Nerub-ar Palace",
"enUS",
},
[24083] = {
"Enslaved Proto-Drake",
"Utgarde Keep",
"enUS",
},
[131318] = {
"Elder Leaxa",
"The Underrot",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[150253] = {
"Weaponized Crawler",
"Operation: Mechagon",
},
[82579] = {
"Grom'kar Far Seer",
"Grimrail Depot",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
"enUS",
},
[150254] = {
"Scraphound",
"Operation: Mechagon",
},
[197847] = {
"Gnawbone Splintershield",
"10.0 Dragon Isles",
},
[222923] = {
"Repurposed Loaderbot",
"The Stonevault",
"enUS",
},
[217039] = {
"Nerubian Hauler",
"Ara-Kara, City of Echoes",
"enUS",
},
[26930] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[421157] = {
"Arathi Torch Cache",
"Earthcrawl Mines",
"enUS",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
},
[223181] = {
"Agile Pursuer",
"City of Threads",
"enUS",
},
[218320] = {
"Web Acolyte",
"Nerub-ar Palace",
"enUS",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
},
[223182] = {
"Web Marauder",
"City of Threads",
"enUS",
},
[227532] = {
"Faceless Devotee",
"Skittering Breach",
"enUS",
},
[168681] = {
"Forsworn Helion",
"Spires of Ascension",
},
[222927] = {
"Sacred Flame Vintner",
"Priory of the Sacred Flame",
"enUS",
},
[29713] = {
"Slad'ran Constrictor",
"Gundrak",
"enUS",
},
[216275] = {
"Brann's Epic Egg",
"The Spiral Weave",
"enUS",
},
[39388] = {
"Mutated Hatchling",
"Grim Batol",
"enUS",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[23956] = {
"Dragonflayer Strategist",
"Utgarde Keep",
"enUS",
},
[220626] = {
"Blood Parasite",
"Nerub-ar Palace",
"enUS",
},
[186339] = {
"Teera",
"The Nokhud Offensive",
"enUS",
},
[218324] = {
"Nakt",
"Ara-Kara, City of Echoes",
"enUS",
},
[192481] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[114312] = {
"Moroes",
"Return to Karazhan",
},
[171500] = {
"Shuffling Corpse",
"The Necrotic Wake",
"enUS",
},
[179944] = {
"Meeting Stone Summoning Portal",
"Nerub-ar Palace",
"enUS",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
"enUS",
},
[127106] = {
"Irontide Officer",
"Freehold",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[26803] = {
"Horde Cleric",
"The Nexus",
"enUS",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
"enUS",
},
[22869] = {
"Illidari Boneslicer",
"Black Temple",
"enUS",
},
[163058] = {
"Mistveil Defender",
"Mists of Tirna Scithe",
"enUS",
},
[22997] = {
"Flame of Azzinoth",
"Black Temple",
"enUS",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
"enUS",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
"enUS",
},
[222167] = {
"Brood Infuser",
"Nerub-ar Palace",
"enUS",
},
[40925] = {
"Tainted Sentry",
"Throne of the Tides",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[165108] = {
"Illusionary Clone",
"Mists of Tirna Scithe",
"enUS",
},
[39390] = {
"Twilight Drake",
"Grim Batol",
"enUS",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[45915] = {
"Armored Mistral",
"The Vortex Pinnacle",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
"enUS",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[76446] = {
"Shadowmoon Dominator",
"Shadowmoon Burial Grounds",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
"enUS",
},
[213216] = {
"Speaker Dorlita",
"The Stonevault",
"enUS",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
"enUS",
},
[224731] = {
"Web Marauder",
"City of Threads",
"enUS",
},
[213217] = {
"Speaker Brokk",
"The Stonevault",
"enUS",
},
[131849] = {
"Crazed Marksman",
"Waycrest Manor",
"enUS",
},
[95766] = {
"Crazed Razorbeak",
"Darkheart Thicket",
"enUS",
},
[114317] = {
"Lady Catriona Von'Indi",
"Return to Karazhan",
},
[224732] = {
"Covert Webmancer",
"City of Threads",
"enUS",
},
[23030] = {
"Dragonmaw Sky Stalker",
"Black Temple",
"enUS",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
"enUS",
},
[131850] = {
"Maddened Survivalist",
"Waycrest Manor",
"enUS",
},
[224221] = {
"Twilight Overseer",
"Grim Batol",
"enUS",
},
[98965] = {
"Kur'talos Ravencrest",
"Black Rook Hold",
"enUS",
},
[127879] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[23318] = {
"Ashtongue Rogue",
"Black Temple",
"enUS",
},
[83613] = {
"Koramar",
"Iron Docks",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
},
[199659] = {
"Warlord Kagni",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[82590] = {
"Grimrail Scout",
"Grimrail Depot",
},
[212453] = {
"Ghastly Voidsoul",
"The Stonevault",
"enUS",
},
[39392] = {
"Faceless Corruptor",
"Grim Batol",
"enUS",
},
[223200] = {
"Blood Collector",
"Nerub-ar Palace",
"enUS",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[150276] = {
"Heavy Scrapbot",
"Operation: Mechagon",
},
[114319] = {
"Lady Keira Berrybuck",
"Return to Karazhan",
},
[455485] = {
"|cff1EFF00Sturdy Chest",
"Skittering Breach",
"enUS",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[229854] = {
"Inquisitor Speaker",
"Nightfall Sanctum",
"enUS",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
},
[216293] = {
"Trilling Attendant",
"Ara-Kara, City of Echoes",
"enUS",
},
[214502] = {
"The Bloodbound Horror",
"Nerub-ar Palace",
"enUS",
},
[129928] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[455488] = {
"|cff1EFF00Sturdy Chest",
"The Underkeep",
"enUS",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
"enUS",
},
[210153] = {
"Ol' Waxbeard",
"Darkflame Cleft",
"enUS",
},
[214503] = {
"Sikran",
"Nerub-ar Palace",
"enUS",
},
[171772] = {
"Mistveil Defender",
"Mists of Tirna Scithe",
"enUS",
},
[162049] = {
"Vestige of Doubt",
"Sanguine Depths",
},
[168446] = {
"Skeletal Monstrosity",
"The Necrotic Wake",
},
[205804] = {
"Risen Dragon",
"Dawn of the Infinite",
"enUS",
},
[208363] = {
"Urctos",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[223204] = {
"Chamber Guardian",
"Nerub-ar Palace",
"enUS",
},
[221669] = {
"Blight Swarmer",
"Nerub-ar Palace",
"enUS",
},
[138254] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[128650] = {
"Chopper Redhook",
"Siege of Boralus",
"enUS",
},
[214761] = {
"Nightfall Ritualist",
"The Dawnbreaker",
"enUS",
},
[183033] = {
"Grim Reflection",
"Sepulcher of the First Ones",
},
[138255] = {
"Ashvane Spotter",
"Siege of Boralus",
"enUS",
},
[210156] = {
"Skarmorak",
"The Stonevault",
"enUS",
},
[208365] = {
"Aerwynn",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[214762] = {
"Nightfall Commander",
"The Dawnbreaker",
"enUS",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
"enUS",
},
[214251] = {
"Kobyss Witherer",
"The Sinkhole",
"enUS",
},
[433492] = {
"Stolen Relic",
"The Sinkhole",
"enUS",
},
[223207] = {
"Black Blood",
"Nerub-ar Palace",
"enUS",
},
[59544] = {
"The Nodding Tiger",
"Temple of the Jade Serpent",
},
[129547] = {
"Blacktooth Knuckleduster",
"Freehold",
"enUS",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
"enUS",
},
[208367] = {
"Pip",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[138002] = {
"Scrimshaw Gutter",
"Siege of Boralus",
"enUS",
},
[95772] = {
"Frenzied Nightclaw",
"Darkheart Thicket",
"enUS",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
},
[129548] = {
"Blacktooth Brute",
"Freehold",
"enUS",
},
[206066] = {
"Timestream Leech",
"Dawn of the Infinite",
"enUS",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
"enUS",
},
[455504] = {
"|cff1EFF00Sturdy Chest",
"The Dread Pit",
"enUS",
},
[131863] = {
"Raal the Gluttonous",
"Waycrest Manor",
"enUS",
},
[104217] = {
"Talixae Flamewreath",
"Court of Stars",
},
[59545] = {
"The Golden Beetle",
"Temple of the Jade Serpent",
},
[131864] = {
"Gorak Tul",
"Waycrest Manor",
"enUS",
},
[206068] = {
"Temporal Fusion",
"Dawn of the Infinite",
"enUS",
},
[222700] = {
"Umbral Weave",
"City of Threads",
"enUS",
},
[455508] = {
"|cff1EFF00Sturdy Chest",
"The Underkeep",
"enUS",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
},
[206070] = {
"Chronaxie",
"Dawn of the Infinite",
"enUS",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
"enUS",
},
[455513] = {
"|cff1EFF00Sturdy Chest",
"The Sinkhole",
"enUS",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[220401] = {
"Pale Priest",
"City of Threads",
"enUS",
},
[80935] = {
"Grom'kar Boomer",
"Grimrail Depot",
},
[150292] = {
"Mechagon Cavalry",
"Operation: Mechagon",
},
[446305] = {
"Corrupted Flame",
"11.0 - Priory Scenario",
"enUS",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[464729] = {
"|cff0070ddBountiful Heavy Trunk",
"The Dread Pit",
"enUS",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
"enUS",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
"enUS",
},
[206074] = {
"Pendule",
"Dawn of the Infinite",
"enUS",
},
[186116] = {
"Gutshot",
"Brackenhide Hollow",
"enUS",
},
[80936] = {
"Grom'kar Grenadier",
"Grimrail Depot",
},
[194816] = {
"Forgewrought Monstrosity",
"Neltharus",
"enUS",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[220148] = {
"Gem Hoarder",
"The Dread Pit",
"enUS",
},
[214263] = {
"Waxface",
"The Waterworks",
"enUS",
},
[413046] = {
"Bismuth",
"The Underkeep",
"enUS",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
"enUS",
},
[214264] = {
"Cursedforge Honor Guard",
"The Stonevault",
"enUS",
},
[455523] = {
"|cff1EFF00Sturdy Chest",
"The Underkeep",
"enUS",
},
[80937] = {
"Grom'kar Gunner",
"Grimrail Depot",
},
[176395] = {
"Overloaded Mailemental",
"Tazavesh, the Veiled Market",
},
[22873] = {
"Coilskar General",
"Black Temple",
"enUS",
},
[218103] = {
"Nerubian Lord",
"Skittering Breach",
"enUS",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
"enUS",
},
[455525] = {
"|cff1EFF00Sturdy Chest",
"The Sinkhole",
"enUS",
},
[298930] = {
"Bench",
"Siege of Boralus",
"enUS",
},
[176396] = {
"Defective Sorter",
"Tazavesh, the Veiled Market",
},
[150297] = {
"Mechagon Renormalizer",
"Operation: Mechagon",
},
[413563] = {
"|cff1EFF00Heavy Trunk",
"The Waterworks",
"enUS",
},
[165138] = {
"Blight Bag",
"The Necrotic Wake",
"enUS",
},
[40357] = {
"Invoked Shadowflame Spirit",
"Grim Batol",
"enUS",
},
[186120] = {
"Treemouth",
"Brackenhide Hollow",
"enUS",
},
[95779] = {
"Festerhide Grizzly",
"Darkheart Thicket",
"enUS",
},
[222455] = {
"Black Blood Harvester",
"Nerub-ar Palace",
"enUS",
},
[186121] = {
"Decatriarch Wratheye",
"Brackenhide Hollow",
"enUS",
},
[298935] = {
"Bench",
"Siege of Boralus",
"enUS",
},
[186122] = {
"Rira Hackclaw",
"Brackenhide Hollow",
"enUS",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[221945] = {
"Forgotten Harbinger",
"Nerub-ar Palace",
"enUS",
},
[23961] = {
"Dragonflayer Ironhelm",
"Utgarde Keep",
"enUS",
},
[136483] = {
"Ashvane Deckhand",
"Siege of Boralus",
"enUS",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
"enUS",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[40166] = {
"Molten Giant",
"Grim Batol",
"enUS",
},
[224249] = {
"Twilight Lavabender",
"Grim Batol",
"enUS",
},
[186124] = {
"Gashtooth",
"Brackenhide Hollow",
"enUS",
},
[223994] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[222459] = {
"Congealing Mass",
"Nerub-ar Palace",
"enUS",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[165911] = {
"Loyal Creation",
"UNKNOWN",
"enUS",
},
[201222] = {
"Valow, Timesworn Keeper",
"Dawn of the Infinite",
"enUS",
},
[223995] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[26776] = {
"Direbrew Minion",
"Blackrock Depths",
"enUS",
},
[230904] = {
"Shadeguard Speaker",
"Nightfall Sanctum",
"enUS",
},
[215040] = {
"Kobyss Bonechewer",
"The Sinkhole",
"enUS",
},
[201223] = {
"Infinite Twilight Magus",
"Dawn of the Infinite",
"enUS",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[220158] = {
"Under-Lord Vik'tis",
"The Dread Pit",
"enUS",
},
[216320] = {
"The Coaglamation",
"City of Threads",
"enUS",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
"enUS",
},
[137511] = {
"Bilge Rat Cutthroat",
"Siege of Boralus",
"enUS",
},
[40167] = {
"Twilight Beguiler",
"Grim Batol",
"enUS",
},
[9554] = {
"Hammered Patron",
"Blackrock Depths",
"enUS",
},
[195851] = {
"Ukhel Deathspeaker",
"The Nokhud Offensive",
"enUS",
},
[222974] = {
"Hungry Scarab",
"City of Threads",
"enUS",
},
[193293] = {
"Qalashi Warden",
"Neltharus",
"enUS",
},
[40935] = {
"Gilgoblin Hunter",
"Throne of the Tides",
"enUS",
},
[172312] = {
"Spinemaw Gorger",
"Mists of Tirna Scithe",
"enUS",
},
[138281] = {
"Faceless Corruptor",
"The Underrot",
},
[218370] = {
"Queen Ansurek",
"Nerub-ar Palace",
"enUS",
},
[179733] = {
"Invigorating Fish Stick",
"Tazavesh, the Veiled Market",
},
[125977] = {
"Reanimation Totem",
"Atal'Dazar",
"enUS",
},
[187154] = {
"Unstable Curator",
"The Azure Vault",
"enUS",
},
[464761] = {
"|cff0070ddBountiful Heavy Trunk",
"The Spiral Weave",
"enUS",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
"enUS",
},
[168988] = {
"Overgrowth",
"Mists of Tirna Scithe",
"enUS",
},
[80816] = {
"Ahri'ok Dugru",
"Iron Docks",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[186644] = {
"Leymor",
"The Azure Vault",
"enUS",
},
[216326] = {
"Ascended Neophyte",
"City of Threads",
"enUS",
},
[40936] = {
"Faceless Watcher",
"Throne of the Tides",
"enUS",
},
[413590] = {
"|cffA335EEBountiful Coffer",
"The Spiral Weave",
"enUS",
},
[192786] = {
"Qalashi Plunderer",
"Neltharus",
"enUS",
},
[211977] = {
"Pack Mole",
"Darkflame Cleft",
"enUS",
},
[216583] = {
"Chittering Fearmonger",
"UNKNOWN",
"enUS",
},
[22875] = {
"Coilskar Sea-Caller",
"Black Temple",
"enUS",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[216584] = {
"Nerubian Captain",
"UNKNOWN",
"enUS",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
"enUS",
},
[213770] = {
"Ink of Ozumat",
"Throne of the Tides",
"enUS",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[220423] = {
"Retired Lord Vul'azak",
"City of Threads",
"enUS",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[163619] = {
"Zolramus Bonecarver",
"The Necrotic Wake",
"enUS",
},
[192789] = {
"Nokhud Longbow",
"The Nokhud Offensive",
"enUS",
},
[187160] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[246779] = {
"Font of Power",
"City of Threads",
"enUS",
},
[114338] = {
"Mana Confluence",
"Return to Karazhan",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
"enUS",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
"enUS",
},
[137521] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[206352] = {
"Alliance Archer",
"Dawn of the Infinite",
"enUS",
},
[163621] = {
"Goregrind",
"The Necrotic Wake",
"enUS",
},
[155434] = {
"Emissary of the Tides",
"Freehold",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
},
[197398] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[216333] = {
"Bloodstained Assistant",
"Ara-Kara, City of Echoes",
"enUS",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[163623] = {
"Rotspew Leftovers",
"The Necrotic Wake",
"enUS",
},
[433563] = {
"Key Scroll",
"The Underkeep",
"enUS",
},
[189467] = {
"Qalashi Bonesplitter",
"Neltharus",
"enUS",
},
[214287] = {
"Earth Burst Totem",
"The Stonevault",
"enUS",
},
[83763] = {
"Grom'kar Technician",
"Iron Docks",
},
[213008] = {
"Wriggling Darkspawn",
"Darkflame Cleft",
"enUS",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[217870] = {
"Devouring Shade",
"Nightfall Sanctum",
"enUS",
},
[228361] = {
"Agile Pursuer",
"City of Threads",
"enUS",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[22844] = {
"Ashtongue Battlelord",
"Black Temple",
"enUS",
},
[22876] = {
"Coilskar Soothsayer",
"Black Temple",
"enUS",
},
[216336] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
"enUS",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
"enUS",
},
[29305] = {
"Moorabi",
"Gundrak",
"enUS",
},
[203799] = {
"Horde Axe Thrower",
"Dawn of the Infinite",
"enUS",
},
[216337] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[215826] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[189471] = {
"Qalashi Blacksmith",
"Neltharus",
"enUS",
},
[216338] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[83765] = {
"Grom'kar Footsoldier",
"Iron Docks",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
"enUS",
},
[224271] = {
"Twilight Warlock",
"Grim Batol",
"enUS",
},
[216339] = {
"Sureki Unnaturaler",
"City of Threads",
"enUS",
},
[214548] = {
"Slippery Syphoner",
"The Sinkhole",
"enUS",
},
[89011] = {
"Rylak Skyterror",
"Iron Docks",
},
[210966] = {
"Sureki Webmage",
"The Dawnbreaker",
"enUS",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205337] = {
"Infinite Timebender",
"Dawn of the Infinite",
"enUS",
},
[216340] = {
"Sentry Stagshell",
"Ara-Kara, City of Echoes",
"enUS",
},
[83894] = {
"Dulhu",
"The Everbloom",
"enUS",
},
[440229] = {
"Minecart",
"The Stonevault",
"enUS",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
"enUS",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
"enUS",
},
[216341] = {
"Jabbing Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[214550] = {
"Deepwater Snapper",
"The Sinkhole",
"enUS",
},
[28410] = {
"Dragonflayer Spiritualist",
"Utgarde Keep",
"enUS",
},
[452513] = {
"Diagnostic Console",
"The Stonevault",
"enUS",
},
[454049] = {
"|cff1EFF00Sturdy Chest",
"Earthcrawl Mines",
"enUS",
},
[177193] = {
"Doom Portal",
"Mists of Tirna Scithe",
"enUS",
},
[216342] = {
"Skittering Assistant",
"City of Threads",
"enUS",
},
[214551] = {
"Wandering Gutter",
"The Sinkhole",
"enUS",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
"enUS",
},
[59555] = {
"Haunting Sha",
"Scarlet Monastery",
"enUS",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
"enUS",
},
[22845] = {
"Ashtongue Mystic",
"Black Temple",
"enUS",
},
[22877] = {
"Coilskar Wrangler",
"Black Temple",
"enUS",
},
[224276] = {
"Twilight Enforcer",
"Grim Batol",
"enUS",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
},
[186151] = {
"Balakar Khan",
"The Nokhud Offensive",
"enUS",
},
[196642] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[29306] = {
"Gal'darah",
"Gundrak",
"enUS",
},
[189478] = {
"Forgemaster Gorek",
"Neltharus",
"enUS",
},
[97202] = {
"Olmyr the Enlightened",
"Halls of Valor",
},
[163891] = {
"Rotmarrow Slime",
"Plaguefall",
},
[211228] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[23421] = {
"Ashtongue Channeler",
"Black Temple",
"enUS",
},
[212764] = {
"Engine Speaker",
"The Stonevault",
"enUS",
},
[129699] = {
"Ludwig Von Tortollan",
"Freehold",
},
[103344] = {
"Oakheart",
"Darkheart Thicket",
"enUS",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
"enUS",
},
[414657] = {
"Prototype Stomping Shoes Chest",
"The Waterworks",
"enUS",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[162103] = {
"Executor Tarvold",
"Sanguine Depths",
},
[454063] = {
"Mycobloom",
"Fungal Folly",
"enUS",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
"enUS",
},
[165430] = {
"Malignant Spawn",
"Plaguefall",
},
[229399] = {
"Blood Drainer",
"Nerub-ar Palace",
"enUS",
},
[223770] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[221979] = {
"Void Bound Howler",
"The Stonevault",
"enUS",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
"enUS",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[26716] = {
"Azure Warder",
"The Nexus",
"enUS",
},
[164920] = {
"Drust Soulcleaver",
"Mists of Tirna Scithe",
"enUS",
},
[146753] = {
"Kul Tiran Marine",
"Battle of Dazar'alor",
},
[22846] = {
"Ashtongue Stormcaller",
"Black Temple",
"enUS",
},
[223772] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
"enUS",
},
[135240] = {
"Soul Essence",
"Kul Tiras",
"enUS",
},
[100532] = {
"Bloodtainted Burster",
"Darkheart Thicket",
"enUS",
},
[223773] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[454071] = {
"Mycobloom",
"The Sinkhole",
"enUS",
},
[165946] = {
"Mordretha, the Endless Empress",
"Theater of Pain",
},
[223774] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[83389] = {
"Ironwing Flamespitter",
"Iron Docks",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
"enUS",
},
[223775] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[189232] = {
"Kokia Blazehoof",
"Ruby Life Pools",
"enUS",
},
[220193] = {
"Sureki Venomblade",
"City of Threads",
"enUS",
},
[223776] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[223777] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[221986] = {
"Blood Horror",
"Nerub-ar Palace",
"enUS",
},
[220195] = {
"Sureki Silkbinder",
"City of Threads",
"enUS",
},
[220707] = {
"Staglette",
"11.0 - Priory Scenario",
"enUS",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
"enUS",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
"enUS",
},
[220196] = {
"Herald of Ansurek",
"City of Threads",
"enUS",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[135246] = {
"\"Stabby\" Lottie",
"Skittering Hollow (Islands 5)",
},
[456130] = {
"Refreshment Table",
"Nerub-ar Palace",
"enUS",
},
[220197] = {
"Royal Swarmguard",
"City of Threads",
"enUS",
},
[22847] = {
"Ashtongue Primalist",
"Black Temple",
"enUS",
},
[215592] = {
"Siegehold Fortifier",
"The Spiral Weave",
"enUS",
},
[95674] = {
"Fenryr",
"Halls of Valor",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
"enUS",
},
[104246] = {
"Duskwatch Guard",
"Court of Stars",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
"enUS",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
"enUS",
},
[40177] = {
"Forgemaster Throngus",
"Grim Batol",
"enUS",
},
[220199] = {
"Battle Scarab",
"City of Threads",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[131667] = {
"Soulbound Goliath",
"Waycrest Manor",
"enUS",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
},
[454090] = {
"|cff1EFF00Sturdy Chest",
"Earthcrawl Mines",
"enUS",
},
[454091] = {
"|cff1EFF00Sturdy Chest",
"Earthcrawl Mines",
"enUS",
},
[216363] = {
"Reinforced Drone",
"Ara-Kara, City of Echoes",
"enUS",
},
[210478] = {
"Infected Beast",
"Fungal Folly",
"enUS",
},
[454092] = {
"|cff1EFF00Sturdy Chest",
"Earthcrawl Mines",
"enUS",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
},
[210479] = {
"Carnivorous Lasher",
"Fungal Folly",
"enUS",
},
[454094] = {
"|cff1EFF00Sturdy Chest",
"Earthcrawl Mines",
"enUS",
},
[131670] = {
"Heartsbane Vinetwister",
"Waycrest Manor",
},
[213806] = {
"Splotch",
"Throne of the Tides",
"enUS",
},
[216365] = {
"Winged Carrier",
"Ara-Kara, City of Echoes",
"enUS",
},
[167493] = {
"Venomous Sniper",
"Plaguefall",
},
[205363] = {
"Time-Lost Waveshaper",
"Dawn of the Infinite",
"enUS",
},
[444374] = {
"Minecart",
"The Stonevault",
"enUS",
},
[100539] = {
"Taintheart Deadeye",
"Darkheart Thicket",
"enUS",
},
[26782] = {
"Crystalline Keeper",
"The Nexus",
"enUS",
},
[22848] = {
"Storm Fury",
"Black Temple",
"enUS",
},
[445401] = {
"Kuldas' Toolbox",
"Awakening The Machine",
"enUS",
},
[220206] = {
"Crazed Skardyn",
"The Dread Pit",
"enUS",
},
[212786] = {
"Voidrider",
"The Rookery",
"enUS",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
},
[411628] = {
"Wax-Encrusted Chest",
"Darkflame Cleft",
"enUS",
},
[194108] = {
"Summoning Portal",
"The Waterworks",
"enUS",
},
[115765] = {
"Abstract Nullifier",
"Return to Karazhan",
},
[164427] = {
"Reanimated Warrior",
"The Necrotic Wake",
"enUS",
},
[423912] = {
"Bloodied Chest",
"Nightfall Sanctum",
"enUS",
},
[208438] = {
"Infinite Saboteur",
"Dawn of the Infinite",
"enUS",
},
[227373] = {
"Vicious Spiderling",
"The Waterworks",
"enUS",
},
[179269] = {
"Oasis Security",
"Tazavesh, the Veiled Market",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
"enUS",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[423915] = {
"Stolen Relic",
"Nightfall Sanctum",
"enUS",
},
[23872] = {
"Coren Direbrew",
"Blackrock Depths",
"enUS",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
"enUS",
},
[165197] = {
"Skeletal Monstrosity",
"The Necrotic Wake",
"enUS",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
"enUS",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[92610] = {
"Understone Drummer",
"Neltharion's Lair",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
},
[227632] = {
"Venombite",
"Earthcrawl Mines",
"enUS",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[303147] = {
"Summoning Portal",
"The Underkeep",
"enUS",
},
[208698] = {
"Infinite Riftmage",
"Dawn of the Infinite",
"enUS",
},
[98368] = {
"Ghostly Protector",
"Black Rook Hold",
"enUS",
},
[201790] = {
"Loszkeleth",
"Dawn of the Infinite",
"enUS",
},
[206140] = {
"Coalesced Time",
"Dawn of the Infinite",
"enUS",
},
[212793] = {
"Void Ascendant",
"The Rookery",
"enUS",
},
[135263] = {
"Ashvane Spotter",
"Siege of Boralus",
"enUS",
},
[22849] = {
"Ashtongue Feral Spirit",
"Black Temple",
"enUS",
},
[22881] = {
"Aqueous Surger",
"Black Temple",
"enUS",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
"enUS",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
"enUS",
},
[81737] = {
"Unchecked Growth",
"The Everbloom",
"enUS",
},
[223541] = {
"Stolen Loader",
"Fungal Folly",
"enUS",
},
[226100] = {
"Kaheti Skirmisher",
"Nerub-ar Palace",
"enUS",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
"enUS",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[29630] = {
"Fanged Pit Viper",
"Gundrak",
"enUS",
},
[216634] = {
"Swooping Spreader",
"Earthcrawl Mines",
"enUS",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[211261] = {
"Ascendant Vis'coxria",
"The Dawnbreaker",
"enUS",
},
[217658] = {
"Sir Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[29822] = {
"Drakkari Fire Weaver",
"Gundrak",
"enUS",
},
[163157] = {
"Amarth",
"The Necrotic Wake",
"enUS",
},
[97219] = {
"Solsten",
"Halls of Valor",
},
[29982] = {
"Drakkari Raider",
"Gundrak",
"enUS",
},
[211262] = {
"Ixkreten the Unbreakable",
"The Dawnbreaker",
"enUS",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
"enUS",
},
[199748] = {
"Timeline Marauder",
"Dawn of the Infinite",
"enUS",
},
[220730] = {
"Royal Venomshell",
"City of Threads",
"enUS",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[378899] = {
"Grand Banquet of the Kalu'ak",
"Mists of Tirna Scithe",
"enUS",
},
[211263] = {
"Deathscreamer Iken'tak",
"The Dawnbreaker",
"enUS",
},
[184908] = {
"Vy Interceptor",
"The Necrotic Wake",
},
[199749] = {
"Timestream Anomaly",
"Dawn of the Infinite",
"enUS",
},
[44404] = {
"Naz'jar Frost Witch",
"Throne of the Tides",
"enUS",
},
[133990] = {
"Scrimshaw Gutter",
"Siege of Boralus",
"enUS",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
"enUS",
},
[208450] = {
"Wandering Candle",
"Darkflame Cleft",
"enUS",
},
[455666] = {
"Research Papers",
"The Underkeep",
"enUS",
},
[211777] = {
"Spitfire Fusetender",
"Kriegval's Rest",
"enUS",
},
[207939] = {
"Baron Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[219198] = {
"Ravenous Scarab",
"City of Threads",
"enUS",
},
[164185] = {
"Echelon",
"Halls of Atonement",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
"enUS",
},
[207940] = {
"Prioress Murrpray",
"Priory of the Sacred Flame",
"enUS",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[336432] = {
"Lavish Refreshment Table",
"The Waterworks",
"enUS",
},
[185680] = {
"Vy Relic",
"The Necrotic Wake",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
"enUS",
},
[151649] = {
"Defense Bot Mk I",
"Operation: Mechagon",
},
[229691] = {
"Swarmbot",
"Awakening The Machine",
"enUS",
},
[173655] = {
"Mistveil Matriarch",
"Mists of Tirna Scithe",
"enUS",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
},
[221760] = {
"Risen Mage",
"Priory of the Sacred Flame",
"enUS",
},
[207943] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
"enUS",
},
[222273] = {
"Sureki Silkbow",
"Nerub-ar Palace",
"enUS",
},
[185683] = {
"Wo Relic",
"The Necrotic Wake",
},
[208456] = {
"Shuffling Horror",
"Darkflame Cleft",
"enUS",
},
[297035] = {
"Chair",
"Siege of Boralus",
"enUS",
},
[129208] = {
"Dread Captain Lockwood",
"Siege of Boralus",
"enUS",
},
[219715] = {
"Kobyss Ambusher",
"The Sinkhole",
"enUS",
},
[164702] = {
"Carrion Worm",
"The Necrotic Wake",
"enUS",
},
[297036] = {
"Chair",
"Siege of Boralus",
"enUS",
},
[208457] = {
"Skittering Darkness",
"Darkflame Cleft",
"enUS",
},
[229695] = {
"Corrupted Machinist",
"Awakening The Machine",
"enUS",
},
[224066] = {
"Sureki Vanguard",
"Nerub-ar Palace",
"enUS",
},
[207946] = {
"Captain Dailcry",
"Priory of the Sacred Flame",
"enUS",
},
[226625] = {
"Cave Skipper",
"The Sinkhole",
"enUS",
},
[218693] = {
"Eclipsing Grasp",
"11.0 - Priory Scenario",
"enUS",
},
[114624] = {
"Arcane Warden",
"Return to Karazhan",
},
[220485] = {
"Peculiar Nerubian",
"The Spiral Weave",
"enUS",
},
[194898] = {
"Primalist Arcblade",
"The Nokhud Offensive",
"enUS",
},
[213577] = {
"Spitfire Charger",
"Kriegval's Rest",
"enUS",
},
[216648] = {
"Nx",
"City of Threads",
"enUS",
},
[207949] = {
"Zealous Templar",
"Priory of the Sacred Flame",
"enUS",
},
[218440] = {
"Kaheti War Banner",
"Nerub-ar Palace",
"enUS",
},
[216649] = {
"Vx",
"City of Threads",
"enUS",
},
[83025] = {
"Grom'kar Battlemaster",
"Iron Docks",
},
[225605] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[40633] = {
"Naz'jar Honor Guard",
"Throne of the Tides",
"enUS",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[40825] = {
"Erunak Stonespeaker",
"Throne of the Tides",
"enUS",
},
[23523] = {
"Ashtongue Elementalist",
"Black Temple",
"enUS",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
},
[174175] = {
"Loyal Stoneborn",
"Halls of Atonement",
},
[198995] = {
"Chronikar",
"Dawn of the Infinite",
"enUS",
},
[449549] = {
"Corrupted Flame",
"11.0 - Priory Scenario",
"enUS",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
"enUS",
},
[210510] = {
"Flimflam the Cowardly",
"Darkflame Cleft",
"enUS",
},
[83026] = {
"Siegemaster Olugar",
"Iron Docks",
},
[81235] = {
"Grimrail Laborer",
"Grimrail Depot",
},
[170850] = {
"Raging Bloodhorn",
"Theater of Pain",
},
[297050] = {
"Chair",
"Siege of Boralus",
"enUS",
},
[161895] = {
"Thing From Beyond",
"Horrific Vision of Orgrimmar",
},
[219723] = {
"Royal Whisperer",
"Nerub-ar Palace",
"enUS",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
"enUS",
},
[207186] = {
"Unruly Stormrook",
"The Rookery",
"enUS",
},
[81236] = {
"Grimrail Technician",
"Grimrail Depot",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
"enUS",
},
[114628] = {
"Skeletal Waiter",
"Return to Karazhan",
},
[198999] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[141939] = {
"Ashvane Spotter",
"Siege of Boralus",
"enUS",
},
[203861] = {
"Horde Destroyer",
"Dawn of the Infinite",
"enUS",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
"enUS",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[199000] = {
"Chrono-Lord Deios",
"Dawn of the Infinite",
"enUS",
},
[22884] = {
"Leviathan",
"Black Temple",
"enUS",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
"enUS",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
},
[229706] = {
"Explosive Bomberbot",
"Awakening The Machine",
"enUS",
},
[219983] = {
"Eye of the Queen",
"City of Threads",
"enUS",
},
[186208] = {
"Rotbow Stalker",
"Brackenhide Hollow",
"enUS",
},
[219984] = {
"Xeph'itik",
"City of Threads",
"enUS",
},
[116549] = {
"Backup Singer",
"Return to Karazhan",
},
[218961] = {
"Starved Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[218962] = {
"Bloated Pest",
"The Underkeep",
"enUS",
},
[441379] = {
"Oil Brazier",
"11.0 - Priory Scenario",
"enUS",
},
[208728] = {
"Treasure Wraith",
"The Dread Pit",
"enUS",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
"enUS",
},
[167533] = {
"Advent Nevermore",
"Theater of Pain",
},
[207450] = {
"Fungal Stabber",
"Fungal Folly",
"enUS",
},
[455713] = {
"DELVER'S CALL: Kriegval's Rest",
"Kriegval's Rest",
"enUS",
},
[114632] = {
"Spectral Attendant",
"Return to Karazhan",
},
[219221] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[211289] = {
"Taener Duelmal",
"Priory of the Sacred Flame",
"enUS",
},
[26723] = {
"Keristrasza",
"The Nexus",
"enUS",
},
[129601] = {
"Cutwater Harpooner",
"Freehold",
"enUS",
},
[478744] = {
"Mislaid Curiosity",
"Skittering Breach",
"enUS",
},
[32665] = {
"Crystalline Tangler",
"The Nexus",
"enUS",
},
[211290] = {
"Elaena Emberlanz",
"Priory of the Sacred Flame",
"enUS",
},
[26794] = {
"Ormorok the Tree-Shaper",
"The Nexus",
"enUS",
},
[22917] = {
"Illidan Stormrage",
"Black Temple",
"enUS",
},
[96934] = {
"Valarjar Trapper",
"Halls of Valor",
},
[102095] = {
"Risen Lancer",
"Black Rook Hold",
"enUS",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
},
[114633] = {
"Spectral Valet",
"Return to Karazhan",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
},
[211291] = {
"Sergeant Shaynemail",
"Priory of the Sacred Flame",
"enUS",
},
[207453] = {
"Fungal Rotspreader",
"Fungal Folly",
"enUS",
},
[222038] = {
"Shrillwing Hunter En'kilah",
"Nerub-ar Palace",
"enUS",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
"enUS",
},
[204127] = {
"Kobold Taskfinder",
"Kriegval's Rest",
"enUS",
},
[224853] = {
"Mutated Hatchling",
"Grim Batol",
"enUS",
},
[111563] = {
"Duskwatch Guard",
"Court of Stars",
},
[442414] = {
"Shimmering Crystal",
"The Waterworks",
"enUS",
},
[207198] = {
"Cursed Thunderer",
"The Rookery",
"enUS",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
"enUS",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
"enUS",
},
[154744] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[114634] = {
"Undying Servant",
"Return to Karazhan",
},
[213338] = {
"Forgebound Mender",
"The Stonevault",
"enUS",
},
[207199] = {
"Cursed Rooktender",
"The Rookery",
"enUS",
},
[205408] = {
"Infinite Timeslicer",
"Dawn of the Infinite",
"enUS",
},
[29826] = {
"Drakkari Medicine Man",
"Gundrak",
"enUS",
},
[216155] = {
"Skittering Ambusher",
"Skittering Breach",
"enUS",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
"enUS",
},
[179821] = {
"Commander Zo'far",
"Tazavesh, the Veiled Market",
},
[26737] = {
"Crazed Mana-Surge",
"The Nexus",
"enUS",
},
[218884] = {
"Shattershell Scarab",
"Nerub-ar Palace",
"enUS",
},
[26746] = {
"Crazed Mana-Wraith",
"The Nexus",
"enUS",
},
[207456] = {
"Fungal Speartender",
"Fungal Folly",
"enUS",
},
[207177] = {
"Infinite Watchkeeper",
"Dawn of the Infinite",
"enUS",
},
[28067] = {
"Dark Iron Brewer",
"Blackrock Depths",
"enUS",
},
[26735] = {
"Azure Scale-Binder",
"The Nexus",
"enUS",
},
[26928] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[24069] = {
"Dragonflayer Bonecrusher",
"Utgarde Keep",
"enUS",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
"enUS",
},
[26729] = {
"Steward",
"The Nexus",
"enUS",
},
[219739] = {
"Infested Spawn",
"Nerub-ar Palace",
"enUS",
},
[222042] = {
"Shrillwing",
"Nerub-ar Palace",
"enUS",
},
[207969] = {
"Horde Raider",
"Dawn of the Infinite",
"enUS",
},
[220507] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[228951] = {
"Nerubian Stalker",
"The Dread Pit",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[180335] = {
"Cartel Smuggler",
"Tazavesh, the Veiled Market",
},
[213343] = {
"Forge Loader",
"The Stonevault",
"enUS",
},
[227874] = {
"Web Spreader",
"Skittering Breach",
"enUS",
},
[219996] = {
"Faceless Devotee",
"Skittering Breach",
"enUS",
},
[26798] = {
"Commander Kolurg",
"The Nexus",
"enUS",
},
[220508] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[104273] = {
"Jazshariu",
"Court of Stars",
},
[114636] = {
"Phantom Guardsman",
"Return to Karazhan",
},
[180336] = {
"Cartel Wiseguy",
"Tazavesh, the Veiled Market",
},
[26727] = {
"Mage Hunter Ascendant",
"The Nexus",
"enUS",
},
[115020] = {
"Arcanid",
"Return to Karazhan",
},
[444098] = {
"Webbed Chest",
"The Underkeep",
"enUS",
},
[203877] = {
"Kobold Thwacker",
"Kriegval's Rest",
"enUS",
},
[220509] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[228953] = {
"Skittering Intruder",
"Skittering Breach",
"enUS",
},
[129989] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[26722] = {
"Azure Magus",
"The Nexus",
"enUS",
},
[166264] = {
"Spare Parts",
"The Necrotic Wake",
"enUS",
},
[23954] = {
"Ingvar the Plunderer",
"Utgarde Keep",
"enUS",
},
[187246] = {
"Nullmagic Hornswog",
"The Azure Vault",
"enUS",
},
[203878] = {
"Kobold Mystic",
"Kriegval's Rest",
"enUS",
},
[220510] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[104274] = {
"Baalgar the Watchful",
"Court of Stars",
},
[114637] = {
"Spectral Sentry",
"Return to Karazhan",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[205158] = {
"Spurlok, Timesworn Sentinel",
"Dawn of the Infinite",
"enUS",
},
[24071] = {
"Dragonflayer Heartsplitter",
"Utgarde Keep",
"enUS",
},
[228538] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[187503] = {
"Ambitious Underboss",
"10.0 Dragon Isles",
},
[40319] = {
"Drahga Shadowburner",
"Grim Batol",
"enUS",
},
[196203] = {
"Ethereal Restorer",
"Algeth'ar Academy",
"enUS",
},
[206694] = {
"Fervent Sharpshooter",
"Priory of the Sacred Flame",
"enUS",
},
[24200] = {
"Skarvald the Constructor",
"Utgarde Keep",
"enUS",
},
[166266] = {
"Spare Parts",
"The Necrotic Wake",
"enUS",
},
[150146] = {
"Scrapbone Shaman",
"Operation: Mechagon",
},
[128455] = {
"T'lonja",
"Atal'Dazar",
"enUS",
},
[29735] = {
"Savage Worg",
"Utgarde Keep",
"enUS",
},
[28419] = {
"Frenzied Geist",
"Utgarde Keep",
"enUS",
},
[104275] = {
"Imacu'tya",
"Court of Stars",
},
[128967] = {
"Ashvane Sniper",
"Siege of Boralus",
"enUS",
},
[24085] = {
"Dragonflayer Overseer",
"Utgarde Keep",
"enUS",
},
[207207] = {
"Voidstone Monstrosity",
"The Rookery",
"enUS",
},
[24084] = {
"Tunneling Ghoul",
"Utgarde Keep",
"enUS",
},
[220001] = {
"Black Blood Ooze",
"The Underkeep",
"enUS",
},
[23970] = {
"Vrykul Skeleton",
"Utgarde Keep",
"enUS",
},
[23960] = {
"Dragonflayer Runecaster",
"Utgarde Keep",
"enUS",
},
[24082] = {
"Proto-Drake Handler",
"Utgarde Keep",
"enUS",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
"enUS",
},
[24079] = {
"Dragonflayer Forge Master",
"Utgarde Keep",
"enUS",
},
[186738] = {
"Umbrelskul",
"The Azure Vault",
"enUS",
},
[219746] = {
"Silken Tomb",
"Nerub-ar Palace",
"enUS",
},
[214338] = {
"Kobyss Spearfisher",
"The Sinkhole",
"enUS",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
},
[24078] = {
"Dragonflayer Metalworker",
"Utgarde Keep",
"enUS",
},
[29836] = {
"Drakkari Battle Rider",
"Gundrak",
"enUS",
},
[206697] = {
"Devout Priest",
"Priory of the Sacred Flame",
"enUS",
},
[29931] = {
"Drakkari Rhino",
"Gundrak",
"enUS",
},
[186739] = {
"Azureblade",
"The Azure Vault",
"enUS",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[29819] = {
"Drakkari Lancer",
"Gundrak",
"enUS",
},
[303148] = {
"Soulwell",
"Darkflame Cleft",
"enUS",
},
[40320] = {
"Valiona",
"Grim Batol",
"enUS",
},
[288639] = {
"Treasure Rich Flotsam",
"Siege of Boralus",
"enUS",
},
[208745] = {
"The Candle King",
"Darkflame Cleft",
"enUS",
},
[220079] = {
"Failed Ascended",
"The Underkeep",
"enUS",
},
[29307] = {
"Drakkari Colossus",
"Gundrak",
"enUS",
},
[23374] = {
"Ashtongue Stalker",
"Black Temple",
"enUS",
},
[441927] = {
"Challenger's Cache",
"The Stonevault",
"enUS",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
"enUS",
},
[217151] = {
"Dark Bombardier",
"Nightfall Sanctum",
"enUS",
},
[29820] = {
"Drakkari God Hunter",
"Gundrak",
"enUS",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[29304] = {
"Slad'ran",
"Gundrak",
"enUS",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
"enUS",
},
[29768] = {
"Unyielding Constrictor",
"Gundrak",
"enUS",
},
[162689] = {
"Surgeon Stitchflesh",
"The Necrotic Wake",
"enUS",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
"enUS",
},
[222564] = {
"Rupturing Ooze",
"Nerub-ar Palace",
"enUS",
},
[220084] = {
"Bloated Pest",
"The Underkeep",
"enUS",
},
[208747] = {
"The Darkness",
"Darkflame Cleft",
"enUS",
},
[220643] = {
"Deepwater Makura",
"The Sinkhole",
"enUS",
},
[229729] = {
"Nullbot",
"Awakening The Machine",
"enUS",
},
[207468] = {
"Gnarled Reviver",
"Fungal Folly",
"enUS",
},
[219732] = {
"Yükimp",
"The Sinkhole",
"enUS",
},
[187510] = {
"Duskpaw Trapper",
"10.0 Dragon Isles",
},
[168246] = {
"Reanimated Crossbowman",
"The Necrotic Wake",
"enUS",
},
[210539] = {
"Corridor Creeper",
"Darkflame Cleft",
"enUS",
},
[137103] = {
"Blood Visage",
"The Underrot",
},
[229855] = {
"Shadeguard Speaker",
"Nightfall Sanctum",
"enUS",
},
[98521] = {
"Lord Etheldrin Ravencrest",
"Black Rook Hold",
"enUS",
},
[215657] = {
"Ulgrax the Devourer",
"Nerub-ar Palace",
"enUS",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
"enUS",
},
[191605] = {
"Portable Mailbox",
"Ara-Kara, City of Echoes",
"enUS",
},
[454201] = {
"|cff1EFF00Sturdy Chest",
"Nightfall Sanctum",
"enUS",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[40577] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[174462] = {
"Chair",
"Blackrock Depths",
"enUS",
},
[22871] = {
"Teron Gorefiend",
"Black Temple",
"enUS",
},
[220008] = {
"Cragpie",
"The Sinkhole",
"enUS",
},
[452682] = {
"Sovereign Finery Chest",
"The Dawnbreaker",
"enUS",
},
[214379] = {
"Living Shadow",
"11.0 - Priory Scenario",
"enUS",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
},
[210797] = {
"The Darkness",
"Darkflame Cleft",
"enUS",
},
[228015] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
"enUS",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[162693] = {
"Nalthor the Rimebinder",
"The Necrotic Wake",
"enUS",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[208239] = {
"Skittering Menace",
"Skittering Breach",
"enUS",
},
[217268] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[165764] = {
"Rockbound Vanquisher",
"Castle Nathria",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
"enUS",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
"enUS",
},
[22882] = {
"Shadowmoon Deathshaper",
"Black Temple",
"enUS",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
},
[23172] = {
"Hand of Gorefiend",
"Black Temple",
"enUS",
},
[214381] = {
"Writhing Shade",
"11.0 - Priory Scenario",
"enUS",
},
[151657] = {
"Bomb Tonk",
"Operation: Mechagon",
},
[206705] = {
"Arathi Footman",
"Priory of the Sacred Flame",
"enUS",
},
[23111] = {
"Shadowy Construct",
"Black Temple",
"enUS",
},
[215405] = {
"Anub'zekt",
"Ara-Kara, City of Echoes",
"enUS",
},
[22945] = {
"Shadowmoon Blood Mage",
"Black Temple",
"enUS",
},
[22946] = {
"Shadowmoon War Hound",
"Black Temple",
"enUS",
},
[22880] = {
"Shadowmoon Champion",
"Black Temple",
"enUS",
},
[214382] = {
"Whispering Monstrosity",
"11.0 - Priory Scenario",
"enUS",
},
[23524] = {
"Ashtongue Spiritbinder",
"Black Temple",
"enUS",
},
[129996] = {
"Irontide Cleaver",
"Siege of Boralus",
"enUS",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[22853] = {
"Illidari Defiler",
"Black Temple",
"enUS",
},
[22898] = {
"Supremus",
"Black Temple",
"enUS",
},
[220710] = {
"Leviathan Manipulator",
"The Sinkhole",
"enUS",
},
[212765] = {
"Void Bound Despoiler",
"The Stonevault",
"enUS",
},
[208242] = {
"Nerubian Darkcaster",
"Skittering Breach",
"enUS",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[22878] = {
"Aqueous Lord",
"Black Temple",
"enUS",
},
[215407] = {
"Ki'katal the Harvester",
"Ara-Kara, City of Echoes",
"enUS",
},
[23028] = {
"Bonechewer Taskmaster",
"Black Temple",
"enUS",
},
[185584] = {
"Naj'entus Spine",
"Black Temple",
"enUS",
},
[22887] = {
"High Warlord Naj'entus",
"Black Temple",
"enUS",
},
[208243] = {
"Nerubian Slasher",
"The Underkeep",
"enUS",
},
[179841] = {
"Veteran Sparkcaster",
"Tazavesh, the Veiled Market",
},
[22883] = {
"Aqueous Spawn",
"Black Temple",
"enUS",
},
[26918] = {
"Chaotic Rift",
"The Nexus",
"enUS",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[150160] = {
"Scrapbone Bully",
"Operation: Mechagon",
},
[220504] = {
"Shadow Totem",
"Skittering Breach",
"enUS",
},
[183424] = {
"Virtuous Gentleman",
"Return to Karazhan",
},
[208244] = {
"Nerubian Threadmancer",
"The Underkeep",
"enUS",
},
[179842] = {
"Commerce Enforcer",
"Tazavesh, the Veiled Market",
},
[168393] = {
"Plaguebelcher",
"Plaguefall",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
"enUS",
},
[221103] = {
"Hulking Warshell",
"City of Threads",
"enUS",
},
[478443] = {
"Mislaid Curiosity",
"The Spiral Weave",
"enUS",
},
[134041] = {
"Infected Peasant",
"Waycrest Manor",
"enUS",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
},
[208245] = {
"Skittering Swarmer",
"Skittering Breach",
"enUS",
},
[113398] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[206710] = {
"Lightspawn",
"Priory of the Sacred Flame",
"enUS",
},
[23216] = {
"Ashtongue Defender",
"Black Temple",
"enUS",
},
[229739] = {
"Malfunctioning Pylon",
"Awakening The Machine",
"enUS",
},
[229995] = {
"Sureki Arbalest",
"Nerub-ar Palace",
"enUS",
},
[29573] = {
"Drakkari Elemental",
"Gundrak",
"enUS",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[173447] = {
"Mushroom Mine",
"Plaguefall",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
"enUS",
},
[126928] = {
"Irontide Corsair",
"Freehold",
"enUS",
},
[88163] = {
"Grom'kar Cinderseer",
"Grimrail Depot",
},
[137625] = {
"Demolishing Terror",
"Siege of Boralus",
"enUS",
},
[86372] = {
"Melded Berserker",
"The Everbloom",
"enUS",
},
[29829] = {
"Drakkari Earthshaker",
"Gundrak",
"enUS",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
},
[212827] = {
"High Priest Aemya",
"Priory of the Sacred Flame",
"enUS",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[22841] = {
"Shade of Akama",
"Black Temple",
"enUS",
},
[220078] = {
"Researcher Xik'vik",
"The Underkeep",
"enUS",
},
[137626] = {
"Demolishing Terror",
"Siege of Boralus",
"enUS",
},
[22896] = {
"Ashtongue Searing Totem",
"Black Temple",
"enUS",
},
[131545] = {
"Lady Waycrest",
"Waycrest Manor",
"enUS",
},
[179334] = {
"Portalmancer Zo'nyy",
"Tazavesh, the Veiled Market",
},
[212826] = {
"Guard Captain Suleyman",
"Priory of the Sacred Flame",
"enUS",
},
[79720] = {
"Grom'kar Boomer",
"Grimrail Depot",
},
[163622] = {
"Goregrind Bits",
"The Necrotic Wake",
"enUS",
},
[211063] = {
"Fungal Podling",
"The Spiral Weave",
"enUS",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
"enUS",
},
[219763] = {
"Mirror Master Murkna",
"The Sinkhole",
"enUS",
},
[199549] = {
"Flamesworn Herald",
"Vault of the Incarnates",
},
[187523] = {
"Duskpaw Stalker",
"10.0 Dragon Isles",
},
[137614] = {
"Demolishing Terror",
"Siege of Boralus",
"enUS",
},
[222274] = {
"Sureki Darkblade",
"Nerub-ar Palace",
"enUS",
},
[137516] = {
"Ashvane Invader",
"Siege of Boralus",
"enUS",
},
[225817] = {
"Caustic Skyrazor",
"Nerub-ar Palace",
"enUS",
},
[440935] = {
"Explorers' League Rope",
"The Sinkhole",
"enUS",
},
[207482] = {
"Invasive Sporecap",
"Nightfall Sanctum",
"enUS",
},
[205691] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[167731] = {
"Separation Assistant",
"The Necrotic Wake",
"enUS",
},
[9545] = {
"Grim Patron",
"Blackrock Depths",
"enUS",
},
[114804] = {
"Spectral Charger",
"Return to Karazhan",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
"enUS",
},
[163122] = {
"Brittlebone Warrior",
"The Necrotic Wake",
"enUS",
},
[220139] = {
"Slithering Spew",
"Nerub-ar Palace",
"enUS",
},
[148120] = {
"Kul Tiran Marine",
"Battle of Dazar'alor",
},
[131823] = {
"Sister Malady",
"Waycrest Manor",
"enUS",
},
[445685] = {
"Barred Door",
"Zekvir's Lair",
"enUS",
},
[131821] = {
"Faceless Maiden",
"Waycrest Manor",
"enUS",
},
[229296] = {
"Orb of Ascendance",
"Mists of Tirna Scithe",
"enUS",
},
[210810] = {
"Menial Laborer",
"Darkflame Cleft",
"enUS",
},
[214504] = {
"Rasha'nan",
"Nerub-ar Palace",
"enUS",
},
[222572] = {
"Infesting Latcher",
"Nerub-ar Palace",
"enUS",
},
[219766] = {
"Drowned Arathi",
"The Sinkhole",
"enUS",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
"enUS",
},
[22953] = {
"Wrathbone Flayer",
"Black Temple",
"enUS",
},
[222581] = {
"Ruptured Ooze",
"Nerub-ar Palace",
"enUS",
},
[77803] = {
"Railmaster Rocketspark",
"Grimrail Depot",
},
[23049] = {
"Shadowmoon Weapon Master",
"Black Temple",
"enUS",
},
[220138] = {
"Regurgitating Monstrosity",
"Nerub-ar Palace",
"enUS",
},
[165251] = {
"Illusionary Vulpin",
"Mists of Tirna Scithe",
"enUS",
},
[150169] = {
"Toxic Lurker",
"Operation: Mechagon",
},
[221035] = {
"Royal Scribe",
"Nerub-ar Palace",
"enUS",
},
[441966] = {
"Moldy Chest",
"Fungal Folly",
"enUS",
},
[216441] = {
"Pale Illusion",
"The Sinkhole",
"enUS",
},
[23337] = {
"Illidari Centurion",
"Black Temple",
"enUS",
},
[210812] = {
"Royal Wicklighter",
"Darkflame Cleft",
"enUS",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
"enUS",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[22855] = {
"Illidari Nightlord",
"Black Temple",
"enUS",
},
[137517] = {
"Ashvane Destroyer",
"Siege of Boralus",
"enUS",
},
[165111] = {
"Drust Spiteclaw",
"Mists of Tirna Scithe",
"enUS",
},
[138464] = {
"Ashvane Deckhand",
"Siege of Boralus",
"enUS",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[441968] = {
"Portal to Dornogal",
"Ara-Kara, City of Echoes",
"enUS",
},
[184911] = {
"Urh Dismantler",
"The Necrotic Wake",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
},
[222461] = {
"Congealed Mass",
"Nerub-ar Palace",
"enUS",
},
[29830] = {
"Living Mojo",
"Gundrak",
"enUS",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
"enUS",
},
[115418] = {
"Spider",
"Return to Karazhan",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
},
[224616] = {
"Animated Shadow",
"The Dawnbreaker",
"enUS",
},
[164804] = {
"Droman Oulfarran",
"Mists of Tirna Scithe",
"enUS",
},
[222193] = {
"Hollow Frostweaver",
"Nerub-ar Palace",
"enUS",
},
[164501] = {
"Mistcaller",
"Mists of Tirna Scithe",
"enUS",
},
[213885] = {
"Nightfall Dark Architect",
"The Dawnbreaker",
"enUS",
},
[223674] = {
"Caustic Skitterer",
"Nerub-ar Palace",
"enUS",
},
[216621] = {
"Nerubian Webspinner",
"Earthcrawl Mines",
"enUS",
},
[141938] = {
"Ashvane Sniper",
"Siege of Boralus",
"enUS",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[200836] = {
"Obsidian Guard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[28231] = {
"Crystalline Tender",
"The Nexus",
"enUS",
},
[179388] = {
"Hourglass Tidesage",
"Tazavesh, the Veiled Market",
},
[24201] = {
"Dalronn the Controller",
"Utgarde Keep",
"enUS",
},
[218317] = {
"Woven Threadmancer",
"Nerub-ar Palace",
"enUS",
},
[115419] = {
"Ancient Tome",
"Return to Karazhan",
},
[173714] = {
"Mistveil Nightblossom",
"Mists of Tirna Scithe",
"enUS",
},
[204931] = {
"Fyrakk",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[213119] = {
"Void Speaker Eirich",
"The Stonevault",
"enUS",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
},
[207205] = {
"Stormguard Gorren",
"The Rookery",
"enUS",
},
[455505] = {
"|cff1EFF00Sturdy Chest",
"Skittering Breach",
"enUS",
},
[135245] = {
"Bilge Rat Demolisher",
"Siege of Boralus",
"enUS",
},
[23215] = {
"Ashtongue Sorcerer",
"Black Temple",
"enUS",
},
[216329] = {
"Congealed Droplet",
"City of Threads",
"enUS",
},
[120651] = {
"Explosives",
"Atal'Dazar",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
"enUS",
},
[135048] = {
"Gorestained Piglet",
"Waycrest Manor",
"enUS",
},
[26728] = {
"Mage Hunter Initiate",
"The Nexus",
"enUS",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[26792] = {
"Crystalline Protector",
"The Nexus",
"enUS",
},
[128652] = {
"Viq'Goth",
"Siege of Boralus",
"enUS",
},
[190348] = {
"Primalist Ravager",
"Halls of Infusion",
"enUS",
},
[219006] = {
"Venommaster Nezarox",
"Nerub-ar Palace",
"enUS",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
"enUS",
},
[180431] = {
"Focused Ritualist",
"Tazavesh, the Veiled Market",
},
[45924] = {
"Turbulent Squall",
"The Vortex Pinnacle",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
"enUS",
},
[22954] = {
"Illidari Fearbringer",
"Black Temple",
"enUS",
},
[220542] = {
"Enraged Kelp",
"The Waterworks",
"enUS",
},
[23018] = {
"Shadowmoon Houndmaster",
"Black Temple",
"enUS",
},
[218316] = {
"Kaheti Vanguard",
"Nerub-ar Palace",
"enUS",
},
[223357] = {
"Sureki Conscript",
"City of Threads",
"enUS",
},
[150251] = {
"Pistonhead Mechanic",
"Operation: Mechagon",
},
[129366] = {
"Bilge Rat Buccaneer",
"Siege of Boralus",
"enUS",
},
[434298] = {
"Light's Mantle",
"Skittering Breach",
"enUS",
},
[218022] = {
"Speaker Davenruth",
"Nightfall Sanctum",
"enUS",
},
[97197] = {
"Valarjar Purifier",
"Halls of Valor",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
"enUS",
},
[225204] = {
"Zekvir",
"Zekvir's Lair",
"enUS",
},
[101476] = {
"Molten Charskin",
"Neltharion's Lair",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
"enUS",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
},
[226612] = {
"Bloodfeaster Larva",
"The Spiral Weave",
"enUS",
},
[23498] = {
"Parasitic Shadowfiend",
"Black Temple",
"enUS",
},
[114526] = {
"Ghostly Understudy",
"Return to Karazhan",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
},
[98406] = {
"Embershard Scorpion",
"Neltharion's Lair",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
"enUS",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
"enUS",
},
[213892] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[189722] = {
"Gulping Goliath",
"Halls of Infusion",
"enUS",
},
[138465] = {
"Ashvane Cannoneer",
"Siege of Boralus",
"enUS",
},
[129879] = {
"Irontide Cleaver",
"Siege of Boralus",
"enUS",
},
[81297] = {
"Dreadfang",
"Iron Docks",
},
[227454] = {
"Black Blood Hauler",
"The Underkeep",
"enUS",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[213893] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[144295] = {
"Mechagon Mechanic",
"Operation: Mechagon",
},
[409747] = {
"Construct Canker",
"Fungal Folly",
"enUS",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[214840] = {
"Engorged Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[209230] = {
"Kyrioss",
"The Rookery",
"enUS",
},
[409748] = {
"Dormouse Ecila",
"Fungal Folly",
"enUS",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
"enUS",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
},
[213894] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
"enUS",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
"enUS",
},
[177816] = {
"Interrogation Specialist",
"Tazavesh, the Veiled Market",
},
[200840] = {
"Flamebound Huntsman",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[209801] = {
"Quartermaster Koratite",
"The Rookery",
"enUS",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
"enUS",
},
[443526] = {
"Supply Bag",
"The Waterworks",
"enUS",
},
[213895] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[224219] = {
"Twilight Earthcaller",
"Grim Batol",
"enUS",
},
[98792] = {
"Wyrmtongue Scavenger",
"Black Rook Hold",
"enUS",
},
[177817] = {
"Support Officer",
"Tazavesh, the Veiled Market",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
"enUS",
},
[41096] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[129369] = {
"Irontide Raider",
"Siege of Boralus",
"enUS",
},
[144298] = {
"Defense Bot Mk III",
"Operation: Mechagon",
},
[26793] = {
"Crystalline Frayer",
"The Nexus",
"enUS",
},
[82597] = {
"Grom'kar Captain",
"Grimrail Depot",
},
[200926] = {
"Igira the Cruel",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[220066] = {
"Scroll Bearer",
"The Underkeep",
"enUS",
},
[219810] = {
"Nerubian Ritualist",
"UNKNOWN",
"enUS",
},
[166304] = {
"Mistveil Stinger",
"Mists of Tirna Scithe",
"enUS",
},
[223876] = {
"Impaling Spike",
"Nerub-ar Palace",
"enUS",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
"enUS",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
"enUS",
},
[133007] = {
"Unbound Abomination",
"The Underrot",
},
[173720] = {
"Mistveil Gorgegullet",
"Mists of Tirna Scithe",
"enUS",
},
[39625] = {
"General Umbriss",
"Grim Batol",
"enUS",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
"enUS",
},
[220577] = {
"Nerl'athekk the Skulking",
"Skittering Breach",
"enUS",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
"enUS",
},
[226462] = {
"Stagshell",
"The Spiral Weave",
"enUS",
},
[216856] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[220551] = {
"Sureki Ironweaver",
"Nerub-ar Palace",
"enUS",
},
[154758] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[188011] = {
"Primal Terrasentry",
"Ruby Life Pools",
"enUS",
},
[23339] = {
"Illidari Heartseeker",
"Black Temple",
"enUS",
},
[23371] = {
"Shadowmoon Fallen",
"Black Temple",
"enUS",
},
[196116] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[225606] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[228952] = {
"Nerubian Skulker",
"The Dread Pit",
"enUS",
},
[77483] = {
"Grom'kar Gunner",
"Grimrail Depot",
},
[201754] = {
"Sarkareth",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[211341] = {
"Manifested Shadow",
"The Dawnbreaker",
"enUS",
},
[129371] = {
"Riptide Shredder",
"Siege of Boralus",
"enUS",
},
[215435] = {
"Foreseer Xix'amon",
"Nerub-ar Palace",
"enUS",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
"enUS",
},
[29832] = {
"Drakkari Golem",
"Gundrak",
"enUS",
},
[214117] = {
"Stormflurry Totem",
"Throne of the Tides",
"enUS",
},
[80808] = {
"Neesa Nox",
"Iron Docks",
},
[443537] = {
"Lost Supplies",
"Skittering Breach",
"enUS",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[174496] = {
"Chair",
"Blackrock Depths",
"enUS",
},
[164517] = {
"Tred'ova",
"Mists of Tirna Scithe",
"enUS",
},
[23083] = {
"Shadowmoon Riding Hound",
"Black Temple",
"enUS",
},
[206704] = {
"Ardent Paladin",
"Priory of the Sacred Flame",
"enUS",
},
[162692] = {
"Amarth",
"The Necrotic Wake",
"enUS",
},
[173729] = {
"Manifestation of Pride",
"Theater of Pain",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
},
[211087] = {
"Speaker Shadowcrown",
"The Dawnbreaker",
"enUS",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
"enUS",
},
[129372] = {
"Blacktar Bomber",
"Siege of Boralus",
"enUS",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
},
[216205] = {
"Ravenous Spawn",
"Nerub-ar Palace",
"enUS",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[98538] = {
"Lady Velandras Ravencrest",
"Black Rook Hold",
"enUS",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
"enUS",
},
[217485] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[168357] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[187566] = {
"Hyena Matriarch",
"10.0 Dragon Isles",
},
[215968] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[212838] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[223253] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[169893] = {
"Nefarious Darkspeaker",
"Theater of Pain",
},
[211089] = {
"Anub'ikkaj",
"The Dawnbreaker",
"enUS",
},
[174499] = {
"Chair",
"Blackrock Depths",
"enUS",
},
[26730] = {
"Mage Slayer",
"The Nexus",
"enUS",
},
[189340] = {
"Chargath, Bane of Scales",
"Neltharus",
"enUS",
},
[76407] = {
"Ner'zhul",
"Shadowmoon Burial Grounds",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
},
[229769] = {
"Medbot",
"Awakening The Machine",
"enUS",
},
[219022] = {
"Ascended Webfriar",
"The Underkeep",
"enUS",
},
[223372] = {
"Prime Slime",
"Nerub-ar Palace",
"enUS",
},
[45704] = {
"Lurking Tempest",
"The Vortex Pinnacle",
},
[214343] = {
"Kobyss Trickster",
"The Sinkhole",
"enUS",
},
[213905] = {
"Animated Darkness",
"The Dawnbreaker",
"enUS",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[218511] = {
"Forming Whispers",
"11.0 - Priory Scenario",
"enUS",
},
[449688] = {
"Molten Engine",
"Skittering Breach",
"enUS",
},
[130909] = {
"Fetid Maggot",
"The Underrot",
},
[9499] = {
"Plugger Spazzring",
"Blackrock Depths",
"enUS",
},
[164266] = {
"Domina Venomblade",
"Plaguefall",
},
[129374] = {
"Scrimshaw Enforcer",
"Siege of Boralus",
"enUS",
},
[9547] = {
"Guzzling Patron",
"Blackrock Depths",
"enUS",
},
[442763] = {
"Soggy Chest",
"Nightfall Sanctum",
"enUS",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
},
[220815] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[206696] = {
"Arathi Knight",
"Priory of the Sacred Flame",
"enUS",
},
[212835] = {
"Risen Footman",
"Priory of the Sacred Flame",
"enUS",
},
[217489] = {
"Anub'arash",
"Nerub-ar Palace",
"enUS",
},
[205384] = {
"Infinite Chronoweaver",
"Dawn of the Infinite",
"enUS",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
},
[187552] = {
"Stormfang Shaman",
"10.0 Dragon Isles",
},
[214419] = {
"Void Cursed Crusher",
"The Rookery",
"enUS",
},
[210148] = {
"Menial Laborer",
"Darkflame Cleft",
"enUS",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
"enUS",
},
[114790] = {
"Viz'aduum the Watcher",
"Return to Karazhan",
},
[98542] = {
"Amalgam of Souls",
"Black Rook Hold",
"enUS",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
"enUS",
},
[196482] = {
"Overgrown Ancient",
"Algeth'ar Academy",
"enUS",
},
[83392] = {
"Rampaging Clefthoof",
"Iron Docks",
},
[150295] = {
"Tank Buster MK1",
"Operation: Mechagon",
},
[212739] = {
"Radiating Voidstone",
"The Rookery",
"enUS",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
"enUS",
},
[193462] = {
"Batak",
"The Nokhud Offensive",
"enUS",
},
[217491] = {
"Skeinspinner Takazj",
"Nerub-ar Palace",
"enUS",
},
[45917] = {
"Cloud Prince",
"The Vortex Pinnacle",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
"enUS",
},
[102253] = {
"Understone Demolisher",
"Neltharion's Lair",
},
[214421] = {
"Coalescing Void Diffuser",
"The Rookery",
"enUS",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
},
[82039] = {
"Rockspine Stinger",
"The Everbloom",
"enUS",
},
[413874] = {
"Rich Bismuth",
"The Waterworks",
"enUS",
},
[219035] = {
"Deepwalker Guardian",
"The Underkeep",
"enUS",
},
[217748] = {
"Nexus-Princess Ky'veza",
"Nerub-ar Palace",
"enUS",
},
[216658] = {
"Izo, the Grand Splicer",
"City of Threads",
"enUS",
},
[162317] = {
"Gorechop",
"Theater of Pain",
},
[176565] = {
"Disruptive Patron",
"Tazavesh, the Veiled Market",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
"enUS",
},
[190370] = {
"Squallbringer Cyraz",
"Halls of Infusion",
"enUS",
},
[214625] = {
"Kobyss Necromancer",
"The Sinkhole",
"enUS",
},
[207202] = {
"Void Fragment",
"The Rookery",
"enUS",
},
[130400] = {
"Irontide Crusher",
"Freehold",
"enUS",
},
[205723] = {
"Time-Lost Aerobot",
"Dawn of the Infinite",
"enUS",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
"enUS",
},
[204188] = {
"Tomb-Raider Drywhisker",
"Kriegval's Rest",
"enUS",
},
[98970] = {
"Latosius",
"Black Rook Hold",
"enUS",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
"enUS",
},
[137405] = {
"Gripping Terror",
"Siege of Boralus",
"enUS",
},
[205212] = {
"Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[26731] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[26763] = {
"Anomalus",
"The Nexus",
"enUS",
},
[218325] = {
"Swarming Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[114792] = {
"Virtuous Lady",
"Return to Karazhan",
},
[115486] = {
"Erudite Slayer",
"Return to Karazhan",
},
[131824] = {
"Sister Solena",
"Waycrest Manor",
"enUS",
},
[227474] = {
"Ascension Researcher",
"The Underkeep",
"enUS",
},
[213913] = {
"Kobold Flametender",
"Darkflame Cleft",
"enUS",
},
[221845] = {
"Xur'khun the Defiled",
"Nerub-ar Palace",
"enUS",
},
[203678] = {
"Grommash Hellscream",
"Dawn of the Infinite",
"enUS",
},
[150712] = {
"Trixie Tazer",
"Operation: Mechagon",
},
[130012] = {
"Irontide Ravager",
"Freehold",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
"enUS",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
"enUS",
},
[101549] = {
"Arcane Minion",
"Black Rook Hold",
"enUS",
},
[229778] = {
"Automatic Ironstrider",
"Awakening The Machine",
"enUS",
},
[428434] = {
"Treasure Chest",
"The Spiral Weave",
"enUS",
},
[204109] = {
"Cavernous Shrieker",
"Kriegval's Rest",
"enUS",
},
[413883] = {
"Crystallized Bismuth",
"Kriegval's Rest",
"enUS",
},
[218520] = {
"Nightcaller Velys",
"11.0 - Priory Scenario",
"enUS",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[81603] = {
"Champion Druna",
"Iron Docks",
},
[81212] = {
"Grimrail Overseer",
"Grimrail Depot",
},
[208743] = {
"Blazikon",
"Darkflame Cleft",
"enUS",
},
[128651] = {
"Hadal Darkfathom",
"Siege of Boralus",
"enUS",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
"enUS",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
"enUS",
},
[218521] = {
"Hazzk the Ascended",
"11.0 - Priory Scenario",
"enUS",
},
[214350] = {
"Turned Speaker",
"The Stonevault",
"enUS",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[214368] = {
"The Broken Queen",
"11.0 - Priory Scenario",
"enUS",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[449709] = {
"Bouncy Shroom",
"The Dread Pit",
"enUS",
},
[29834] = {
"Drakkari Frenzy",
"Gundrak",
"enUS",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[82682] = {
"Archmage Sol",
"The Everbloom",
"enUS",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
},
[219034] = {
"Web Marauder",
"The Underkeep",
"enUS",
},
[219676] = {
"Nerl'athekk the Skulking",
"Skittering Breach",
"enUS",
},
[206698] = {
"Fanatical Conjuror",
"Priory of the Sacred Flame",
"enUS",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[224152] = {
"Twilight Brute",
"Grim Batol",
"enUS",
},
[83578] = {
"Ogron Laborer",
"Iron Docks",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[207454] = {
"Fungal Gutter",
"Fungal Folly",
"enUS",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
"enUS",
},
[413890] = {
"Crystallized Aqirite",
"Earthcrawl Mines",
"enUS",
},
[229782] = {
"Awakened Phalanx",
"Awakening The Machine",
"enUS",
},
[184581] = {
"Baelog",
"Uldaman: Legacy of Tyr",
"enUS",
},
[207459] = {
"Fungal Rotcaster",
"Fungal Folly",
"enUS",
},
[206699] = {
"War Lynx",
"Priory of the Sacred Flame",
"enUS",
},
[212383] = {
"Kobold Taskworker",
"Darkflame Cleft",
"enUS",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
"enUS",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
"enUS",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
"enUS",
},
[131527] = {
"Lord Waycrest",
"Waycrest Manor",
"enUS",
},
[130404] = {
"Vermin Trapper",
"Freehold",
"enUS",
},
[162744] = {
"Nekthara the Mangler",
"Theater of Pain",
},
[446645] = {
"Stuffed Barrel",
"The Waterworks",
"enUS",
},
[220572] = {
"Shadow Elemental",
"Skittering Breach",
"enUS",
},
[105705] = {
"Bound Energy",
"Court of Stars",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
"enUS",
},
[162729] = {
"Patchwerk Soldier",
"The Necrotic Wake",
"enUS",
},
[219856] = {
"Researcher Ven'kex",
"The Underkeep",
"enUS",
},
[26764] = {
"Ilsa Direbrew",
"Blackrock Depths",
"enUS",
},
[205152] = {
"Lerai, Timesworn Maiden",
"Dawn of the Infinite",
"enUS",
},
[220573] = {
"Shadow Elemental",
"Skittering Breach",
"enUS",
},
[165560] = {
"Gormling Larva",
"Mists of Tirna Scithe",
"enUS",
},
[177787] = {
"Mawsworn Hopebreaker",
"Sanctum of Domination",
},
[225601] = {
"Mereldar Citizen",
"The Dawnbreaker",
"enUS",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
"enUS",
},
[409185] = {
"Dynamite Bundle",
"Darkflame Cleft",
"enUS",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
"enUS",
},
[226459] = {
"Glowmite",
"Fungal Folly",
"enUS",
},
[218527] = {
"Shadesworn Crusher",
"11.0 - Priory Scenario",
"enUS",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
},
[40586] = {
"Lady Naz'jar",
"Throne of the Tides",
"enUS",
},
[100526] = {
"Tormented Bloodseeker",
"Darkheart Thicket",
"enUS",
},
[167536] = {
"Harugia the Bloodthirsty",
"Theater of Pain",
},
[174773] = {
"Spiteful Shade",
"Darkheart Thicket",
"enUS",
},
[224962] = {
"Cursedforge Mender",
"The Stonevault",
"enUS",
},
[226460] = {
"Undercrawler Hatchling",
"Earthcrawl Mines",
"enUS",
},
[220575] = {
"Shadow Elemental",
"Skittering Breach",
"enUS",
},
[91001] = {
"Tarspitter Lurker",
"Neltharion's Lair",
},
[40484] = {
"Erudax",
"Grim Batol",
"enUS",
},
[413900] = {
"Crystallized Ironclaw",
"The Waterworks",
"enUS",
},
[223646] = {
"Pale Priest",
"City of Threads",
"enUS",
},
[138247] = {
"Irontide Curseblade",
"Siege of Boralus",
"enUS",
},
[150165] = {
"Slime Elemental",
"Operation: Mechagon",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
"enUS",
},
[220576] = {
"Shadow Elemental",
"Skittering Breach",
"enUS",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
},
[23147] = {
"Shadowmoon Grunt",
"Black Temple",
"enUS",
},
[127315] = {
"Reanimation Totem",
"Atal'Dazar",
"enUS",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
"enUS",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
},
[220065] = {
"Umbral Weave",
"City of Threads",
"enUS",
},
[222368] = {
"Exalted Priest",
"Nerub-ar Palace",
"enUS",
},
[212389] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[190128] = {
"Zul'gamux",
"Tazavesh, the Veiled Market",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
"enUS",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
"enUS",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
},
[445633] = {
"Challenger's Cache",
"The Dawnbreaker",
"enUS",
},
[81407] = {
"Grimrail Bombardier",
"Grimrail Depot",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
"enUS",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[222881] = {
"Royal Weaver",
"Nerub-ar Palace",
"enUS",
},
[446146] = {
"Recovered Nightfall Relics",
"The Dawnbreaker",
"enUS",
},
[227487] = {
"Underkeep Technician",
"The Underkeep",
"enUS",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
"enUS",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
},
[129640] = {
"Snarling Dockhound",
"Siege of Boralus",
"enUS",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
"enUS",
},
[122967] = {
"Priestess Alun'za",
"Atal'Dazar",
"enUS",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
"enUS",
},
[188252] = {
"Melidrussa Chillworn",
"Ruby Life Pools",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
"enUS",
},
[228044] = {
"Reno Jackson",
"The Waterworks",
"enUS",
},
[193457] = {
"Balara",
"The Nokhud Offensive",
"enUS",
},
[185685] = {
"Urh Relic",
"The Necrotic Wake",
},
[214439] = {
"Corrupted Oracle",
"The Rookery",
"enUS",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[219045] = {
"Colossal Spider",
"Nerub-ar Palace",
"enUS",
},
[166079] = {
"Brittlebone Crossbowman",
"The Necrotic Wake",
"enUS",
},
[228537] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[445639] = {
"Challenger's Cache",
"Mists of Tirna Scithe",
"enUS",
},
[86526] = {
"Grom'kar Chainmaster",
"Iron Docks",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
"enUS",
},
[99192] = {
"Shade of Xavius",
"Darkheart Thicket",
"enUS",
},
[219046] = {
"Voracious Worm",
"Nerub-ar Palace",
"enUS",
},
[229537] = {
"Void Emissary",
"The Necrotic Wake",
"enUS",
},
[455491] = {
"|cff1EFF00Sturdy Chest",
"The Sinkhole",
"enUS",
},
[445641] = {
"Challenger's Cache",
"The Necrotic Wake",
"enUS",
},
[210818] = {
"Lowly Moleherd",
"Darkflame Cleft",
"enUS",
},
[179386] = {
"Corsair Officer",
"Tazavesh, the Veiled Market",
},
[204206] = {
"Horde Farseer",
"Dawn of the Infinite",
"enUS",
},
[445642] = {
"Challenger's Cache",
"Siege of Boralus",
"enUS",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
"enUS",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
"enUS",
},
[454054] = {
"Lush Luredrop",
"The Underkeep",
"enUS",
},
[212411] = {
"Torchsnarl",
"Darkflame Cleft",
"enUS",
},
[203951] = {
"Kobold Skullface",
"Kriegval's Rest",
"enUS",
},
[189878] = {
"Nathrezim Infiltrator",
"Tazavesh, the Veiled Market",
},
[126969] = {
"Trothak",
"Freehold",
},
[99359] = {
"Rotheart Keeper",
"Darkheart Thicket",
"enUS",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
},
[152009] = {
"Malfunctioning Scrapbot",
"Operation: Mechagon",
},
[221863] = {
"Summoned Acolyte",
"Nerub-ar Palace",
"enUS",
},
[172991] = {
"Drust Soulcleaver",
"Mists of Tirna Scithe",
"enUS",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[214443] = {
"Crystal Shard",
"The Stonevault",
"enUS",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[216328] = {
"Unstable Test Subject",
"City of Threads",
"enUS",
},
[223844] = {
"Covert Webmancer",
"City of Threads",
"enUS",
},
[216364] = {
"Blood Overseer",
"Ara-Kara, City of Echoes",
"enUS",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
"enUS",
},
[213932] = {
"Sureki Militant",
"The Dawnbreaker",
"enUS",
},
[155433] = {
"Void-Touched Emissary",
"Freehold",
},
[195878] = {
"Ukhel Beastcaller",
"The Nokhud Offensive",
"enUS",
},
[83761] = {
"Ogron Laborer",
"Iron Docks",
},
[126918] = {
"Irontide Crackshot",
"Freehold",
"enUS",
},
[214066] = {
"Cursedforge Stoneshaper",
"The Stonevault",
"enUS",
},
[184910] = {
"Wo Drifter",
"The Necrotic Wake",
},
[81283] = {
"Grom'kar Footsoldier",
"Iron Docks",
},
[451835] = {
"Collision",
"Nerub-ar Palace",
"enUS",
},
[357703] = {
"Depleted Anima Seed",
"Mists of Tirna Scithe",
"enUS",
},
[99358] = {
"Rotheart Dryad",
"Darkheart Thicket",
"enUS",
},
[224970] = {
"Caustic Bomber",
"Nerub-ar Palace",
"enUS",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
"enUS",
},
[217516] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
},
[213934] = {
"Nightfall Tactician",
"The Dawnbreaker",
"enUS",
},
[207197] = {
"Cursed Rookguard",
"The Rookery",
"enUS",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
"enUS",
},
[208241] = {
"Ankle Biter",
"Skittering Breach",
"enUS",
},
[150168] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[222305] = {
"Palace Guardian",
"Nerub-ar Palace",
"enUS",
},
[217517] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[224077] = {
"Egg Cocoon",
"Zekvir's Lair",
"enUS",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[212400] = {
"Void Touched Elemental",
"The Stonevault",
"enUS",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
"enUS",
},
[219454] = {
"Crazed Abomination",
"The Underkeep",
"enUS",
},
[211121] = {
"Rank Overseer",
"Darkflame Cleft",
"enUS",
},
[217518] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[26734] = {
"Azure Enforcer",
"The Nexus",
"enUS",
},
[222214] = {
"Frenzied Leaper",
"Nerub-ar Palace",
"enUS",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
"enUS",
},
[451830] = {
"|cff1EFF00Heavy Trunk",
"The Waterworks",
"enUS",
},
[91008] = {
"Rockbound Pelter",
"Neltharion's Lair",
},
[207481] = {
"Spinshroom",
"Fungal Folly",
"enUS",
},
[414317] = {
"Orbinid",
"Kriegval's Rest",
"enUS",
},
[217519] = {
"Nightfall Shadeguard",
"Nightfall Sanctum",
"enUS",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[213937] = {
"Rasha'nan",
"The Dawnbreaker",
"enUS",
},
[22960] = {
"Dragonmaw Wyrmcaller",
"Black Temple",
"enUS",
},
[221667] = {
"Lost Watcher",
"Nerub-ar Palace",
"enUS",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[221102] = {
"Elder Shadeweaver",
"City of Threads",
"enUS",
},
[222275] = {
"Training Dummy",
"Nerub-ar Palace",
"enUS",
},
[233282] = {
"Refreshment Table",
"Ara-Kara, City of Echoes",
"enUS",
},
[219725] = {
"Chitin Knight",
"Nerub-ar Palace",
"enUS",
},
[162763] = {
"Soulforged Bonereaver",
"Theater of Pain",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
"enUS",
},
[212403] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[216619] = {
"Orator Krix'vizk",
"City of Threads",
"enUS",
},
[223150] = {
"Ascended Voidspeaker",
"Nerub-ar Palace",
"enUS",
},
[222235] = {
"Bloodthirsty Swarmer",
"Nerub-ar Palace",
"enUS",
},
[209333] = {
"Gnarlroot",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[135258] = {
"Irontide Curseblade",
"Siege of Boralus",
"enUS",
},
[221537] = {
"Unstable Experiment",
"Nerub-ar Palace",
"enUS",
},
[229918] = {
"Caustic Skyrazor",
"Nerub-ar Palace",
"enUS",
},
[219724] = {
"Court Attendant",
"Nerub-ar Palace",
"enUS",
},
[224516] = {
"Skardyn Invader",
"The Stonevault",
"enUS",
},
[220738] = {
"Leviathan Caller",
"The Sinkhole",
"enUS",
},
[214506] = {
"Broodtwister Ovi'nax",
"Nerub-ar Palace",
"enUS",
},
[135474] = {
"Thistle Acolyte",
"Waycrest Manor",
"enUS",
},
[213684] = {
"Void Chunk",
"The Rookery",
"enUS",
},
[218034] = {
"Reformed Fury",
"Nightfall Sanctum",
"enUS",
},
[485669] = {
"DELVER'S CALL: Fungal Folly",
"Fungal Folly",
"enUS",
},
[212405] = {
"Aspiring Forgehand",
"The Stonevault",
"enUS",
},
[22879] = {
"Shadowmoon Reaver",
"Black Temple",
"enUS",
},
[23330] = {
"Dragonmaw Wind Reaver",
"Black Temple",
"enUS",
},
[23047] = {
"Shadowmoon Soldier",
"Black Temple",
"enUS",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[226617] = {
"Snake",
"Fungal Folly",
"enUS",
},
[167116] = {
"Spinemaw Reaver",
"Mists of Tirna Scithe",
"enUS",
},
[155090] = {
"Anodized Coilbearer",
"Operation: Mechagon",
},
[83846] = {
"Yalnu",
"The Everbloom",
"enUS",
},
[24080] = {
"Dragonflayer Weaponsmith",
"Utgarde Keep",
"enUS",
},
[196798] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[96512] = {
"Archdruid Glaidalis",
"Darkheart Thicket",
"enUS",
},
[96640] = {
"Valarjar Marksman",
"Halls of Valor",
},
[228954] = {
"Nerubian Marauder",
"The Dread Pit",
"enUS",
},
[167117] = {
"Spinemaw Larva",
"Mists of Tirna Scithe",
"enUS",
},
[170447] = {
"Chair",
"Blackrock Depths",
"enUS",
},
[226620] = {
"Rat",
"Earthcrawl Mines",
"enUS",
},
[227635] = {
"Kas'dru",
"Earthcrawl Mines",
"enUS",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[224609] = {
"Twilight Destroyer",
"Grim Batol",
"enUS",
},
[39450] = {
"Trogg Dweller",
"Grim Batol",
"enUS",
},
[224240] = {
"Twilight Flamerender",
"Grim Batol",
"enUS",
},
},
["aura_grow_direction"] = 1,
["indicator_anchor"] = {
["x"] = 0,
},
["health_selection_overlay_alpha"] = 0.429999977350235,
["minor_height_scale"] = 0.99999994039536,
["aura_padding"] = 0,
["last_news_time"] = 1550158598,
["aura_width2"] = 22,
["aura_stack_size"] = 8,
["aura_show_crowdcontrol"] = true,
["cast_colors"] = {
[375727] = {
false,
"darkorange",
"",
},
[369409] = {
false,
"darkorange",
"",
},
[390111] = {
false,
"darkorange",
"",
},
[369061] = {
false,
"darkorange",
"",
},
[382555] = {
false,
"darkorange",
"",
},
[381444] = {
false,
"darkorange",
"",
},
[449167] = {
false,
"darkorange",
"",
},
[376811] = {
false,
"darkorange",
"",
},
[384336] = {
false,
"darkorange",
"",
},
[377383] = {
false,
"darkorange",
"",
},
[377034] = {
false,
"darkorange",
"",
},
[369573] = {
false,
"darkorange",
"",
},
[340300] = {
false,
"darkorange",
"",
},
[450854] = {
false,
"darkorange",
"",
},
[268260] = {
false,
"darkorange",
"",
},
[385958] = {
false,
"darkorange",
"",
},
[435012] = {
false,
"darkorange",
"",
},
[447395] = {
false,
"darkorange",
"",
},
[385578] = {
false,
"darkorange",
"",
},
[388976] = {
false,
"darkorange",
"",
},
[382277] = {
false,
"darkorange",
"",
},
[387135] = {
false,
"darkorange",
"",
},
[434824] = {
false,
"darkorange",
"",
},
[386660] = {
false,
"darkorange",
"",
},
[387614] = {
false,
"darkorange",
"",
},
[372311] = {
false,
"darkorange",
"",
},
[269029] = {
false,
"darkorange",
"",
},
[388060] = {
false,
"darkorange",
"",
},
[373614] = {
false,
"darkorange",
"",
},
[326021] = {
false,
"darkorange",
"",
},
[374567] = {
false,
"darkorange",
"",
},
[448640] = {
false,
"darkorange",
"",
},
[373742] = {
false,
"darkorange",
"",
},
[426860] = {
false,
"darkorange",
"",
},
[377204] = {
false,
"darkorange",
"",
},
[374569] = {
false,
"darkorange",
"",
},
[372696] = {
false,
"darkorange",
"",
},
[386063] = {
false,
"darkorange",
"",
},
[321834] = {
false,
"darkorange",
"",
},
[375079] = {
false,
"darkorange",
"",
},
[372222] = {
false,
"darkorange",
"",
},
[323137] = {
false,
"darkorange",
"",
},
[256627] = {
false,
"darkorange",
"",
},
[393432] = {
false,
"darkorange",
"",
},
[374361] = {
false,
"darkorange",
"",
},
[369703] = {
false,
"darkorange",
"",
},
[320596] = {
false,
"darkorange",
"",
},
[369811] = {
false,
"darkorange",
"",
},
[331743] = {
false,
"darkorange",
"",
},
[370764] = {
false,
"darkorange",
"",
},
[257288] = {
false,
"darkorange",
"",
},
[377559] = {
false,
"darkorange",
"",
},
[385832] = {
false,
"darkorange",
"",
},
[387910] = {
false,
"darkorange",
"",
},
[388958] = {
false,
"darkorange",
"",
},
[333477] = {
false,
"darkorange",
"",
},
[448105] = {
false,
"darkorange",
"",
},
[370766] = {
false,
"darkorange",
"",
},
[391118] = {
false,
"darkorange",
"",
},
[375251] = {
false,
"darkorange",
"",
},
[462216] = {
false,
"darkorange",
"",
},
[340160] = {
false,
"darkorange",
"",
},
[385531] = {
false,
"darkorange",
"",
},
[373943] = {
false,
"darkorange",
"",
},
[321968] = {
false,
"darkorange",
"",
},
[391723] = {
false,
"darkorange",
"",
},
[377912] = {
false,
"darkorange",
"",
},
[449130] = {
false,
"darkorange",
"",
},
[388046] = {
false,
"darkorange",
"",
},
[382708] = {
false,
"darkorange",
"",
},
[257862] = {
false,
"darkorange",
"",
},
[369563] = {
false,
"darkorange",
"",
},
[453161] = {
false,
"darkorange",
"",
},
[324923] = {
false,
"darkorange",
"",
},
[392406] = {
false,
"darkorange",
"",
},
[331718] = {
false,
"darkorange",
"",
},
[333488] = {
false,
"darkorange",
"",
},
[391726] = {
false,
"darkorange",
"",
},
[385916] = {
false,
"darkorange",
"",
},
[387067] = {
false,
"darkorange",
"",
},
[375351] = {
false,
"darkorange",
"",
},
[425027] = {
false,
"darkorange",
"",
},
[384524] = {
false,
"darkorange",
"",
},
[376170] = {
false,
"darkorange",
"",
},
[390290] = {
false,
"darkorange",
"",
},
[381834] = {
false,
"darkorange",
"",
},
[324323] = {
false,
"darkorange",
"",
},
[431494] = {
false,
"darkorange",
"",
},
},
["extra_icon_timer_outline"] = "OUTLINE",
["aura_border_colors"] = {
["enrage"] = {
0,
0,
0,
},
["steal_or_purge"] = {
0.27843137254902,
0.92156862745098,
0.98039215686275,
},
["crowdcontrol"] = {
0,
0,
0,
},
["offensive"] = {
nil,
0,
0,
},
["is_show_all"] = {
0,
0,
0,
},
["defensive"] = {
0,
0,
0,
},
["is_buff"] = {
nil,
0,
0,
},
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["extra_icon_anchor"] = {
["y"] = -13,
["x"] = 0,
["side"] = 8,
},
["extra_icon_wide_icon"] = false,
["range_check_alpha"] = 1,
["semver"] = "1.0.2",
["aura_frame2_anchor"] = {
["y"] = 1.009994506835938,
["x"] = -0.8000030517578125,
["side"] = 1,
},
["aura_alpha"] = 1,
["aura_cooldown_edge_texture"] = "Interface\\GLUES\\loadingOld",
["debuff_show_cc"] = false,
["transparency_behavior"] = 3,
["spell_animations"] = false,
["debuff_show_cc_border"] = {
0,
0,
0,
},
["aura_consolidate"] = true,
["extra_icon_width"] = 26,
["health_statusbar_texture"] = "Melli",
["hook_auto_imported"] = {
["Aura Reorder"] = 3,
["Targetting Alpha"] = 3,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Bwonsamdi Reaping"] = 1,
["Attacking Specific Unit"] = 2,
["Jaina Encounter"] = 6,
["Blockade Encounter"] = 1,
["Cast Bar Icon Config"] = 2,
["Hide Neutral Units"] = 1,
["Extra Border"] = 2,
["Combo Points"] = 6,
["Target Color"] = 3,
["Execute Range"] = 1,
["Reorder Nameplate"] = 4,
},
["minor_width_scale"] = 0.99999994039536,
["indicator_pet"] = false,
["extra_icon_show_defensive_border"] = {
0,
0,
0,
},
["aura_frame1_anchor"] = {
["y"] = -0.600006103515625,
["x"] = 0.5699920654296875,
["side"] = 7,
},
["honor_blizzard_plate_alpha"] = true,
["aura_timer_text_font"] = "Naowh",
["extra_icon_stack_font"] = "GothamNarrowUltra",
["non_targeted_alpha_enabled"] = true,
["cast_statusbar_bgtexture"] = "Melli",
["aura2_x_offset"] = -0.8000030517578125,
["target_indicator"] = "Arrow",
["saved_cvars"] = {
["nameplateShowOnlyNames"] = "1",
["nameplateOverlapV"] = "1.6000000238419",
["ShowNamePlateLoseAggroFlash"] = "1",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplateOverlapH"] = "1.1000000238419",
["nameplatePersonalShowWithTarget"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["clampTargetNameplateToScreen"] = "1",
["nameplateShowAll"] = "1",
["nameplateMaxDistance"] = "100",
["nameplateShowFriendlyMinions"] = "1",
["nameplateSelfScale"] = "1",
["nameplateTargetBehindMaxDistance"] = "30",
["SoftTargetInteract"] = "3",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplatePersonalShowAlways"] = "0",
["nameplateMotionSpeed"] = "0.014999999664724",
["nameplateGlobalScale"] = "1",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowEnemyPets"] = "0",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "1.5099999904633",
["SoftTargetIconGameObject"] = "1",
["nameplateTargetRadialPosition"] = "1",
["nameplateShowFriends"] = "1",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateMotion"] = "1",
["nameplateShowEnemyGuardians"] = "0",
["nameplateMinScale"] = "1",
["NamePlateHorizontalScale"] = "1",
["nameplateOtherTopInset"] = "0.079538092017174",
["nameplateOccludedAlphaMult"] = "0.4",
["nameplateSelfBottomInset"] = "0.2",
["nameplateShowEnemyTotems"] = "0",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateSelfAlpha"] = "1",
["nameplateSelfTopInset"] = "0.5",
["nameplatePersonalShowInCombat"] = "1",
["ShowClassColorInNameplate"] = "1",
["nameplateLargeTopInset"] = "0.079538092017174",
},
["login_counter"] = 41933,
["extra_icon_caster_name"] = false,
["aura_cooldown_show_swipe"] = false,
["aura_stack_font"] = "Naowh",
["auto_toggle_combat"] = {
["blizz_healthbar_ic"] = true,
["blizz_healthbar_ooc"] = true,
},
["hide_friendly_castbars"] = true,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["auras_per_row_amount"] = 5,
["hover_highlight_alpha"] = 0.05999999865889549,
["plate_config"] = {
["player"] = {
["spellpercent_text_font"] = "10089",
["level_text_size"] = 11,
["cast"] = {
115,
8,
},
["spellpercent_text_anchor"] = {
["x"] = 2,
["side"] = 5,
},
["big_actorname_text_shadow_color"] = {
0,
0,
0,
1,
},
["level_text_font"] = "10089",
["actorname_text_font"] = "10089",
["big_actorname_text_shadow_color_offset"] = {
1,
-1,
},
["power_percent_text_size"] = 8,
["all_names"] = true,
["big_actortitle_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 12,
["quest_color_enemy"] = {
1,
0.369,
0,
},
["big_actortitle_text_font"] = "10089",
["spellpercent_text_size"] = 11,
["big_actortitle_text_shadow_color_offset"] = {
1,
-1,
},
["cast_incombat"] = {
115,
8,
},
["big_actorname_text_size"] = 10,
["big_actortitle_text_size"] = 10,
["spellname_text_anchor"] = {
["side"] = 3,
},
["big_actortitle_text_shadow_color"] = {
0,
0,
0,
1,
},
["spellname_text_font"] = "10089",
["big_actorname_text_outline"] = "OUTLINE",
["quest_color_neutral"] = {
1,
0.65,
0,
},
["mana"] = {
100,
4,
},
["big_actorname_text_font"] = "10089",
["actorname_text_anchor"] = {
["y"] = 1,
["side"] = 1,
},
["percent_text_size"] = 11,
["percent_text_font"] = "10089",
["actorname_text_color"] = {
nil,
nil,
nil,
0.86789692938328,
},
["quest_enabled"] = true,
["percent_text_color"] = {
0.93725490196078,
0.97647058823529,
1,
},
["mana_incombat"] = {
100,
4,
},
["health_incombat"] = {
115,
15,
},
["health"] = {
115,
15,
},
["power_percent_text_font"] = "Accidental Presidency",
["level_text_alpha"] = 1,
["actorname_text_size"] = 13,
["spellname_text_size"] = 12,
["level_text_enabled"] = true,
},
["friendlyplayer"] = {
["big_actorname_text_size"] = 9,
["spellpercent_text_font"] = "AvantGarde",
["level_text_size"] = 9,
["actorname_use_class_color"] = true,
["cast"] = {
50,
7,
},
["spellpercent_text_anchor"] = {
["y"] = -7.9800033569336,
["x"] = 1.0099945068359,
},
["spellname_text_outline"] = "OUTLINE",
["big_actorname_text_shadow_color"] = {
0,
0,
0,
1,
},
["level_text_font"] = "AvantGarde",
["percent_text_color"] = {
0.93725490196078,
0.97647058823529,
1,
},
["actorname_text_font"] = "Naowh",
["big_actorname_text_shadow_color_offset"] = {
1,
-1,
},
["mana_incombat"] = {
nil,
4,
},
["actorname_use_guild_color"] = false,
["all_names"] = true,
["big_actortitle_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 9,
["only_damaged"] = false,
["quest_color_enemy"] = {
1,
0.369,
0,
},
["only_thename"] = true,
["big_actortitle_text_font"] = "AvantGarde",
["spellpercent_text_size"] = 8,
["level_text_anchor"] = {
["y"] = 2.5199966430664,
["x"] = 1.4899978637695,
},
["big_actortitle_text_shadow_color_offset"] = {
1,
-1,
},
["big_actorname_text_font"] = "AvantGarde",
["cast_incombat"] = {
105,
7,
},
["power_percent_text_font"] = "Accidental Presidency",
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_anchor"] = {
["y"] = -7.9800033569336,
["x"] = -1.0100021362305,
["side"] = 10,
},
["big_actortitle_text_shadow_color"] = {
0,
0,
0,
1,
},
["percent_text_anchor"] = {
["y"] = -0.4000015258789063,
["x"] = 0.04000091552734375,
},
["big_actortitle_text_size"] = 9,
["spellname_text_font"] = "AvantGarde",
["big_actorname_text_outline"] = "OUTLINE",
["actorname_use_friends_color"] = false,
["quest_color_neutral"] = {
1,
0.65,
0,
},
["mana"] = {
nil,
4,
},
["percent_text_enabled"] = true,
["level_text_alpha"] = 1,
["spellpercent_text_enabled"] = true,
["percent_text_ooc"] = true,
["percent_text_font"] = "Naowh",
["buff_frame_y_offset"] = 0,
["quest_enabled"] = true,
["actorname_text_color"] = {
nil,
nil,
nil,
0.87000000476837,
},
["spellname_text_size"] = 8,
["health"] = {
50,
1,
},
["actorname_text_anchor"] = {
["y"] = 9.799995422363281,
["x"] = -0.8300018310546875,
["side"] = 9,
},
["percent_text_size"] = 8,
["health_incombat"] = {
50,
1,
},
},
["friendlynpc"] = {
["actorname_use_friends_color"] = true,
["spellpercent_text_font"] = "Naowh",
["show_guild_name"] = false,
["level_text_size"] = 9,
["actorname_use_class_color"] = false,
["cast"] = {
80,
},
["fixed_class_color"] = {
0,
1,
0,
},
["spellpercent_text_anchor"] = {
["y"] = -7.9800033569336,
["x"] = 1.0099945068359,
},
["percent_text_show_decimals"] = false,
["spellname_text_outline"] = "OUTLINE",
["click_through"] = true,
["level_text_font"] = "Naowh",
["actorname_text_font"] = "Naowh",
["actorname_use_guild_color"] = true,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 8,
["only_damaged"] = false,
["quest_color_enemy"] = {
1,
0.369,
0,
},
["only_thename"] = true,
["big_actortitle_text_font"] = "Naowh",
["spellpercent_text_size"] = 8,
["health_incombat"] = {
61,
6,
},
["level_text_anchor"] = {
["y"] = 2.5199966430664,
["x"] = 1.4899978637695,
},
["cast_incombat"] = {
80,
10,
},
["actorname_friend_color"] = {
0.71,
1,
1,
1,
},
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_anchor"] = {
["y"] = -0.3800048828125,
["x"] = 0.4899978637695313,
["side"] = 10,
},
["percent_text_anchor"] = {
["y"] = 4.6999969482422,
["x"] = -0.36000061035156,
["side"] = 5,
},
["spellname_text_font"] = "Naowh",
["only_names"] = false,
["quest_color_neutral"] = {
1,
0.65,
0,
},
["actorname_text_size"] = 9,
["castbar_offset"] = -0.90000152587891,
["power_percent_text_font"] = "Accidental Presidency",
["percent_text_ooc"] = true,
["actorname_text_color"] = {
nil,
nil,
nil,
0.87000000476837,
},
["level_text_alpha"] = 1,
["percent_text_font"] = "Naowh",
["actorname_guild_color"] = {
0.498039,
1,
0.2,
1,
},
["big_actortitle_text_size"] = 9,
["spellname_text_size"] = 9,
["health"] = {
61,
6,
},
["percent_text_color"] = {
0.93725490196078,
0.97647058823529,
1,
},
["big_actorname_text_font"] = "Naowh",
["actorname_text_anchor"] = {
["y"] = -3.800003051757813,
},
},
["enemynpc"] = {
["big_actorname_text_size"] = 9,
["spellpercent_text_font"] = "Naowh",
["level_text_size"] = 10,
["cast"] = {
120,
12,
},
["spellpercent_text_anchor"] = {
["y"] = 0.66999816894531,
["x"] = 0.0099945068359375,
},
["level_text_font"] = "Naowh",
["actorname_text_font"] = "Naowh",
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 9,
["big_actortitle_text_font"] = "Naowh",
["spellpercent_text_size"] = 8,
["level_text_anchor"] = {
["y"] = 1.1999969482422,
["x"] = -1,
},
["cast_incombat"] = {
nil,
12,
},
["spellname_text_anchor"] = {
["y"] = -0.279998779296875,
["x"] = 0.5,
["side"] = 10,
},
["percent_text_anchor"] = {
["y"] = -5.040000915527344,
["x"] = 0.5999984741210938,
["side"] = 7,
},
["spellname_text_font"] = "Naowh",
["actorname_text_size"] = 10,
["big_actorname_text_font"] = "Naowh",
["castbar_offset"] = -0.90000152587891,
["level_text_outline"] = "OUTLINE",
["big_actortitle_text_size"] = 9,
["actorname_text_anchor"] = {
["y"] = -5,
["x"] = 0.5999984741210938,
["side"] = 1,
},
["spellpercent_text_enabled"] = false,
["percent_text_show_decimals"] = false,
["percent_text_font"] = "Naowh",
["health_incombat"] = {
nil,
10,
},
["health"] = {
120,
10,
},
["percent_text_color"] = {
1,
1,
1,
},
["power_percent_text_font"] = "Accidental Presidency",
["level_text_alpha"] = 1,
["spellname_text_size"] = 9,
["level_text_enabled"] = false,
},
["global_health_height"] = 10,
["enemyplayer"] = {
["castbar_offset"] = -0.90000152587891,
["spellpercent_text_font"] = "Naowh",
["cast"] = {
120,
14,
},
["spellpercent_text_anchor"] = {
["y"] = 0.6699981689453125,
["x"] = 0.0099945068359375,
},
["spellname_text_outline"] = "OUTLINE",
["level_text_font"] = "Naowh",
["actorname_text_font"] = "Naowh",
["all_names"] = true,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 9,
["quest_color_enemy"] = {
1,
0.369,
0,
1,
},
["big_actortitle_text_font"] = "Naowh",
["spellpercent_text_size"] = 8,
["level_text_anchor"] = {
["y"] = 1.199996948242188,
["x"] = -1,
},
["cast_incombat"] = {
nil,
14,
},
["spellname_text_anchor"] = {
["y"] = -0.3800048828125,
["x"] = 0.5,
["side"] = 10,
},
["percent_text_anchor"] = {
["y"] = -5.040000915527344,
["x"] = -1,
["side"] = 7,
},
["spellname_text_font"] = "Naowh",
["percent_text_show_decimals"] = false,
["quest_color_neutral"] = {
1,
0.65,
0,
1,
},
["actorname_text_size"] = 10,
["big_actorname_text_font"] = "Naowh",
["big_actortitle_text_size"] = 9,
["level_text_outline"] = "OUTLINE",
["percent_show_health"] = false,
["spellpercent_text_enabled"] = false,
["percent_text_font"] = "Naowh",
["quest_enabled"] = true,
["percent_text_color"] = {
1,
1,
1,
},
["quest_color_enabled"] = true,
["health_incombat"] = {
nil,
10,
},
["health"] = {
120,
10,
},
["power_percent_text_font"] = "Accidental Presidency",
["level_text_alpha"] = 1,
["spellname_text_size"] = 9,
["actorname_text_anchor"] = {
["y"] = -5,
["x"] = 2,
["side"] = 1,
},
["level_text_enabled"] = false,
},
["global_health_width"] = 120,
},
["aura_y_offset"] = -0.600006103515625,
["use_ui_parent"] = true,
["indicator_elite"] = false,
["indicator_spec"] = false,
["resources_settings"] = {
["chr"] = {
["Player-1305-0C8A40FF"] = "HolyPower",
["Player-970-00A6B1E1"] = "ComboPoints",
["Player-970-00A567A0"] = "ComboPoints",
["Player-1084-09D4BD91"] = "Chi",
["Player-970-00A64901"] = "Runes",
["Player-5765-00078091"] = "Runes",
["Player-970-0096BE43"] = "ComboPoints",
["Player-970-00BDA374"] = "ComboPoints",
["Player-970-00BDD888"] = "ComboPoints",
["Player-970-00AC349B"] = "ComboPoints",
["Player-3674-0B3F8DA8"] = "ArcaneCharges",
["Player-970-00A522A0"] = "ComboPoints",
["Player-970-00BE6552"] = "ComboPoints",
["Player-4184-0023CCF5"] = "Runes",
["Player-1305-0C8EAECF"] = "HolyPower",
["Player-970-00875B07"] = "ComboPoints",
["Player-1084-09F17E42"] = "Runes",
["Player-4606-004CBC98"] = "Runes",
["Player-970-00BE53FD"] = "ComboPoints",
["Player-970-00BE111F"] = "ComboPoints",
["Player-1305-0C92307D"] = "ComboPoints",
["Player-5765-00076D77"] = "ComboPoints",
["Player-1621-063C3317"] = "ArcaneCharges",
["Player-1305-0CD21673"] = "ComboPoints",
["Player-1084-0A7D9A76"] = "ComboPoints",
["Player-970-00BDDBE7"] = "ComboPoints",
["Player-970-00BD9C5C"] = "ComboPoints",
["Player-970-00AC2EF5"] = "ComboPoints",
["Player-4184-004D2CBC"] = "HolyPower",
["Player-970-00BD9D74"] = "ComboPoints",
["Player-4606-004E5C31"] = "HolyPower",
["Player-970-00AC4486"] = "Runes",
["Player-1084-0A8EBA5D"] = "Chi",
["Player-970-00A52063"] = "ComboPoints",
["Player-4184-00C7C95C"] = "Essence",
["Player-1305-0C8E09A6"] = "Runes",
["Player-970-00BD9484"] = "ComboPoints",
["Player-970-00881291"] = "ComboPoints",
["Player-970-00BD9E6F"] = "ComboPoints",
["Player-5765-000D53A8"] = "HolyPower",
["Player-1084-0A5FA399"] = "HolyPower",
["Player-970-00BE5F03"] = "ComboPoints",
["Player-3674-0B39D545"] = "SoulShards",
["Player-970-00AC37AD"] = "ComboPoints",
["Player-4184-0042C8F4"] = "HolyPower",
["Player-4606-004CCC47"] = "Runes",
["Player-3674-09D96941"] = "Runes",
["Player-4606-0031416A"] = "ComboPoints",
["Player-1621-0B55B779"] = "Essence",
["Player-4184-009446E4"] = "ComboPoints",
["Player-1084-0A698CF4"] = "Runes",
["Player-970-00B047D0"] = "ComboPoints",
["Player-4184-00427226"] = "ComboPoints",
["Player-970-00A56B4C"] = "ComboPoints",
["Player-1305-0CB01FD2"] = "Runes",
["Player-970-00BE0ADC"] = "ComboPoints",
["Player-970-00BDB55D"] = "ComboPoints",
["Player-1084-0A58A9E3"] = "SoulShards",
["Player-1621-0B2AA4E2"] = "HolyPower",
["Player-4606-0030ACFA"] = "Runes",
["Player-4606-005181C7"] = "ComboPoints",
["Player-4606-0049FD3E"] = "Runes",
["Player-970-00BE118D"] = "ComboPoints",
["Player-4606-004E4AA9"] = "Chi",
["Player-970-00AC4802"] = "ComboPoints",
["Player-970-00A6B1C5"] = "ComboPoints",
["Player-970-00BDCCEC"] = "ComboPoints",
["Player-4606-004BBAC3"] = "Runes",
["Player-970-00A70C27"] = "Essence",
["Player-1621-06D67496"] = "SoulShards",
["Player-1084-0961A181"] = "Runes",
["Player-970-00BE51E3"] = "ComboPoints",
["Player-970-00A6DFCE"] = "ComboPoints",
["Player-1084-0A867F11"] = "Runes",
["Player-970-00BDD04B"] = "ComboPoints",
["Player-970-00A52221"] = "ComboPoints",
["Player-970-00BD9435"] = "ComboPoints",
["Player-970-00BDD4F5"] = "ComboPoints",
["Player-970-007BE9B1"] = "Runes",
["Player-4184-004E68EF"] = "Essence",
["Player-970-00BDD630"] = "ComboPoints",
["Player-1084-0A804988"] = "Essence",
["Player-1084-0A51CE7A"] = "ArcaneCharges",
["Player-970-00BE10EF"] = "ComboPoints",
["Player-970-00BE1157"] = "ComboPoints",
["Player-1084-0A24293C"] = "ComboPoints",
["Player-970-00854F7F"] = "ComboPoints",
["Player-1084-09F19274"] = "HolyPower",
["Player-970-00BDD382"] = "ComboPoints",
["Player-970-00BD966E"] = "ComboPoints",
["Player-970-00A60220"] = "ComboPoints",
["Player-970-00BE4EAA"] = "ComboPoints",
["Player-970-00A53D40"] = "ComboPoints",
["Player-970-00BDD7EE"] = "ComboPoints",
["Player-970-00B5EB97"] = "ComboPoints",
["Player-970-00AC2600"] = "ComboPoints",
["Player-4606-00264986"] = "HolyPower",
["Player-5765-00095A65"] = "HolyPower",
["Player-970-0085F079"] = "Runes",
["Player-3657-0B09936A"] = "ComboPoints",
["Player-970-00BD9114"] = "ComboPoints",
["Player-4184-006C9B23"] = "Runes",
["Player-1084-0A5C2A4F"] = "HolyPower",
["Player-1305-0C8B3F2E"] = "HolyPower",
["Player-1621-078F055D"] = "ComboPoints",
["Player-970-00AC0987"] = "ComboPoints",
["Player-970-00BE2EAD"] = "ComboPoints",
["Player-4184-003E01AD"] = "ComboPoints",
["Player-970-00A6B14F"] = "ComboPoints",
["Player-970-00A6B1D4"] = "ComboPoints",
["Player-4606-00518192"] = "ComboPoints",
["Player-1621-063C318F"] = "Runes",
["Player-970-00BE5CFF"] = "ComboPoints",
},
},
["spell_animation_list"] = {
[27285] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["cooldown"] = 0.75,
["duration"] = 0.075,
["scale_downY"] = 0.9,
["scale_downX"] = 0.9,
["enabled"] = true,
},
},
[46968] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
},
[11366] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.8,
["scale_downX"] = 0.8,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["amplitude"] = 10,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[228354] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[32645] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["cooldown"] = 0.75,
["duration"] = 0.04,
["scale_downY"] = 0.89999997615814,
["scale_downX"] = 0.89999997615814,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
},
[187874] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
},
[185763] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 3.6583230495453,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900559,
["scale_downX"] = 0.96999996900559,
["enabled"] = true,
},
},
[203782] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["amplitude"] = 1.5,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[100784] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 3,
["critical_scale"] = 1.05,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[31935] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 6,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[53351] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["cooldown"] = 0.75,
["duration"] = 0.050000000745058,
["scale_downY"] = 1,
["scale_downX"] = 0.97999995946884,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[257045] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[107270] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 0.1499999910593,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
},
[49998] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["scaleY"] = 1,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[7268] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[206930] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["cooldown"] = 0.75,
["duration"] = 0.050000000745058,
["scale_downY"] = 1,
["scale_downX"] = 0.97999995946884,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[196278] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[162243] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 1,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[196819] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["scale_upY"] = 1.2999999523163,
["cooldown"] = 0.75,
["duration"] = 0.04,
["scale_downY"] = 0.89999997615814,
["scale_downX"] = 0.89999997615814,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
},
[264178] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[280720] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["amplitude"] = 0.89999997615814,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 200,
},
},
[8042] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["cooldown"] = 0.75,
["duration"] = 0.060000000745058,
["scale_downY"] = 0.95,
["scale_downX"] = 0.95,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[185438] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 6.460000038147,
["critical_scale"] = 1.05,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900559,
["scale_downX"] = 0.96999996900559,
["enabled"] = true,
},
},
[86040] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[52174] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["cooldown"] = 0.75,
["duration"] = 0.075,
["scale_downY"] = 0.8,
["scale_downX"] = 0.8,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["amplitude"] = 6,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
},
[2643] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[324540] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 0.89999997615814,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900558,
["scale_downX"] = 0.96999996900558,
["enabled"] = true,
},
},
[53595] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["amplitude"] = 3,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[108853] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[204157] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 6,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["enabled"] = true,
},
},
[117418] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 0.1499999910593,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
},
[148135] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 1.75,
["critical_scale"] = 1.05,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
},
[228478] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["amplitude"] = 2.5,
["critical_scale"] = 1.05,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900559,
["scale_downX"] = 0.96999996900559,
["enabled"] = true,
},
},
[199547] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["amplitude"] = 3,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["scale_upY"] = 1.039999961853,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900558,
["scale_downX"] = 0.96999996900558,
["enabled"] = true,
},
},
[222024] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_downY"] = 0.89999997615814,
["cooldown"] = 0.75,
["scale_upY"] = 1.1000000238419,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["amplitude"] = 1.7999999523163,
["critical_scale"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
},
[155166] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[187708] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
},
["indicator_scale"] = 0.9999999403953552,
["border_color"] = {
nil,
nil,
nil,
1,
},
["castbar_icon_size"] = "same as castbar plus healthbar",
["npc_colors"] = {
[99358] = {
true,
false,
"magenta",
},
[196798] = {
true,
false,
"magenta",
},
[216619] = {
true,
false,
"mediumslateblue",
},
[194241] = {
true,
false,
"mediumslateblue",
},
[213806] = {
true,
false,
"aqua",
},
[190405] = {
true,
false,
"aqua",
},
[196671] = {
true,
false,
"mediumslateblue",
},
[180431] = {
true,
false,
"aqua",
},
[216364] = {
true,
false,
"aqua",
},
[195265] = {
true,
false,
"mediumslateblue",
},
[99359] = {
true,
false,
"deepskyblue",
},
[184908] = {
true,
false,
"magenta",
},
[150254] = {
false,
false,
"aqua",
},
[173016] = {
true,
false,
"aqua",
},
[129602] = {
true,
false,
"mediumslateblue",
},
[180433] = {
true,
false,
"orangered",
},
[209333] = {
true,
false,
"mediumslateblue",
},
[120651] = {
true,
false,
"darksalmon",
},
[213937] = {
true,
false,
"mediumslateblue",
},
[197697] = {
true,
false,
"magenta",
},
[40633] = {
true,
false,
"deepskyblue",
},
[184910] = {
true,
false,
"palegreen",
},
[178133] = {
false,
false,
"aqua",
},
[76407] = {
true,
false,
"mediumslateblue",
},
[40825] = {
true,
false,
"mediumslateblue",
},
[131587] = {
true,
false,
"deepskyblue",
},
[184911] = {
true,
false,
"darksalmon",
},
[126918] = {
true,
false,
"deepskyblue",
},
[196548] = {
true,
false,
"aqua",
},
[135552] = {
true,
false,
"deepskyblue",
},
[186191] = {
true,
false,
"aqua",
},
[161895] = {
true,
false,
"magenta",
},
[206140] = {
true,
false,
"mediumslateblue",
},
[83761] = {
true,
false,
"mediumslateblue",
},
[184018] = {
true,
false,
"mediumslateblue",
},
[208698] = {
true,
false,
"aqua",
},
[178392] = {
true,
false,
"deepskyblue",
},
[168418] = {
true,
false,
"aqua",
},
[200387] = {
true,
false,
"mediumslateblue",
},
[199748] = {
true,
false,
"aqua",
},
[165222] = {
true,
false,
"aqua",
},
[184020] = {
true,
false,
"deepskyblue",
},
[129989] = {
true,
false,
"deepskyblue",
},
[199749] = {
true,
false,
"mediumslateblue",
},
[185683] = {
true,
false,
"palegreen",
},
[168420] = {
true,
false,
"aqua",
},
[208445] = {
true,
false,
"mediumslateblue",
},
[170850] = {
true,
false,
"deepskyblue",
},
[174175] = {
true,
false,
"deepskyblue",
},
[210108] = {
true,
false,
"mediumslateblue",
},
[83763] = {
true,
false,
"deepskyblue",
},
[131849] = {
true,
false,
"deepskyblue",
},
[214840] = {
true,
false,
"deepskyblue",
},
[210109] = {
true,
false,
"mediumslateblue",
},
[185685] = {
true,
false,
"darksalmon",
},
[131850] = {
true,
false,
"aqua",
},
[178141] = {
true,
false,
"deepskyblue",
},
[213179] = {
true,
false,
"mediumslateblue",
},
[196044] = {
true,
false,
"aqua",
},
[190034] = {
true,
false,
"mediumslateblue",
},
[83892] = {
true,
false,
"aqua",
},
[135048] = {
true,
false,
"magenta",
},
[178142] = {
true,
false,
"aqua",
},
[98406] = {
true,
false,
"deepskyblue",
},
[211262] = {
true,
false,
"mediumslateblue",
},
[200137] = {
true,
false,
"aqua",
},
[194895] = {
true,
false,
"magenta",
},
[83765] = {
true,
false,
"aqua",
},
[83893] = {
true,
false,
"deepskyblue",
},
[128969] = {
true,
false,
"mediumslateblue",
},
[99366] = {
true,
false,
"aqua",
},
[82039] = {
true,
false,
"magenta",
},
[209090] = {
true,
false,
"mediumslateblue",
},
[220599] = {
true,
false,
"aqua",
},
[177889] = {
true,
false,
"mediumslateblue",
},
[187224] = {
true,
false,
"mediumslateblue",
},
[154744] = {
true,
false,
"mediumslateblue",
},
[128650] = {
true,
false,
"mediumslateblue",
},
[217531] = {
true,
false,
"mediumslateblue",
},
[83894] = {
true,
false,
"mediumslateblue",
},
[98280] = {
true,
false,
"aqua",
},
[194898] = {
true,
false,
"deepskyblue",
},
[167533] = {
true,
false,
"deepskyblue",
},
[177891] = {
true,
false,
"deepskyblue",
},
[133007] = {
true,
false,
"mediumslateblue",
},
[128651] = {
true,
false,
"mediumslateblue",
},
[217533] = {
true,
false,
"mediumslateblue",
},
[220730] = {
true,
false,
"mediumslateblue",
},
[177892] = {
true,
false,
"deepskyblue",
},
[165872] = {
true,
false,
"deepskyblue",
},
[131858] = {
true,
false,
"deepskyblue",
},
[129547] = {
true,
false,
"mediumslateblue",
},
[45912] = {
true,
false,
"aqua",
},
[128652] = {
true,
false,
"mediumslateblue",
},
[207177] = {
true,
false,
"mediumslateblue",
},
[127757] = {
true,
false,
"mediumslateblue",
},
[40925] = {
true,
false,
"mediumslateblue",
},
[89011] = {
true,
false,
"aqua",
},
[188252] = {
true,
false,
"mediumslateblue",
},
[189531] = {
true,
false,
"deepskyblue",
},
[162038] = {
true,
false,
"deepskyblue",
},
[98538] = {
true,
false,
"mediumslateblue",
},
[150146] = {
true,
false,
"aqua",
},
[137103] = {
true,
false,
"deepskyblue",
},
[129548] = {
true,
false,
"deepskyblue",
},
[101991] = {
true,
false,
"aqua",
},
[162039] = {
true,
false,
"aqua",
},
[82682] = {
true,
false,
"mediumslateblue",
},
[97068] = {
true,
false,
"mediumslateblue",
},
[75713] = {
true,
false,
"aqua",
},
[186208] = {
true,
false,
"mediumslateblue",
},
[162040] = {
true,
false,
"deepskyblue",
},
[195927] = {
true,
false,
"mediumslateblue",
},
[81212] = {
true,
false,
"deepskyblue",
},
[150276] = {
true,
false,
"deepskyblue",
},
[83578] = {
true,
false,
"mediumslateblue",
},
[115419] = {
true,
false,
"mediumslateblue",
},
[97197] = {
true,
false,
"aqua",
},
[126928] = {
false,
false,
"deepskyblue",
},
[203857] = {
true,
false,
"aqua",
},
[197847] = {
true,
false,
"deepskyblue",
},
[195929] = {
true,
false,
"mediumslateblue",
},
[131864] = {
true,
false,
"mediumslateblue",
},
[186339] = {
true,
false,
"aqua",
},
[40319] = {
true,
false,
"mediumslateblue",
},
[198999] = {
true,
false,
"mediumslateblue",
},
[39392] = {
true,
false,
"aqua",
},
[193373] = {
true,
false,
"aqua",
},
[228539] = {
true,
false,
"aqua",
},
[199000] = {
true,
false,
"mediumslateblue",
},
[133912] = {
true,
false,
"deepskyblue",
},
[228540] = {
true,
false,
"aqua",
},
[75652] = {
true,
false,
"mediumslateblue",
},
[134041] = {
true,
false,
"deepskyblue",
},
[203861] = {
true,
false,
"mediumslateblue",
},
[98542] = {
true,
false,
"mediumslateblue",
},
[179821] = {
true,
false,
"mediumslateblue",
},
[83389] = {
true,
false,
"deepskyblue",
},
[81407] = {
true,
false,
"deepskyblue",
},
[129552] = {
true,
false,
"mediumslateblue",
},
[154758] = {
true,
false,
"mediumslateblue",
},
[193760] = {
true,
false,
"mediumslateblue",
},
[115486] = {
true,
false,
"mediumslateblue",
},
[90998] = {
true,
false,
"aqua",
},
[122967] = {
true,
false,
"mediumslateblue",
},
[105704] = {
true,
false,
"aqua",
},
[166396] = {
true,
false,
"aqua",
},
[127315] = {
true,
false,
"magenta",
},
[187240] = {
true,
false,
"mediumslateblue",
},
[129553] = {
true,
false,
"aqua",
},
[180335] = {
true,
false,
"deepskyblue",
},
[162049] = {
true,
false,
"mediumslateblue",
},
[214350] = {
true,
false,
"magenta",
},
[168443] = {
true,
false,
"deepskyblue",
},
[77700] = {
true,
false,
"aqua",
},
[84989] = {
true,
false,
"deepskyblue",
},
[184300] = {
true,
false,
"mediumslateblue",
},
[180336] = {
true,
false,
"aqua",
},
[101549] = {
true,
false,
"magenta",
},
[105705] = {
true,
false,
"magenta",
},
[170490] = {
true,
false,
"aqua",
},
[168572] = {
true,
false,
"deepskyblue",
},
[184301] = {
true,
false,
"mediumslateblue",
},
[225605] = {
true,
false,
"aqua",
},
[115488] = {
true,
false,
"aqua",
},
[214608] = {
true,
false,
"aqua",
},
[97202] = {
true,
false,
"aqua",
},
[162691] = {
true,
false,
"mediumslateblue",
},
[81985] = {
true,
false,
"aqua",
},
[122969] = {
true,
false,
"aqua",
},
[40577] = {
true,
false,
"mediumslateblue",
},
[191847] = {
true,
false,
"aqua",
},
[168446] = {
true,
false,
"mediumslateblue",
},
[150160] = {
true,
false,
"mediumslateblue",
},
[83392] = {
true,
false,
"mediumslateblue",
},
[162692] = {
true,
false,
"mediumslateblue",
},
[178165] = {
true,
false,
"mediumslateblue",
},
[114338] = {
true,
false,
"aqua",
},
[104300] = {
true,
false,
"deepskyblue",
},
[162693] = {
true,
false,
"mediumslateblue",
},
[131492] = {
true,
false,
"aqua",
},
[76104] = {
true,
false,
"aqua",
},
[81283] = {
true,
false,
"aqua",
},
[86526] = {
true,
false,
"deepskyblue",
},
[135329] = {
true,
false,
"magenta",
},
[81603] = {
true,
false,
"mediumslateblue",
},
[166275] = {
true,
false,
"aqua",
},
[165764] = {
true,
false,
"mediumslateblue",
},
[187503] = {
true,
false,
"mediumslateblue",
},
[166276] = {
true,
false,
"deepskyblue",
},
[168578] = {
true,
false,
"aqua",
},
[150292] = {
true,
false,
"mediumslateblue",
},
[219984] = {
true,
false,
"mediumslateblue",
},
[45917] = {
true,
false,
"deepskyblue",
},
[150165] = {
true,
false,
"aqua",
},
[186226] = {
true,
false,
"magenta",
},
[125977] = {
true,
false,
"magenta",
},
[122972] = {
true,
false,
"aqua",
},
[186738] = {
true,
false,
"mediumslateblue",
},
[177787] = {
true,
false,
"aqua",
},
[170882] = {
true,
false,
"aqua",
},
[218324] = {
true,
false,
"mediumslateblue",
},
[186739] = {
true,
false,
"mediumslateblue",
},
[196202] = {
true,
false,
"aqua",
},
[103344] = {
true,
false,
"mediumslateblue",
},
[122973] = {
true,
false,
"magenta",
},
[100531] = {
true,
false,
"mediumslateblue",
},
[213338] = {
true,
false,
"aqua",
},
[196203] = {
true,
false,
"deepskyblue",
},
[186229] = {
true,
false,
"mediumslateblue",
},
[186741] = {
true,
false,
"aqua",
},
[162317] = {
true,
false,
"deepskyblue",
},
[150169] = {
true,
false,
"deepskyblue",
},
[183033] = {
true,
false,
"magenta",
},
[114790] = {
true,
false,
"mediumslateblue",
},
[100532] = {
true,
false,
"aqua",
},
[187510] = {
true,
false,
"deepskyblue",
},
[163086] = {
true,
false,
"deepskyblue",
},
[40484] = {
true,
false,
"mediumslateblue",
},
[199659] = {
true,
false,
"magenta",
},
[205158] = {
true,
false,
"mediumslateblue",
},
[129369] = {
true,
false,
"mediumslateblue",
},
[97720] = {
true,
false,
"magenta",
},
[45919] = {
true,
false,
"mediumslateblue",
},
[213343] = {
true,
false,
"mediumslateblue",
},
[83846] = {
true,
false,
"mediumslateblue",
},
[138281] = {
true,
false,
"mediumslateblue",
},
[114792] = {
true,
false,
"aqua",
},
[213216] = {
true,
false,
"mediumslateblue",
},
[173447] = {
false,
false,
"white",
},
[187897] = {
true,
false,
"magenta",
},
[129370] = {
true,
false,
"aqua",
},
[213217] = {
true,
false,
"aqua",
},
[40357] = {
true,
false,
"deepskyblue",
},
[81737] = {
true,
false,
"darksalmon",
},
[91008] = {
true,
false,
"deepskyblue",
},
[168717] = {
true,
false,
"deepskyblue",
},
[144293] = {
true,
false,
"mediumslateblue",
},
[165137] = {
true,
false,
"mediumslateblue",
},
[168718] = {
true,
false,
"aqua",
},
[144294] = {
true,
false,
"aqua",
},
[183424] = {
true,
false,
"aqua",
},
[144295] = {
true,
false,
"aqua",
},
[183425] = {
true,
false,
"deepskyblue",
},
[105715] = {
true,
false,
"aqua",
},
[212453] = {
true,
false,
"aqua",
},
[129372] = {
true,
false,
"magenta",
},
[98810] = {
true,
false,
"mediumslateblue",
},
[205804] = {
true,
false,
"deepskyblue",
},
[179334] = {
true,
false,
"mediumslateblue",
},
[164501] = {
true,
false,
"mediumslateblue",
},
[130012] = {
true,
false,
"magenta",
},
[163862] = {
true,
false,
"deepskyblue",
},
[214117] = {
true,
false,
"orangered",
},
[191739] = {
true,
false,
"mediumslateblue",
},
[208363] = {
true,
false,
"mediumslateblue",
},
[144298] = {
true,
false,
"mediumslateblue",
},
[176395] = {
true,
false,
"deepskyblue",
},
[133685] = {
true,
false,
"deepskyblue",
},
[190206] = {
true,
false,
"deepskyblue",
},
[224221] = {
true,
false,
"mediumslateblue",
},
[184580] = {
true,
false,
"aqua",
},
[96574] = {
true,
false,
"mediumslateblue",
},
[129374] = {
true,
false,
"deepskyblue",
},
[190207] = {
true,
false,
"aqua",
},
[184581] = {
true,
false,
"mediumslateblue",
},
[104247] = {
true,
false,
"aqua",
},
[130909] = {
true,
false,
"deepskyblue",
},
[186116] = {
true,
false,
"magenta",
},
[187523] = {
true,
false,
"mediumslateblue",
},
[100539] = {
true,
false,
"mediumslateblue",
},
[208367] = {
true,
false,
"deepskyblue",
},
[165529] = {
true,
false,
"aqua",
},
[98813] = {
true,
false,
"aqua",
},
[206066] = {
true,
false,
"aqua",
},
[114542] = {
true,
false,
"mediumslateblue",
},
[214762] = {
true,
false,
"deepskyblue",
},
[186246] = {
true,
false,
"aqua",
},
[115757] = {
true,
false,
"mediumslateblue",
},
[96512] = {
true,
false,
"mediumslateblue",
},
[96640] = {
false,
false,
"mediumslateblue",
},
[206068] = {
true,
false,
"deepskyblue",
},
[166299] = {
true,
false,
"aqua",
},
[186120] = {
true,
false,
"magenta",
},
[190340] = {
true,
false,
"mediumslateblue",
},
[194816] = {
true,
false,
"deepskyblue",
},
[39625] = {
true,
false,
"mediumslateblue",
},
[164510] = {
true,
false,
"deepskyblue",
},
[171799] = {
true,
false,
"deepskyblue",
},
[184331] = {
true,
false,
"mediumslateblue",
},
[206070] = {
true,
false,
"mediumslateblue",
},
[215405] = {
true,
false,
"mediumslateblue",
},
[114544] = {
true,
false,
"deepskyblue",
},
[186122] = {
true,
false,
"mediumslateblue",
},
[199549] = {
true,
false,
"deepskyblue",
},
[98368] = {
true,
false,
"deepskyblue",
},
[122984] = {
true,
false,
"mediumslateblue",
},
[172312] = {
true,
false,
"deepskyblue",
},
[166302] = {
true,
false,
"aqua",
},
[81297] = {
true,
false,
"deepskyblue",
},
[155433] = {
false,
false,
"magenta",
},
[165919] = {
true,
false,
"deepskyblue",
},
[195842] = {
true,
false,
"aqua",
},
[215407] = {
true,
false,
"mediumslateblue",
},
[173720] = {
true,
false,
"mediumslateblue",
},
[155434] = {
false,
false,
"violet",
},
[196482] = {
true,
false,
"mediumslateblue",
},
[101438] = {
true,
false,
"aqua",
},
[186125] = {
true,
false,
"aqua",
},
[184335] = {
true,
false,
"aqua",
},
[45924] = {
true,
false,
"deepskyblue",
},
[206074] = {
true,
false,
"aqua",
},
[97219] = {
true,
false,
"mediumslateblue",
},
[205691] = {
true,
false,
"aqua",
},
[83025] = {
true,
false,
"mediumslateblue",
},
[179733] = {
true,
false,
"orangered",
},
[163621] = {
true,
false,
"deepskyblue",
},
[168992] = {
true,
false,
"aqua",
},
[196102] = {
true,
false,
"aqua",
},
[164517] = {
true,
false,
"mediumslateblue",
},
[98243] = {
true,
false,
"mediumslateblue",
},
[190348] = {
true,
false,
"deepskyblue",
},
[83026] = {
true,
false,
"mediumslateblue",
},
[40586] = {
true,
false,
"mediumslateblue",
},
[81236] = {
true,
false,
"aqua",
},
[130404] = {
true,
false,
"mediumslateblue",
},
[82579] = {
true,
false,
"deepskyblue",
},
[131527] = {
true,
false,
"mediumslateblue",
},
[165414] = {
true,
false,
"aqua",
},
[193291] = {
true,
false,
"magenta",
},
[114804] = {
true,
false,
"aqua",
},
[59544] = {
true,
false,
"aqua",
},
[187154] = {
true,
false,
"mediumslateblue",
},
[135365] = {
true,
false,
"mediumslateblue",
},
[214264] = {
true,
false,
"deepskyblue",
},
[168357] = {
true,
false,
"aqua",
},
[187155] = {
true,
false,
"aqua",
},
[163882] = {
true,
false,
"deepskyblue",
},
[186644] = {
true,
false,
"mediumslateblue",
},
[164266] = {
true,
false,
"deepskyblue",
},
[201222] = {
true,
false,
"mediumslateblue",
},
[173729] = {
true,
false,
"mediumslateblue",
},
[194317] = {
true,
false,
"mediumslateblue",
},
[169893] = {
true,
false,
"mediumslateblue",
},
[150712] = {
true,
false,
"aqua",
},
[201223] = {
true,
false,
"aqua",
},
[115765] = {
true,
false,
"deepskyblue",
},
[200840] = {
true,
false,
"deepskyblue",
},
[59545] = {
true,
false,
"deepskyblue",
},
[135241] = {
true,
false,
"magenta",
},
[102019] = {
true,
false,
"aqua",
},
[133835] = {
true,
false,
"mediumslateblue",
},
[173655] = {
true,
false,
"mediumslateblue",
},
[150251] = {
true,
false,
"aqua",
},
[167965] = {
true,
false,
"aqua",
},
[100485] = {
true,
false,
"mediumslateblue",
},
[192786] = {
true,
false,
"deepskyblue",
},
[163618] = {
true,
false,
"deepskyblue",
},
[179842] = {
true,
false,
"deepskyblue",
},
[44404] = {
true,
false,
"aqua",
},
[187160] = {
true,
false,
"deepskyblue",
},
[151657] = {
true,
false,
"aqua",
},
[213932] = {
true,
false,
"aqua",
},
[213119] = {
true,
false,
"mediumslateblue",
},
[160495] = {
true,
false,
"aqua",
},
[212673] = {
true,
false,
"mediumslateblue",
},
[177817] = {
true,
false,
"aqua",
},
[187033] = {
true,
false,
"mediumslateblue",
},
[167536] = {
true,
false,
"deepskyblue",
},
[91000] = {
true,
false,
"mediumslateblue",
},
[204931] = {
true,
false,
"mediumslateblue",
},
[100486] = {
true,
false,
"aqua",
},
[146753] = {
false,
false,
"blue",
},
[101637] = {
true,
false,
"deepskyblue",
},
[163121] = {
true,
false,
"deepskyblue",
},
[102788] = {
true,
false,
"mediumslateblue",
},
[164506] = {
true,
false,
"mediumslateblue",
},
[137521] = {
true,
false,
"deepskyblue",
},
[189464] = {
true,
false,
"aqua",
},
[76446] = {
true,
false,
"aqua",
},
[192789] = {
true,
false,
"deepskyblue",
},
[207796] = {
true,
false,
"orangered",
},
[188011] = {
true,
false,
"mediumslateblue",
},
[205384] = {
true,
false,
"aqua",
},
[163458] = {
true,
false,
"aqua",
},
[138187] = {
true,
false,
"aqua",
},
[135246] = {
false,
false,
"white",
},
[195696] = {
true,
false,
"aqua",
},
[45704] = {
true,
false,
"magenta",
},
[224219] = {
true,
false,
"aqua",
},
[196115] = {
true,
false,
"mediumslateblue",
},
[129928] = {
true,
false,
"deepskyblue",
},
[91001] = {
true,
false,
"magenta",
},
[214066] = {
true,
false,
"aqua",
},
[189466] = {
true,
false,
"mediumslateblue",
},
[45928] = {
true,
false,
"mediumslateblue",
},
[189722] = {
true,
false,
"mediumslateblue",
},
[197905] = {
true,
false,
"deepskyblue",
},
[131667] = {
true,
false,
"mediumslateblue",
},
[144071] = {
true,
false,
"aqua",
},
[206064] = {
true,
false,
"aqua",
},
[190362] = {
true,
false,
"deepskyblue",
},
[189467] = {
true,
false,
"deepskyblue",
},
[224732] = {
true,
false,
"aqua",
},
[150253] = {
true,
false,
"mediumslateblue",
},
[208438] = {
true,
false,
"mediumslateblue",
},
[99192] = {
true,
false,
"mediumslateblue",
},
[192788] = {
true,
false,
"aqua",
},
[223994] = {
true,
false,
"aqua",
},
[189340] = {
true,
false,
"mediumslateblue",
},
[41096] = {
true,
false,
"aqua",
},
[200131] = {
true,
false,
"mediumslateblue",
},
[163126] = {
true,
false,
"aqua",
},
[193944] = {
true,
false,
"aqua",
},
[224249] = {
true,
false,
"mediumslateblue",
},
[81819] = {
true,
false,
"deepskyblue",
},
[211263] = {
true,
false,
"mediumslateblue",
},
[213893] = {
true,
false,
"aqua",
},
[163894] = {
true,
false,
"deepskyblue",
},
[194316] = {
true,
false,
"mediumslateblue",
},
[194894] = {
true,
false,
"aqua",
},
[127879] = {
true,
false,
"deepskyblue",
},
[131670] = {
true,
false,
"mediumslateblue",
},
[137405] = {
true,
false,
"deepskyblue",
},
[197398] = {
false,
false,
"aqua",
},
[162744] = {
true,
false,
"deepskyblue",
},
[189470] = {
true,
false,
"magenta",
},
[187552] = {
true,
false,
"deepskyblue",
},
[163128] = {
true,
false,
"aqua",
},
[184022] = {
true,
false,
"aqua",
},
[165430] = {
true,
false,
"deepskyblue",
},
[81820] = {
true,
false,
"aqua",
},
[187969] = {
true,
false,
"deepskyblue",
},
[201790] = {
true,
false,
"mediumslateblue",
},
[189471] = {
true,
false,
"mediumslateblue",
},
[189265] = {
true,
false,
"aqua",
},
[192796] = {
true,
false,
"magenta",
},
[131666] = {
true,
false,
"aqua",
},
[206351] = {
true,
false,
"aqua",
},
[127111] = {
true,
false,
"deepskyblue",
},
[96934] = {
true,
false,
"deepskyblue",
},
[184132] = {
true,
false,
"deepskyblue",
},
[164920] = {
true,
false,
"deepskyblue",
},
[134284] = {
true,
false,
"aqua",
},
[104278] = {
true,
false,
"magenta",
},
[131545] = {
true,
false,
"aqua",
},
[206352] = {
true,
false,
"deepskyblue",
},
[174210] = {
true,
false,
"aqua",
},
[196045] = {
true,
false,
"magenta",
},
[190368] = {
true,
false,
"aqua",
},
[199703] = {
true,
false,
"aqua",
},
[213934] = {
true,
false,
"deepskyblue",
},
[99200] = {
true,
false,
"mediumslateblue",
},
[100526] = {
true,
false,
"deepskyblue",
},
[212775] = {
true,
false,
"aqua",
},
[188067] = {
true,
false,
"aqua",
},
[213770] = {
true,
false,
"mediumslateblue",
},
[168886] = {
true,
false,
"deepskyblue",
},
[191164] = {
true,
false,
"mediumslateblue",
},
[45930] = {
true,
false,
"mediumslateblue",
},
[169861] = {
true,
false,
"deepskyblue",
},
[211341] = {
true,
false,
"magenta",
},
[129699] = {
true,
false,
"magenta",
},
[40943] = {
true,
false,
"aqua",
},
[150168] = {
true,
false,
"mediumslateblue",
},
[190370] = {
true,
false,
"mediumslateblue",
},
[165946] = {
true,
false,
"deepskyblue",
},
[206697] = {
true,
false,
"aqua",
},
[192800] = {
true,
false,
"aqua",
},
[210156] = {
true,
false,
"mediumslateblue",
},
[171376] = {
true,
false,
"deepskyblue",
},
[184023] = {
true,
false,
"aqua",
},
[186151] = {
true,
false,
"mediumslateblue",
},
[163620] = {
true,
false,
"deepskyblue",
},
[126919] = {
true,
false,
"aqua",
},
[211087] = {
true,
false,
"mediumslateblue",
},
[129788] = {
true,
false,
"aqua",
},
[152009] = {
true,
false,
"deepskyblue",
},
[131677] = {
true,
false,
"mediumslateblue",
},
[130400] = {
true,
false,
"mediumslateblue",
},
[98970] = {
true,
false,
"mediumslateblue",
},
[172981] = {
true,
false,
"deepskyblue",
},
[203799] = {
true,
false,
"deepskyblue",
},
[129601] = {
true,
false,
"deepskyblue",
},
[135474] = {
true,
false,
"aqua",
},
[95779] = {
true,
false,
"mediumslateblue",
},
[164414] = {
true,
false,
"aqua",
},
[174773] = {
true,
false,
"magenta",
},
[128434] = {
true,
false,
"magenta",
},
[190373] = {
true,
false,
"aqua",
},
[164926] = {
true,
false,
"mediumslateblue",
},
[211089] = {
true,
false,
"mediumslateblue",
},
[224516] = {
true,
false,
"aqua",
},
[166589] = {
true,
false,
"deepskyblue",
},
[212389] = {
true,
false,
"aqua",
},
[163520] = {
true,
false,
"deepskyblue",
},
[84957] = {
true,
false,
"orangered",
},
[197535] = {
true,
false,
"mediumslateblue",
},
[114624] = {
true,
false,
"aqua",
},
[114526] = {
true,
false,
"aqua",
},
[81235] = {
false,
false,
"white",
},
[198047] = {
true,
false,
"deepskyblue",
},
[81984] = {
true,
false,
"mediumslateblue",
},
[40177] = {
true,
false,
"mediumslateblue",
},
[114634] = {
true,
false,
"mediumslateblue",
},
[40320] = {
true,
false,
"mediumslateblue",
},
[172265] = {
true,
false,
"aqua",
},
[98370] = {
true,
false,
"aqua",
},
[179841] = {
true,
false,
"aqua",
},
[176565] = {
true,
false,
"aqua",
},
[205337] = {
true,
false,
"mediumslateblue",
},
[82590] = {
true,
false,
"magenta",
},
[199037] = {
true,
false,
"aqua",
},
[165824] = {
true,
false,
"mediumslateblue",
},
[164929] = {
true,
false,
"mediumslateblue",
},
[193462] = {
true,
false,
"aqua",
},
[197406] = {
true,
false,
"deepskyblue",
},
[192934] = {
true,
false,
"mediumslateblue",
},
[200926] = {
true,
false,
"mediumslateblue",
},
[102253] = {
true,
false,
"deepskyblue",
},
[201754] = {
true,
false,
"deepskyblue",
},
[190377] = {
true,
false,
"deepskyblue",
},
[92610] = {
true,
false,
"magenta",
},
[40936] = {
true,
false,
"mediumslateblue",
},
[115418] = {
true,
false,
"deepskyblue",
},
[84767] = {
true,
false,
"mediumslateblue",
},
[40167] = {
true,
false,
"aqua",
},
[163524] = {
true,
false,
"mediumslateblue",
},
[114626] = {
true,
false,
"aqua",
},
[205723] = {
true,
false,
"deepskyblue",
},
[210966] = {
true,
false,
"aqua",
},
[131863] = {
true,
false,
"mediumslateblue",
},
[167998] = {
true,
false,
"deepskyblue",
},
[205212] = {
true,
false,
"deepskyblue",
},
[167607] = {
true,
false,
"deepskyblue",
},
[98706] = {
true,
false,
"mediumslateblue",
},
[196116] = {
true,
false,
"deepskyblue",
},
[203678] = {
true,
false,
"mediumslateblue",
},
[102095] = {
true,
false,
"deepskyblue",
},
[187566] = {
true,
false,
"mediumslateblue",
},
[195878] = {
true,
false,
"deepskyblue",
},
[176396] = {
true,
false,
"mediumslateblue",
},
[131685] = {
true,
false,
"aqua",
},
[102287] = {
true,
false,
"mediumslateblue",
},
[98792] = {
true,
false,
"deepskyblue",
},
[190342] = {
true,
false,
"aqua",
},
[205408] = {
true,
false,
"deepskyblue",
},
[131824] = {
true,
false,
"mediumslateblue",
},
[197985] = {
true,
false,
"aqua",
},
[164804] = {
true,
false,
"mediumslateblue",
},
[165762] = {
true,
false,
"deepskyblue",
},
[196263] = {
true,
false,
"aqua",
},
[98691] = {
true,
false,
"deepskyblue",
},
[95766] = {
true,
false,
"deepskyblue",
},
[186121] = {
true,
false,
"mediumslateblue",
},
[163619] = {
false,
false,
"white",
},
[114632] = {
true,
false,
"aqua",
},
[205727] = {
true,
false,
"aqua",
},
[104270] = {
true,
false,
"aqua",
},
[197671] = {
true,
false,
"mediumslateblue",
},
[114628] = {
true,
false,
"magenta",
},
[167876] = {
true,
false,
"deepskyblue",
},
[199717] = {
true,
false,
"mediumslateblue",
},
[138465] = {
true,
false,
"deepskyblue",
},
[208365] = {
true,
false,
"palegreen",
},
[59552] = {
true,
false,
"mediumslateblue",
},
[167493] = {
true,
false,
"aqua",
},
[170690] = {
true,
false,
"deepskyblue",
},
[189232] = {
true,
false,
"mediumslateblue",
},
[190128] = {
true,
false,
"darksalmon",
},
[114312] = {
true,
false,
"mediumslateblue",
},
[179386] = {
true,
false,
"deepskyblue",
},
[95834] = {
true,
false,
"deepskyblue",
},
[155090] = {
true,
false,
"deepskyblue",
},
[186420] = {
true,
false,
"aqua",
},
[131817] = {
true,
false,
"magenta",
},
[114629] = {
true,
false,
"deepskyblue",
},
[126969] = {
true,
false,
"magenta",
},
[224271] = {
true,
false,
"deepskyblue",
},
[167111] = {
true,
false,
"aqua",
},
[136549] = {
true,
false,
"deepskyblue",
},
[132126] = {
true,
false,
"magenta",
},
[45915] = {
true,
false,
"mediumslateblue",
},
[131818] = {
true,
false,
"magenta",
},
[197219] = {
true,
false,
"mediumslateblue",
},
[179388] = {
true,
false,
"aqua",
},
[164557] = {
true,
false,
"deepskyblue",
},
[82597] = {
true,
false,
"mediumslateblue",
},
[59873] = {
true,
false,
"mediumslateblue",
},
[129208] = {
true,
false,
"mediumslateblue",
},
[79720] = {
true,
false,
"magenta",
},
[193457] = {
true,
false,
"mediumslateblue",
},
[189235] = {
true,
false,
"mediumslateblue",
},
[80935] = {
true,
false,
"magenta",
},
[169927] = {
true,
false,
"mediumslateblue",
},
[80808] = {
true,
false,
"deepskyblue",
},
[131436] = {
true,
false,
"mediumslateblue",
},
[59553] = {
true,
false,
"deepskyblue",
},
[137830] = {
true,
false,
"aqua",
},
[96664] = {
true,
false,
"aqua",
},
[116549] = {
true,
false,
"aqua",
},
[95769] = {
true,
false,
"aqua",
},
[77483] = {
true,
false,
"deepskyblue",
},
[185528] = {
true,
false,
"deepskyblue",
},
[185656] = {
true,
false,
"deepskyblue",
},
[168393] = {
true,
false,
"deepskyblue",
},
[104273] = {
true,
false,
"deepskyblue",
},
[131821] = {
true,
false,
"magenta",
},
[77803] = {
true,
false,
"deepskyblue",
},
[80936] = {
false,
false,
"magenta",
},
[194990] = {
true,
false,
"aqua",
},
[185529] = {
true,
false,
"aqua",
},
[165197] = {
true,
false,
"mediumslateblue",
},
[98965] = {
true,
false,
"mediumslateblue",
},
[163459] = {
true,
false,
"aqua",
},
[100527] = {
true,
false,
"magenta",
},
[187246] = {
true,
false,
"deepskyblue",
},
[162763] = {
true,
false,
"mediumslateblue",
},
[223253] = {
true,
false,
"aqua",
},
[45935] = {
true,
false,
"aqua",
},
[40788] = {
true,
false,
"orangered",
},
[189878] = {
true,
false,
"magenta",
},
[104274] = {
true,
false,
"aqua",
},
[131823] = {
true,
false,
"mediumslateblue",
},
[111563] = {
true,
false,
"deepskyblue",
},
[80937] = {
true,
false,
"deepskyblue",
},
[104246] = {
true,
false,
"deepskyblue",
},
[192481] = {
true,
false,
"aqua",
},
[40935] = {
true,
false,
"deepskyblue",
},
[168396] = {
true,
false,
"deepskyblue",
},
[86372] = {
true,
false,
"magenta",
},
[133870] = {
true,
false,
"aqua",
},
[184107] = {
true,
false,
"mediumslateblue",
},
[95771] = {
true,
false,
"magenta",
},
[186220] = {
true,
false,
"aqua",
},
[151773] = {
true,
false,
"deepskyblue",
},
[131812] = {
true,
false,
"mediumslateblue",
},
[196576] = {
true,
false,
"deepskyblue",
},
[104275] = {
true,
false,
"mediumslateblue",
},
[131825] = {
true,
false,
"mediumslateblue",
},
[114633] = {
true,
false,
"deepskyblue",
},
[189227] = {
true,
false,
"deepskyblue",
},
[88163] = {
true,
false,
"mediumslateblue",
},
[213892] = {
true,
false,
"aqua",
},
[98521] = {
true,
false,
"mediumslateblue",
},
[177816] = {
true,
false,
"deepskyblue",
},
[170572] = {
true,
false,
"aqua",
},
[164562] = {
true,
false,
"deepskyblue",
},
[163891] = {
true,
false,
"aqua",
},
[95772] = {
true,
false,
"deepskyblue",
},
[196642] = {
false,
false,
"aqua",
},
[207969] = {
true,
false,
"aqua",
},
[198995] = {
true,
false,
"mediumslateblue",
},
[186124] = {
true,
false,
"deepskyblue",
},
[168942] = {
true,
false,
"deepskyblue",
},
[129367] = {
true,
false,
"aqua",
},
[221979] = {
true,
false,
"aqua",
},
[59546] = {
true,
false,
"aqua",
},
[179269] = {
true,
false,
"deepskyblue",
},
[194315] = {
true,
false,
"mediumslateblue",
},
[163157] = {
true,
false,
"mediumslateblue",
},
[59555] = {
true,
false,
"aqua",
},
[167612] = {
true,
false,
"aqua",
},
[113537] = {
true,
false,
"mediumslateblue",
},
[189478] = {
true,
false,
"mediumslateblue",
},
[194487] = {
true,
false,
"mediumslateblue",
},
[151649] = {
true,
false,
"deepskyblue",
},
[165076] = {
true,
false,
"aqua",
},
[164921] = {
true,
false,
"aqua",
},
[204206] = {
true,
false,
"mediumslateblue",
},
[83613] = {
true,
false,
"mediumslateblue",
},
[169905] = {
true,
false,
"deepskyblue",
},
[135240] = {
true,
false,
"aqua",
},
[168627] = {
true,
false,
"aqua",
},
[150295] = {
true,
false,
"mediumslateblue",
},
[131318] = {
true,
false,
"mediumslateblue",
},
[171343] = {
true,
false,
"deepskyblue",
},
[225479] = {
true,
false,
"aqua",
},
[162689] = {
true,
false,
"deepskyblue",
},
[168658] = {
true,
false,
"deepskyblue",
},
[184131] = {
true,
false,
"magenta",
},
[101476] = {
true,
false,
"magenta",
},
[162047] = {
true,
false,
"deepskyblue",
},
[114316] = {
true,
false,
"aqua",
},
[75506] = {
true,
false,
"deepskyblue",
},
[95842] = {
true,
false,
"aqua",
},
[102232] = {
true,
false,
"aqua",
},
[164567] = {
true,
false,
"aqua",
},
[114636] = {
true,
false,
"deepskyblue",
},
[146409] = {
false,
false,
"darkgreen",
},
[128455] = {
true,
false,
"deepskyblue",
},
[192333] = {
true,
false,
"aqua",
},
[186658] = {
true,
false,
"aqua",
},
[200126] = {
true,
false,
"aqua",
},
[115020] = {
true,
false,
"mediumslateblue",
},
[173044] = {
true,
false,
"aqua",
},
[148120] = {
false,
false,
"blue",
},
[168318] = {
true,
false,
"deepskyblue",
},
[84990] = {
true,
false,
"aqua",
},
[114317] = {
true,
false,
"aqua",
},
[164185] = {
true,
false,
"deepskyblue",
},
[168681] = {
true,
false,
"mediumslateblue",
},
[162103] = {
true,
false,
"deepskyblue",
},
[174197] = {
true,
false,
"aqua",
},
[114637] = {
false,
false,
"deepskyblue",
},
[195928] = {
true,
false,
"mediumslateblue",
},
[220195] = {
true,
false,
"aqua",
},
[216293] = {
true,
false,
"aqua",
},
[195851] = {
true,
false,
"deepskyblue",
},
[200836] = {
true,
false,
"deepskyblue",
},
[138254] = {
true,
false,
"deepskyblue",
},
[193293] = {
true,
false,
"deepskyblue",
},
[98696] = {
true,
false,
"deepskyblue",
},
[212403] = {
true,
false,
"aqua",
},
[220196] = {
true,
false,
"mediumslateblue",
},
[197698] = {
true,
false,
"magenta",
},
[150297] = {
true,
false,
"aqua",
},
[122971] = {
true,
false,
"deepskyblue",
},
[205363] = {
true,
false,
"aqua",
},
[195930] = {
true,
false,
"mediumslateblue",
},
[39960] = {
false,
false,
"magenta",
},
[205152] = {
true,
false,
"mediumslateblue",
},
[220197] = {
true,
false,
"mediumslateblue",
},
[127106] = {
true,
false,
"mediumslateblue",
},
[185680] = {
true,
false,
"magenta",
},
[131586] = {
true,
false,
"deepskyblue",
},
[40634] = {
true,
false,
"magenta",
},
[150250] = {
true,
false,
"deepskyblue",
},
[95674] = {
true,
false,
"mediumslateblue",
},
[190403] = {
true,
false,
"mediumslateblue",
},
[129600] = {
true,
false,
"aqua",
},
[114319] = {
true,
false,
"deepskyblue",
},
[113398] = {
true,
false,
"mediumslateblue",
},
[104217] = {
true,
false,
"mediumslateblue",
},
[195135] = {
true,
false,
"aqua",
},
[80816] = {
true,
false,
"aqua",
},
[75459] = {
true,
false,
"aqua",
},
},
["transparency_behavior_on_friendlies"] = true,
["extra_icon_show_enrage_border"] = {
0,
0,
0,
},
["cast_statusbar_spark_half"] = true,
["hook_data"] = {
{
["Enabled"] = true,
["Revision"] = 70,
["OptionsValues"] = {
},
["LastHookEdited"] = "Constructor",
["Author"] = "Izimode-Azralon",
["Options"] = {
},
["Desc"] = "Change the color for the heal absorb, heal prediction and shield amount indicators.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}           \n    \n    --make sure to enable the desired indicators at /plater options > Advanced tab > Show Heal/Shield Prediction\n    \n    --color when the heal absorb indicator\n    envTable.HealAbsorbColor = \"maroon\"\n    \n    --color of incoming heal indicator\n    envTable.IncomingHealColor = \"darkgreen\"\n    \n    --color of shield indicator\n    envTable.ShieldsColor = \"#C59000\"    \n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --heal absorb\n    unitFrame.healthBar.healAbsorbIndicator:SetVertexColor (DetailsFramework:ParseColors (envTable.HealAbsorbColor))\n    \n    --shield absorb\n    unitFrame.healthBar.shieldAbsorbIndicator:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldsColor))\n    \n    --incoming heal\n    unitFrame.healthBar.incomingHealIndicator:SetVertexColor (DetailsFramework:ParseColors (envTable.IncomingHealColor))\n    \nend\n\n\n",
},
["Prio"] = 99,
["Time"] = 1721752275,
["PlaterCore"] = 1,
["HooksTemp"] = {
},
["Name"] = "Change Prediction Color",
["Icon"] = 1035048,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
},
{
["Enabled"] = true,
["Revision"] = 70,
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Options"] = {
},
["Desc"] = "Adds a pixels perfect border around the cast bar.",
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \n    --create thee border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end\n    \nend\n\n\n\n\n",
},
["Prio"] = 99,
["Time"] = 1721752267,
["PlaterCore"] = 1,
["HooksTemp"] = {
},
["Name"] = "Cast Bar Border",
["Icon"] = 133004,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckForQuest (unitFrame)\n    \nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.ExtraQuestMarker22154:Hide()\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckForQuest (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.ExtraQuestMarker22154) then\n        \n        unitFrame.ExtraQuestMarker22154:Hide()\n        \n    end    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.Texture = [[Interface\\OPTIONSFRAME\\UI-OptionsFrame-NewFeatureIcon]]\n    envTable.Size = 12\n    envTable.Anchor = {\n        side = 6, --right side\n        x = 2,\n        y = 0\n    }\n    \n    if (not unitFrame.ExtraQuestMarker22154) then\n        unitFrame.ExtraQuestMarker22154 = unitFrame:CreateTexture (nil, \"overlay\")\n        local texture = unitFrame.ExtraQuestMarker22154\n        \n        texture:SetTexture (envTable.Texture)\n        texture:SetSize (envTable.Size, envTable.Size)\n        Plater.SetAnchor (texture, envTable.Anchor)\n    end\n    \n    function envTable.CheckForQuest (unitFrame)\n        if (unitFrame.namePlateIsQuestObjective) then\n            unitFrame.ExtraQuestMarker22154:Show()\n            \n        else\n            unitFrame.ExtraQuestMarker22154:Hide()\n            \n        end\n    end\nend\n\n\n\n\n\n\n",
},
["Time"] = 1721752282,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/platerquesticon/2",
["Icon"] = "Interface\\OptionsFrame\\UI-OptionsFrame-NewFeatureIcon",
["Enabled"] = true,
["Revision"] = 41,
["semver"] = "1.0.1",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show an extra icon if the unit is a part of a quest you're current doing. You may adjust where the exclamation mark is shown in the Constructor.",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Name"] = "Extra Quest Icon",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [54983] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1721752253,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = -4972,
["Enabled"] = true,
["Revision"] = 375,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Attacking Specific Unit [Plater]",
["LastHookEdited"] = "Initialization",
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.50196078431373,
0.50196078431373,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --percent of total cast bar size, default: 60% spell name\n    local spellNameSize = 0.60\n    \n    --update function\n    function envTable.UpdateCastBarName(unitId, castBar)\n        --do nothing if interrupted\n        if castBar.IsInterrupted then\n            return\n            \n        end\n        \n        --get the target's unitId \n        local targetUnitId = unitId .. \"target\"\n        \n        --does the unit exists?\n        if (UnitExists(targetUnitId)) then\n            \n            --get the target name\n            local targetName = UnitName(targetUnitId)\n            \n            --does the target name exists?\n            if (targetName) then\n                --paint the target name with the player's class color\n                targetName = strsub(targetName, 1, 8)\n                local targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                \n                --get the current spell name\n                local spellName = castBar.SpellName\n                --reset the text in the cast bar\n                castBar.Text:SetText(spellName)\n                \n                --castbar width\n                local castBarWidth = castBar:GetWidth()\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth * spellNameSize)\n                \n                --set the new text in the castbar spell name fontstring\n                local currentText = castBar.Text:GetText()\n                \n                if (currentText ~= nil and currentText ~= '') then \n                    currentText = strsub(currentText, 1, 8)\n                    castBar.Text:SetText(currentText .. \" - \" .. targetNameByColor)\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth)    \n                end                \n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1723797826,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/VOuCDrV8Y/1",
["Icon"] = 2126355,
["Enabled"] = true,
["Revision"] = 93,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show the cast target name with the spell name",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Name"] = "Cast Target on Spell Name",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- CONFIG TABLES\n    envTable.useRaidMarks = false\n    envTable.ColorByMark = {\n        \"gold\", --star\n        \"darkorange\", --circle\n        \"darkorchid\", --diamond\n        \"forestgreen\", --triangle\n        \"lightblue\", --moon\n        \"midnightblue\", --square\n        \"maroon\", --cross\n        \"ghostwhite\", --skull\n    }\n    \n    --[[\nSupports matching multiple auras to set a specific color.\nATTENTION: The first hit in the list will be used. So add your multi-matches to the top of the list!\n\nEach entry has the following format:\n        { \n            auras = {<auraID1>, <auraID2>, ..., <auraIDn>}, -- all aura-IDs which should be matched for the color. can be one to many auras\n            borderColor = \"violet\", -- the border color to be set (optional, can be removed)\n            nameplateColor = \"violet\", -- the nameplate color which should be set (optional, can be removed)\n        },\n\nColors can be either all /\"(plater colors\" as string or a color map {r,g,b,a} , e.g. {1,0.35,0}\n\nThe example below sets \"violet\" if moonfire and sunfire are active and \"orange\" for only sunfire or \"blue\" for only moonfire\n--]]\n    envTable.matchMultipleBuffs = {\n        { \n            auras = {164812, 164815}, --  moonfire + sunfire\n            borderColor = \"violet\",\n            nameplateColor = \"violet\",\n        },\n        { \n            auras = {188389}, -- Flame shock\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {164815}, -- sunfire\n            borderColor = \"orange\",\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {164812}, -- moonfire\n            borderColor = \"#00a3ff\",\n        },\n        { \n            auras = {396361}, -- AV Last Boss\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {278431}, -- Infest\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {200105}, -- Sacrifice Soul\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {201064}, -- Spinner boi\n            nameplateColor = \"magenta\",\n        },\n        { \n            auras = {200958}, -- Flame boi\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {412012}, -- Temposlice\n            nameplateColor = \"orange\",\n        },\n    }\n    \n    \n    -- DO NOT TOUCH\n    local DF = _G [\"DetailsFramework\"]\n    \n    -- Function to match multiple colors\n    function envTable.matchMultiple(unitFrame)\n        for _, v in ipairs(envTable.matchMultipleBuffs) do\n            local match = true\n            for _, aura in ipairs(v.auras) do\n                if not Plater.NameplateHasAura (unitFrame, aura) then\n                    match = false\n                    break\n                end\n            end\n            \n            if match then\n                if v.nameplateColor then\n                    Plater.SetNameplateColor (unitFrame, v.nameplateColor)\n                end\n                if v.borderColor then\n                    local nameString = unitFrame.healthBar.unitName\n                    Plater.SetBorderColor (unitFrame, v.borderColor)\n                    DF:SetFontColor (nameString, v.borderColor)\n                end\n                return\n            else\n                -- reset color\n                local npcColor = Plater.GetNpcColor (unitFrame)\n                if npcColor then\n                    Plater.SetNameplateColor (unitFrame, npcColor)\n                elseif unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\"  then\n                    Plater.FindAndSetNameplateColor (unitFrame)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n                \n                local nameString = unitFrame.healthBar.unitName\n                Plater.SetBorderColor (unitFrame)\n                DF:SetFontColor (nameString,{1,1,1})\n            end\n            \n        end\n    end\n    \n    -- Function to set Colors\n    function envTable. SetNameplateColors ()\n        local raidMark = nil\n        if envTable.useRaidMarks and unitFrame.unit then\n            raidMark = Plater.GetRaidMark (unitFrame)\n        end\n        if (raidMark) then\n            Plater.SetNameplateColor (unitFrame, envTable.ColorByMark [raidMark])\n        else \n            local colored = envTable.matchMultiple(unitFrame) \n        end \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.SetNameplateColors()\nend",
},
["Time"] = 1721752265,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/398Lv0cuq/5",
["Icon"] = 134563,
["Enabled"] = true,
["Revision"] = 287,
["semver"] = "1.0.4",
["Author"] = "Viashi-Antonidas",
["Desc"] = "Change nameplate health bar, boder and name text color base on aura or raid mark.",
["Prio"] = 20,
["version"] = 5,
["PlaterCore"] = 1,
["Name"] = "AuraNameplateColors-v3",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    local npctable = {\n        [61146] = true,\n        [103822] = true,\n        [15352] = true,\n        [95072] = true,\n        [61056] = true,\n    }\n    \n    function modTable.UpdateColor (unitFrame, unitId)\n        if not unitFrame or unitFrame.IsNpcWithoutHealthbar or unitFrame.IsFriendlyPlayerWithoutHealthbar then return end\n        if  InCombatLockdown() and unitFrame.InCombat then\n            if modTable.config.recolor then\n                local targetGUID = UnitGUID (unitFrame.targetUnitID)\n                if targetGUID then\n                    local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n                    if npctable[npcID] then\n                        Plater.SetNameplateColor (unitFrame, modTable.config.color)\n                        return\n                    end\n                end\n            end            \n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n                return\n            elseif (not unitFrame.namePlateThreatIsTanking) and Plater.PlayerIsTank and not UnitIsUnit(unitFrame.targetUnitID, \"player\") then\n                local tanks = Plater.GetTanks()\n                local unitTargetName = UnitName(unitFrame.targetUnitID)\n                if tanks [unitTargetName] then\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.anothertank)\n                elseif UnitExists(unitTargetName) then\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n                return\n            end\n        end\n    end\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame, unitId)\nend",
},
["Time"] = 1721752342,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["party"] = true,
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/N-Hb07L7A/9",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Enabled"] = true,
["Revision"] = 1034,
["semver"] = "1.0.8",
["Author"] = "Viash-Thrall",
["Desc"] = "Overrides NPC Color with the Threat Color if you pull threat as dps or lose threat as tank",
["Prio"] = 1,
["version"] = 9,
["PlaterCore"] = 1,
["Name"] = "NPC Color Override",
["LastHookEdited"] = "Initialization",
["Options"] = {
{
["Type"] = 4,
["Key"] = "recolor",
["Value"] = true,
["Name"] = "Recolor if enemy is attacking Statue/Treant/Earth Elemental",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
["lowScale"] = 0.0079150376841426,
["midScale"] = 0.69831484556198,
},
["HooksTemp"] = {
},
["UID"] = "0x6366dbeb1fda6285",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
["Initialization"] = "function (modTable)\n    \n    -- 1 = mid prio, 2 = low prio\n    \n    modTable[\"npcIDs\"] = {\n        \n        -- Dawn of the Infinite\n        [\"202789\"] = 1, -- Morchie Intermission\n        [\"204536\"] = 1, -- Blight Chunk\n        [\"40923\"] = 1, -- Unstable Corruption\n        [\"211306\"] = 1, -- Vines\n        \n    }\n    \nend",
},
["Time"] = 1721752355,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["party"] = true,
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/Ru_9FLVjI/24",
["Icon"] = 1041231,
["Enabled"] = true,
["Revision"] = 2370,
["semver"] = "1.0.23",
["Author"] = "Causese-Valdrakken",
["Desc"] = "Allows you to scale a creatures nameplate based on it's importance in the dungeon.",
["Prio"] = 99,
["version"] = 24,
["PlaterCore"] = 1,
["LastHookEdited"] = "Initialization",
["Options"] = {
{
["Type"] = 4,
["Key"] = "scale",
["Value"] = true,
["Name"] = "Enable Scaling",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Allows nameplates to scale based on priority.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for mid priority.",
["Min"] = 0,
["Name"] = "Mid prio",
["Value"] = 0.75,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "midScale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for low priority.",
["Min"] = 0,
["Name"] = "Low prio",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "lowScale",
},
{
["Type"] = 4,
["Key"] = "color",
["Value"] = false,
["Name"] = "Enable Coloring",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Allows nameplates to be colored based on priority.",
},
{
["Type"] = 1,
["Key"] = "midColor",
["Value"] = {
1,
0.92941182851791,
0,
1,
},
["Name"] = "Mid prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Set color for mid priority.",
},
{
["Type"] = 1,
["Key"] = "lowColor",
["Value"] = {
0.49803924560547,
0.49803924560547,
0.49803924560547,
1,
},
["Name"] = "Low prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Set color for low priority.",
},
},
["Name"] = "Priority based scaling",
},
{
["OptionsValues"] = {
["firstNameList"] = {
},
["fullNameList"] = {
},
},
["HooksTemp"] = {
},
["UID"] = "0x639f1d45fbcede4",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renameUnit(unitId, unitFrame, envTable)\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renameUnit(unitId, unitFrame)\nend\n\n\n",
["Initialization"] = "function (modTable)\n    local config = modTable.config\n    \n    local function debug(str)\n        -- Utility function for logging only when debugging\n        if config.debugMode then\n            print(\"DEBUG: \"..str)\n        end\n    end\n    \n    function modTable.setName(name, unitFrame)\n        -- Set the name text on the unitframe to the given name\n        unitFrame.namePlateUnitName = name\n        unitFrame.PlateFrame.namePlateUnitName = name\n        unitFrame.healthBar.unitName:SetText(name)\n    end\n    \n    \n    function modTable.renameUnit(unitId, unitFrame)\n        local unitName = unitFrame.namePlateUnitName\n        local npcId = unitFrame.namePlateNpcId\n        local npcIdStr = tostring(npcId) -- The options list is always strings, so we need a string for lookup\n        \n        if (unitName) then\n            local  nameParts = strsplittable(' ', unitName)\n            \n            if config.debugMode then\n                if unitFrame.namePlateNpcId then\n                    debug(\"npcId: \"..unitFrame.namePlateNpcId)\n                end\n            end\n            \n            local name\n            if config.firstNameList[npcIdStr] then\n                debug(\"npc is in first name list\")\n                name = nameParts[1]\n            elseif config.fullNameList[npcIdStr] then\n                debug(\"npc is in full name list\")\n                name = unitName\n            else\n                debug(\"npc is last name only\")\n                debug(\"parts length is \"..#nameParts)\n                name = nameParts[#nameParts]\n            end\n            \n            modTable.setName(name, unitFrame)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1721752282,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/K1e4LY5nb/4",
["Icon"] = 134331,
["Enabled"] = true,
["Revision"] = 125,
["semver"] = "1.0.3",
["Author"] = "Phonszmonk-Sylvanas",
["Desc"] = "Show nameplate last name, first name or full name depending on id",
["Prio"] = 99,
["version"] = 4,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 7,
["Key"] = "firstNameList",
["Value"] = {
},
["Name"] = "Show First Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "List of npcIDs to show as first name only. The value field is not used",
},
{
["Type"] = 7,
["Key"] = "fullNameList",
["Value"] = {
},
["Name"] = "Show Full Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "List of npcIDs to show the full name fo. The value field is not used",
},
{
["Type"] = 4,
["Key"] = "debugMode",
["Value"] = false,
["Name"] = "Debug Mode",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable Debug Mode",
},
},
["Name"] = "Last Name Only-BetterPerf",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = aura1.filter == \"HARMFUL\" and 1 or 0\n        local p2 = aura2.filter == \"HARMFUL\" and 1 or 0\n        \n        return p1 > p2\n        --[[\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n    end]]\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1721752259,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = true,
["Revision"] = 373,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura Reorder",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x6664e4861da49e1",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    ---SETTINGS YOU MAY TOUCH\n    --get this name from healthbar texture selection in General settings\n    --examples: Blizzard Raid Bar, BantoBar, PlaterFocus\n    local textureName = \"Naowh Mouseover\" \n    local alpha = 1    \n    --comment out the ones you dont use\n    --local color = \"green\"\n    --local color = \"#FF00FF\"\n    local color = {1, 1, 1, 1}\n    -----\n    \n    ---DONT TOUCH\n    local LibSharedMedia = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\n    local DF = _G [\"DetailsFramework\"]\n    modTable.texture = LibSharedMedia:Fetch (\"statusbar\", textureName)\n    modTable.alpha = alpha\n    local r, g, b, a = DF:ParseColors (color)\n    modTable.color = {r,g,b,a}    \n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local tex = unitFrame.HighlightFrame.HighlightTexture\n    tex:SetTexture (modTable.texture)\n    tex:SetBlendMode (\"ADD\")\n    tex:SetAlpha (modTable.alpha)\n    tex:SetVertexColor(unpack(modTable.color))\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1721752349,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 132089,
["Enabled"] = true,
["Revision"] = 153,
["semver"] = "",
["Author"] = "Nnoggiedh-Twisting Nether",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Options"] = {
},
["Name"] = "NaowhUI - Mouseover Texture / Color",
},
{
["OptionsValues"] = {
["overlayTexture"] = "Interface\\RaidFrame\\Shield-Overlay",
["shieldColor"] = {
0.9764706492424,
1,
0.74117648601532,
1,
},
["absorbColor"] = {
1,
0.48627454042435,
0.48235297203064,
1,
},
["texture"] = "Interface\\Addons\\NaowhUI\\Core\\Media\\Textures\\Naowh_left",
},
["HooksTemp"] = {
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    function envTable.create(unitFrame)\n        local bar = unitFrame.healthBar\n        local shields = bar.shieldAbsorbIndicator\n        local absorbs = bar.healAbsorbIndicator\n        \n        shields:SetTexture(modTable.config.texture)\n        shields:SetVertexColor(DetailsFramework:ParseColors(modTable.config.shieldColor))\n        bar.Settings.ShieldIndicatorTexture = modTable.config.texture\n        envTable.createOverlay(bar, shields)\n        \n        absorbs:SetTexture(modTable.config.texture)\n        absorbs:SetVertexColor(DetailsFramework:ParseColors(modTable.config.absorbColor))\n        envTable.createOverlay(bar, absorbs)\n        \n    end\n    \n    function envTable.createOverlay(bar, texture)\n        if texture.overlay then return end\n        \n        local overlay = bar:CreateTexture(nil, \"ARTWORK\")\n        \n        local r, g, b, a = texture:GetVertexColor()\n        overlay:SetVertexColor(r, g, b, a)\n        overlay:SetDrawLayer(\"ARTWORK\", 6)\n        overlay:SetTexture(modTable.config.overlayTexture, true, true)\n        overlay:SetAllPoints(texture)\n        overlay:SetHorizTile(true)\n        overlay:SetVertTile(true)\n        \n        texture.overlay = overlay \n        texture.overlay:Hide()\n    end\n    \n    function envTable.update(unitFrame)\n        local shield = unitFrame.healthBar.shieldAbsorbIndicator\n        \n        if shield:IsVisible() then\n            shield.overlay:Show()\n        else\n            shield.overlay:Hide()\n        end\n        \n    end\n    \n    envTable.create(unitFrame)\n    envTable.update(unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.update(unitFrame)\nend\n\n\n",
},
["Time"] = 1721752366,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/dtAR50M7a/3",
["Icon"] = "INTERFACE\\ICONS\\Ability_Priest_AngelicBulwark",
["Enabled"] = true,
["Revision"] = 648,
["semver"] = "1.0.2",
["Author"] = "Lucyon-Bloodfeather",
["Desc"] = "Some extra options for shields and absorbs",
["Prio"] = 6,
["version"] = 3,
["PlaterCore"] = 1,
["Name"] = "Shield & Absorb Options",
["LastHookEdited"] = "Constructor",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Options for shield & absorb indicators. Reload to take effect!",
["Name"] = "Title",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option7",
["Value"] = "Make sure Advanced > Show Health Prediction/Absorption and Show Shield Prediction is enabled for these to work.",
["Name"] = "Description",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option7",
["Value"] = "Shield Options",
["Name"] = "Shield Options Label",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "shieldColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Shield Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color for shields that absorb damage",
},
{
["Type"] = 6,
["Key"] = "option12",
["Value"] = 0,
["Name"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option9",
["Value"] = "Absorb Options",
["Name"] = "Absorb Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "absorbColor",
["Value"] = {
0.78039215686275,
0.25098039215686,
0.25098039215686,
1,
},
["Name"] = "Absorb Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color for healing absorbtions (shields that absorb healing)",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 3,
["Key"] = "texture",
["Value"] = "Interface\\RaidFrame\\Shield-Fill",
["Name"] = "Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The texture to use for shields and healing absorbs",
},
{
["Type"] = 3,
["Key"] = "overlayTexture",
["Value"] = "Interface\\RaidFrame\\Shield-Overlay",
["Name"] = "Overlay Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The overlay texture put on top of the shield/healabsorb texture",
},
},
},
},
["auras_per_row_auto"] = false,
["tap_denied_color"] = {
0.37254901960784,
0.37254901960784,
0.37254901960784,
},
["auras_per_row_amount2"] = 1,
["aura_width"] = 24,
["ghost_auras"] = {
["auras"] = {
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
["WARLOCK"] = {
{
[980] = true,
[172] = true,
},
},
},
},
["buff_frame_anchor_and_size_migrated"] = true,
["pet_width_scale"] = 0.99999994039536,
["target_highlight_color"] = {
1,
1,
},
["health_statusbar_bgcolor"] = {
0.10588236153126,
0.10588236153126,
0.10588236153126,
1,
},
["cast_statusbar_fadeout_time"] = 0.39999997615814,
["extra_icon_stack_outline"] = "MONOCHROME",
["resources"] = {
["y_offset_target"] = 20,
["y_offset_target_withauras"] = 32,
},
["click_space"] = {
128,
20,
},
["aura2_grow_direction"] = 3,
["ui_parent_cast_level"] = 1,
["ui_parent_buff2_level"] = -10,
["aura_cooldown_reverse"] = false,
["range_check_in_range_or_target_alpha_friendlies"] = 1,
["health_animation_time_dilatation"] = 1.0599999427795,
["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark6",
["castbar_framelevel"] = 0,
["target_shady_enabled"] = false,
["cast_statusbar_fadein_time"] = 0.019999999552965,
["aura_stack_anchor"] = {
["y"] = -4.100000381469727,
["x"] = 6.19999885559082,
},
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1721754091,
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["NpcNames"] = {
},
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.40392156862745,
0.003921568627451,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.32156862745098,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["Revision"] = 636,
["semver"] = "",
["Desc"] = "Add the buff name in the trigger box.",
["version"] = -1,
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["Name"] = "Aura - Buff Alert [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1721754093,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["Revision"] = 372,
["semver"] = "",
["NpcNames"] = {
},
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.40392156862745,
0.003921568627451,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.32156862745098,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Author"] = "Tercioo-Sylvanas",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["Desc"] = "Add the debuff name in the trigger box.",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Aura - Debuff Alert [Plater]",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Prio"] = 99,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["Enabled"] = true,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1721754986,
["Icon"] = 1029718,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["Revision"] = 274,
["semver"] = "",
["Desc"] = "Show above the nameplate who is the player fixated",
["version"] = -1,
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Fixate [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Enabled"] = true,
["url"] = "",
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1720175307,
["url"] = "",
["Icon"] = 841383,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["Revision"] = 268,
["semver"] = "",
["NpcNames"] = {
},
["Options"] = {
},
["Author"] = "Tecno-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Fixate On You [Plater]",
["PlaterCore"] = 1,
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["Prio"] = 99,
["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["Enabled"] = true,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TextSize = 12\n    envTable.TextFont  = \"Gotham Ultra\"\n    envTable.Xoffset = 0\n    envTable.Yoffset = -12\n    \n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"center\", unitFrame.healthBar, \"center\", envTable.Xoffset, envTable.Yoffset);    \n    \n    envTable.FixateTarget.textsize = envTable.TextSize\n    envTable.FixateTarget.textfont = envTable.TextFont\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    \n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        \n        \n    else \n        envTable.FixateTarget.text = \"\"\n        \n    end    \nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1720175287,
["Icon"] = 1029718,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TextSize = 12\n    envTable.TextFont  = \"Gotham Ultra\"\n    envTable.Xoffset = 0\n    envTable.Yoffset = -12\n    \n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"center\", unitFrame.healthBar, \"center\", envTable.Xoffset, envTable.Yoffset);    \n    \n    envTable.FixateTarget.textsize = envTable.TextSize\n    envTable.FixateTarget.textfont = envTable.TextFont\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
"Earthrager",
"Spiteful Shade",
"Carrion Worm",
},
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n",
["Revision"] = 303,
["semver"] = "1.0.2",
["Desc"] = "Show above the nameplate who is the player fixated",
["version"] = 3,
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    \n    \nend\n\n\n",
["Name"] = "Fixate No cast",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        \n        \n    else \n        envTable.FixateTarget.text = \"\"\n        \n    end    \nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
272584,
244653,
260954,
257739,
257314,
266107,
257582,
262377,
257407,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["url"] = "https://wago.io/cQbyWpQeE/3",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1721754931,
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["NpcNames"] = {
},
["Options"] = {
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0,
0.55686274509804,
0.035294117647059,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Revision"] = 36,
["semver"] = "",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["version"] = -1,
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Name"] = "Fixate by Unit Buff [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Enabled"] = true,
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1719452142,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 156,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["NpcNames"] = {
"214840",
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Add - Health Markers [P]",
["SpellIds"] = {
},
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "indicatorAlpha",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Name"] = "Fill Alpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    envTable.Glow = scriptTable.config.glow\n    envTable.UpdateColor = function(self)\n        self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castbarColor))\n    end    \n    \n    envTable.options = {\n        color = \"white\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 8, -- number of lines. Defaul value is 8;\n        frequency = 0.4, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 12, -- length of lines. Default value depends on region size and number of lines;\n        th = 1, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\nend\n--Made for NaowhUI\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    if envTable.Glow then\n        Plater.StopPixelGlow(self, envTable.options.key)\n        self.glowStarted = false\n    end\nend\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["castBarHeight"] = 2,
["castbarColor"] = {
0.98039221763611,
1,
0.27450981736183,
1,
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    if envTable.Glow then        \n        Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n    end\n    if envTable.castBarHeightAdd ~= 0 then\n        local height = self:GetHeight()\n        \n        self:SetHeight (height + envTable.CastBarHeightAdd)\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    if envTable.Glow then       \n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n        end\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1722994604,
["Icon"] = 608940,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    envTable.Glow = scriptTable.config.glow\n    envTable.UpdateColor = function(self)\n        self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castbarColor))\n    end    \n    \n    envTable.options = {\n        color = \"white\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 8, -- number of lines. Defaul value is 8;\n        frequency = 0.4, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 12, -- length of lines. Default value depends on region size and number of lines;\n        th = 1, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\nend\n--Made for NaowhUI\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["Options"] = {
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0,
1,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "",
["Min"] = 0,
["Name"] = "Cast Bar Height Size Change",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 4,
["Key"] = "glow",
["Value"] = true,
["Name"] = "Pixel Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    if envTable.Glow then\n        Plater.StopPixelGlow(self, envTable.options.key)\n        self.glowStarted = false\n    end\nend\n\n\n\n\n\n\n\n\n",
["Revision"] = 1449,
["semver"] = "1.0.0",
["Desc"] = "",
["version"] = 1,
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    if envTable.Glow then        \n        Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n    end\n    if envTable.castBarHeightAdd ~= 0 then\n        local height = self:GetHeight()\n        \n        self:SetHeight (height + envTable.CastBarHeightAdd)\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "NaowhUI - Important Kick",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    if envTable.Glow then       \n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n        end\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
436841,
373395,
388863,
367503,
372711,
384638,
395427,
372538,
322938,
324776,
324914,
340544,
434793,
434802,
436322,
448239,
433841,
431309,
450756,
451097,
431333,
426283,
449455,
429545,
445207,
429109,
322938,
324914,
324776,
326046,
340544,
334748,
324293,
327130,
338353,
256957,
275826,
454440,
272571,
451871,
76711,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Enabled"] = true,
["url"] = "https://wago.io/XShFX2Wcy/1",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    envTable.Glow = scriptTable.config.glow\n    envTable.UpdateColor = function(self)\n        self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castbarColor))\n    end    \n    \n    envTable.options = {\n        color = \"white\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 8, -- number of lines. Defaul value is 8;\n        frequency = 0.4, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 12, -- length of lines. Default value depends on region size and number of lines;\n        th = 1, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\nend\n--Made for NaowhUI\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    if envTable.Glow then\n        Plater.StopPixelGlow(self, envTable.options.key)\n        self.glowStarted = false\n    end\nend\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["castBarHeight"] = 1,
["castbarColor"] = {
1,
0.34117648005486,
0.32549020648003,
1,
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    if envTable.Glow then        \n        Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n    end\n    if envTable.castBarHeightAdd ~= 0 then\n        local height = self:GetHeight()\n        \n        self:SetHeight (height + envTable.CastBarHeightAdd)\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    if envTable.Glow then       \n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n        end\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1722994449,
["Icon"] = 608940,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    envTable.Glow = scriptTable.config.glow\n    envTable.UpdateColor = function(self)\n        self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castbarColor))\n    end    \n    \n    envTable.options = {\n        color = \"white\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 8, -- number of lines. Defaul value is 8;\n        frequency = 0.4, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 12, -- length of lines. Default value depends on region size and number of lines;\n        th = 1, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\nend\n--Made for NaowhUI\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["Options"] = {
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0,
1,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "",
["Min"] = 0,
["Name"] = "Cast Bar Height Size Change",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 4,
["Key"] = "glow",
["Value"] = true,
["Name"] = "Pixel Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    if envTable.Glow then\n        Plater.StopPixelGlow(self, envTable.options.key)\n        self.glowStarted = false\n    end\nend\n\n\n\n\n\n\n\n\n",
["Revision"] = 1434,
["semver"] = "1.0.0",
["Desc"] = "",
["version"] = 1,
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    if envTable.Glow then        \n        Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n    end\n    if envTable.castBarHeightAdd ~= 0 then\n        local height = self:GetHeight()\n        \n        self:SetHeight (height + envTable.CastBarHeightAdd)\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "NaowhUI - Important CC",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    if envTable.Glow then       \n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n        end\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
375950,
383693,
388911,
367484,
383062,
373024,
383385,
372262,
432967,
432031,
432520,
429427,
320822,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Enabled"] = true,
["url"] = "https://wago.io/XShFX2Wcy/1",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    envTable.Glow = scriptTable.config.glow\n    envTable.UpdateColor = function(self)\n        self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castbarColor))\n    end    \n    \n    envTable.options = {\n        color = \"white\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 8, -- number of lines. Defaul value is 8;\n        frequency = 0.4, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 12, -- length of lines. Default value depends on region size and number of lines;\n        th = 1, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\nend\n--Made for NaowhUI\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    if envTable.Glow then\n        Plater.StopPixelGlow(self, envTable.options.key)\n        self.glowStarted = false\n    end\nend\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["castBarHeight"] = 2,
["castbarColor"] = {
1,
0.5686274766922,
0.99607849121094,
1,
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    if envTable.Glow then        \n        Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n    end\n    if envTable.castBarHeightAdd ~= 0 then\n        local height = self:GetHeight()\n        \n        self:SetHeight (height + envTable.CastBarHeightAdd)\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    if envTable.Glow then       \n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n        end\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1720179913,
["Icon"] = 608940,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    envTable.Glow = scriptTable.config.glow\n    envTable.UpdateColor = function(self)\n        self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castbarColor))\n    end    \n    \n    envTable.options = {\n        color = \"white\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 8, -- number of lines. Defaul value is 8;\n        frequency = 0.4, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 12, -- length of lines. Default value depends on region size and number of lines;\n        th = 1, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\nend\n--Made for NaowhUI\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["Options"] = {
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0,
1,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "",
["Min"] = 0,
["Name"] = "Cast Bar Height Size Change",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 4,
["Key"] = "glow",
["Value"] = true,
["Name"] = "Pixel Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    if envTable.Glow then\n        Plater.StopPixelGlow(self, envTable.options.key)\n        self.glowStarted = false\n    end\nend\n\n\n\n\n\n\n\n\n",
["Revision"] = 1428,
["semver"] = "1.0.0",
["Desc"] = "",
["version"] = 1,
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    if envTable.Glow then        \n        Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n    end\n    if envTable.castBarHeightAdd ~= 0 then\n        local height = self:GetHeight()\n        \n        self:SetHeight (height + envTable.CastBarHeightAdd)\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "NaowhUI - Important Special",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    if envTable.Glow then       \n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self, nil, envTable.options, envTable.options.key)\n        end\n    end\n    envTable.UpdateColor(self)\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
373692,
387127,
396991,
388008,
388804,
390912,
378208,
375065,
382883,
369754,
372719,
382578,
376208,
374365,
381663,
322486,
324909,
328756,
323149,
323059,
323177,
324987,
340189,
340279,
340304,
336499,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Enabled"] = true,
["url"] = "https://wago.io/XShFX2Wcy/1",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 139,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
["SpellIds"] = {
447141,
432967,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["version"] = -1,
["Name"] = "Cast - Heroic Leap [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Enabled"] = true,
["Revision"] = 158,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
["NpcNames"] = {
},
["SpellIds"] = {
431364,
423327,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Ongoing Cast [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Name"] = "Dots X Offset",
["Value"] = 0,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots Y Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Fraction"] = true,
["Value"] = 0.4,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Name"] = "Blink Min Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "minAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Max Alpha",
["Value"] = 0.5,
["Key"] = "maxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1722866303,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Enabled"] = true,
["Revision"] = 1254,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heal Cut [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
},
},
["pet_height_scale"] = 0.99999994039536,
["aura_x_offset"] = 0.5699920654296875,
["range_check_alpha_friendlies"] = 1,
["target_shady_combat_only"] = false,
["ui_parent_scale_tune"] = 1.539999961853027,
["aura_stack_color"] = {
nil,
0.94509803921569,
0.93725490196078,
},
["ui_parent_buff_level"] = -6,
["health_statusbar_bgtexture"] = "Naowh Left",
["indicator_raidmark_anchor"] = {
["y"] = 1.079994201660156,
["x"] = 0,
["side"] = 9,
},
["tank"] = {
["colors"] = {
["anothertank"] = {
0.73333333333333,
0.19607843137255,
},
["aggro"] = {
0.38039215686275,
0.87450980392157,
0.23137254901961,
},
["nocombat"] = {
0.99607843137255,
0.29803921568627,
0.30980392156863,
},
["noaggro"] = {
0.99607843137255,
0.29803921568627,
0.30980392156863,
},
["pulling"] = {
nil,
0.93333333333333,
0.43137254901961,
},
},
},
["aura_tracker"] = {
["buff_banned"] = {
["333553"] = true,
["165213"] = false,
["409472"] = true,
["374918"] = false,
["61574"] = true,
["38166"] = false,
["265368"] = false,
["372749"] = false,
["207771"] = false,
["61573"] = true,
["206150"] = true,
["409470"] = true,
["374881"] = false,
["374917"] = false,
["374916"] = false,
},
["debuff_banned"] = {
["247456"] = false,
["179057"] = false,
["264263"] = true,
["412695"] = false,
["204490"] = false,
["394933"] = false,
["417404"] = false,
["339137"] = true,
["207685"] = false,
["409470"] = true,
["409472"] = true,
["372245"] = false,
["1490"] = false,
["207771"] = false,
},
["debuff_tracked"] = {
["336449"] = true,
["328175"] = true,
["321020"] = true,
},
["buff_tracked"] = {
["227931"] = true,
["327808"] = true,
["328175"] = true,
["262092"] = true,
["297133"] = true,
["333737"] = true,
["209859"] = true,
["331743"] = true,
["273432"] = true,
["321764"] = true,
["163689"] = true,
["233210"] = true,
["226512"] = true,
},
},
["cast_statusbar_color"] = {
nil,
0.93333333333333,
0.43137254901961,
0.96000000089407,
},
["update_throttle"] = 0.12000000476837,
["indicator_rare"] = false,
["tocversion"] = 110002,
["castbar_icon_show"] = false,
["indicator_extra_raidmark"] = false,
["extra_icon_timer_font"] = "GothamNarrowUltra",
["not_affecting_combat_alpha"] = 1,
["target_highlight_alpha"] = 0.7999999523162842,
["news_frame"] = {
["PlaterNewsFrame"] = {
["scale"] = 1,
},
},
["extra_icon_show_offensive_border"] = {
nil,
0,
0,
},
["auto_toggle_stacking_enabled"] = true,
["aura_breakline_space"] = 0,
["target_shady_alpha"] = 0.59999996423721,
["aura_height_personal"] = 19,
["target_highlight_height"] = 16,
["cast_statusbar_spark_alpha"] = 0.25,
["first_run2"] = true,
["version"] = 3,
["aura_width_personal"] = 23,
["color_override_colors"] = {
[3] = {
0.99607843137255,
0.29803921568627,
0.30980392156863,
},
[4] = {
1,
0.93333333333333,
0.43137254901961,
},
[5] = {
0.38039215686275,
0.87450980392157,
0.23137254901961,
},
},
["cast_statusbar_spark_offset"] = -15,
["ui_parent_target_strata"] = "BACKGROUND",
["castbar_icon_attach_to_side"] = "right",
["click_space_friendly"] = {
1,
1,
},
["patch_version"] = 37,
["range_check_in_range_or_target_alpha"] = 1,
["aura_timer_text_size"] = 9,
["auto_toggle_stacking"] = {
["cities"] = true,
},
["number_region_first_run"] = true,
["health_cutoff"] = false,
["castbar_target_anchor"] = {
["y"] = 8.3499984741211,
["x"] = 24.729995727539,
["side"] = 6,
},
["script_auto_imported"] = {
["Aura - Is Cast Bar [P]"] = 1,
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Cast - Shining Green [P]"] = 3,
["Cast - Ultra Important"] = 14,
["Unit - Show Energy"] = 11,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Aura - Invalidate Unit"] = 1,
["Add - Important [P]"] = 4,
["Unit Power"] = 1,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Cast - Glowing [P]"] = 10,
["Add - Tag Number [P]"] = 2,
["Unit - Health Markers"] = 12,
["Add - Explode on Die [P]"] = 1,
["Cast - Special Ability [P]"] = 3,
["Cast - Heroic Leap [P]"] = 3,
["Cast - Important Target [P]"] = 2,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Cast - AoE With Range [P]"] = 2,
["Cast - On Going Cast [P]"] = 2,
["Unit - Important"] = 11,
["Relics 9.2 M Dungeons"] = 2,
["Cast - Shield Interrupt"] = 2,
["Cast - AoE Hit All [P]"] = 3,
["Cast - Quick Flash"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Color Change"] = 1,
["Spiteful Affix"] = 3,
["Aura is Shield [P]"] = 5,
["Add - Warning [P]"] = 5,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Cast - Voidzone [P]"] = 2,
["Cast - Heal Cut [P]"] = 3,
["Cast - Important by Color [P]"] = 2,
["Auto Set Skull"] = 11,
["Cast - Debuff [P]"] = 2,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Very Important"] = 15,
["Aura Border Color"] = 1,
["Countdown"] = 11,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Fixate"] = 11,
["Cast - Stop Casting"] = 4,
["Cast - Tank Interrupt"] = 12,
["Explosion Affix M+"] = 14,
["Fixate On You"] = 11,
},
["castbar_target_font"] = "Naowh",
["target_highlight"] = false,
["cast_statusbar_texture"] = "Melli",
["indicator_raidmark_scale"] = 0.8899999856948853,
["indicator_faction"] = false,
["cast_statusbar_bgcolor"] = {
0.098039224743843,
0.098039224743843,
0.098039224743843,
0.700723528862,
},
["extra_icon_height"] = 26,
["dps"] = {
["colors"] = {
["aggro"] = {
0.99607843137255,
0.29803921568627,
0.30980392156863,
},
["notontank"] = {
0.99607843137255,
0.29803921568627,
0.30980392156863,
},
["noaggro"] = {
0.73333333333333,
0.19607843137255,
},
["pulling"] = {
nil,
0.93333333333333,
0.43137254901961,
},
},
},
["first_run3"] = true,
["healthbar_framelevel"] = 0,
["aura_show_enrage"] = true,
["color_lerp_speed"] = 7,
["extra_icon_show_purge_border"] = {
nil,
0,
0,
},
["cast_statusbar_spark_width"] = 30,
},
["Claudio"] = {
["aura_breakline_space"] = 15,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 632,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Buff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = false,
["Revision"] = 828,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Very Important [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = false,
["Revision"] = 533,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["NpcNames"] = {
},
["SpellIds"] = {
273577,
},
["PlaterCore"] = 1,
["Name"] = "Explosion Affix M+ [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 368,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Desc"] = "Add the debuff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Debuff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = false,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Big Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["version"] = -1,
["Name"] = "Cast - Small Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Time"] = 1615905300,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Revision"] = 110,
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Name"] = "Aura - Invalidate Unit [Plater]",
["PlaterCore"] = 1,
["Prio"] = 99,
["SpellIds"] = {
261265,
261266,
271590,
},
["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
["Time"] = 1596198406,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
["Icon"] = 135024,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
["Revision"] = 62,
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Enabled"] = true,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
["Name"] = "Color Change [Plater]",
["PlaterCore"] = 1,
["Prio"] = 99,
["SpellIds"] = {
},
["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
["NpcNames"] = {
"141851",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1626382829,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Revision"] = 375,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Name"] = "Timeleft to Blink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeleftToBlink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkSpeed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkMaxAlpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.28627450980392,
0.003921568627451,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 8,
["Name"] = "Time Left Warning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftWarning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Name"] = "Time Left Critical",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftCritical",
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.87058823529412,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.074509803921569,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["version"] = -1,
["PlaterCore"] = 1,
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["SpellIds"] = {
},
["Name"] = "Aura - Blink by Time Left [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
["Time"] = 1543680853,
["Icon"] = 133006,
["Enabled"] = false,
["Revision"] = 45,
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Border Color [Plater]",
["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
["Time"] = 1578054190,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
["Icon"] = 136048,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Revision"] = 133,
["Options"] = {
},
["Author"] = "Celian-Sylvanas",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
["Name"] = "UnitPower [Plater]",
["PlaterCore"] = 1,
["Enabled"] = true,
["SpellIds"] = {
},
["Desc"] = "Show the energy amount above the nameplate",
["NpcNames"] = {
"Guardian of Yogg-Saron",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the reference of the arrow texture\n    local movingArrowTexture = unitFrame._movingArrowTexture\n    \n    --if it doesn't exists yet, create now\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    local mAT = movingArrowTexture\n    \n    if (not mAT.movingAnimation) then\n        local onPlay = function()\n            mAT:Show() \n        end\n        \n        local onStop =  function()\n            mAT:Hide() \n        end\n        \n        mAT.movingAnimation = Plater:CreateAnimationHub( mAT, onPlay, onStop )\n        mAT.movingAnimation:SetLooping( \"REPEAT\" )\n    end\n    \n    if (not mAT.arrowAnimation) then\n        local arrowAnimation = Plater:CreateAnimation (mAT.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n        mAT.arrowAnimation = arrowAnimation\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    mAT.movingAnimation:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    local maxAlpha = scriptTable.config.arrowAlpha\n    \n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = mAT.movingAnimation:GetProgress()\n    \n    if (percent < 0.20) then\n        local value = DetailsFramework.Math.MapRangeClamped(0, 0.20, 0, maxAlpha, percent)\n        mAT:SetAlpha(value)\n        \n    elseif (percent > 0.8) then\n        local value = DetailsFramework.Math.MapRangeClamped(0.8, 1, maxAlpha, 0, percent)\n        mAT:SetAlpha(value)\n    end\n    \n    self.ThrottleUpdate = 0\n    \n    --mAT:SetAlpha(1)\nend",
["Time"] = 1719788095,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 754,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    \n    mAT:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    mAT:SetSize(16, self:GetHeight())\n    mAT:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    mAT:SetParent(self.FrameOverlay)\n    mAT:SetDrawLayer(\"overlay\",  7)\n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    mAT:SetDesaturated(scriptTable.config.desaturateArrow)        \n    \n    mAT:ClearAllPoints()\n    mAT:SetPoint(\"left\", self, \"left\", -16, 0)\n    \n    local arrowAnimation = mAT.arrowAnimation\n    arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    arrowAnimation:SetOffset(self:GetWidth(), 0)\n    \n    mAT.movingAnimation:Play()\n    \n    if (scriptTable.config.bChangeSpellName) then\n        self.Text:SetText(scriptTable.config.spellNameText)\n    end\n    \n    --DetailsFramework:DebugVisibility(mAT)\n\nend\n\n\n\n\n",
["SpellIds"] = {
431494,
426860,
448213,
434407,
439789,
434824,
453161,
435012,
439506,
443500,
434779,
451543,
439621,
441384,
441381,
447395,
456711,
448105,
323137,
321968,
331718,
331721,
325223,
340160,
321834,
320596,
324323,
333488,
323496,
333477,
256627,
257292,
454438,
269029,
257862,
425027,
449130,
428202,
448640,
427869,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "animSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Option 8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bChangeSpellName",
["Value"] = true,
["Name"] = "Change Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the spell name to the text entered below",
},
{
["Type"] = 3,
["Key"] = "spellNameText",
["Value"] = "Frontal",
["Name"] = "New Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The customized spell name",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["Icon"] = 1029718,
["Enabled"] = true,
["Revision"] = 269,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Options"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Desc"] = "Show above the nameplate who is the player fixated",
["SpellIds"] = {
},
["Name"] = "Fixate [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604087921,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 266,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Options"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["Name"] = "Fixate On You [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TextSize = 12\n    envTable.TextFont  = \"Gotham Ultra\"\n    envTable.Xoffset = 0\n    envTable.Yoffset = -12\n    \n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"center\", unitFrame.healthBar, \"center\", envTable.Xoffset, envTable.Yoffset);    \n    \n    envTable.FixateTarget.textsize = envTable.TextSize\n    envTable.FixateTarget.textfont = envTable.TextFont\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    \n    \nend\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1605189097,
["Enabled"] = true,
["url"] = "https://wago.io/cQbyWpQeE/3",
["NpcNames"] = {
"Earthrager",
"Spiteful Shade",
"Carrion Worm",
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    \n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n",
["Revision"] = 302,
["semver"] = "1.0.2",
["version"] = 3,
["Prio"] = 99,
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["Name"] = "Fixate No cast",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        \n        \n    else \n        envTable.FixateTarget.text = \"\"\n        \n    end    \nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
272584,
244653,
260954,
257739,
257314,
266107,
257582,
262377,
257407,
},
["PlaterCore"] = 1,
["Options"] = {
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TextSize = 12\n    envTable.TextFont  = \"Gotham Ultra\"\n    envTable.Xoffset = 0\n    envTable.Yoffset = -12\n    \n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"center\", unitFrame.healthBar, \"center\", envTable.Xoffset, envTable.Yoffset);    \n    \n    envTable.FixateTarget.textsize = envTable.TextSize\n    envTable.FixateTarget.textfont = envTable.TextFont\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n",
["Icon"] = 1029718,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        \n        \n    else \n        envTable.FixateTarget.text = \"\"\n        \n    end    \nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = false,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Ultra Important [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1612442358,
["Enabled"] = false,
["url"] = "",
["NpcNames"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Revision"] = 64,
["semver"] = "",
["version"] = -1,
["Prio"] = 99,
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["Name"] = "Auto Set Skull",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604354364,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 206,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Options"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["SpellIds"] = {
},
["Name"] = "Countdown",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["Icon"] = 136048,
["Enabled"] = true,
["Revision"] = 233,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Fraction"] = false,
["Value"] = 16,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fontSize",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["version"] = -1,
["PlaterCore"] = 1,
["Desc"] = "Show the energy amount above the nameplate.",
["SpellIds"] = {
},
["Name"] = "Unit - Show Energy [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1611844883,
["url"] = "",
["Icon"] = 135945,
["Enabled"] = false,
["Revision"] = 186,
["semver"] = "",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Fraction"] = false,
["Value"] = 27,
["Name"] = "Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "bgWidth",
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.50588235294118,
0.070588235294118,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textSize",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "switchTargetName",
["Value"] = true,
["Name"] = "Show Target instead of Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useTargetingColor",
["Value"] = true,
["Name"] = "Change Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetingColor",
["Value"] = {
0.070588235294118,
0.61960784313725,
0,
1,
},
["Name"] = "Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["version"] = -1,
["PlaterCore"] = 1,
["Desc"] = "Time to die Spiteful affix",
["SpellIds"] = {
},
["Name"] = "M+ Spiteful",
["NpcNames"] = {
"174773",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1625697537,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_is_timer",
["Enabled"] = true,
["Revision"] = 282,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
["Options"] = {
{
["Type"] = 7,
["Key"] = "customSize",
["Value"] = {
{
"17",
"120, 16",
},
},
["Name"] = "Customized Size (Key = Spell ID, Value = Width, Height)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Enter the spellId into the Key and width,height into the Value. Example: Key 17 Value 120,16",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 120,
["Name"] = "Cast Bar Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "width",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 16,
["Name"] = "Cast Bar Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "height",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Set the size of the cast time",
["Min"] = 8,
["Fraction"] = false,
["Value"] = 12,
["Name"] = "Cast Timer Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timerFontSize",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option7",
["Value"] = "Time Separators",
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "separatorColor",
["Value"] = {
1,
1,
1,
0.5992676615715,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 1,
["Name"] = "Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "separatorWidth",
},
},
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
354080,
},
["Desc"] = "When a spell resembles more a timer than a spell being cast",
["Name"] = "Cast - Castbar is Timer [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Key"] = "targetNameSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Key"] = "targetFrameWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Height",
},
},
["version"] = -1,
["Name"] = "Cast - Important Target [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Alert + Timer [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Enabled"] = true,
["Revision"] = 33,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["version"] = -1,
["Name"] = "Fixate by Unit Buff [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = false,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Glowing [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = false,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Effect After Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = false,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Circle AoE [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "rotationDuration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animStartDuration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Start Alpha",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureScale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureAlpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1719452142,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 156,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "indicatorAlpha",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["version"] = -1,
["Name"] = "Add - Health Markers [P]",
["NpcNames"] = {
"214840",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 572,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Important [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "nameplateSizeOffset",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullAlpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Key"] = "skullScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Add - Tag Number [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = false,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Quick Flash [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color of  add",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Warning [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Enabled"] = true,
["Revision"] = 111,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Non Elite Trash [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Scale",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Shield Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Stop Casting [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = true,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["version"] = -1,
["Name"] = "Add - Explode on Die [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["Icon"] = 236209,
["Enabled"] = true,
["Revision"] = 18,
["semver"] = "",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura While Casting [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - On Going Cast [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Dots Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Key"] = "speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Key"] = "minAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage(unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    self.BigSparkle = self.BigSparkle or Plater:CreateImage(self.FrameOverlay)\n    self.BigSparkle.texture = [[Interface\\AddOns\\Plater\\images\\cast_bar_vertical_spark.png]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    self.BigSparkle:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    self.BigSparkle:ClearAllPoints()\n    self.BigSparkle:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 0)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\nend\n\n\n\n\n",
["Time"] = 1719711112,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_important_bycolor.png",
["Enabled"] = true,
["Revision"] = 831,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode, summon or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    self.BigSparkle:Show()\n    self.BigSparkle:SetWidth(8)\n    self.BigSparkle:SetHeight(self:GetHeight() + unitFrame.healthBar:GetHeight())\n    self.BigSparkle:SetScale(1)\n    self.BigSparkle:SetVertexColor(1,1, 1, 1)\n    envTable.overlaySpark:Hide()\n    \n    self.Spark:Hide()\n    \n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.dotAnimation:SetPoint(\"bottomright\", self, \"bottomright\", scriptTable.config.xOffset, -scriptTable.config.yOffset)\n    \n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["SpellIds"] = {
432967,
446717,
451379,
451067,
448013,
448057,
322486,
341709,
321226,
429428,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation changing the cast bar color.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "To get a list of color names, use: /plater colors",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 6,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Important by Color [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711125,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_shining_green.png",
["Enabled"] = true,
["Revision"] = 873,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\n    \nend",
["SpellIds"] = {
434802,
448248,
453840,
337249,
324293,
49184,
449455,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Shining Green [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    --envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1719788204,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_special_ability.png",
["Enabled"] = true,
["Revision"] = 613,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "For unique abilities that are an important part of the fight against a bosses or mini bosse.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
451026,
452127,
446615,
433766,
432117,
448560,
440218,
441289,
447146,
438860,
448847,
449687,
456751,
449939,
336499,
322550,
320208,
321894,
276068,
423200,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Cast - Special Ability [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 139,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
["SpellIds"] = {
447141,
432967,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["version"] = -1,
["Name"] = "Cast - Heroic Leap [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.Spark:SetVertexColor( unpack(Plater.db.profile.cast_statusbar_spark_color) )\n    PixelUtil.SetSize( self.Spark, Plater.db.profile.cast_statusbar_spark_width, self:GetHeight() )\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1719711134,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_spark.png",
["Enabled"] = true,
["Revision"] = 75,
["semver"] = "",
["Author"] = "Tennah-These Go To Eleven",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Change the spark color to differentiate a cast from another.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the spark color\n    local sparkColor = scriptTable.config.sparkColor[tostring(envTable._SpellID)]\n    \n    self.Spark:SetVertexColor(DetailsFramework:ParseColors(sparkColor))\n    \n    self.Spark:SetWidth( self.Spark:GetWidth() * scriptTable.config.sparkWithScale )\n    self.Spark:SetHeight( self.Spark:GetHeight() * scriptTable.config.sparkHeightScale )\n    \nend\n\n\n",
["SpellIds"] = {
453140,
456713,
450088,
322614,
323730,
257348,
272422,
429427,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "In the box at right, add the spell id and the color.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "To get a list of colors, use: /plater colors",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Spark Width Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "sparkWithScale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Name"] = "Spark Height Scale",
["Value"] = 1,
["Key"] = "sparkHeightScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Key"] = "sparkColor",
["Value"] = {
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Spark Color [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719679972,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 551,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Healing effect that cannot be interrupted.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
432520,
320822,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Heal Stun [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719757483,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2_icon.png",
["Enabled"] = true,
["Revision"] = 318,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
["SpellIds"] = {
451102,
426787,
448888,
439811,
434796,
434793,
438879,
438473,
434252,
434829,
440468,
436205,
436246,
441395,
437533,
451965,
456902,
456900,
451996,
451939,
450077,
450079,
324909,
324922,
460092,
272711,
269266,
425974,
424879,
426771,
426786,
423324,
428879,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "How much time takes for one revolution.",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.2,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.05,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.9,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.6392157077789307,
0.6392157077789307,
0.6392157077789307,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - AoE Hit All [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.1, 0.5)\n    \n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    if (envTable._CanInterrupt) then\n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    else        \n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    end    \n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719694337,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_debuff.png",
["Enabled"] = true,
["Revision"] = 741,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (IsInRaid()) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    --textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:SetTexture([[Interface\\AddOns\\Plater\\images\\tail_rounded_white.png]])\n    textureStretched:SetHeight(castBar:GetHeight() + 2)\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    \n    --trail\n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    --local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    --Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
432448,
431309,
451107,
451119,
438618,
436322,
443507,
443436,
439341,
447261,
449444,
451224,
451241,
450095,
451612,
451395,
324987,
327393,
256709,
268230,
275836,
426308,
449153,
427461,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9686275124549866,
0.9764706492424011,
1,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Trail Color",
["Value"] = {
0.4901961088180542,
0,
0.5490196347236633,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Debuff [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    self.simpleInterruptFlash = self.simpleInterruptFlash or  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    \n    self.simpleInterruptFlash:SetBlendMode (\"ADD\")\n    self.simpleInterruptFlash:SetDrawLayer(\"OVERLAY\", 7)\n    self.simpleInterruptFlash:SetPoint (\"center\", self, \"center\")\n    self.simpleInterruptFlash:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    self.simpleInterruptFlashAnimHub = self.simpleInterruptFlashAnimHub or Plater:CreateAnimationHub (self.simpleInterruptFlash, \n        function()\n            self.simpleInterruptFlash:Show()\n        end,\n        function()\n            self.simpleInterruptFlash:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    self.simpleInterruptFlashAnimHub.fadeIn = self.simpleInterruptFlashAnimHub.fadeIn or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    self.simpleInterruptFlashAnimHub.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    self.simpleInterruptFlashAnimHub.fadeOut = self.simpleInterruptFlashAnimHub.fadeOut or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    self.simpleInterruptFlashAnimHub.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    self.simpleInterruptFlashAnimHub:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711128,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 958,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    self.simpleInterruptFlash:SetHeight(self:GetHeight() * 2.5 )\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    self.simpleInterruptFlashAnimHub:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
431333,
442210,
443430,
443433,
451871,
76711,
334748,
334749,
328667,
338353,
445207,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Simple Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Enabled"] = true,
["Revision"] = 158,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
["SpellIds"] = {
431364,
423327,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Name"] = "Dots Y Offset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Name"] = "Blink Min Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "maxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["Name"] = "Cast - Ongoing Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1722866303,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Enabled"] = true,
["Revision"] = 1254,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["version"] = -1,
["Name"] = "Cast - Heal Cut [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.TextureWatchStep) then\n        \n        unitFrame.TextureWatchStep = true\n        \n        local animationFrame = CreateFrame(\"frame\", nil, unitFrame)\n        \n        \n        --> single animation group\n        local bearTrapAnimation = animationFrame:CreateAnimationGroup(\"beartrapAnimationGroup\")\n        bearTrapAnimation:SetLooping(\"NONE\")\n        \n        --> widgets:\n        \n        ----------------------------------------------\n        \n        local leftTrap  = animationFrame:CreateTexture(\"$parentleftTrapTexture\", \"ARTWORK\")\n        leftTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        leftTrap:SetDrawLayer(\"ARTWORK\", 0)\n        leftTrap:SetPoint(\"center\", animationFrame, \"center\", -48, 0)\n        leftTrap:SetSize(100, 100)\n        leftTrap:SetTexCoord(1, 0.0010000000149012, 0.0010000000149012, 1)\n        \n        --> animations for leftTrap\n        \n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(1)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetStartDelay(0.39999997615814)\n        leftTrap.rotation:SetDegrees(-90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(6)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetDegrees(90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        leftTrap.alpha:SetTarget(leftTrap)\n        leftTrap.alpha:SetOrder(6)\n        leftTrap.alpha:SetDuration(0.195999994874)\n        leftTrap.alpha:SetFromAlpha(1)\n        leftTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local rightTrap  = animationFrame:CreateTexture(\"$parentrightTrapTexture\", \"ARTWORK\")\n        rightTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        rightTrap:SetDrawLayer(\"ARTWORK\", 0)\n        rightTrap:SetPoint(\"center\", animationFrame, \"center\", 0, 0)\n        rightTrap:SetSize(100, 100)\n        \n        --> animations for rightTrap\n        \n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(1)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetStartDelay(0.39999997615814)\n        rightTrap.rotation:SetDegrees(90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(6)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetDegrees(-90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        rightTrap.alpha:SetTarget(rightTrap)\n        rightTrap.alpha:SetOrder(6)\n        rightTrap.alpha:SetDuration(0.195999994874)\n        rightTrap.alpha:SetFromAlpha(1)\n        rightTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local boots  = animationFrame:CreateTexture(\"$parentbootsTexture\", \"BORDER\")\n        boots:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_shoes.png]])\n        boots:SetDrawLayer(\"BORDER\", 0)\n        boots:SetPoint(\"center\", animationFrame, \"center\", -88, 35)\n        boots:SetSize(50, 50)\n        \n        --> animations for boots\n        \n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(1)\n        boots.alpha:SetDuration(0.31599998474121)\n        boots.alpha:SetFromAlpha(0)\n        boots.alpha:SetToAlpha(1)\n        boots.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        boots.rotation:SetTarget(boots)\n        boots.rotation:SetOrder(1)\n        boots.rotation:SetDuration(0.2960000038147)\n        boots.rotation:SetStartDelay(0.19999998807907)\n        boots.rotation:SetDegrees(40)\n        boots.rotation:SetOrigin(\"center\", 0, 0)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(1)\n        boots.translation:SetDuration(0.59599995613098)\n        boots.translation:SetOffset(63, -33)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(2)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(3)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(4)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(5)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(6)\n        boots.alpha:SetDuration(0.39599999785423)\n        boots.alpha:SetFromAlpha(1)\n        boots.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        unitFrame.BearTrapTextures = {leftTrap, rightTrap, boots}\n        unitFrame.BearTrapAnimationFrame = animationFrame\n        unitFrame.BearTrapAnimation = bearTrapAnimation\n        \n        \n        bearTrapAnimation:SetScript(\"OnPlay\", function()\n                boots:SetAlpha(0)\n                boots:Show()\n                leftTrap:Show()\n                rightTrap:Show()            \n        end)\n        \n        bearTrapAnimation:SetScript(\"OnFinished\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)       \n        \n        bearTrapAnimation:SetScript(\"OnStop\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)           \n        \n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1720031975,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_voidzone.png",
["Enabled"] = true,
["Revision"] = 220,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play an animation when the cast creates small zones in the ground that will damage if the player doesn't move.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimationFrame:SetSize(1, 1)\n    unitFrame.BearTrapAnimationFrame:ClearAllPoints()\n    unitFrame.BearTrapAnimationFrame:SetPoint(\"center\", unitFrame, \"center\", 30, 63)\n    unitFrame.BearTrapAnimationFrame:SetScale(0.5)\n    \n    unitFrame.BearTrapAnimation:Play()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
450784,
451423,
445813,
445838,
438658,
433845,
456696,
451391,
324923,
323138,
340189,
326021,
320571,
321780,
345623,
333479,
334476,
320772,
257882,
424903,
426345,
422233,
445541,
428703,
439559,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Settings for the animation played when the cast creates small void zones in the ground.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Voidzone [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719758013,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 281,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["SpellIds"] = {
453212,
451098,
427001,
438622,
446086,
447271,
437700,
439646,
448877,
451387,
331743,
320637,
327240,
257170,
257326,
257169,
423538,
428508,
428520,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 0.8,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.7411764860153198,
0.7411764860153198,
0.7411764860153198,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - AoE With Range [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719788550,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
["Enabled"] = true,
["Revision"] = 27,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show a castbar for the aura duration.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
["SpellIds"] = {
438494,
335141,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura - Is Cast Bar [P]",
["NpcNames"] = {
},
},
},
["saved_cvars_last_change"] = {
["nameplateShowFriends"] = "Interface/AddOns/Plater/Plater.lua:8574",
["nameplateMotion"] = "Interface/AddOns/Plater/Plater.lua:8624",
["nameplateShowAll"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Blizzard_SharedXML/CvarUtil.lua\"]:72: in function `SetValue'\n[string \"@Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Setting.lua\"]:187: in function `SetValueInternal'\n[string \"@Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/AddOns/Blizzard_Settings_Shared/Blizzard_SettingControls.lua\"]:383: in function <...lizzard_Settings_Shared/Blizzard_SettingControls.lua:379>\n[string \"=[C]\"]: ?\n[string \"@Interface/AddOns/Blizzard_SharedXML/CallbackRegistry.lua\"]:178: in function <...rface/AddOns/Blizzard_SharedXML/CallbackRegistry.lua:177>\n[string \"=[C]\"]: ?\n[string \"@Interface/AddOns/Blizzard_SharedXML/CallbackRegistry.lua\"]:181: in function `TriggerEvent'\n[string \"@Interface/AddOns/Blizzard_Settings_Shared/Blizzard_SettingControls.lua\"]:332: in function <...lizzard_Settings_Shared/Blizzard_SettingControls.lua:331>\n",
["nameplateShowEnemies"] = "Interface/AddOns/Plater/Plater.lua:8575",
["nameplateMaxDistance"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:6083: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:6081>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/mixins.lua\"]:372: in function `RunHooksForWidget'\n[string \"@Interface/AddOns/Plater/libs/DF/slider.lua\"]:749: in function <Interface/AddOns/Plater/libs/DF/slider.lua:713>\n",
["nameplateOverlapV"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:6063: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:6061>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/mixins.lua\"]:372: in function `RunHooksForWidget'\n[string \"@Interface/AddOns/Plater/libs/DF/slider.lua\"]:749: in function <Interface/AddOns/Plater/libs/DF/slider.lua:713>\n",
},
["aura_cache_by_name"] = {
["sanctified mists"] = {
321019,
321020,
334673,
334676,
},
["bucking rampage"] = {
331743,
331745,
},
["bulwark of maldraxxus"] = {
336449,
336450,
336451,
357426,
357427,
357428,
},
["congealed contagion"] = {
321268,
328175,
333737,
340271,
340273,
},
["immolate"] = {
348,
8981,
9034,
9275,
9276,
11962,
11984,
12742,
15505,
15506,
15570,
15661,
15732,
15733,
17883,
18542,
20294,
20787,
20800,
20826,
29928,
36637,
36638,
37668,
38805,
38806,
41958,
44267,
44518,
46042,
46191,
75383,
76618,
77425,
79937,
113141,
118297,
130798,
138566,
156964,
157049,
157736,
189990,
192955,
193540,
193541,
216145,
228312,
286272,
295425,
},
["bound by shadow"] = {
269935,
273432,
},
["defensive countermeasure"] = {
297133,
299428,
300996,
303941,
},
["mortal coil"] = {
6789,
108396,
295458,
295459,
},
["bolster"] = {
209859,
280001,
},
["in the spotlight"] = {
227931,
312926,
},
["bark armor"] = {
321764,
},
["axe toss"] = {
6466,
89766,
119914,
193824,
220857,
275709,
285679,
325818,
325820,
326220,
326222,
347008,
},
["fear"] = {
5782,
12096,
12542,
22678,
26070,
26580,
26661,
27641,
27990,
29168,
29321,
30002,
30530,
30584,
30615,
31358,
31970,
32241,
33547,
33924,
34259,
38154,
38595,
38660,
39119,
39176,
39210,
39415,
41150,
46561,
51240,
59669,
65809,
68950,
70171,
81442,
83613,
113712,
115186,
117573,
118699,
125204,
128098,
130616,
130940,
134938,
142884,
144062,
173093,
182806,
204730,
205398,
214304,
220540,
221424,
223170,
240136,
242084,
242739,
245902,
246277,
246307,
248028,
251419,
259874,
259995,
266918,
287685,
287687,
288545,
331741,
342914,
344887,
375205,
},
},
["url"] = "https://wago.io/EpS6e_lWb/8",
["aura_stack_outline"] = "NONE",
["aura_stack_anchor"] = {
["y"] = -4.600000381469727,
},
["cast_statusbar_fadein_time"] = 0.01999999955296516,
["indicator_raidmark_scale"] = 0.9899999499320984,
["cast_statusbar_spark_alpha"] = 0.7999999523162842,
["aura2_y_offset"] = 31.09999084472656,
["aura_timer_text_anchor"] = {
["y"] = -0.6000003814697266,
},
["castbar_framelevel"] = 0,
["buffs_on_aura2"] = true,
["plate_config"] = {
["player"] = {
["quest_color_enemy"] = {
1,
0.369,
0,
},
["spellpercent_text_font"] = "10089",
["level_text_size"] = 11,
["big_actortitle_text_font"] = "10089",
["cast"] = {
115,
8,
},
["spellpercent_text_size"] = 11,
["big_actortitle_text_size"] = 10,
["spellpercent_text_anchor"] = {
["side"] = 5,
["x"] = 2,
},
["actorname_text_color"] = {
nil,
nil,
nil,
0.86789692938328,
},
["power_percent_text_outline"] = "NONE",
["cast_incombat"] = {
115,
8,
},
["spellname_text_outline"] = "NONE",
["big_actorname_text_shadow_color"] = {
0,
0,
0,
1,
},
["spellpercent_text_outline"] = "NONE",
["big_actortitle_text_shadow_color"] = {
0,
0,
0,
1,
},
["level_text_font"] = "10089",
["percent_text_color"] = {
0.93725490196078,
0.97647058823529,
1,
},
["actorname_text_font"] = "10089",
["big_actorname_text_outline"] = "OUTLINE",
["big_actorname_text_shadow_color_offset"] = {
1,
-1,
},
["quest_color_neutral"] = {
1,
0.65,
0,
},
["power_percent_text_size"] = 8,
["power_percent_text_font"] = "Accidental Presidency",
["all_names"] = true,
["spellname_text_anchor"] = {
["side"] = 3,
},
["spellname_text_font"] = "10089",
["level_text_alpha"] = 1,
["mana"] = {
100,
4,
},
["big_actortitle_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 12,
["percent_text_font"] = "10089",
["big_actorname_text_font"] = "10089",
["big_actorname_text_size"] = 10,
["percent_text_outline"] = "NONE",
["actorname_text_size"] = 13,
["health_incombat"] = {
115,
15,
},
["big_actortitle_text_shadow_color_offset"] = {
1,
-1,
},
["spellname_text_size"] = 12,
["health"] = {
115,
15,
},
["quest_enabled"] = true,
["percent_text_size"] = 11,
["mana_incombat"] = {
100,
4,
},
["actorname_text_anchor"] = {
["y"] = 1,
["side"] = 1,
},
["level_text_enabled"] = true,
},
["friendlyplayer"] = {
["castbar_offset"] = -0.9000015258789062,
["spellpercent_text_font"] = "Naowh",
["level_text_size"] = 9,
["only_thename"] = true,
["big_actortitle_text_font"] = "Naowh",
["cast"] = {
125,
6,
},
["spellpercent_text_size"] = 8,
["big_actortitle_text_size"] = 9,
["quest_color_enemy"] = {
1,
0.369,
0,
},
["spellpercent_text_anchor"] = {
["y"] = -7.980003356933594,
["x"] = 1.009994506835938,
},
["actorname_text_color"] = {
nil,
nil,
nil,
0.87000000476837,
},
["percent_text_show_decimals"] = false,
["big_actorname_text_color"] = {
0.5,
1,
0.5,
},
["big_actortitle_text_shadow_color_offset"] = {
1,
-1,
},
["level_text_anchor"] = {
["y"] = 2.519996643066406,
["x"] = 1.489997863769531,
},
["cast_incombat"] = {
125,
6,
},
["only_names"] = true,
["actorname_text_size"] = 9,
["power_percent_text_font"] = "Accidental Presidency",
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["big_actorname_text_shadow_color"] = {
0,
0,
0,
1,
},
["spellpercent_text_outline"] = "NONE",
["big_actortitle_text_shadow_color"] = {
0,
0,
0,
1,
},
["percent_text_anchor"] = {
["y"] = 4.699996948242188,
["x"] = -0.3600006103515625,
["side"] = 5,
},
["level_text_font"] = "Naowh",
["percent_text_color"] = {
0.93725490196078,
0.97647058823529,
1,
},
["actorname_text_font"] = "Naowh",
["quest_color"] = {
0.5,
1,
0,
1,
},
["big_actorname_text_shadow_color_offset"] = {
1,
-1,
},
["spellname_text_size"] = 8,
["quest_color_neutral"] = {
1,
0.65,
0,
},
["mana_incombat"] = {
nil,
4,
},
["big_actorname_text_font"] = "Naowh",
["percent_text_enabled"] = true,
["big_actorname_text_outline"] = "OUTLINE",
["all_names"] = true,
["mana"] = {
nil,
4,
},
["quest_enabled"] = true,
["big_actorname_text_size"] = 9,
["actorname_text_outline"] = "NONE",
["actorname_text_anchor"] = {
["y"] = 0.9000015258789062,
["x"] = 0.6999969482421875,
["side"] = 1,
},
["only_damaged"] = false,
["spellpercent_text_enabled"] = true,
["actorname_text_spacing"] = 8,
["percent_text_font"] = "Naowh",
["buff_frame_y_offset"] = 0,
["big_actortitle_text_outline"] = "OUTLINE",
["percent_text_outline"] = "NONE",
["level_text_alpha"] = 1,
["big_actortitle_text_color"] = {
1,
0.8,
0,
},
["quest_color_enabled"] = true,
["relevance_state"] = 4,
["health"] = {
77,
1,
},
["health_incombat"] = {
125,
10,
},
["spellname_text_font"] = "Naowh",
["module_enabled"] = false,
["spellname_text_anchor"] = {
["y"] = -7.980003356933594,
["x"] = -1.010002136230469,
["side"] = 10,
},
["percent_text_ooc"] = true,
},
["friendlynpc"] = {
["castbar_offset"] = -0.9000015258789062,
["spellpercent_text_font"] = "Naowh",
["show_guild_name"] = false,
["level_text_size"] = 9,
["actorname_use_class_color"] = false,
["big_actortitle_text_font"] = "Naowh",
["cast"] = {
125,
6,
},
["percent_text_ooc"] = true,
["big_actortitle_text_size"] = 9,
["fixed_class_color"] = {
0,
1,
0,
},
["spellpercent_text_anchor"] = {
["y"] = -7.980003356933594,
["x"] = 1.009994506835938,
},
["actorname_text_color"] = {
nil,
nil,
nil,
0.87000000476837,
},
["percent_text_show_decimals"] = false,
["cast_incombat"] = {
125,
6,
},
["click_through"] = true,
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellpercent_text_outline"] = "NONE",
["percent_text_anchor"] = {
["y"] = 4.699996948242188,
["x"] = -0.3600006103515625,
["side"] = 5,
},
["level_text_font"] = "Naowh",
["percent_text_color"] = {
0.93725490196078,
0.97647058823529,
1,
},
["actorname_text_font"] = "Naowh",
["big_actorname_text_outline"] = "NONE",
["quest_color_neutral"] = {
1,
0.65,
0,
},
["actorname_text_size"] = 9,
["percent_text_enabled"] = true,
["actorname_use_guild_color"] = true,
["quest_color_enemy"] = {
1,
0.369,
0,
},
["only_thename"] = true,
["level_text_anchor"] = {
["y"] = 2.519996643066406,
["x"] = 1.489997863769531,
},
["spellpercent_text_size"] = 8,
["spellname_text_anchor"] = {
["y"] = -7.980003356933594,
["x"] = -1.010002136230469,
["side"] = 10,
},
["level_text_alpha"] = 1,
["percent_text_font"] = "Naowh",
["big_actortitle_text_outline"] = "NONE",
["actorname_text_spacing"] = 8,
["only_damaged"] = false,
["health_incombat"] = {
125,
10,
},
["actorname_guild_color"] = {
0.498039,
1,
0.2,
1,
},
["percent_text_outline"] = "NONE",
["enabled"] = false,
["actorname_text_anchor"] = {
["y"] = 0.9000015258789062,
["x"] = 0.6999969482421875,
["side"] = 1,
},
["spellpercent_text_enabled"] = true,
["spellname_text_size"] = 8,
["health"] = {
77,
1,
},
["actorname_friend_color"] = {
0.71,
1,
1,
1,
},
["spellname_text_font"] = "Naowh",
["actorname_use_friends_color"] = true,
["power_percent_text_font"] = "Accidental Presidency",
["big_actorname_text_font"] = "Naowh",
},
["enemynpc"] = {
["castbar_offset"] = -0.9000015258789062,
["spellpercent_text_font"] = "Naowh",
["level_text_size"] = 10,
["big_actortitle_text_font"] = "Naowh",
["cast"] = {
125,
14,
},
["spellpercent_text_size"] = 8,
["big_actortitle_text_size"] = 9,
["spellpercent_text_anchor"] = {
["y"] = 0.6699981689453125,
["x"] = 0.0099945068359375,
},
["percent_text_show_decimals"] = false,
["cast_incombat"] = {
125,
},
["spellname_text_outline"] = "NONE",
["spellpercent_text_outline"] = "NONE",
["percent_text_anchor"] = {
["y"] = -3.700004577636719,
["x"] = -1,
["side"] = 3,
},
["level_text_font"] = "Naowh",
["percent_text_color"] = {
1,
1,
1,
},
["actorname_text_font"] = "Naowh",
["big_actorname_text_outline"] = "NONE",
["actorname_text_size"] = 10,
["power_percent_text_font"] = "Accidental Presidency",
["actorname_text_anchor"] = {
["y"] = -3.800003051757813,
["x"] = 2,
["side"] = 1,
},
["big_actortitle_text_outline"] = "NONE",
["actorname_text_spacing"] = 9,
["percent_text_font"] = "Naowh",
["percent_text_outline"] = "NONE",
["level_text_anchor"] = {
["y"] = 1.199996948242188,
["x"] = -1,
},
["spellname_text_anchor"] = {
["y"] = -0.9000015258789062,
["x"] = 0.5,
["side"] = 10,
},
["spellname_text_font"] = "Naowh",
["health_incombat"] = {
125,
10,
},
["health"] = {
125,
10,
},
["big_actorname_text_size"] = 9,
["spellpercent_text_enabled"] = false,
["spellname_text_size"] = 9,
["big_actorname_text_font"] = "Naowh",
["level_text_alpha"] = 1,
},
["global_health_width"] = 125,
["enemyplayer"] = {
["actorname_use_friends_color"] = true,
["spellpercent_text_font"] = "Naowh",
["actorname_friend_color"] = {
0.71,
1,
1,
1,
},
["level_text_size"] = 9,
["only_thename"] = true,
["big_actortitle_text_font"] = "Naowh",
["cast"] = {
125,
6,
},
["spellpercent_text_size"] = 8,
["big_actortitle_text_size"] = 9,
["fixed_class_color"] = {
0,
1,
0,
},
["spellpercent_text_anchor"] = {
["y"] = -7.980003356933594,
["x"] = 1.009994506835938,
},
["actorname_text_color"] = {
nil,
nil,
nil,
0.87000000476837,
},
["percent_text_show_decimals"] = false,
["cast_incombat"] = {
125,
6,
},
["click_through"] = true,
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellpercent_text_outline"] = "NONE",
["percent_text_anchor"] = {
["y"] = 4.699996948242188,
["x"] = -0.3600006103515625,
["side"] = 5,
},
["level_text_font"] = "Naowh",
["percent_text_color"] = {
0.93725490196078,
0.97647058823529,
1,
},
["actorname_text_font"] = "Naowh",
["quest_color"] = {
0.5,
1,
0,
1,
},
["quest_color_neutral"] = {
1,
0.65,
0,
},
["actorname_text_size"] = 9,
["power_percent_text_font"] = "Accidental Presidency",
["actorname_use_guild_color"] = true,
["all_names"] = true,
["quest_color_enemy"] = {
1,
0.369,
0,
},
["level_text_anchor"] = {
["y"] = 2.519996643066406,
["x"] = 1.489997863769531,
},
["spellname_text_anchor"] = {
["y"] = -7.980003356933594,
["x"] = -1.010002136230469,
["side"] = 10,
},
["actorname_text_anchor"] = {
["y"] = 0.9000015258789062,
["x"] = 0.6999969482421875,
["side"] = 1,
},
["spellname_text_font"] = "Naowh",
["only_names"] = true,
["actorname_text_spacing"] = 8,
["percent_text_font"] = "Naowh",
["health_incombat"] = {
125,
10,
},
["actorname_guild_color"] = {
0.498039,
1,
0.2,
1,
},
["quest_enabled"] = true,
["spellname_text_size"] = 8,
["percent_text_outline"] = "NONE",
["quest_color_enabled"] = true,
["relevance_state"] = 4,
["health"] = {
77,
1,
},
["only_damaged"] = false,
["castbar_offset"] = -0.9000015258789062,
["level_text_alpha"] = 1,
["big_actorname_text_font"] = "Naowh",
["level_text_enabled"] = false,
},
["global_health_height"] = 10,
},
["health_selection_overlay"] = "PlaterFocus",
["aura_y_offset"] = 7.5,
["use_ui_parent"] = true,
["expansion_triggerwipe"] = {
[9] = true,
[10] = true,
},
["focus_texture"] = "Splitbar",
["cast_statusbar_bgcolor"] = {
0.098039215686275,
0.098039215686275,
0.098039215686275,
0.60887169837952,
},
["first_run2"] = true,
["aura_width_personal"] = 23,
["color_override_colors"] = {
[3] = {
0.99607843137255,
0.29803921568627,
0.30980392156863,
},
[4] = {
1,
0.93333333333333,
0.43137254901961,
},
[5] = {
0.38039215686275,
0.87450980392157,
0.23137254901961,
},
},
["resources_settings"] = {
["chr"] = {
["Player-1084-0961A181"] = "Runes",
["Player-1621-078F055D"] = "ComboPoints",
["Player-1621-0B537E85"] = "Chi",
["Player-1621-0A5EB288"] = "Chi",
["Player-1621-0AEEC9B2"] = "ArcaneCharges",
["Player-1084-0A24293C"] = "ComboPoints",
["Player-1621-06D67496"] = "SoulShards",
["Player-1621-063C3317"] = "ArcaneCharges",
["Player-1621-0672E5C3"] = "Chi",
["Player-1621-063C318F"] = "Runes",
["Player-1621-0639DE28"] = "ComboPoints",
["Player-1084-0A5C2A4F"] = "HolyPower",
["Player-1621-0A678196"] = "Runes",
["Player-3674-09D96941"] = "Runes",
["Player-1621-074D7CE5"] = "HolyPower",
},
},
["health_animation_time_dilatation"] = 1.059999942779541,
["npc_cache"] = {
[65414] = {
"Ethereal Sha",
"Shado-Pan Monastery",
"enUS",
},
[69899] = {
"Farraki Sand Conjurer",
"Throne of Thunder",
"enUS",
},
[24777] = {
"Sunblade Sentinel",
"Magisters' Terrace",
"enUS",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
},
[212453] = {
"Ghastly Voidsoul",
"The Stonevault",
"enUS",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[58632] = {
"Armsmaster Harlan",
"Scarlet Halls",
"enUS",
},
[76810] = {
"Furnace Engineer",
"Blackrock Foundry",
"enUS",
},
[69132] = {
"High Priestess Mar'li",
"Throne of Thunder",
"enUS",
},
[159219] = {
"Umbral Seer",
"Ny'alotha, the Waking City",
"enUS",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[127230] = {
"Garothi Annihilator",
"Antorus, the Burning Throne",
"enUS",
},
[60040] = {
"Commander Durand",
"Scarlet Monastery",
"enUS",
},
[56713] = {
"Master Snowdrift",
"Shado-Pan Monastery",
"enUS",
},
[76811] = {
"Bellows Operator",
"Blackrock Foundry",
"enUS",
},
[69133] = {
"Unharnessed Power",
"Throne of Thunder",
"enUS",
},
[65415] = {
"Void Sha",
"Shado-Pan Monastery",
"enUS",
},
[61448] = {
"Sik'thik Soldier",
"Siege of Niuzao Temple",
"enUS",
},
[127231] = {
"Garothi Decimator",
"Antorus, the Burning Throne",
"enUS",
},
[82698] = {
"Night-Twisted Devout",
"Highmaul",
"enUS",
},
[103685] = {
"Tichondrius",
"The Nighthold",
"enUS",
},
[58633] = {
"Instructor Chillheart",
"Scholomance",
"enUS",
},
[76812] = {
"Security Guard",
"Blackrock Foundry",
"enUS",
},
[69134] = {
"Kazra'jin",
"Throne of Thunder",
"enUS",
},
[69390] = {
"Zandalari Storm-Caller",
"Throne of Thunder",
"enUS",
},
[23562] = {
"Unstoppable Abomination",
"Naxxramas",
"enUS",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
},
[15974] = {
"Dread Creeper",
"Naxxramas",
"enUS",
},
[216554] = {
"Sureki String Conductor",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[259552] = {
"Chair",
"Return to Karazhan",
"enUS",
},
[207341] = {
"Blistering Spear",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[77325] = {
"Blackhand",
"Blackrock Foundry",
"enUS",
},
[216555] = {
"Heelripper",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[73742] = {
"Thresher Turret",
"Siege of Orgrimmar",
"enUS",
},
[160249] = {
"Spike Tentacle",
"Ny'alotha, the Waking City",
"enUS",
},
[259553] = {
"Chair",
"Return to Karazhan",
"enUS",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
},
[259554] = {
"Chair",
"Return to Karazhan",
"enUS",
},
[76814] = {
"Flamebender Ka'graz",
"Blackrock Foundry",
"enUS",
},
[212974] = {
"Tiger Temple Gong",
"Arena of Annihilation",
"enUS",
},
[76815] = {
"Primal Elementalist",
"Blackrock Foundry",
"enUS",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[187894] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[163836] = {
"Psychophage",
"Ny'alotha, the Waking City",
"enUS",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[259557] = {
"Chair",
"Return to Karazhan",
"enUS",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[216560] = {
"Al'haggro",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[259558] = {
"Chair",
"Return to Karazhan",
"enUS",
},
[118022] = {
"Infernal Chaosbringer",
"Tomb of Sargeras",
"enUS",
},
[216561] = {
"Gahn'dante",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[23563] = {
"Soul Weaver",
"Naxxramas",
"enUS",
},
[69906] = {
"Zandalari High Priest",
"Throne of Thunder",
"enUS",
},
[59915] = {
"Jasper Guardian",
"Mogu'shan Vaults",
"enUS",
},
[162303] = {
"Aqir Swarmkeeper",
"Ny'alotha, the Waking City",
"enUS",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
"enUS",
},
[168446] = {
"Skeletal Monstrosity",
"The Necrotic Wake",
},
[80400] = {
"Iron Assembly Warden",
"Blackrock Foundry",
"enUS",
},
[259560] = {
"Chair",
"Return to Karazhan",
"enUS",
},
[123398] = {
"Garothi Annihilator",
"Antorus, the Burning Throne",
"enUS",
},
[259561] = {
"Chair",
"Return to Karazhan",
"enUS",
},
[163841] = {
"Amalgamation of Flesh",
"Ny'alotha, the Waking City",
"enUS",
},
[111370] = {
"Creature in the Shadows",
"The Emerald Nightmare",
"enUS",
},
[195579] = {
"Primal Gust",
"The Nokhud Offensive",
"enUS",
},
[205305] = {
"Fractured Causality",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[56589] = {
"Striker Ga'dok",
"Gate of the Setting Sun",
"enUS",
},
[214519] = {
"Snowdrift's Possessions",
"Shado-Pan Monastery",
"enUS",
},
[117769] = {
"Felborne Spellbreaker",
"Tomb of Sargeras",
"enUS",
},
[18317] = {
"Ethereal Priest",
"Auchindoun: Mana-Tombs",
"enUS",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[69909] = {
"Amani'shi Flame Chanter",
"Throne of Thunder",
"enUS",
},
[218103] = {
"Nerubian Lord",
"The Spiral Weave",
"enUS",
},
[214520] = {
"Legacy of the Clan Leaders",
"Mogu'shan Palace",
"enUS",
},
[161286] = {
"Dark Ritualist",
"Ny'alotha, the Waking City",
"enUS",
},
[72981] = {
"Aggron",
"Siege of Orgrimmar",
"enUS",
},
[93968] = {
"Shadowfel Warden",
"Hellfire Citadel",
"enUS",
},
[69910] = {
"Drakkari Frost Warden",
"Throne of Thunder",
"enUS",
},
[205820] = {
"Crawling Goo",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[15975] = {
"Carrion Spinner",
"Naxxramas",
"enUS",
},
[208380] = {
"Val'kyr Shadowguard",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[16167] = {
"Bony Construct",
"Naxxramas",
"enUS",
},
[56718] = {
"Hopper",
"Stormstout Brewery",
"enUS",
},
[61453] = {
"Mu'Shiba",
"Mogu'shan Palace",
"enUS",
},
[123402] = {
"Garothi Decimator",
"Antorus, the Burning Throne",
"enUS",
},
[230904] = {
"Shadeguard Speaker",
"Nightfall Sanctum",
"enUS",
},
[259570] = {
"Chair",
"Return to Karazhan",
"enUS",
},
[59150] = {
"Flameweaver Koegler",
"Scarlet Halls",
"enUS",
},
[102672] = {
"Nythendra",
"The Emerald Nightmare",
"enUS",
},
[124171] = {
"Shadowguard Subjugator",
"Seat of the Triumvirate",
"enUS",
},
[56719] = {
"Sha of Violence",
"Shado-Pan Monastery",
"enUS",
},
[162828] = {
"Corrosive Digester",
"Ny'alotha, the Waking City",
"enUS",
},
[94995] = {
"Graggra",
"Hellfire Citadel",
"enUS",
},
[215040] = {
"Kobyss Bonechewer",
"Tak-Rethan Abyss",
"enUS",
},
[162317] = {
"Gorechop",
"Theater of Pain",
},
[18894] = {
"Felguard Brute",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[112655] = {
"Celestial Acolyte",
"The Nighthold",
"enUS",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
"enUS",
},
[74009] = {
"Crawler Mine",
"Siege of Orgrimmar",
"enUS",
},
[216578] = {
"Swarm-Maven Donmiss",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[246779] = {
"Font of Power",
"Brackenhide Hollow",
"enUS",
},
[72986] = {
"Shanna Sparkfizz",
"Siege of Orgrimmar",
"enUS",
},
[77337] = {
"Aknor Steelbringer",
"Blackrock Foundry",
"enUS",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[194569] = {
"Ulduar Teleporter",
"Ulduar",
"enUS",
},
[201736] = {
"Sundered Arcanist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[117776] = {
"Shadow Council Warlock",
"Tomb of Sargeras",
"enUS",
},
[204808] = {
"Fractured Causality",
"10.1.5 Time Rifts - Murloc (Azmerloth)",
"enUS",
},
[69916] = {
"Gurubashi Berserker",
"Throne of Thunder",
"enUS",
},
[70684] = {
"Frostmane Mauler",
"Blood in the Snow",
"enUS",
},
[17871] = {
"Underbog Shambler",
"Coilfang: The Underbog",
"enUS",
},
[26125] = {
"Telbrav",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[118289] = {
"Maiden of Vigilance",
"Tomb of Sargeras",
"enUS",
},
[216583] = {
"Chittering Fearmonger",
"Earthcrawl Mines",
"enUS",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
"enUS",
},
[216584] = {
"Nerubian Captain",
"Earthcrawl Mines",
"enUS",
},
[80411] = {
"Iron Marksman",
"Blackrock Foundry",
"enUS",
},
[59153] = {
"Rattlegore",
"Scholomance",
"enUS",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[15976] = {
"Venom Stalker",
"Naxxramas",
"enUS",
},
[159768] = {
"Deresh of the Nothingness",
"Ny'alotha, the Waking City",
"enUS",
},
[217610] = {
"Deviant Skardyn",
"Hall of Awakening",
"enUS",
},
[102679] = {
"Ysondre",
"The Emerald Nightmare",
"enUS",
},
[193553] = {
"Nokhud Warhound",
"The Nokhud Offensive",
"enUS",
},
[216076] = {
"Net",
"Naval Battle Scenario",
"enUS",
},
[179733] = {
"Invigorating Fish Stick",
"Tazavesh, the Veiled Market",
},
[444374] = {
"Minecart",
"The Stonevault",
"enUS",
},
[202256] = {
"Djaradin Lavamancer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[58898] = {
"Vigilant Watchman",
"Scarlet Halls",
"enUS",
},
[193555] = {
"Nokhud Villager",
"The Nokhud Offensive",
"enUS",
},
[202257] = {
"Djaradin Magmashaper",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[190484] = {
"Kyrakka",
"Ruby Life Pools",
"enUS",
},
[162331] = {
"Corrupted Neuron",
"Ny'alotha, the Waking City",
"enUS",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[117269] = {
"Kil'jaeden",
"Tomb of Sargeras",
"enUS",
},
[202258] = {
"Djaradin Skullcrusher",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[190485] = {
"Erkhart Stormvein",
"Ruby Life Pools",
"enUS",
},
[196116] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[222222] = {
"Swarmspike",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[202259] = {
"Djaradin Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[22927] = {
"Yor",
"Auchindoun: Mana-Tombs",
"enUS",
},
[196117] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[117782] = {
"Eredar Bloodmage",
"Tomb of Sargeras",
"enUS",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[70690] = {
"Blood of Y'Shaarj",
"Heart of the Old God Scenario",
"enUS",
},
[60051] = {
"Cobalt Guardian",
"Mogu'shan Vaults",
"enUS",
},
[202262] = {
"Blazing Dreadsquall",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[102683] = {
"Emeriss",
"The Emerald Nightmare",
"enUS",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[214548] = {
"Slippery Syphoner",
"Tak-Rethan Abyss",
"enUS",
},
[70691] = {
"Mouth of Terror",
"Heart of the Old God Scenario",
"enUS",
},
[112153] = {
"Dire Shaman",
"The Emerald Nightmare",
"enUS",
},
[112665] = {
"Nighthold Protector",
"The Nighthold",
"enUS",
},
[189467] = {
"Qalashi Bonesplitter",
"Neltharus",
"enUS",
},
[202264] = {
"Primal Lava Elemental",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[122135] = {
"Shatug",
"Antorus, the Burning Throne",
"enUS",
},
[201753] = {
"Sundered Destroyer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214550] = {
"Deepwater Snapper",
"Tak-Rethan Abyss",
"enUS",
},
[201754] = {
"Sarkareth",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[259596] = {
"Chair",
"Return to Karazhan",
"enUS",
},
[223253] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[381946] = {
"Challenger's Cache",
"The Azure Vault",
"enUS",
},
[57109] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[114714] = {
"Ghostly Steward",
"Return to Karazhan",
"enUS",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[87841] = {
"Grom'kar Firemender",
"Blackrock Foundry",
"enUS",
},
[426994] = {
"Whispering Explosives",
"The Spiral Weave",
"enUS",
},
[276503] = {
"Boon of Life",
"Antorus, the Burning Throne",
"enUS",
},
[207387] = {
"Refreshment Table",
"Shado-Pan Monastery",
"enUS",
},
[114715] = {
"Ghostly Chef",
"Return to Karazhan",
"enUS",
},
[189472] = {
"Qalashi Lavabearer",
"Neltharus",
"enUS",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[92961] = {
"Gorebound Brute",
"Hellfire Citadel",
"enUS",
},
[16297] = {
"Mutated Grub",
"Naxxramas",
"enUS",
},
[203806] = {
"Whisper in the Dark",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[93985] = {
"Corrupted Talonpriest",
"Hellfire Citadel",
"enUS",
},
[114716] = {
"Ghostly Baker",
"Return to Karazhan",
"enUS",
},
[381955] = {
"Challenger's Cache",
"Ruby Life Pools",
"enUS",
},
[115484] = {
"Fel Bat",
"Return to Karazhan",
"enUS",
},
[80677] = {
"Iron Journeyman",
"Blackrock Foundry",
"enUS",
},
[68904] = {
"Suen",
"Throne of Thunder",
"enUS",
},
[196642] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[189988] = {
"Thing From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[203809] = {
"Entropic Hatred",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[129050] = {
"Antoran Felguard",
"Antorus, the Burning Throne",
"enUS",
},
[193572] = {
"Nokhud Warsmith",
"The Nokhud Offensive",
"enUS",
},
[64917] = {
"Sra'thik Ambercaller",
"Heart of Fear",
"enUS",
},
[68905] = {
"Lu'lin",
"Throne of Thunder",
"enUS",
},
[61334] = {
"Cursed Mogu Sculpture",
"Mogu'shan Vaults",
"enUS",
},
[189478] = {
"Forgemaster Gorek",
"Neltharus",
"enUS",
},
[203811] = {
"Incarnation of Entropy",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[62358] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[196645] = {
"Desecrated Bakar",
"The Nokhud Offensive",
"enUS",
},
[80423] = {
"Thunderlord Beast-Tender",
"Blackrock Foundry",
"enUS",
},
[157231] = {
"Shad'har the Insatiable",
"Ny'alotha, the Waking City",
"enUS",
},
[381966] = {
"Challenger's Cache",
"The Nokhud Offensive",
"enUS",
},
[203812] = {
"Voice From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[413703] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[381967] = {
"Challenger's Cache",
"Algeth'ar Academy",
"enUS",
},
[219681] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[199718] = {
"Nokhud Huntmaster",
"The Nokhud Offensive",
"enUS",
},
[56472] = {
"Fragrant Lotus",
"Shado-Pan Monastery",
"enUS",
},
[404492] = {
"Gilded Vase",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[378899] = {
"Grand Banquet of the Kalu'ak",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
"enUS",
},
[71979] = {
"Kor'kron Warbringer",
"Siege of Orgrimmar",
"enUS",
},
[220196] = {
"Treasure Urn",
"Crypt of Forgotten Kings",
"enUS",
},
[65581] = {
"Essence of Hate",
"Crypt of Forgotten Kings",
"enUS",
},
[17491] = {
"Laughing Skull Rogue",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[59800] = {
"Krik'thik Rager",
"Gate of the Setting Sun",
"enUS",
},
[303147] = {
"Summoning Portal",
"Neltharus",
"enUS",
},
[112162] = {
"Grisly Trapper",
"The Emerald Nightmare",
"enUS",
},
[421903] = {
"Earthen Console",
"Hall of Awakening",
"enUS",
},
[56473] = {
"Flying Snow",
"Shado-Pan Monastery",
"enUS",
},
[68397] = {
"Lei Shen",
"Throne of Thunder",
"enUS",
},
[123680] = {
"Dark Keeper Aedis",
"Antorus, the Burning Throne",
"enUS",
},
[190510] = {
"Vault Guard",
"The Azure Vault",
"enUS",
},
[215592] = {
"Siegehold Fortifier",
"The Spiral Weave",
"enUS",
},
[62360] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[112675] = {
"Duskwatch Sentinel",
"The Nighthold",
"enUS",
},
[72237] = {
"Embodied Fear",
"Siege of Orgrimmar",
"enUS",
},
[161334] = {
"Gnashing Terror",
"Ny'alotha, the Waking City",
"enUS",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[90409] = {
"Gorebound Felcaster",
"Hellfire Citadel",
"enUS",
},
[201773] = {
"Eternal Blaze",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[161335] = {
"Void Horror",
"Ny'alotha, the Waking City",
"enUS",
},
[70702] = {
"Flame Hound",
"The Secrets of Ragefire",
"enUS",
},
[195119] = {
"Primalist Shockcaster",
"Ruby Life Pools",
"enUS",
},
[64280] = {
"Maki Waterblade",
"Arena of Annihilation",
"enUS",
},
[112676] = {
"Nobleborn Warpcaster",
"The Nighthold",
"enUS",
},
[201774] = {
"Essence of Shadow",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[65304] = {
"Hateful Monstrosity",
"Crypt of Forgotten Kings",
"enUS",
},
[61337] = {
"Glintrok Ironhide",
"Mogu'shan Palace",
"enUS",
},
[90410] = {
"Felfire Crusher",
"Hellfire Citadel",
"enUS",
},
[70703] = {
"Core Spider",
"The Secrets of Ragefire",
"enUS",
},
[70959] = {
"Urtharges the Destroyer",
"Heart of the Old God Scenario",
"enUS",
},
[71983] = {
"Farseer Wolf Rider",
"Siege of Orgrimmar",
"enUS",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
},
[210478] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[81197] = {
"Iron Raider",
"Blackrock Foundry",
"enUS",
},
[73775] = {
"War Master Kragg",
"Siege of Orgrimmar",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
"enUS",
},
[210479] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[165946] = {
"Mordretha, the Endless Empress",
"Theater of Pain",
},
[203825] = {
"Voracious Magma Worm",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[112678] = {
"Shal'dorei Naturalist",
"The Nighthold",
"enUS",
},
[56731] = {
"Habanero Brew",
"Stormstout Brewery",
"enUS",
},
[203826] = {
"Colossal Draconic Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214576] = {
"Iron-Runed Protector",
"Hall of Awakening",
"enUS",
},
[210482] = {
"Fine Chair",
"Scarlet Halls",
"enUS",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
},
[214066] = {
"Cursedforge Stoneshaper",
"The Stonevault",
"enUS",
},
[210483] = {
"Fine Chair",
"Scarlet Halls",
"enUS",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[56732] = {
"Liu Flameheart",
"Temple of the Jade Serpent",
"enUS",
},
[69427] = {
"Dark Animus",
"Throne of Thunder",
"enUS",
},
[24723] = {
"Selin Fireheart",
"Magisters' Terrace",
"enUS",
},
[210485] = {
"Admiral Barean Westwind",
"Scarlet Halls",
"enUS",
},
[203831] = {
"Crystalline Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
},
[210486] = {
"Dorgar Stoenbrow",
"Scarlet Halls",
"enUS",
},
[17429] = {
"Fel Orc Neophyte",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[210487] = {
"Fellari Swiftarrow",
"Scarlet Halls",
"enUS",
},
[403508] = {
"Cat Toy",
"Naxxramas",
"enUS",
},
[210488] = {
"Ferren Marcus",
"Scarlet Halls",
"enUS",
},
[73012] = {
"Klaxxi Skirmisher",
"Siege of Orgrimmar",
"enUS",
},
[208441] = {
"Water Elemental",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[210489] = {
"Harthal Truesight",
"Scarlet Halls",
"enUS",
},
[215608] = {
"Siegehold Drone",
"The Spiral Weave",
"enUS",
},
[157255] = {
"Aqir Drone",
"Ny'alotha, the Waking City",
"enUS",
},
[194622] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[167493] = {
"Venomous Sniper",
"Plaguefall",
},
[15979] = {
"Tomb Horror",
"Naxxramas",
"enUS",
},
[95280] = {
"Kaz'rogal",
"Hellfire Citadel",
"enUS",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
"enUS",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
"enUS",
},
[217658] = {
"Sir Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[60701] = {
"Zian of the Endless Shadow",
"Mogu'shan Vaults",
"enUS",
},
[202814] = {
"Twisted Aberration",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[210493] = {
"Valea Twinblades",
"Scarlet Halls",
"enUS",
},
[194625] = {
"Flee to the Surface",
"Ulduar",
"enUS",
},
[179269] = {
"Oasis Security",
"Tazavesh, the Veiled Market",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
"enUS",
},
[210494] = {
"Yana Bloodspear",
"Scarlet Halls",
"enUS",
},
[195138] = {
"Detonating Crystal",
"The Azure Vault",
"enUS",
},
[69944] = {
"Sand Elemental",
"Throne of Thunder",
"enUS",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
"enUS",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
"enUS",
},
[159308] = {
"Zealous Adherent",
"Ny'alotha, the Waking City",
"enUS",
},
[60958] = {
"Pinning Arrow",
"Mogu'shan Vaults",
"enUS",
},
[159309] = {
"Leeching Parasite",
"Ny'alotha, the Waking City",
"enUS",
},
[58783] = {
"Scarlet Initiate",
"Scarlet Monastery",
"enUS",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[207939] = {
"Baron Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[126764] = {
"Bladesworn Ravager",
"Antorus, the Burning Throne",
"enUS",
},
[63518] = {
"Den Mother Moof",
"Brewmoon Festival",
"enUS",
},
[221760] = {
"Risen Mage",
"Priory of the Sacred Flame",
"enUS",
},
[70202] = {
"Manchu",
"Throne of Thunder",
"enUS",
},
[207940] = {
"Prioress Murrpray",
"Priory of the Sacred Flame",
"enUS",
},
[159312] = {
"Living Blood",
"Ny'alotha, the Waking City",
"enUS",
},
[86071] = {
"Rokkaa",
"Highmaul",
"enUS",
},
[201288] = {
"Sundered Champion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[202824] = {
"Erratic Remnant",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[207943] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[86072] = {
"Oro",
"Highmaul",
"enUS",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
"enUS",
},
[59808] = {
"Shado-Pan Stormbringer",
"Shado-Pan Monastery",
"enUS",
},
[60576] = {
"Stone Quilen",
"Mogu'shan Vaults",
"enUS",
},
[61216] = {
"Glintrok Hexxer",
"Mogu'shan Palace",
"enUS",
},
[86073] = {
"Lokk",
"Highmaul",
"enUS",
},
[86329] = {
"Breaker Ritualist",
"Highmaul",
"enUS",
},
[70205] = {
"Weisheng",
"Throne of Thunder",
"enUS",
},
[207946] = {
"Captain Dailcry",
"Priory of the Sacred Flame",
"enUS",
},
[217672] = {
"Deranged Skardyn",
"Hall of Awakening",
"enUS",
},
[94008] = {
"Dark Devourer",
"Hellfire Citadel",
"enUS",
},
[63520] = {
"Li Te",
"Brewmoon Festival",
"enUS",
},
[86330] = {
"Breaker Ritualist",
"Highmaul",
"enUS",
},
[70206] = {
"Untrained Quilen",
"Throne of Thunder",
"enUS",
},
[15980] = {
"Naxxramas Cultist",
"Naxxramas",
"enUS",
},
[16236] = {
"Eye Stalk",
"Naxxramas",
"enUS",
},
[207949] = {
"Zealous Templar",
"Priory of the Sacred Flame",
"enUS",
},
[208461] = {
"Scorching Brambles",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[94777] = {
"Morkronn",
"Hellfire Citadel",
"enUS",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
"enUS",
},
[59426] = {
"Bopper",
"Stormstout Brewery",
"enUS",
},
[70464] = {
"Frostmane Witch Doctor",
"Blood in the Snow",
"enUS",
},
[115765] = {
"Abstract Nullifier",
"Return to Karazhan",
"enUS",
},
[30549] = {
"Baron Rivendare",
"Naxxramas",
"enUS",
},
[70209] = {
"Untrained Quilen",
"Throne of Thunder",
"enUS",
},
[70465] = {
"Frostmane Bonechiller",
"Blood in the Snow",
"enUS",
},
[59299] = {
"Scarlet Guardian",
"Scarlet Halls",
"enUS",
},
[196694] = {
"Arcane Forager",
"Algeth'ar Academy",
"enUS",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
"enUS",
},
[115767] = {
"Mistress Sassz'ine",
"Tomb of Sargeras",
"enUS",
},
[76865] = {
"Beastlord Darmac",
"Blackrock Foundry",
"enUS",
},
[61347] = {
"Kingsguard",
"Mogu'shan Vaults",
"enUS",
},
[69699] = {
"Massive Anima Golem",
"Throne of Thunder",
"enUS",
},
[70979] = {
"Water Elemental",
"Blood in the Snow",
"enUS",
},
[217684] = {
"Deranged Skardyn",
"Hall of Awakening",
"enUS",
},
[121399] = {
"Inquisitor Sebilus",
"Tomb of Sargeras",
"enUS",
},
[174175] = {
"Loyal Stoneborn",
"Halls of Atonement",
},
[69700] = {
"Large Anima Golem",
"Throne of Thunder",
"enUS",
},
[123191] = {
"Fel Hound",
"Antorus, the Burning Throne",
"enUS",
},
[70212] = {
"Flaming Head",
"Throne of Thunder",
"enUS",
},
[70468] = {
"Bonechiller Barafu",
"Blood in the Snow",
"enUS",
},
[219221] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[71492] = {
"Maragor",
"Crypt of Forgotten Kings",
"enUS",
},
[121400] = {
"Accusator Gnazh",
"Tomb of Sargeras",
"enUS",
},
[69701] = {
"Anima Golem",
"Throne of Thunder",
"enUS",
},
[90432] = {
"Felfire Flamebelcher",
"Hellfire Citadel",
"enUS",
},
[207450] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[112955] = {
"Shadescale Wyrm",
"The Nighthold",
"enUS",
},
[126776] = {
"Slobbering Fiend",
"Antorus, the Burning Throne",
"enUS",
},
[69702] = {
"Ritualist Malus",
"Throne of Thunder",
"enUS",
},
[111164] = {
"Twilight Stardancer",
"The Nighthold",
"enUS",
},
[15981] = {
"Naxxramas Acolyte",
"Naxxramas",
"enUS",
},
[161895] = {
"Thing From Beyond",
"Horrific Vision of Orgrimmar",
},
[70982] = {
"Frost Totem",
"Blood in the Snow",
"enUS",
},
[112956] = {
"Shimmering Manaspine",
"The Nighthold",
"enUS",
},
[60709] = {
"Qiang the Merciless",
"Mogu'shan Vaults",
"enUS",
},
[80708] = {
"Iron Taskmaster",
"Blackrock Foundry",
"enUS",
},
[207453] = {
"Fungal Rotspreader",
"Mycomancer Cavern",
"enUS",
},
[216155] = {
"Skittering Ambusher",
"The Spiral Weave",
"enUS",
},
[228952] = {
"Nerubian Skulker",
"The Spiral Weave",
"enUS",
},
[24664] = {
"Kael'thas Sunstrider",
"Magisters' Terrace",
"enUS",
},
[70471] = {
"Frostmane Berserker",
"Blood in the Snow",
"enUS",
},
[61989] = {
"Cursed Mogu Sculpture",
"Mogu'shan Vaults",
"enUS",
},
[207454] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[228953] = {
"Skittering Intruder",
"Earthcrawl Mines",
"enUS",
},
[181861] = {
"Magmatusk",
"Neltharus",
"enUS",
},
[59302] = {
"Sergeant Verdone",
"Scarlet Halls",
"enUS",
},
[90435] = {
"Kormrok",
"Hellfire Citadel",
"enUS",
},
[123451] = {
"Felguard",
"Antorus, the Burning Throne",
"enUS",
},
[17626] = {
"Laughing Skull Legionnaire",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[207456] = {
"Fungal Speartender",
"Mycomancer Cavern",
"enUS",
},
[17882] = {
"The Black Stalker",
"Coilfang: The Underbog",
"enUS",
},
[184422] = {
"Emberon",
"Uldaman: Legacy of Tyr",
"enUS",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
"enUS",
},
[60710] = {
"Subetai the Swift",
"Mogu'shan Vaults",
"enUS",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
"enUS",
},
[123452] = {
"Fel Lord",
"Antorus, the Burning Throne",
"enUS",
},
[70473] = {
"Frostmane Headhunter",
"Blood in the Snow",
"enUS",
},
[208994] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[214625] = {
"Kobyss Necromancer",
"Tak-Rethan Abyss",
"enUS",
},
[198757] = {
"Void Lasher",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[207459] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[69194] = {
"Alliance Cannoneer",
"Naval Battle Scenario",
"enUS",
},
[167533] = {
"Advent Nevermore",
"Theater of Pain",
},
[63526] = {
"Bataari Flamecaller",
"Brewmoon Festival",
"enUS",
},
[70474] = {
"Farastu",
"Blood in the Snow",
"enUS",
},
[128060] = {
"Priestess of Delirium",
"Antorus, the Burning Throne",
"enUS",
},
[203877] = {
"Kobold Thwacker",
"Kriegval's Rest",
"enUS",
},
[88902] = {
"Mol'dana Two-Blade",
"Blackrock Foundry",
"enUS",
},
[203878] = {
"Kobold Mystic",
"Kriegval's Rest",
"enUS",
},
[196200] = {
"Algeth'ar Echoknight",
"Algeth'ar Academy",
"enUS",
},
[70219] = {
"Putrid Waste",
"Throne of Thunder",
"enUS",
},
[70987] = {
"Solid Ice",
"Blood in the Snow",
"enUS",
},
[95813] = {
"Weaponlord Mehlkhior",
"Hellfire Citadel",
"enUS",
},
[188011] = {
"Primal Terrasentry",
"Ruby Life Pools",
"enUS",
},
[443526] = {
"Supply Bag",
"Nightfall Sanctum",
"enUS",
},
[58664] = {
"Instructor Chillheart's Phylactery",
"Scholomance",
"enUS",
},
[76874] = {
"Dreadwing",
"Blackrock Foundry",
"enUS",
},
[69196] = {
"Alliance Swashbuckler",
"Naval Battle Scenario",
"enUS",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
"enUS",
},
[63527] = {
"Bataari Yaungol",
"Brewmoon Festival",
"enUS",
},
[71244] = {
"Kor'kron Shadowblade",
"The Secrets of Ragefire",
"enUS",
},
[196203] = {
"Ethereal Restorer",
"Algeth'ar Academy",
"enUS",
},
[180335] = {
"Cartel Smuggler",
"Tazavesh, the Veiled Market",
},
[409747] = {
"Construct Canker",
"Mycomancer Cavern",
"enUS",
},
[69197] = {
"Alliance Officer",
"Naval Battle Scenario",
"enUS",
},
[180336] = {
"Cartel Wiseguy",
"Tazavesh, the Veiled Market",
},
[71245] = {
"Kor'kron Dark Shaman",
"The Secrets of Ragefire",
"enUS",
},
[62632] = {
"Sik'thik Engineer",
"Siege of Niuzao Temple",
"enUS",
},
[63528] = {
"Warbringer Qobi",
"Brewmoon Festival",
"enUS",
},
[234597] = {
"Woodbench",
"SMV Alliance Garrison Level 2",
"enUS",
},
[443537] = {
"Lost Supplies",
"The Spiral Weave",
"enUS",
},
[16142] = {
"Bile Sludge",
"Naxxramas",
"enUS",
},
[234598] = {
"Woodbench",
"SMV Alliance Garrison Level 2",
"enUS",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
"enUS",
},
[69455] = {
"Zandalari Water-Binder",
"Throne of Thunder",
"enUS",
},
[234599] = {
"Woodbench",
"SMV Alliance Garrison Level 2",
"enUS",
},
[112709] = {
"Promenade Guard",
"The Nighthold",
"enUS",
},
[62633] = {
"Sik'thik Builder",
"Siege of Niuzao Temple",
"enUS",
},
[189555] = {
"Astral Attendant",
"The Azure Vault",
"enUS",
},
[63529] = {
"Karsar the Bloodletter",
"Brewmoon Festival",
"enUS",
},
[181366] = {
"Four Horsemen Chest",
"Naxxramas",
"enUS",
},
[127810] = {
"Slobbering Fiend",
"Antorus, the Burning Throne",
"enUS",
},
[108359] = {
"Volatile Scorpid",
"The Nighthold",
"enUS",
},
[72272] = {
"Minion of Y'Shaarj",
"Siege of Orgrimmar",
"enUS",
},
[56747] = {
"Gu Cloudstrike",
"Shado-Pan Monastery",
"enUS",
},
[56875] = {
"Krik'thik Demolisher",
"Gate of the Setting Sun",
"enUS",
},
[191605] = {
"Portable Mailbox",
"Ny'alotha, the Waking City",
"enUS",
},
[94283] = {
"Shadow Infuser",
"Hellfire Citadel",
"enUS",
},
[61610] = {
"Seething Sha",
"Crypt of Forgotten Kings",
"enUS",
},
[116550] = {
"Spectral Patron",
"Return to Karazhan",
"enUS",
},
[217200] = {
"Void Crystal Monstrosity",
"Hall of Awakening",
"enUS",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[234604] = {
"Woodbench",
"SMV Alliance Garrison Level 2",
"enUS",
},
[80719] = {
"Iron Smith",
"Blackrock Foundry",
"enUS",
},
[59051] = {
"Strife",
"Temple of the Jade Serpent",
"enUS",
},
[114247] = {
"The Curator",
"Return to Karazhan",
"enUS",
},
[94284] = {
"Fiery Enkindler",
"Hellfire Citadel",
"enUS",
},
[177787] = {
"Mawsworn Hopebreaker",
"Sanctum of Domination",
},
[108361] = {
"Crystalline Scorpid",
"The Nighthold",
"enUS",
},
[243308] = {
"Spoils of the Assault",
"Hellfire Citadel",
"enUS",
},
[56876] = {
"Krik'thik Sapper",
"Gate of the Setting Sun",
"enUS",
},
[94285] = {
"Fel Extractor",
"Hellfire Citadel",
"enUS",
},
[86607] = {
"Iron Flame Technician",
"Highmaul",
"enUS",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[234609] = {
"Chair",
"SMV Alliance Garrison Level 2",
"enUS",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[413874] = {
"Rich Bismuth",
"Earthcrawl Mines",
"enUS",
},
[183423] = {
"Reformed Bachelor",
"Return to Karazhan",
"enUS",
},
[234611] = {
"Chair",
"SMV Alliance Garrison Level 2",
"enUS",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[207482] = {
"Invasive Sporecap",
"Kriegval's Rest",
"enUS",
},
[179841] = {
"Veteran Sparkcaster",
"Tazavesh, the Veiled Market",
},
[449709] = {
"Bouncy Shroom",
"Kriegval's Rest",
"enUS",
},
[158343] = {
"Organ of Corruption",
"Ny'alotha, the Waking City",
"enUS",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
"enUS",
},
[179842] = {
"Commerce Enforcer",
"Tazavesh, the Veiled Market",
},
[115019] = {
"Coldmist Widow",
"Return to Karazhan",
"enUS",
},
[70230] = {
"Zandalari Blade Initiate",
"Throne of Thunder",
"enUS",
},
[103758] = {
"Star Augur Etraeus",
"The Nighthold",
"enUS",
},
[114252] = {
"Mana Devourer",
"Return to Karazhan",
"enUS",
},
[61485] = {
"General Pa'valak",
"Siege of Niuzao Temple",
"enUS",
},
[115020] = {
"Arcanid",
"Return to Karazhan",
"enUS",
},
[86611] = {
"Mind Fungus",
"Highmaul",
"enUS",
},
[120651] = {
"Explosives",
"Atal'Dazar",
},
[112973] = {
"Duskwatch Weaver",
"The Nighthold",
"enUS",
},
[179334] = {
"Portalmancer Zo'nyy",
"Tazavesh, the Veiled Market",
},
[94802] = {
"Voidscribe Aathalos",
"Hellfire Citadel",
"enUS",
},
[213119] = {
"Void Speaker Eirich",
"The Stonevault",
"enUS",
},
[211584] = {
"Ancient Control Console",
"Mogu'shan Vaults",
"enUS",
},
[69465] = {
"Jin'rokh the Breaker",
"Throne of Thunder",
"enUS",
},
[94803] = {
"Grute",
"Hellfire Citadel",
"enUS",
},
[194181] = {
"Vexamus",
"Algeth'ar Academy",
"enUS",
},
[199812] = {
"Zaqali Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[204931] = {
"Fyrakk",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[82519] = {
"Highmaul Conscript",
"Highmaul",
"enUS",
},
[70746] = {
"Frostmane Flesh-Eater",
"Blood in the Snow",
"enUS",
},
[70235] = {
"Frozen Head",
"Throne of Thunder",
"enUS",
},
[202375] = {
"Zskarn",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[66652] = {
"Lesser Volatile Energy",
"Shado-Pan Monastery",
"enUS",
},
[71259] = {
"Huntmaster S'thoc",
"A Brewing Storm",
"enUS",
},
[62511] = {
"Amber-Shaper Un'sok",
"Heart of Fear",
"enUS",
},
[59184] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[90199] = {
"Gorefiend",
"Hellfire Citadel",
"enUS",
},
[94806] = {
"Fel Hellweaver",
"Hellfire Citadel",
"enUS",
},
[60208] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[219270] = {
"Rope Pile",
"Naval Battle Scenario",
"enUS",
},
[148120] = {
"Kul Tiran Marine",
"Battle of Dazar'alor",
},
[215177] = {
"Waximus",
"New Candle, New Hope",
"enUS",
},
[77404] = {
"The Butcher",
"Highmaul",
"enUS",
},
[217225] = {
"Machinist Protector",
"Hall of Awakening",
"enUS",
},
[94808] = {
"Hellfire Guardian",
"Hellfire Citadel",
"enUS",
},
[116563] = {
"Ancient Core Hound",
"Return to Karazhan",
"enUS",
},
[104534] = {
"D'zorykx the Trapper",
"The Nighthold",
"enUS",
},
[56754] = {
"Azure Serpent",
"Shado-Pan Monastery",
"enUS",
},
[190609] = {
"Echo of Doragosa",
"Algeth'ar Academy",
"enUS",
},
[122450] = {
"Garothi Worldbreaker",
"Antorus, the Burning Throne",
"enUS",
},
[58674] = {
"Angry Hound",
"Scarlet Halls",
"enUS",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[114261] = {
"Toe Knee",
"Return to Karazhan",
"enUS",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
},
[205968] = {
"Fragment of Shadow",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[104536] = {
"Inquisitor Vethriz",
"The Nighthold",
"enUS",
},
[177816] = {
"Interrogation Specialist",
"Tazavesh, the Veiled Market",
},
[85341] = {
"Lunarfall Raccoon",
"SMV Alliance Garrison Level 2",
"enUS",
},
[123476] = {
"Hulking Demolisher",
"Antorus, the Burning Throne",
"enUS",
},
[177817] = {
"Support Officer",
"Tazavesh, the Veiled Market",
},
[103769] = {
"Xavius",
"The Emerald Nightmare",
"enUS",
},
[104537] = {
"Fel Lord Kuraz'mal",
"The Nighthold",
"enUS",
},
[205971] = {
"Fragment of Fire",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[58803] = {
"Residual Hatred",
"Shado-Pan Monastery",
"enUS",
},
[158367] = {
"Basher Tentacle",
"Ny'alotha, the Waking City",
"enUS",
},
[114263] = {
"Odyn",
"Trial of Valor",
"enUS",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
},
[123477] = {
"Antoran Doomguard",
"Antorus, the Burning Throne",
"enUS",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
"enUS",
},
[220305] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[56884] = {
"Corrupted Taran Zhu",
"Shado-Pan Monastery",
"enUS",
},
[114264] = {
"Midnight",
"Return to Karazhan",
"enUS",
},
[123478] = {
"Antoran Felguard",
"Antorus, the Burning Throne",
"enUS",
},
[203927] = {
"Failed Prototype",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[58676] = {
"Scarlet Defender",
"Scarlet Halls",
"enUS",
},
[214677] = {
"Invading Hurler",
"Tak-Rethan Abyss",
"enUS",
},
[101468] = {
"Jagganoth",
"Dreadscar Rift",
"enUS",
},
[114265] = {
"Gang Ruffian",
"Return to Karazhan",
"enUS",
},
[17377] = {
"Keli'dan the Breaker",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[63539] = {
"Flamecoaxing Spirit",
"Arena of Annihilation",
"enUS",
},
[112474] = {
"Corrupted Totem",
"The Emerald Nightmare",
"enUS",
},
[173729] = {
"Manifestation of Pride",
"Theater of Pain",
},
[114266] = {
"Shoreline Tidespeaker",
"Return to Karazhan",
"enUS",
},
[123480] = {
"Antoran Champion",
"Antorus, the Burning Throne",
"enUS",
},
[120153] = {
"Eonic Defender",
"Tomb of Sargeras",
"enUS",
},
[220311] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[158375] = {
"Corruptor Tentacle",
"Ny'alotha, the Waking City",
"enUS",
},
[94816] = {
"Togdrov",
"Hellfire Citadel",
"enUS",
},
[78948] = {
"Tectus",
"Highmaul",
"enUS",
},
[16145] = {
"Death Knight Captain",
"Naxxramas",
"enUS",
},
[220314] = {
"Bogpiper",
"Mycomancer Cavern",
"enUS",
},
[478443] = {
"Mislaid Curiosity",
"Kriegval's Rest",
"enUS",
},
[70247] = {
"Venomous Head",
"Throne of Thunder",
"enUS",
},
[214684] = {
"Invading Scrapper",
"Tak-Rethan Abyss",
"enUS",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
"enUS",
},
[92514] = {
"Shao'ghun",
"Hellfire Citadel",
"enUS",
},
[185508] = {
"Claw Fighter",
"Brackenhide Hollow",
"enUS",
},
[216221] = {
"Earthen-Ward Sentinel",
"Hall of Awakening",
"enUS",
},
[451830] = {
"|cff1EFF00Heavy Trunk",
"Earthcrawl Mines",
"enUS",
},
[67177] = {
"Zar'thik Supplicant",
"Heart of Fear",
"enUS",
},
[104288] = {
"Trilliax",
"The Nighthold",
"enUS",
},
[56631] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[114526] = {
"Ghostly Understudy",
"Return to Karazhan",
"enUS",
},
[237722] = {
"Full Garrison Cache",
"SMV Alliance Garrison Level 2",
"enUS",
},
[94563] = {
"Gorebound Fanatic",
"Hellfire Citadel",
"enUS",
},
[203939] = {
"Animation Fluid",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[58807] = {
"Vestige of Hatred",
"Shado-Pan Monastery",
"enUS",
},
[63030] = {
"Enslaved Bonesmasher",
"Heart of Fear",
"enUS",
},
[59191] = {
"Commander Lindon",
"Scarlet Halls",
"enUS",
},
[79208] = {
"Blackrock Enforcer",
"Blackrock Foundry",
"enUS",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
"enUS",
},
[192680] = {
"Guardian Sentry",
"Algeth'ar Academy",
"enUS",
},
[61239] = {
"Glintrok Oracle",
"Mogu'shan Palace",
"enUS",
},
[205478] = {
"Conduit Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[422154] = {
"Brann's Cozy Campfire",
"Kriegval's Rest",
"enUS",
},
[16803] = {
"Death Knight Understudy",
"Naxxramas",
"enUS",
},
[76906] = {
"Operator Thogar",
"Blackrock Foundry",
"enUS",
},
[1863] = {
"Aliersia",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[66413] = {
"Yeasty Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[64183] = {
"Enormous Stone Quilen",
"Mogu'shan Vaults",
"enUS",
},
[403731] = {
"Frozen Rune",
"Naxxramas",
"enUS",
},
[71788] = {
"Crawler Mine",
"Siege of Orgrimmar",
"enUS",
},
[125535] = {
"Riftworld Assistant",
"Antorus, the Burning Throne",
"enUS",
},
[84841] = {
"Iron Dockworker",
"Blackrock Foundry",
"enUS",
},
[61240] = {
"Glintrok Skulker",
"Mogu'shan Palace",
"enUS",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[128095] = {
"Sister of the Lash",
"Antorus, the Burning Throne",
"enUS",
},
[33983] = {
"Constrictor Tentacle",
"Ulduar",
"enUS",
},
[63032] = {
"Sra'thik Shield Master",
"Heart of Fear",
"enUS",
},
[59193] = {
"Boneweaver",
"Scholomance",
"enUS",
},
[59705] = {
"Scarlet Flamethrower",
"Scarlet Monastery",
"enUS",
},
[16018] = {
"Bile Retcher",
"Naxxramas",
"enUS",
},
[16146] = {
"Death Knight",
"Naxxramas",
"enUS",
},
[56762] = {
"Yu'lon",
"Temple of the Jade Serpent",
"enUS",
},
[56890] = {
"Krik'thik Infiltrator",
"Gate of the Setting Sun",
"enUS",
},
[174773] = {
"Spiteful Shade",
"The Azure Vault",
"enUS",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[24674] = {
"Phoenix",
"Magisters' Terrace",
"enUS",
},
[62009] = {
"Shadows of Anger",
"Crypt of Forgotten Kings",
"enUS",
},
[203951] = {
"Kobold Skullface",
"Kriegval's Rest",
"enUS",
},
[58810] = {
"Fragment of Hatred",
"Shado-Pan Monastery",
"enUS",
},
[17252] = {
"Shaamawl",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[122467] = {
"Asara, Mother of Night",
"Antorus, the Burning Throne",
"enUS",
},
[17380] = {
"Broggok",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[64185] = {
"Bataari War Yeti",
"Brewmoon Festival",
"enUS",
},
[92523] = {
"Vazeel'fazag",
"Hellfire Citadel",
"enUS",
},
[56763] = {
"Regenerating Sha",
"Shado-Pan Monastery",
"enUS",
},
[122468] = {
"Noura, Mother of Flames",
"Antorus, the Burning Throne",
"enUS",
},
[114534] = {
"Helhound",
"Trial of Valor",
"enUS",
},
[111975] = {
"Shadowfeather",
"The Emerald Nightmare",
"enUS",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[58555] = {
"Scarlet Fanatic",
"Scarlet Monastery",
"enUS",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[122469] = {
"Diima, Mother of Gloom",
"Antorus, the Burning Throne",
"enUS",
},
[412967] = {
"Helm of Memories",
"Kriegval's Rest",
"enUS",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[59835] = {
"Krik'thik Swarmer",
"Gate of the Setting Sun",
"enUS",
},
[228015] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[56636] = {
"Commander Ri'mok",
"Gate of the Setting Sun",
"enUS",
},
[113512] = {
"Putrid Sludge",
"The Nighthold",
"enUS",
},
[61243] = {
"Gekkan",
"Mogu'shan Palace",
"enUS",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[156866] = {
"Ra-den",
"Ny'alotha, the Waking City",
"enUS",
},
[194745] = {
"Rotfang Hyena",
"Brackenhide Hollow",
"enUS",
},
[217268] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[92526] = {
"Zerik'shekor",
"Hellfire Citadel",
"enUS",
},
[58684] = {
"Scarlet Scourge Hewer",
"Scarlet Halls",
"enUS",
},
[58812] = {
"Hateful Essence",
"Shado-Pan Monastery",
"enUS",
},
[63035] = {
"Zar'thik Zealot",
"Heart of Fear",
"enUS",
},
[114537] = {
"Helya",
"Trial of Valor",
"enUS",
},
[111210] = {
"Searing Infernal",
"The Nighthold",
"enUS",
},
[218805] = {
"Cache of Ancient Treasures",
"Throne of Thunder",
"enUS",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[92527] = {
"Dag'gorath",
"Hellfire Citadel",
"enUS",
},
[56637] = {
"Ook-Ook",
"Stormstout Brewery",
"enUS",
},
[56765] = {
"Destroying Sha",
"Shado-Pan Monastery",
"enUS",
},
[93295] = {
"Darkcaster Adept",
"Hellfire Citadel",
"enUS",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[18341] = {
"Pandemonius",
"Auchindoun: Mana-Tombs",
"enUS",
},
[114538] = {
"Kvaldir Spiritrender",
"Trial of Valor",
"enUS",
},
[114794] = {
"Skeletal Hound",
"Return to Karazhan",
"enUS",
},
[58685] = {
"Scarlet Evangelist",
"Scarlet Halls",
"enUS",
},
[63036] = {
"Kor'thik Extremist",
"Heart of Fear",
"enUS",
},
[77428] = {
"Imperator Mar'gok",
"Highmaul",
"enUS",
},
[114539] = {
"Kvaldir Reefcaller",
"Trial of Valor",
"enUS",
},
[94832] = {
"Gorebound Assassin",
"Hellfire Citadel",
"enUS",
},
[71030] = {
"Overseer Elaglo",
"The Secrets of Ragefire",
"enUS",
},
[71542] = {
"Blood",
"Siege of Orgrimmar",
"enUS",
},
[213179] = {
"Avanoxx",
"Ara-Kara, City of Echoes",
"enUS",
},
[210108] = {
"E.D.N.A",
"The Stonevault",
"enUS",
},
[56766] = {
"Volatile Energy",
"Shado-Pan Monastery",
"enUS",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
},
[81780] = {
"Guard Captain Thag",
"Highmaul",
"enUS",
},
[114796] = {
"Wholesome Hostess",
"Return to Karazhan",
"enUS",
},
[210109] = {
"Earth Infused Golem",
"The Stonevault",
"enUS",
},
[87411] = {
"Workshop Guardian",
"Blackrock Foundry",
"enUS",
},
[62397] = {
"Wind Lord Mel'jarak",
"Heart of Fear",
"enUS",
},
[33988] = {
"Immortal Guardian",
"Ulduar",
"enUS",
},
[93298] = {
"Shadowheart Fiend",
"Hellfire Citadel",
"enUS",
},
[188100] = {
"Shrieking Whelp",
"The Azure Vault",
"enUS",
},
[64061] = {
"Mogu'shan Warden",
"Mogu'shan Vaults",
"enUS",
},
[95602] = {
"Mystic Velruun",
"Hellfire Citadel",
"enUS",
},
[56511] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[125547] = {
"Feltouched Skitterer",
"Antorus, the Burning Throne",
"enUS",
},
[56895] = {
"Weak Spot",
"Gate of the Setting Sun",
"enUS",
},
[81270] = {
"Gorian Guardsman",
"Highmaul",
"enUS",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
"enUS",
},
[213696] = {
"Molten Scorpid",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[462136] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[211137] = {
"Sliding Door",
"Stormstout Brewery",
"enUS",
},
[462137] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[462138] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[228030] = {
"Sir Finley Mrrgglton",
"Nightfall Sanctum",
"enUS",
},
[122477] = {
"F'harg",
"Antorus, the Burning Throne",
"enUS",
},
[90485] = {
"Felfire Artillery",
"Hellfire Citadel",
"enUS",
},
[462140] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[64446] = {
"Training Dummy",
"Scarlet Monastery",
"enUS",
},
[125549] = {
"Hungering Stalker",
"Antorus, the Burning Throne",
"enUS",
},
[462142] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[211140] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[81272] = {
"Gorian Runemaster",
"Highmaul",
"enUS",
},
[93813] = {
"Contracted Engineer",
"Hellfire Citadel",
"enUS",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
"enUS",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
"enUS",
},
[224962] = {
"Cursedforge Mender",
"The Stonevault",
"enUS",
},
[68220] = {
"Gastropod",
"Throne of Thunder",
"enUS",
},
[68476] = {
"Horridon",
"Throne of Thunder",
"enUS",
},
[69756] = {
"Anima Orb",
"Throne of Thunder",
"enUS",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[78714] = {
"Kargath Bladefist",
"Highmaul",
"enUS",
},
[64063] = {
"Mogu'shan Arcanist",
"Mogu'shan Vaults",
"enUS",
},
[180431] = {
"Focused Ritualist",
"Tazavesh, the Veiled Market",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[68221] = {
"Bore Worm",
"Throne of Thunder",
"enUS",
},
[93303] = {
"Slavering Hound",
"Hellfire Citadel",
"enUS",
},
[18343] = {
"Tavarok",
"Auchindoun: Mana-Tombs",
"enUS",
},
[114546] = {
"Risen Bonethrall",
"Trial of Valor",
"enUS",
},
[217799] = {
"Machinist Protector",
"Hall of Awakening",
"enUS",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[123760] = {
"Fel-Infused Destructor",
"Antorus, the Burning Throne",
"enUS",
},
[180433] = {
"Wandering Pulsar",
"Tazavesh, the Veiled Market",
},
[67966] = {
"Whirl Turtle",
"Throne of Thunder",
"enUS",
},
[68222] = {
"Bow Fly Swarm",
"Throne of Thunder",
"enUS",
},
[248513] = {
"Felbound Chest",
"The Nighthold",
"enUS",
},
[114547] = {
"Ancient Bonethrall",
"Trial of Valor",
"enUS",
},
[114803] = {
"Spectral Stable Hand",
"Return to Karazhan",
"enUS",
},
[221896] = {
"Web General Ab'enar",
"Earthcrawl Mines",
"enUS",
},
[15956] = {
"Anub'Rekhan",
"Naxxramas",
"enUS",
},
[16020] = {
"Mad Scientist",
"Naxxramas",
"enUS",
},
[184018] = {
"Bromach",
"Uldaman: Legacy of Tyr",
"enUS",
},
[16148] = {
"Spectral Death Knight",
"Naxxramas",
"enUS",
},
[113012] = {
"Felsworn Chaos-Mage",
"The Nighthold",
"enUS",
},
[201934] = {
"Shadowflame Amalgamation",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[16244] = {
"Infectious Ghoul",
"Naxxramas",
"enUS",
},
[220362] = {
"Pirate Hat",
"Naval Battle Scenario",
"enUS",
},
[102263] = {
"Skorpyron",
"The Nighthold",
"enUS",
},
[114804] = {
"Spectral Charger",
"Return to Karazhan",
"enUS",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[200912] = {
"Neldris",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[113013] = {
"Felsworn Shadowblade",
"The Nighthold",
"enUS",
},
[84860] = {
"Iron Earthbinder",
"Blackrock Foundry",
"enUS",
},
[77182] = {
"Oregorger",
"Blackrock Foundry",
"enUS",
},
[208591] = {
"Haunted War Drum",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59458] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[178392] = {
"Gatewarden Zo'mazz",
"Tazavesh, the Veiled Market",
},
[228044] = {
"Reno Jackson",
"Nightfall Sanctum",
"enUS",
},
[18344] = {
"Nexus-Prince Shaffar",
"Auchindoun: Mana-Tombs",
"enUS",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
"enUS",
},
[61634] = {
"Commander Vo'jak",
"Siege of Niuzao Temple",
"enUS",
},
[62402] = {
"Kor'thik Elite Blademaster",
"Heart of Fear",
"enUS",
},
[222927] = {
"Sacred Flame Vintner",
"Priory of the Sacred Flame",
"enUS",
},
[93308] = {
"Portal Guardian",
"Hellfire Citadel",
"enUS",
},
[59459] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[198870] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[120182] = {
"Tormented Priestess",
"Tomb of Sargeras",
"enUS",
},
[200918] = {
"Rionthus",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[198871] = {
"Sundered Scaleguard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[216275] = {
"Brann's Epic Egg",
"Tak-Rethan Abyss",
"enUS",
},
[217299] = {
"Ostiary Wystan",
"Hall of Awakening",
"enUS",
},
[70787] = {
"Skullcrusher Gundu",
"Blood in the Snow",
"enUS",
},
[211669] = {
"Polyformic Acid Potion",
"Scholomance",
"enUS",
},
[218324] = {
"Nakt",
"Ara-Kara, City of Echoes",
"enUS",
},
[121975] = {
"Aggramar",
"Antorus, the Burning Throne",
"enUS",
},
[73091] = {
"Blackfuse Sellsword",
"Siege of Orgrimmar",
"enUS",
},
[59460] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[218325] = {
"Swarming Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[78978] = {
"Darkshard Gnasher",
"Blackrock Foundry",
"enUS",
},
[95614] = {
"Binder Eloah",
"Hellfire Citadel",
"enUS",
},
[111227] = {
"Felweaver Pharamere",
"The Nighthold",
"enUS",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
},
[70789] = {
"Zandalari Rage Banner",
"Blood in the Snow",
"enUS",
},
[91520] = {
"Adjunct Kuroh",
"Hellfire Citadel",
"enUS",
},
[112251] = {
"Putrid Sludge",
"The Nighthold",
"enUS",
},
[120697] = {
"Worshiper of Elune",
"Tomb of Sargeras",
"enUS",
},
[413046] = {
"Bismuth",
"Earthcrawl Mines",
"enUS",
},
[59461] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[15989] = {
"Sapphiron",
"Naxxramas",
"enUS",
},
[64068] = {
"Mogu'shan Engine Keeper",
"Mogu'shan Vaults",
"enUS",
},
[91521] = {
"Vindicator Bramu",
"Hellfire Citadel",
"enUS",
},
[413049] = {
"Ironclaw",
"Kriegval's Rest",
"enUS",
},
[16149] = {
"Spectral Horse",
"Naxxramas",
"enUS",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
},
[200927] = {
"Smolderon",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[24744] = {
"Vexallus",
"Magisters' Terrace",
"enUS",
},
[91522] = {
"Protector Bajunt",
"Hellfire Citadel",
"enUS",
},
[71303] = {
"Whale Shark",
"Naval Battle Scenario",
"enUS",
},
[62405] = {
"Sra'thik Amber-Trapper",
"Heart of Fear",
"enUS",
},
[58822] = {
"Risen Guard",
"Scholomance",
"enUS",
},
[59078] = {
"Failed Student",
"Scholomance",
"enUS",
},
[114813] = {
"Kvaldir Tide Witch",
"Trial of Valor",
"enUS",
},
[168681] = {
"Forsworn Helion",
"Spires of Ascension",
},
[59974] = {
"Campari",
"Scarlet Monastery",
"enUS",
},
[17770] = {
"Hungarfen",
"Coilfang: The Underbog",
"enUS",
},
[64453] = {
"Set'thik Windblade",
"Heart of Fear",
"enUS",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[67977] = {
"Tortos",
"Throne of Thunder",
"enUS",
},
[441724] = {
"X-treme Water Blaster Display",
"Uldaman: Legacy of Tyr",
"enUS",
},
[213216] = {
"Speaker Dorlita",
"The Stonevault",
"enUS",
},
[61766] = {
"Crypt Guardian",
"Crypt of Forgotten Kings",
"enUS",
},
[112255] = {
"Sludgerax",
"The Nighthold",
"enUS",
},
[213217] = {
"Speaker Brokk",
"The Stonevault",
"enUS",
},
[58823] = {
"Scholomance Neophyte",
"Scholomance",
"enUS",
},
[19306] = {
"Mana Leech",
"Auchindoun: Mana-Tombs",
"enUS",
},
[254168] = {
"Spoils of the Nightmare",
"The Emerald Nightmare",
"enUS",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[210147] = {
"Harbinger of Incineration",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[219361] = {
"Machinist Protector",
"Hall of Awakening",
"enUS",
},
[64454] = {
"Zar'thik Augurer",
"Heart of Fear",
"enUS",
},
[219874] = {
"High Speaker's Construct",
"Hall of Awakening",
"enUS",
},
[16427] = {
"Soldier of the Frozen Wastes",
"Naxxramas",
"enUS",
},
[24745] = {
"Pure Energy",
"Magisters' Terrace",
"enUS",
},
[120191] = {
"Eternal Soulguard",
"Tomb of Sargeras",
"enUS",
},
[92038] = {
"Hulking Terror",
"Hellfire Citadel",
"enUS",
},
[210150] = {
"Flametouched Enforcer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190187] = {
"Draconic Image",
"The Azure Vault",
"enUS",
},
[59080] = {
"Darkmaster Gandling",
"Scholomance",
"enUS",
},
[93830] = {
"Iron Dragoon",
"Hellfire Citadel",
"enUS",
},
[59464] = {
"Hopper",
"Stormstout Brewery",
"enUS",
},
[17771] = {
"Murkblood Oracle",
"Coilfang: The Underbog",
"enUS",
},
[92039] = {
"Bleeding Grunt",
"Hellfire Citadel",
"enUS",
},
[442763] = {
"Soggy Chest",
"Tak-Rethan Abyss",
"enUS",
},
[195820] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[401814] = {
"Void-Touched Chest",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[195821] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[62408] = {
"Zar'thik Battle-Mender",
"Heart of Fear",
"enUS",
},
[58569] = {
"Scarlet Purifier",
"Scarlet Monastery",
"enUS",
},
[428434] = {
"Treasure Chest",
"The Spiral Weave",
"enUS",
},
[63048] = {
"Kor'thik Slicer",
"Heart of Fear",
"enUS",
},
[19307] = {
"Nexus Terror",
"Auchindoun: Mana-Tombs",
"enUS",
},
[15990] = {
"Kel'Thuzad",
"Naxxramas",
"enUS",
},
[16022] = {
"Surgical Assistant",
"Naxxramas",
"enUS",
},
[120194] = {
"Ghostly Acolyte",
"Tomb of Sargeras",
"enUS",
},
[112260] = {
"Dreadsoul Defiler",
"The Emerald Nightmare",
"enUS",
},
[92041] = {
"Bleeding Darkcaster",
"Hellfire Citadel",
"enUS",
},
[16150] = {
"Spectral Rider",
"Naxxramas",
"enUS",
},
[117123] = {
"Tidescale Legionnaire",
"Tomb of Sargeras",
"enUS",
},
[125569] = {
"Riftworld Assistant",
"Antorus, the Burning Throne",
"enUS",
},
[56906] = {
"Saboteur Kip'tilak",
"Gate of the Setting Sun",
"enUS",
},
[24554] = {
"Eramas Brightblaze",
"Magisters' Terrace",
"enUS",
},
[16428] = {
"Unstoppable Abomination",
"Naxxramas",
"enUS",
},
[115844] = {
"Goroth",
"Tomb of Sargeras",
"enUS",
},
[112261] = {
"Dreadsoul Corruptor",
"The Emerald Nightmare",
"enUS",
},
[213741] = {
"Voidstone Awakened",
"The Rookery",
"enUS",
},
[125570] = {
"Riftworld Assistant",
"Antorus, the Burning Throne",
"enUS",
},
[58826] = {
"Zao Sunseeker",
"Temple of the Jade Serpent",
"enUS",
},
[63049] = {
"Set'thik Swiftblade",
"Heart of Fear",
"enUS",
},
[59722] = {
"Pile of Corpses",
"Scarlet Monastery",
"enUS",
},
[70544] = {
"Hekima the Wise",
"Blood in the Snow",
"enUS",
},
[71312] = {
"Alliance Deckhand",
"Naval Battle Scenario",
"enUS",
},
[56395] = {
"Shado-Pan Novice",
"Shado-Pan Monastery",
"enUS",
},
[213743] = {
"Enraged Skardyn",
"Hall of Awakening",
"enUS",
},
[80526] = {
"Stubborn Ironhoof",
"Blackrock Foundry",
"enUS",
},
[81806] = {
"Gorian Royal Guardsman",
"Highmaul",
"enUS",
},
[94859] = {
"Armored Skullsmasher",
"Hellfire Citadel",
"enUS",
},
[186615] = {
"The Raging Tempest",
"The Nokhud Offensive",
"enUS",
},
[101002] = {
"Krosus",
"The Nighthold",
"enUS",
},
[157439] = {
"Fury of N'Zoth",
"Ny'alotha, the Waking City",
"enUS",
},
[186616] = {
"Granyth",
"The Nokhud Offensive",
"enUS",
},
[81807] = {
"Councilor Nouk",
"Highmaul",
"enUS",
},
[59467] = {
"Candlestick Mage",
"Scholomance",
"enUS",
},
[94604] = {
"Gorebound Corruptor",
"Hellfire Citadel",
"enUS",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[191736] = {
"Crawth",
"Algeth'ar Academy",
"enUS",
},
[64458] = {
"Kor'thik Warsinger",
"Heart of Fear",
"enUS",
},
[61131] = {
"Mogu'shan Secret-Keeper",
"Mogu'shan Vaults",
"enUS",
},
[114312] = {
"Moroes",
"Return to Karazhan",
"enUS",
},
[81808] = {
"Councilor Magknor",
"Highmaul",
"enUS",
},
[16429] = {
"Soul Weaver",
"Naxxramas",
"enUS",
},
[24683] = {
"Sunblade Mage Guard",
"Magisters' Terrace",
"enUS",
},
[94861] = {
"Grim Ambusher",
"Hellfire Citadel",
"enUS",
},
[186107] = {
"Vault Keeper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162049] = {
"Vestige of Doubt",
"Sanguine Depths",
},
[62795] = {
"Sik'thik Warden",
"Siege of Niuzao Temple",
"enUS",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
"enUS",
},
[81809] = {
"Councilor Gorluk",
"Highmaul",
"enUS",
},
[59980] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[95630] = {
"Construct Peacekeeper",
"Hellfire Citadel",
"enUS",
},
[454055] = {
"Luredrop",
"Tak-Rethan Abyss",
"enUS",
},
[190205] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[69013] = {
"Diffused Lightning",
"Throne of Thunder",
"enUS",
},
[94607] = {
"Gorebound Cauterizer",
"Hellfire Citadel",
"enUS",
},
[214264] = {
"Cursedforge Honor Guard",
"The Stonevault",
"enUS",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
"enUS",
},
[120201] = {
"Spectral Guardian",
"Tomb of Sargeras",
"enUS",
},
[210170] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
"enUS",
},
[59213] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[81811] = {
"High Councilor Mal'gris",
"Highmaul",
"enUS",
},
[95632] = {
"Sargerei Enforcer",
"Hellfire Citadel",
"enUS",
},
[364997] = {
"Teleportation Pad",
"Tomb of Sargeras",
"enUS",
},
[16215] = {
"Unholy Staff",
"Naxxramas",
"enUS",
},
[194816] = {
"Forgewrought Monstrosity",
"Neltharus",
"enUS",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
"enUS",
},
[24556] = {
"Zelfan",
"Magisters' Terrace",
"enUS",
},
[24684] = {
"Sunblade Blood Knight",
"Magisters' Terrace",
"enUS",
},
[210173] = {
"Zaqali Steelshaper",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[187139] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
"enUS",
},
[68248] = {
"Corpse Spider",
"Throne of Thunder",
"enUS",
},
[186116] = {
"Gutshot",
"Brackenhide Hollow",
"enUS",
},
[63053] = {
"Garalon's Leg",
"Heart of Fear",
"enUS",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
"enUS",
},
[184581] = {
"Baelog",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59598] = {
"Lesser Sha",
"Temple of the Jade Serpent",
"enUS",
},
[59726] = {
"Peril",
"Temple of the Jade Serpent",
"enUS",
},
[157452] = {
"Nightmare Antigen",
"Ny'alotha, the Waking City",
"enUS",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[80534] = {
"Ornery Ironhoof",
"Blackrock Foundry",
"enUS",
},
[69017] = {
"Primordius",
"Throne of Thunder",
"enUS",
},
[114318] = {
"Baron Rafe Dreuger",
"Return to Karazhan",
"enUS",
},
[123532] = {
"Dark Keeper",
"Antorus, the Burning Throne",
"enUS",
},
[58319] = {
"Lesser Sha",
"Temple of the Jade Serpent",
"enUS",
},
[186120] = {
"Treemouth",
"Brackenhide Hollow",
"enUS",
},
[236796] = {
"Chair",
"SMV Alliance Garrison Level 2",
"enUS",
},
[176395] = {
"Overloaded Mailemental",
"Tazavesh, the Veiled Market",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[123533] = {
"Tarneth",
"Antorus, the Burning Throne",
"enUS",
},
[186121] = {
"Decatriarch Wratheye",
"Brackenhide Hollow",
"enUS",
},
[95636] = {
"Sargerei Adjutant",
"Hellfire Citadel",
"enUS",
},
[212739] = {
"Radiating Voidstone",
"The Rookery",
"enUS",
},
[176396] = {
"Defective Sorter",
"Tazavesh, the Veiled Market",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[186122] = {
"Rira Hackclaw",
"Brackenhide Hollow",
"enUS",
},
[56912] = {
"Krik'thik Engulfer",
"Gate of the Setting Sun",
"enUS",
},
[114320] = {
"Lord Robin Daris",
"Return to Karazhan",
"enUS",
},
[24685] = {
"Sunblade Magister",
"Magisters' Terrace",
"enUS",
},
[120463] = {
"Undersea Custodian",
"Tomb of Sargeras",
"enUS",
},
[120719] = {
"Lunar Priestess",
"Tomb of Sargeras",
"enUS",
},
[62543] = {
"Blade Lord Ta'yak",
"Heart of Fear",
"enUS",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
},
[186124] = {
"Gashtooth",
"Brackenhide Hollow",
"enUS",
},
[191243] = {
"Wild Lasher",
"Brackenhide Hollow",
"enUS",
},
[114321] = {
"Lord Crispin Ference",
"Return to Karazhan",
"enUS",
},
[106643] = {
"Elisande",
"The Nighthold",
"enUS",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[95638] = {
"Sargerei Bannerman",
"Hellfire Citadel",
"enUS",
},
[224516] = {
"Skardyn Invader",
"The Stonevault",
"enUS",
},
[120720] = {
"Lunar Guard",
"Tomb of Sargeras",
"enUS",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
"enUS",
},
[61392] = {
"Harthak Flameseeker",
"Mogu'shan Palace",
"enUS",
},
[192781] = {
"Ore Elemental",
"Neltharus",
"enUS",
},
[193293] = {
"Qalashi Warden",
"Neltharus",
"enUS",
},
[78491] = {
"Brackenspore",
"Highmaul",
"enUS",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
"enUS",
},
[215816] = {
"Bench",
"Temple of the Jade Serpent",
"enUS",
},
[159510] = {
"Eye of the Depths",
"Ny'alotha, the Waking City",
"enUS",
},
[113043] = {
"Abyss Watcher",
"The Nighthold",
"enUS",
},
[219912] = {
"Crawler",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[114323] = {
"Guarm",
"Trial of Valor",
"enUS",
},
[217353] = {
"Master Machinist Dunstan",
"Hall of Awakening",
"enUS",
},
[15928] = {
"Thaddius",
"Naxxramas",
"enUS",
},
[16024] = {
"Embalming Slime",
"Naxxramas",
"enUS",
},
[95640] = {
"Sargerei Soul Cleaver",
"Hellfire Citadel",
"enUS",
},
[195855] = {
"Risen Warrior",
"The Nokhud Offensive",
"enUS",
},
[16216] = {
"Unholy Swords",
"Naxxramas",
"enUS",
},
[214795] = {
"Ancient Mogu Treasure",
"Mogu'shan Palace",
"enUS",
},
[130192] = {
"Hulking Demolisher",
"Antorus, the Burning Throne",
"enUS",
},
[187154] = {
"Unstable Curator",
"The Azure Vault",
"enUS",
},
[24686] = {
"Sunblade Warlock",
"Magisters' Terrace",
"enUS",
},
[94873] = {
"Felfire Flamebelcher",
"Hellfire Citadel",
"enUS",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
"enUS",
},
[71327] = {
"Admiral Hodgson",
"Naval Battle Scenario",
"enUS",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[192786] = {
"Qalashi Plunderer",
"Neltharus",
"enUS",
},
[157467] = {
"Void Ascendant",
"Ny'alotha, the Waking City",
"enUS",
},
[186644] = {
"Leymor",
"The Azure Vault",
"enUS",
},
[216333] = {
"Bloodstained Assistant",
"Ara-Kara, City of Echoes",
"enUS",
},
[204560] = {
"Incorporeal Being",
"Neltharus",
"enUS",
},
[192787] = {
"Qalashi Spinecrusher",
"Neltharus",
"enUS",
},
[94618] = {
"Cattwen",
"Hellfire Citadel",
"enUS",
},
[95642] = {
"Korvos",
"Hellfire Citadel",
"enUS",
},
[71328] = {
"Lieutenant Fuseblast",
"Naval Battle Scenario",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
"enUS",
},
[217870] = {
"Devouring Shade",
"Nightfall Sanctum",
"enUS",
},
[214287] = {
"Earth Burst Totem",
"The Stonevault",
"enUS",
},
[56915] = {
"Sun",
"Temple of the Jade Serpent",
"enUS",
},
[192789] = {
"Nokhud Longbow",
"The Nokhud Offensive",
"enUS",
},
[187159] = {
"Shrieking Whelp",
"The Azure Vault",
"enUS",
},
[216336] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[187160] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[216337] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[63570] = {
"Sra'thik Pool-Tender",
"Heart of Fear",
"enUS",
},
[197398] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[19632] = {
"Lykul Stinger",
"Coilfang: The Underbog",
"enUS",
},
[215826] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[216338] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[113048] = {
"Corrupted Deer",
"The Emerald Nightmare",
"enUS",
},
[61139] = {
"Shan-xi Watershaper",
"Mogu'shan Vaults",
"enUS",
},
[114584] = {
"Phantom Crew",
"Return to Karazhan",
"enUS",
},
[24687] = {
"Sunblade Physician",
"Magisters' Terrace",
"enUS",
},
[24815] = {
"Sunblade Imp",
"Magisters' Terrace",
"enUS",
},
[216340] = {
"Sentry Stagshell",
"Ara-Kara, City of Echoes",
"enUS",
},
[192794] = {
"Nokhud Beastmaster",
"The Nokhud Offensive",
"enUS",
},
[218388] = {
"Sewer Grate",
"Throne of Thunder",
"enUS",
},
[194330] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[59220] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[70308] = {
"Soul-Fed Construct",
"Throne of Thunder",
"enUS",
},
[64339] = {
"Instructor Tak'thok",
"Heart of Fear",
"enUS",
},
[163619] = {
"Zolramus Bonecarver",
"The Necrotic Wake",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
"enUS",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
},
[214296] = {
"Blade of the Anointed",
"Scarlet Monastery",
"enUS",
},
[120473] = {
"Tidescale Combatant",
"Tomb of Sargeras",
"enUS",
},
[216856] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[113307] = {
"Chronowraith",
"The Nighthold",
"enUS",
},
[81315] = {
"Iron Crack-Shot",
"Blackrock Foundry",
"enUS",
},
[15929] = {
"Stalagg",
"Naxxramas",
"enUS",
},
[16025] = {
"Stitched Giant",
"Naxxramas",
"enUS",
},
[16057] = {
"Rotting Maggot",
"Naxxramas",
"enUS",
},
[64340] = {
"Instructor Maltik",
"Heart of Fear",
"enUS",
},
[155433] = {
"Void-Touched Emissary",
"Freehold",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
"enUS",
},
[113052] = {
"Dreadguard",
"The Nighthold",
"enUS",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[77477] = {
"Marak the Blooded",
"Blackrock Foundry",
"enUS",
},
[20465] = {
"Underbog Frenzy",
"Coilfang: The Underbog",
"enUS",
},
[24688] = {
"Wretched Skulker",
"Magisters' Terrace",
"enUS",
},
[212765] = {
"Void Bound Despoiler",
"The Stonevault",
"enUS",
},
[221979] = {
"Void Bound Howler",
"The Stonevault",
"enUS",
},
[93858] = {
"Hulking Berserker",
"Hellfire Citadel",
"enUS",
},
[192803] = {
"War Ohuna",
"The Nokhud Offensive",
"enUS",
},
[70824] = {
"Fiery Anger",
"Heart of the Old God Scenario",
"enUS",
},
[64341] = {
"Instructor Zarik",
"Heart of Fear",
"enUS",
},
[456183] = {
"Explorers' League Rope",
"Tak-Rethan Abyss",
"enUS",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
"enUS",
},
[61398] = {
"Xin the Weaponmaster",
"Mogu'shan Palace",
"enUS",
},
[186151] = {
"Balakar Khan",
"The Nokhud Offensive",
"enUS",
},
[79015] = {
"Ko'ragh",
"Highmaul",
"enUS",
},
[120477] = {
"Deep Stalker",
"Tomb of Sargeras",
"enUS",
},
[124828] = {
"Argus the Unmaker",
"Antorus, the Burning Throne",
"enUS",
},
[80551] = {
"Shard of Tectus",
"Highmaul",
"enUS",
},
[186664] = {
"Stonevault Ambusher",
"Uldaman: Legacy of Tyr",
"enUS",
},
[195878] = {
"Ukhel Beastcaller",
"The Nokhud Offensive",
"enUS",
},
[59479] = {
"Yan-Zhu the Uncasked",
"Stormstout Brewery",
"enUS",
},
[60375] = {
"Zandalari Skullcharger",
"Mogu'shan Vaults",
"enUS",
},
[213795] = {
"Stormstout Secrets",
"Stormstout Brewery",
"enUS",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
"enUS",
},
[24689] = {
"Wretched Bruiser",
"Magisters' Terrace",
"enUS",
},
[61783] = {
"Crypt Guardian",
"Crypt of Forgotten Kings",
"enUS",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
"enUS",
},
[62807] = {
"Hungry Virmen",
"Brewmoon Festival",
"enUS",
},
[63191] = {
"Garalon",
"Heart of Fear",
"enUS",
},
[17395] = {
"Shadowmoon Summoner",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[59480] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[70060] = {
"Shadowed Voodoo Spirit",
"Throne of Thunder",
"enUS",
},
[156980] = {
"Essence of Void",
"Ny'alotha, the Waking City",
"enUS",
},
[112290] = {
"Horrid Eagle",
"The Emerald Nightmare",
"enUS",
},
[114338] = {
"Mana Confluence",
"Return to Karazhan",
"enUS",
},
[86185] = {
"Night-Twisted Supplicant",
"Highmaul",
"enUS",
},
[31216] = {
"Schuerkí",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[112803] = {
"Astrologer Jarin",
"The Nighthold",
"enUS",
},
[117154] = {
"Razorjaw Acolyte",
"Tomb of Sargeras",
"enUS",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
},
[15930] = {
"Feugen",
"Naxxramas",
"enUS",
},
[91305] = {
"Fel Iron Summoner",
"Hellfire Citadel",
"enUS",
},
[120482] = {
"Tidescale Seacaller",
"Tomb of Sargeras",
"enUS",
},
[112804] = {
"Trained Shadescale",
"The Nighthold",
"enUS",
},
[216363] = {
"Reinforced Drone",
"Ara-Kara, City of Echoes",
"enUS",
},
[24690] = {
"Wretched Husk",
"Magisters' Terrace",
"enUS",
},
[216364] = {
"Blood Overseer",
"Ara-Kara, City of Echoes",
"enUS",
},
[336432] = {
"Lavish Refreshment Table",
"Brackenhide Hollow",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
"enUS",
},
[80557] = {
"Mote of Tectus",
"Highmaul",
"enUS",
},
[76974] = {
"Franzok",
"Blackrock Foundry",
"enUS",
},
[216365] = {
"Winged Carrier",
"Ara-Kara, City of Echoes",
"enUS",
},
[77231] = {
"Enforcer Sorka",
"Blackrock Foundry",
"enUS",
},
[90284] = {
"Iron Reaver",
"Hellfire Citadel",
"enUS",
},
[205618] = {
"Thorak Greenscale",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[112039] = {
"Screeching Spiderling",
"The Emerald Nightmare",
"enUS",
},
[146753] = {
"Kul Tiran Marine",
"Battle of Dazar'alor",
},
[205619] = {
"Sarek Cinderbreath",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[212786] = {
"Voidrider",
"The Rookery",
"enUS",
},
[205620] = {
"Malgosa Spellbinder",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[218417] = {
"Displacement Pad",
"Throne of Thunder",
"enUS",
},
[111528] = {
"Deathroot Ancient",
"The Emerald Nightmare",
"enUS",
},
[80048] = {
"Vul'gor",
"Highmaul",
"enUS",
},
[218418] = {
"Displacement Pad",
"Throne of Thunder",
"enUS",
},
[56924] = {
"Inflamed Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[78001] = {
"Cloudburst Totem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205622] = {
"Krono Sandtongue",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[184124] = {
"Sentinel Talondras",
"Uldaman: Legacy of Tyr",
"enUS",
},
[33890] = {
"Brain of Yogg-Saron",
"Ulduar",
"enUS",
},
[205623] = {
"Drazos Blackwing",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[113321] = {
"Shambling Hungerer",
"The Nighthold",
"enUS",
},
[59100] = {
"Expired Test Subject",
"Scholomance",
"enUS",
},
[184125] = {
"Chrono-Lord Deios",
"Uldaman: Legacy of Tyr",
"enUS",
},
[210231] = {
"Tainted Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[17653] = {
"Shadowmoon Channeler",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[56541] = {
"Master Snowdrift",
"Shado-Pan Monastery",
"enUS",
},
[214840] = {
"Engorged Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[212793] = {
"Void Ascendant",
"The Rookery",
"enUS",
},
[189247] = {
"Tamed Phoenix",
"Neltharus",
"enUS",
},
[165189] = {
"Sul'raka",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205628] = {
"Twisted Elementium",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[211259] = {
"Iron Gate",
"Scholomance",
"enUS",
},
[67255] = {
"Darkhatched Shaman",
"Dagger in the Dark",
"enUS",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[211260] = {
"Iron Gate",
"Scholomance",
"enUS",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[67256] = {
"Darkhatched Oracle",
"Dagger in the Dark",
"enUS",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
"enUS",
},
[58590] = {
"Scarlet Zealot",
"Scarlet Monastery",
"enUS",
},
[17398] = {
"Nascent Fel Orc",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[59614] = {
"Bored Student",
"Scholomance",
"enUS",
},
[415296] = {
"Repair Kit",
"Tak-Rethan Abyss",
"enUS",
},
[67257] = {
"Darkhatched Skulker",
"Dagger in the Dark",
"enUS",
},
[184134] = {
"Scavenging Leaper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[121004] = {
"Razorjaw Myrmidon",
"Tomb of Sargeras",
"enUS",
},
[181575] = {
"Naxxramas Portal",
"Naxxramas",
"enUS",
},
[56927] = {
"Hozen Party Animal",
"Stormstout Brewery",
"enUS",
},
[114350] = {
"Shade of Medivh",
"Return to Karazhan",
"enUS",
},
[181576] = {
"Naxxramas Portal",
"Naxxramas",
"enUS",
},
[194373] = {
"Witherling",
"Brackenhide Hollow",
"enUS",
},
[211777] = {
"Spitfire Fusetender",
"Kriegval's Rest",
"enUS",
},
[67258] = {
"Darkhatched Skinflayer",
"Dagger in the Dark",
"enUS",
},
[87989] = {
"Forgemistress Flamehand",
"Blackrock Foundry",
"enUS",
},
[71865] = {
"Garrosh Hellscream",
"Siege of Orgrimmar",
"enUS",
},
[104881] = {
"Spellblade Aluriel",
"The Nighthold",
"enUS",
},
[165197] = {
"Skeletal Monstrosity",
"The Necrotic Wake",
},
[105393] = {
"Il'gynoth",
"The Emerald Nightmare",
"enUS",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59359] = {
"Flesh Horror",
"Scholomance",
"enUS",
},
[59487] = {
"Bubble Shield",
"Stormstout Brewery",
"enUS",
},
[214338] = {
"Kobyss Spearfisher",
"Tak-Rethan Abyss",
"enUS",
},
[70586] = {
"Eternal Guardian",
"Throne of Thunder",
"enUS",
},
[67259] = {
"Darkhatched Flesh-hunter",
"Dagger in the Dark",
"enUS",
},
[193352] = {
"Hextrick Totem",
"Brackenhide Hollow",
"enUS",
},
[105906] = {
"Eye of Il'gynoth",
"The Emerald Nightmare",
"enUS",
},
[192329] = {
"Territorial Eagle",
"Algeth'ar Academy",
"enUS",
},
[213828] = {
"Candleclaw Pyromancer",
"New Candle, New Hope",
"enUS",
},
[226625] = {
"Cave Skipper",
"Tak-Rethan Abyss",
"enUS",
},
[70587] = {
"Shale Stalker",
"Throne of Thunder",
"enUS",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[213829] = {
"Candleclaw Soilseer",
"New Candle, New Hope",
"enUS",
},
[59360] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[213830] = {
"Candleclaw Kobold",
"New Candle, New Hope",
"enUS",
},
[220485] = {
"Peculiar Nerubian",
"The Spiral Weave",
"enUS",
},
[233282] = {
"Refreshment Table",
"Heart of the Old God Scenario",
"enUS",
},
[213831] = {
"Candleclaw Underboss",
"New Candle, New Hope",
"enUS",
},
[214343] = {
"Kobyss Trickster",
"Tak-Rethan Abyss",
"enUS",
},
[56929] = {
"Krik'thik Protectorate",
"Gate of the Setting Sun",
"enUS",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
"enUS",
},
[90296] = {
"Soulbound Construct",
"Hellfire Citadel",
"enUS",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[163157] = {
"Amarth",
"The Necrotic Wake",
},
[213833] = {
"Candleclaw Knight",
"New Candle, New Hope",
"enUS",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
"enUS",
},
[390748] = {
"Challenger's Cache",
"Neltharus",
"enUS",
},
[15932] = {
"Gluth",
"Naxxramas",
"enUS",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[16028] = {
"Patchwerk",
"Naxxramas",
"enUS",
},
[390750] = {
"Challenger's Cache",
"Uldaman: Legacy of Tyr",
"enUS",
},
[204109] = {
"Cavernous Shrieker",
"Kriegval's Rest",
"enUS",
},
[16124] = {
"Unrelenting Trainee",
"Naxxramas",
"enUS",
},
[16156] = {
"Dark Touched Warrior",
"Naxxramas",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
"enUS",
},
[194896] = {
"Primal Stormshield",
"The Nokhud Offensive",
"enUS",
},
[191313] = {
"Bubbling Sapling",
"The Azure Vault",
"enUS",
},
[93881] = {
"Contracted Engineer",
"Hellfire Citadel",
"enUS",
},
[192337] = {
"Void Tendril",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189266] = {
"Qalashi Trainee",
"Neltharus",
"enUS",
},
[214348] = {
"Undersea Abomination",
"Tak-Rethan Abyss",
"enUS",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
"enUS",
},
[67264] = {
"Broodmaster Noshi",
"Dagger in the Dark",
"enUS",
},
[121011] = {
"Tidescale Witch",
"Tomb of Sargeras",
"enUS",
},
[58722] = {
"Lilian Voss",
"Scholomance",
"enUS",
},
[194898] = {
"Primalist Arcblade",
"The Nokhud Offensive",
"enUS",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
"enUS",
},
[185685] = {
"Urh Relic",
"Sanguine Depths",
},
[64353] = {
"Set'thik Gale-Slicer",
"Heart of Fear",
"enUS",
},
[60386] = {
"Zandalari Terror Rider",
"Mogu'shan Vaults",
"enUS",
},
[114614] = {
"Kvaldir Spiritrender",
"Trial of Valor",
"enUS",
},
[190294] = {
"Nokhud Stormcaster",
"The Nokhud Offensive",
"enUS",
},
[207186] = {
"Unruly Stormrook",
"The Rookery",
"enUS",
},
[67266] = {
"Rak'gor Bloodrazor",
"Dagger in the Dark",
"enUS",
},
[205651] = {
"Bubbling Slime",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[77504] = {
"Slag Behemoth",
"Blackrock Foundry",
"enUS",
},
[163678] = {
"Clotted Corruption",
"Ny'alotha, the Waking City",
"enUS",
},
[70594] = {
"Mist Lurker",
"Throne of Thunder",
"enUS",
},
[116407] = {
"Harjatan",
"Tomb of Sargeras",
"enUS",
},
[211284] = {
"Lever",
"Gate of the Setting Sun",
"enUS",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
"enUS",
},
[185691] = {
"Vicious Hyena",
"Brackenhide Hollow",
"enUS",
},
[70595] = {
"Frostmane Prowler",
"Blood in the Snow",
"enUS",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
"enUS",
},
[68036] = {
"Durumu the Forgotten",
"Throne of Thunder",
"enUS",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
"enUS",
},
[188252] = {
"Melidrussa Chillworn",
"Ruby Life Pools",
"enUS",
},
[205656] = {
"Sundered Chemist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[64355] = {
"Kor'thik Silentwing",
"Heart of Fear",
"enUS",
},
[104636] = {
"Cenarius",
"The Emerald Nightmare",
"enUS",
},
[68037] = {
"Darkhatched Screecher",
"Dagger in the Dark",
"enUS",
},
[18105] = {
"Ghaz'an",
"Coilfang: The Underbog",
"enUS",
},
[186206] = {
"Cruel Bonecrusher",
"Brackenhide Hollow",
"enUS",
},
[170850] = {
"Raging Bloodhorn",
"Theater of Pain",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
"enUS",
},
[70341] = {
"Tormented Spirit",
"Throne of Thunder",
"enUS",
},
[211289] = {
"Taener Duelmal",
"Priory of the Sacred Flame",
"enUS",
},
[187231] = {
"Wither Biter",
"Brackenhide Hollow",
"enUS",
},
[441966] = {
"Moldy Chest",
"Mycomancer Cavern",
"enUS",
},
[186208] = {
"Rotbow Ranger",
"Brackenhide Hollow",
"enUS",
},
[211290] = {
"Elaena Emberlanz",
"Priory of the Sacred Flame",
"enUS",
},
[212826] = {
"Guard Captain Suleyman",
"Priory of the Sacred Flame",
"enUS",
},
[213338] = {
"Forgebound Mender",
"The Stonevault",
"enUS",
},
[197982] = {
"Storm Warrior",
"Ruby Life Pools",
"enUS",
},
[211291] = {
"Sergeant Shaynemail",
"Priory of the Sacred Flame",
"enUS",
},
[16061] = {
"Instructor Razuvious",
"Naxxramas",
"enUS",
},
[212827] = {
"High Priest Aemya",
"Priory of the Sacred Flame",
"enUS",
},
[384641] = {
"Portal to Valdrakken",
"Brackenhide Hollow",
"enUS",
},
[207197] = {
"Cursed Rookguard",
"The Rookery",
"enUS",
},
[162664] = {
"Aqir Swarmer",
"Ny'alotha, the Waking City",
"enUS",
},
[114364] = {
"Mana-Gorged Wyrm",
"Return to Karazhan",
"enUS",
},
[118715] = {
"Reanimated Templar",
"Tomb of Sargeras",
"enUS",
},
[217435] = {
"Master Machinist Dunstan",
"Hall of Awakening",
"enUS",
},
[24696] = {
"Coilskar Witch",
"Magisters' Terrace",
"enUS",
},
[210781] = {
"Vault of Souls",
"Scholomance",
"enUS",
},
[207198] = {
"Cursed Thunderer",
"The Rookery",
"enUS",
},
[204127] = {
"Kobold Taskfinder",
"Kriegval's Rest",
"enUS",
},
[156523] = {
"Maut",
"Ny'alotha, the Waking City",
"enUS",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
"enUS",
},
[207199] = {
"Cursed Rooktender",
"The Rookery",
"enUS",
},
[73415] = {
"Ichor of Y'Shaarj",
"Siege of Orgrimmar",
"enUS",
},
[163690] = {
"Shath'Yar Scribe",
"Ny'alotha, the Waking City",
"enUS",
},
[59494] = {
"Yeasty Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[91331] = {
"Archimonde",
"Hellfire Citadel",
"enUS",
},
[71112] = {
"Quivering Blood",
"Heart of the Old God Scenario",
"enUS",
},
[64357] = {
"Kor'thik Swarmer",
"Heart of Fear",
"enUS",
},
[212831] = {
"Forge Master Damian",
"Priory of the Sacred Flame",
"enUS",
},
[213343] = {
"Forge Loader",
"The Stonevault",
"enUS",
},
[187238] = {
"Witherling",
"Brackenhide Hollow",
"enUS",
},
[61670] = {
"Sik'thik Demolisher",
"Siege of Niuzao Temple",
"enUS",
},
[111295] = {
"Domesticated Manasaber",
"The Nighthold",
"enUS",
},
[207202] = {
"Void Fragment",
"The Rookery",
"enUS",
},
[232284] = {
"Mailbox",
"SMV Alliance Garrison Level 2",
"enUS",
},
[121021] = {
"Shadowsworn Invader",
"Tomb of Sargeras",
"enUS",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
"enUS",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
"enUS",
},
[69834] = {
"Lightning Guardian",
"Throne of Thunder",
"enUS",
},
[94916] = {
"Fel Touched Seer",
"Hellfire Citadel",
"enUS",
},
[119742] = {
"Felguard Invader",
"Tomb of Sargeras",
"enUS",
},
[64358] = {
"Set'thik Tempest",
"Heart of Fear",
"enUS",
},
[212835] = {
"Risen Footman",
"Priory of the Sacred Flame",
"enUS",
},
[113088] = {
"Corrupted Feeler",
"The Emerald Nightmare",
"enUS",
},
[121790] = {
"Fleetlord Dominator",
"Tomb of Sargeras",
"enUS",
},
[207205] = {
"Stormguard Gorren",
"The Rookery",
"enUS",
},
[187242] = {
"Tarasek Looter",
"The Azure Vault",
"enUS",
},
[114624] = {
"Arcane Warden",
"Return to Karazhan",
"enUS",
},
[24697] = {
"Sister of Torment",
"Magisters' Terrace",
"enUS",
},
[33134] = {
"Sara",
"Ulduar",
"enUS",
},
[206694] = {
"Fervent Sharpshooter",
"Priory of the Sacred Flame",
"enUS",
},
[205671] = {
"Shadow Additive",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[207207] = {
"Voidstone Monstrosity",
"The Rookery",
"enUS",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[212838] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[205672] = {
"Flame Additive",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59752] = {
"Shado-Pan Ambusher",
"Shado-Pan Monastery",
"enUS",
},
[206696] = {
"Arathi Knight",
"Priory of the Sacred Flame",
"enUS",
},
[17723] = {
"Bog Giant",
"Coilfang: The Underbog",
"enUS",
},
[212327] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[205673] = {
"Sundered Devourer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[206697] = {
"Devout Priest",
"Priory of the Sacred Flame",
"enUS",
},
[187246] = {
"Nullmagic Hornswog",
"The Azure Vault",
"enUS",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
"enUS",
},
[201579] = {
"Magmorax",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[206698] = {
"Fanatical Conjuror",
"Priory of the Sacred Flame",
"enUS",
},
[113091] = {
"Tainted Plainstrider",
"The Emerald Nightmare",
"enUS",
},
[206699] = {
"War Lynx",
"Priory of the Sacred Flame",
"enUS",
},
[211306] = {
"Fiery Vines",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[59241] = {
"Scarlet Treasurer",
"Scarlet Halls",
"enUS",
},
[114627] = {
"Shrieking Terror",
"Return to Karazhan",
"enUS",
},
[63592] = {
"Set'thik Gustwing",
"Heart of Fear",
"enUS",
},
[186737] = {
"Telash Greywing",
"The Azure Vault",
"enUS",
},
[16126] = {
"Unrelenting Rider",
"Naxxramas",
"enUS",
},
[113092] = {
"Swarming Dread",
"The Emerald Nightmare",
"enUS",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[186738] = {
"Umbrelskul",
"The Azure Vault",
"enUS",
},
[114628] = {
"Skeletal Waiter",
"Return to Karazhan",
"enUS",
},
[24698] = {
"Ethereum Smuggler",
"Magisters' Terrace",
"enUS",
},
[33136] = {
"Guardian of Yogg-Saron",
"Ulduar",
"enUS",
},
[186227] = {
"Monstrous Decay",
"Brackenhide Hollow",
"enUS",
},
[186739] = {
"Azureblade",
"The Azure Vault",
"enUS",
},
[189299] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[215405] = {
"Anub'zekt",
"Ara-Kara, City of Echoes",
"enUS",
},
[208239] = {
"Skittering Menace",
"Earthcrawl Mines",
"enUS",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
"enUS",
},
[63593] = {
"Set'thik Zephyrian",
"Heart of Fear",
"enUS",
},
[206704] = {
"Ardent Paladin",
"Priory of the Sacred Flame",
"enUS",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
"enUS",
},
[120516] = {
"Razorjaw Swiftfin",
"Tomb of Sargeras",
"enUS",
},
[214383] = {
"Cache of Pure Energy",
"Mogu'shan Vaults",
"enUS",
},
[206705] = {
"Arathi Footman",
"Priory of the Sacred Flame",
"enUS",
},
[215407] = {
"Ki'katal the Harvester",
"Ara-Kara, City of Echoes",
"enUS",
},
[208241] = {
"Ankle Biter",
"Earthcrawl Mines",
"enUS",
},
[163708] = {
"Umbral Gatekeeper",
"Ny'alotha, the Waking City",
"enUS",
},
[451226] = {
"Unraveling Sands",
"Shado-Pan Monastery",
"enUS",
},
[423585] = {
"Ironfuse Bomb",
"Hall of Awakening",
"enUS",
},
[111303] = {
"Nightborne Sage",
"The Nighthold",
"enUS",
},
[208242] = {
"Nerubian Darkcaster",
"Earthcrawl Mines",
"enUS",
},
[213873] = {
"Waxy Globule",
"New Candle, New Hope",
"enUS",
},
[210290] = {
"Firelands Flameguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[208243] = {
"Nerubian Slasher",
"Earthcrawl Mines",
"enUS",
},
[63594] = {
"Coagulated Amber",
"Heart of Fear",
"enUS",
},
[94924] = {
"Iron Peon",
"Hellfire Citadel",
"enUS",
},
[208244] = {
"Nerubian Threadmancer",
"Earthcrawl Mines",
"enUS",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[214387] = {
"Cache of Pure Energy",
"Mogu'shan Vaults",
"enUS",
},
[208245] = {
"Skittering Swarmer",
"Earthcrawl Mines",
"enUS",
},
[163712] = {
"Dying Voidspawn",
"Ny'alotha, the Waking City",
"enUS",
},
[210293] = {
"Firelands Destroyer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[206710] = {
"Lightspawn",
"Priory of the Sacred Flame",
"enUS",
},
[162689] = {
"Surgeon Stitchflesh",
"The Necrotic Wake",
},
[210294] = {
"Flamespreader",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[243566] = {
"Sargerei Warspoils",
"Hellfire Citadel",
"enUS",
},
[118728] = {
"Ghastly Bonewarden",
"Tomb of Sargeras",
"enUS",
},
[210295] = {
"Flamewaker Infernoguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[211319] = {
"Relief Bucket",
"Stormstout Brewery",
"enUS",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
},
[60396] = {
"Emperor's Rage",
"Mogu'shan Vaults",
"enUS",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
},
[162692] = {
"Amarth",
"The Necrotic Wake",
},
[114634] = {
"Undying Servant",
"Return to Karazhan",
"enUS",
},
[165764] = {
"Rockbound Vanquisher",
"Castle Nathria",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
},
[58605] = {
"Scarlet Judicator",
"Scarlet Monastery",
"enUS",
},
[202108] = {
"Djaradin Dragonhunter",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[122313] = {
"Zuraal the Ascended",
"Seat of the Triumvirate",
"enUS",
},
[216441] = {
"Pale Illusion",
"Tak-Rethan Abyss",
"enUS",
},
[59373] = {
"Scarlet Pupil",
"Scarlet Halls",
"enUS",
},
[59501] = {
"Reanimated Corpse",
"Scholomance",
"enUS",
},
[202109] = {
"Djaradin Commander",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[16063] = {
"Sir Zeliek",
"Naxxramas",
"enUS",
},
[60397] = {
"Emperor's Strength",
"Mogu'shan Vaults",
"enUS",
},
[116939] = {
"Fallen Avatar",
"Tomb of Sargeras",
"enUS",
},
[213883] = {
"Dripear the Waxy",
"New Candle, New Hope",
"enUS",
},
[114636] = {
"Phantom Guardsman",
"Return to Karazhan",
"enUS",
},
[398015] = {
"Doodad_Icecrown_ThroneFrostyWind01",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[173447] = {
"Mushroom Mine",
"Plaguefall",
},
[196482] = {
"Overgrown Ancient",
"Algeth'ar Academy",
"enUS",
},
[63597] = {
"Coagulated Amber",
"Heart of Fear",
"enUS",
},
[63853] = {
"Zar'thik Supplicant",
"Heart of Fear",
"enUS",
},
[17726] = {
"Wrathfin Myrmidon",
"Coilfang: The Underbog",
"enUS",
},
[220029] = {
"Gearsweep",
"Hall of Awakening",
"enUS",
},
[60398] = {
"Emperor's Courage",
"Mogu'shan Vaults",
"enUS",
},
[68313] = {
"Roaming Fog",
"Throne of Thunder",
"enUS",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[204162] = {
"Ashbeard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[18430] = {
"Ethereal Apprentice",
"Auchindoun: Mana-Tombs",
"enUS",
},
[213888] = {
"Taran Zhu's Personal Stash",
"Shado-Pan Monastery",
"enUS",
},
[113103] = {
"Corrupted Swoop",
"The Emerald Nightmare",
"enUS",
},
[80599] = {
"Night-Twisted Earthwarper",
"Highmaul",
"enUS",
},
[114639] = {
"Kvaldir Reefcaller",
"Trial of Valor",
"enUS",
},
[59503] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[91349] = {
"Mannoroth",
"Hellfire Citadel",
"enUS",
},
[60143] = {
"Gara'jal the Spiritbinder",
"Mogu'shan Vaults",
"enUS",
},
[60399] = {
"Qin-xi",
"Mogu'shan Vaults",
"enUS",
},
[444098] = {
"Webbed Chest",
"The Spiral Weave",
"enUS",
},
[16447] = {
"Plagued Ghoul",
"Naxxramas",
"enUS",
},
[59632] = {
"Champion Sithiss",
"A Brewing Storm",
"enUS",
},
[17727] = {
"Wrathfin Sentry",
"Coilfang: The Underbog",
"enUS",
},
[60400] = {
"Jan-xi",
"Mogu'shan Vaults",
"enUS",
},
[113106] = {
"Sickly Cougar",
"The Emerald Nightmare",
"enUS",
},
[81114] = {
"Gronnling Laborer",
"Blackrock Foundry",
"enUS",
},
[18431] = {
"Ethereal Beacon",
"Auchindoun: Mana-Tombs",
"enUS",
},
[209801] = {
"Quartermaster Koratite",
"The Rookery",
"enUS",
},
[161173] = {
"Abyssal Watcher",
"Ny'alotha, the Waking City",
"enUS",
},
[112595] = {
"Shal'dorei Archmage",
"The Nighthold",
"enUS",
},
[58737] = {
"Viletongue Raider",
"A Brewing Storm",
"enUS",
},
[3977] = {
"High Inquisitor Whitemane",
"Scarlet Monastery",
"enUS",
},
[160663] = {
"Essence of Nightmare",
"Ny'alotha, the Waking City",
"enUS",
},
[271099] = {
"Spoils of the Legion's Fall",
"Tomb of Sargeras",
"enUS",
},
[16064] = {
"Thane Korth'azz",
"Naxxramas",
"enUS",
},
[116691] = {
"Belac",
"Tomb of Sargeras",
"enUS",
},
[60913] = {
"Energy Charge",
"Mogu'shan Vaults",
"enUS",
},
[122322] = {
"Famished Broken",
"Seat of the Triumvirate",
"enUS",
},
[122578] = {
"Kin'garoth",
"Antorus, the Burning Throne",
"enUS",
},
[114900] = {
"Gripping Tentacle",
"Trial of Valor",
"enUS",
},
[87515] = {
"Iron Flame Binder",
"Blackrock Foundry",
"enUS",
},
[87771] = {
"Slagshop Worker",
"Blackrock Foundry",
"enUS",
},
[58738] = {
"Viletongue Skirmisher",
"A Brewing Storm",
"enUS",
},
[81117] = {
"Karnor the Cruel",
"Blackrock Foundry",
"enUS",
},
[217485] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[17728] = {
"Murkblood Tribesman",
"Coilfang: The Underbog",
"enUS",
},
[162715] = {
"Fanatical Cultist",
"Ny'alotha, the Waking City",
"enUS",
},
[60402] = {
"Zandalari Fire-Dancer",
"Mogu'shan Vaults",
"enUS",
},
[220310] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[122366] = {
"Varimathras",
"Antorus, the Burning Throne",
"enUS",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
},
[70798] = {
"Kor'kron Emberguard",
"The Secrets of Ragefire",
"enUS",
},
[60043] = {
"Jade Guardian",
"Mogu'shan Vaults",
"enUS",
},
[56717] = {
"Hoptallus",
"Stormstout Brewery",
"enUS",
},
[94894] = {
"Keen-Eyed Gronnstalker",
"Hellfire Citadel",
"enUS",
},
[66181] = {
"Zar'thik Supplicant",
"Heart of Fear",
"enUS",
},
[114811] = {
"Kvaldir Coral Maiden",
"Trial of Valor",
"enUS",
},
[61387] = {
"Quilen Guardian",
"Mogu'shan Palace",
"enUS",
},
[115831] = {
"Mana Devourer",
"Return to Karazhan",
"enUS",
},
[162717] = {
"Sinister Soulcarver",
"Ny'alotha, the Waking City",
"enUS",
},
[61707] = {
"Abomination of Anger",
"Crypt of Forgotten Kings",
"enUS",
},
[120789] = {
"Lieutenant Silvermight",
"Tomb of Sargeras",
"enUS",
},
[213835] = {
"Candleclaw Scrambler",
"New Candle, New Hope",
"enUS",
},
[156575] = {
"Dark Inquisitor Xanesh",
"Ny'alotha, the Waking City",
"enUS",
},
[58739] = {
"Borokhula the Destroyer",
"A Brewing Storm",
"enUS",
},
[114334] = {
"Damaged Golem",
"Return to Karazhan",
"enUS",
},
[72929] = {
"Sra'thik Amber-Master",
"Siege of Orgrimmar",
"enUS",
},
[162718] = {
"Iron-Willed Enforcer",
"Ny'alotha, the Waking City",
"enUS",
},
[77687] = {
"Grom'kar Man-at-Arms",
"Blackrock Foundry",
"enUS",
},
[237452] = {
"Iron Horde Chest",
"Blackrock Foundry",
"enUS",
},
[114532] = {
"Bonespeaker Soulbinder",
"Trial of Valor",
"enUS",
},
[82399] = {
"Ogron Earthshaker",
"Highmaul",
"enUS",
},
[33966] = {
"Crusher Tentacle",
"Ulduar",
"enUS",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
"enUS",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
},
[162719] = {
"Void Ascendant",
"Ny'alotha, the Waking City",
"enUS",
},
[104154] = {
"Gul'dan",
"The Nighthold",
"enUS",
},
[16154] = {
"Risen Squire",
"Naxxramas",
"enUS",
},
[73745] = {
"Kor'kron Iron Sentinel",
"Siege of Orgrimmar",
"enUS",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[214419] = {
"Void Cursed Crusher",
"The Rookery",
"enUS",
},
[416] = {
"Tarpit",
"Mogu'shan Vaults",
"enUS",
},
[24561] = {
"Yazzai",
"Magisters' Terrace",
"enUS",
},
[67093] = {
"Sik'thik Battle-Mender",
"Siege of Niuzao Temple",
"enUS",
},
[59789] = {
"Thalnos the Soulrender",
"Scarlet Monastery",
"enUS",
},
[302854] = {
"Portal to Boralus",
"Ny'alotha, the Waking City",
"enUS",
},
[15978] = {
"Crypt Reaver",
"Naxxramas",
"enUS",
},
[82400] = {
"Ogron Brute",
"Highmaul",
"enUS",
},
[111166] = {
"Resolute Courtesan",
"The Nighthold",
"enUS",
},
[157602] = {
"Drest'agath",
"Ny'alotha, the Waking City",
"enUS",
},
[15931] = {
"Grobbulus",
"Naxxramas",
"enUS",
},
[433777] = {
"Summoning Portal",
"Mogu'shan Vaults",
"enUS",
},
[16168] = {
"Stoneskin Gargoyle",
"Naxxramas",
"enUS",
},
[207740] = {
"Gnarled Lasher",
"Kriegval's Rest",
"enUS",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
"enUS",
},
[113113] = {
"Essence of Nightmare",
"The Emerald Nightmare",
"enUS",
},
[214421] = {
"Coalescing Void Diffuser",
"The Rookery",
"enUS",
},
[62691] = {
"Living Amber",
"Heart of Fear",
"enUS",
},
[58683] = {
"Scarlet Myrmidon",
"Scarlet Halls",
"enUS",
},
[67691] = {
"Corrupted Swarmling",
"Dagger in the Dark",
"enUS",
},
[90378] = {
"Kilrogg Deadeye",
"Hellfire Citadel",
"enUS",
},
[61709] = {
"Spawn of Anger",
"Crypt of Forgotten Kings",
"enUS",
},
[111413] = {
"Dark Devourers",
"The Emerald Nightmare",
"enUS",
},
[189340] = {
"Chargath, Bane of Scales",
"Neltharus",
"enUS",
},
[115417] = {
"Rat",
"Return to Karazhan",
"enUS",
},
[91103] = {
"Felfire Demolisher",
"Hellfire Citadel",
"enUS",
},
[17729] = {
"Murkblood Spearman",
"Coilfang: The Underbog",
"enUS",
},
[87520] = {
"Animated Slag",
"Blackrock Foundry",
"enUS",
},
[16011] = {
"Loatheb",
"Naxxramas",
"enUS",
},
[184019] = {
"Burly Rock-Thrower",
"Uldaman: Legacy of Tyr",
"enUS",
},
[105304] = {
"Dominator Tentacle",
"The Emerald Nightmare",
"enUS",
},
[120188] = {
"Wailing Soul",
"Tomb of Sargeras",
"enUS",
},
[90269] = {
"Tyrant Velhari",
"Hellfire Citadel",
"enUS",
},
[113626] = {
"Venomous Spiderling",
"The Emerald Nightmare",
"enUS",
},
[69388] = {
"Zandalari Spear-Shaper",
"Throne of Thunder",
"enUS",
},
[92554] = {
"Mek'barash",
"Hellfire Citadel",
"enUS",
},
[73098] = {
"Kor'kron Overseer",
"Siege of Orgrimmar",
"enUS",
},
[17827] = {
"Claw",
"Coilfang: The Underbog",
"enUS",
},
[159405] = {
"Aqir Scarab",
"Ny'alotha, the Waking City",
"enUS",
},
[120721] = {
"Lunar Archer",
"Tomb of Sargeras",
"enUS",
},
[115418] = {
"Spider",
"Return to Karazhan",
"enUS",
},
[60240] = {
"Spirit Totem",
"Mogu'shan Vaults",
"enUS",
},
[195580] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[87521] = {
"Iron Slag-Shaper",
"Blackrock Foundry",
"enUS",
},
[56658] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[112603] = {
"Terrace Grove-Tender",
"The Nighthold",
"enUS",
},
[24559] = {
"Warlord Salaris",
"Magisters' Terrace",
"enUS",
},
[63311] = {
"Scar-Shell",
"Arena of Annihilation",
"enUS",
},
[114548] = {
"Rotsoul Giant",
"Trial of Valor",
"enUS",
},
[158328] = {
"Il'gynoth",
"Ny'alotha, the Waking City",
"enUS",
},
[114260] = {
"Mrrgria",
"Return to Karazhan",
"enUS",
},
[200913] = {
"Thadrion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[224663] = {
"Mesmerized Flyer",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[16506] = {
"Naxxramas Worshipper",
"Naxxramas",
"enUS",
},
[168357] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[111226] = {
"Summoner Xiv",
"The Nighthold",
"enUS",
},
[115419] = {
"Ancient Tome",
"Return to Karazhan",
"enUS",
},
[169893] = {
"Nefarious Darkspeaker",
"Theater of Pain",
},
[186339] = {
"Teera",
"The Nokhud Offensive",
"enUS",
},
[16065] = {
"Lady Blaumeux",
"Naxxramas",
"enUS",
},
[65522] = {
"Bubble Shield",
"Stormstout Brewery",
"enUS",
},
[201320] = {
"Rashok",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[202971] = {
"Null Glimmer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
"enUS",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
"enUS",
},
[192481] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[118523] = {
"Huntress Kasparian",
"Tomb of Sargeras",
"enUS",
},
[122367] = {
"Admiral Svirax",
"Antorus, the Burning Throne",
"enUS",
},
[69351] = {
"Greater Cave Bat",
"Throne of Thunder",
"enUS",
},
[203230] = {
"Dragonfire Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[114637] = {
"Spectral Sentry",
"Return to Karazhan",
"enUS",
},
[94733] = {
"Felfire Demolisher",
"Hellfire Citadel",
"enUS",
},
[79200] = {
"Blackrock Forge Specialist",
"Blackrock Foundry",
"enUS",
},
[63313] = {
"Little Liuyang",
"Arena of Annihilation",
"enUS",
},
[120449] = {
"Defensive Countermeasure",
"Tomb of Sargeras",
"enUS",
},
[63568] = {
"Amber-Ridden Mushan",
"Heart of Fear",
"enUS",
},
[222923] = {
"Repurposed Loaderbot",
"The Stonevault",
"enUS",
},
[104415] = {
"Chronomatic Anomaly",
"The Nighthold",
"enUS",
},
[455534] = {
"|cff1EFF00Sturdy Chest",
"Mycomancer Cavern",
"enUS",
},
[126333] = {
"Felseeker Ritualist",
"Antorus, the Burning Throne",
"enUS",
},
[62837] = {
"Grand Empress Shek'zeer",
"Heart of Fear",
"enUS",
},
[93154] = {
"Gorebound Crone",
"Hellfire Citadel",
"enUS",
},
[58998] = {
"Scarlet Defender",
"Scarlet Halls",
"enUS",
},
[112596] = {
"Duskwatch Warden",
"The Nighthold",
"enUS",
},
[69352] = {
"Vampiric Cave Bat",
"Throne of Thunder",
"enUS",
},
[70463] = {
"Frostmane Snowstalker",
"Blood in the Snow",
"enUS",
},
[164266] = {
"Domina Venomblade",
"Plaguefall",
},
[16060] = {
"Gothik the Harvester",
"Naxxramas",
"enUS",
},
[125545] = {
"Blazing Imp",
"Antorus, the Burning Throne",
"enUS",
},
[157612] = {
"Eye of Drest'agath",
"Ny'alotha, the Waking City",
"enUS",
},
[17730] = {
"Murkblood Healer",
"Coilfang: The Underbog",
"enUS",
},
[69382] = {
"Malignant Ooze",
"Throne of Thunder",
"enUS",
},
[87780] = {
"Slagshop Brute",
"Blackrock Foundry",
"enUS",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
"enUS",
},
[56439] = {
"Sha of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[198873] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
"enUS",
},
[157613] = {
"Maw of Drest'agath",
"Ny'alotha, the Waking City",
"enUS",
},
[390747] = {
"Challenger's Cache",
"Brackenhide Hollow",
"enUS",
},
[198874] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[80409] = {
"Markog Aba'dir",
"Blackrock Foundry",
"enUS",
},
[17399] = {
"Seductress",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[94947] = {
"Fel-Starved Trainee",
"Hellfire Citadel",
"enUS",
},
[111071] = {
"Pulsauron",
"The Nighthold",
"enUS",
},
[61814] = {
"Jin Ironfist",
"Crypt of Forgotten Kings",
"enUS",
},
[157614] = {
"Tentacle of Drest'agath",
"Ny'alotha, the Waking City",
"enUS",
},
[146409] = {
"Lady Jaina Proudmoore",
"Battle of Dazar'alor",
},
[59794] = {
"Krik'thik Disruptor",
"Gate of the Setting Sun",
"enUS",
},
[71401] = {
"Proto-Drake Whelp",
"The Secrets of Ragefire",
"enUS",
},
[82528] = {
"Gorian Arcanist",
"Highmaul",
"enUS",
},
[93391] = {
"Captured Prisoner",
"Hellfire Citadel",
"enUS",
},
[61389] = {
"Kargesh Highguard",
"Mogu'shan Palace",
"enUS",
},
[200388] = {
"Malformed Sha",
"Temple of the Jade Serpent",
"enUS",
},
[93156] = {
"Eredar Faithbreaker",
"Hellfire Citadel",
"enUS",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[127233] = {
"Flameweaver",
"Antorus, the Burning Throne",
"enUS",
},
[200926] = {
"Igira the Cruel",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[122104] = {
"Portal Keeper Hasabel",
"Antorus, the Burning Throne",
"enUS",
},
[70557] = {
"Zandalari Prophet",
"Throne of Thunder",
"enUS",
},
[194108] = {
"Summoning Portal",
"Neltharus",
"enUS",
},
[86609] = {
"Iron Warmaster",
"Highmaul",
"enUS",
},
[116549] = {
"Backup Singer",
"Return to Karazhan",
"enUS",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
"enUS",
},
[63569] = {
"Amber Searsting",
"Heart of Fear",
"enUS",
},
[216293] = {
"Trilling Attendant",
"Ara-Kara, City of Echoes",
"enUS",
},
[79068] = {
"Iron Grunt",
"Highmaul",
"enUS",
},
[265605] = {
"Sealed Tome",
"Return to Karazhan",
"enUS",
},
[111354] = {
"Taintheart Befouler",
"The Emerald Nightmare",
"enUS",
},
[71326] = {
"Lieutenant Parker",
"Naval Battle Scenario",
"enUS",
},
[122478] = {
"Void Discharge",
"Seat of the Triumvirate",
"enUS",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[57080] = {
"Corrupted Scroll",
"Temple of the Jade Serpent",
"enUS",
},
[179388] = {
"Hourglass Tidesage",
"Tazavesh, the Veiled Market",
},
[127235] = {
"Garothi Demolisher",
"Antorus, the Burning Throne",
"enUS",
},
[205734] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[94693] = {
"Siegeworks Technician",
"Hellfire Citadel",
"enUS",
},
[213577] = {
"Spitfire Charger",
"Kriegval's Rest",
"enUS",
},
[208459] = {
"Fiery Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[78238] = {
"Pol",
"Highmaul",
"enUS",
},
[17400] = {
"Felguard Annihilator",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[212389] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[100497] = {
"Ursoc",
"The Emerald Nightmare",
"enUS",
},
[17624] = {
"Laughing Skull Warden",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[62711] = {
"Amber Monstrosity",
"Heart of Fear",
"enUS",
},
[78801] = {
"Darkshard Acidback",
"Blackrock Foundry",
"enUS",
},
[186284] = {
"Gutchewer Bear",
"Brackenhide Hollow",
"enUS",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
},
[122847] = {
"Umbral Priestess",
"Tomb of Sargeras",
"enUS",
},
[159224] = {
"Gryth'ax the Executioner",
"Ny'alotha, the Waking City",
"enUS",
},
[205736] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[157620] = {
"Prophet Skitra",
"Ny'alotha, the Waking City",
"enUS",
},
[17731] = {
"Fen Ray",
"Coilfang: The Underbog",
"enUS",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[78237] = {
"Phemos",
"Highmaul",
"enUS",
},
[199659] = {
"Warlord Kagni",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[92391] = {
"Gorebound Bloodletter",
"Hellfire Citadel",
"enUS",
},
[205737] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214439] = {
"Corrupted Oracle",
"The Rookery",
"enUS",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
"enUS",
},
[85225] = {
"Gorian Sorcerer",
"Highmaul",
"enUS",
},
[179386] = {
"Corsair Officer",
"Tazavesh, the Veiled Market",
},
[73452] = {
"Harbinger of Y'Shaarj",
"Siege of Orgrimmar",
"enUS",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[59605] = {
"Sodden Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[111075] = {
"Chaotoid",
"The Nighthold",
"enUS",
},
[111331] = {
"Lurking Horror",
"The Emerald Nightmare",
"enUS",
},
[216487] = {
"Skardyn Remnants",
"Hall of Awakening",
"enUS",
},
[184303] = {
"Skittering Crawler",
"Uldaman: Legacy of Tyr",
"enUS",
},
[71330] = {
"Lieutenant Fizzboil",
"Naval Battle Scenario",
"enUS",
},
[94018] = {
"Shadow Burster",
"Hellfire Citadel",
"enUS",
},
[61445] = {
"Haiyan the Unstoppable",
"Mogu'shan Palace",
"enUS",
},
[160182] = {
"Void Initiate",
"Ny'alotha, the Waking City",
"enUS",
},
[68078] = {
"Iron Qon",
"Throne of Thunder",
"enUS",
},
[67748] = {
"Darkhatched Sorcerer",
"Dagger in the Dark",
"enUS",
},
[63318] = {
"Chagan Firehoof",
"Arena of Annihilation",
"enUS",
},
[59309] = {
"Obedient Hound",
"Scarlet Halls",
"enUS",
},
[185584] = {
"Blasphemy",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[118930] = {
"Ixallon the Soulbreaker",
"Tomb of Sargeras",
"enUS",
},
[59223] = {
"Brother Korloff",
"Scarlet Monastery",
"enUS",
},
[160183] = {
"Void Fanatic",
"Ny'alotha, the Waking City",
"enUS",
},
[17401] = {
"Felhound Manastalker",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[159425] = {
"Occult Shadowmender",
"Ny'alotha, the Waking City",
"enUS",
},
[105721] = {
"Nightmare Ichor",
"The Emerald Nightmare",
"enUS",
},
[16034] = {
"Plague Beast",
"Naxxramas",
"enUS",
},
[16029] = {
"Sludge Belcher",
"Naxxramas",
"enUS",
},
[59884] = {
"Fallen Crusader",
"Scarlet Monastery",
"enUS",
},
[94617] = {
"Glynevere",
"Hellfire Citadel",
"enUS",
},
[214443] = {
"Crystal Shard",
"The Stonevault",
"enUS",
},
[68079] = {
"Ro'shak",
"Throne of Thunder",
"enUS",
},
[60793] = {
"Celestial Protector",
"Mogu'shan Vaults",
"enUS",
},
[64916] = {
"Kor'thik Swarmguard",
"Heart of Fear",
"enUS",
},
[462141] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[162744] = {
"Nekthara the Mangler",
"Theater of Pain",
},
[193457] = {
"Balara",
"The Nokhud Offensive",
"enUS",
},
[122850] = {
"Umbral Guard",
"Tomb of Sargeras",
"enUS",
},
[176565] = {
"Disruptive Patron",
"Tazavesh, the Veiled Market",
},
[94697] = {
"Siegeworks Technician",
"Hellfire Citadel",
"enUS",
},
[111333] = {
"Taintheart Trickster",
"The Emerald Nightmare",
"enUS",
},
[61945] = {
"Gurthan Iron Maw",
"Mogu'shan Palace",
"enUS",
},
[61910] = {
"Resin Flake",
"Siege of Niuzao Temple",
"enUS",
},
[187315] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[71407] = {
"Amber",
"Siege of Orgrimmar",
"enUS",
},
[189363] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[217516] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[68080] = {
"Quet'zal",
"Throne of Thunder",
"enUS",
},
[198869] = {
"Sundered Devastator",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[93162] = {
"Umbral Supplicant",
"Hellfire Citadel",
"enUS",
},
[70822] = {
"Earthborn Hatred",
"Heart of the Old God Scenario",
"enUS",
},
[69232] = {
"Ball Lightning",
"Throne of Thunder",
"enUS",
},
[217039] = {
"Nerubian Hauler",
"Ara-Kara, City of Echoes",
"enUS",
},
[122851] = {
"Umbral Archer",
"Tomb of Sargeras",
"enUS",
},
[217517] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[158041] = {
"N'Zoth the Corruptor",
"Ny'alotha, the Waking City",
"enUS",
},
[71152] = {
"Skeer the Bloodseeker",
"Siege of Orgrimmar",
"enUS",
},
[93435] = {
"Felfire Transporter",
"Hellfire Citadel",
"enUS",
},
[17732] = {
"Lykul Wasp",
"Coilfang: The Underbog",
"enUS",
},
[91627] = {
"Felfire Brazier",
"Hellfire Citadel",
"enUS",
},
[73767] = {
"Kor'kron Shredder",
"Siege of Orgrimmar",
"enUS",
},
[60410] = {
"Elegon",
"Mogu'shan Vaults",
"enUS",
},
[217518] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[68081] = {
"Dam'ren",
"Throne of Thunder",
"enUS",
},
[15977] = {
"Poisonous Skitterer",
"Naxxramas",
"enUS",
},
[70276] = {
"No'ku Stormsayer",
"Throne of Thunder",
"enUS",
},
[17370] = {
"Laughing Skull Enforcer",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[212400] = {
"Void Touched Elemental",
"The Stonevault",
"enUS",
},
[93931] = {
"Gorebound Felcaster",
"Hellfire Citadel",
"enUS",
},
[61434] = {
"Sik'thik Vanguard",
"Siege of Niuzao Temple",
"enUS",
},
[217519] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[71591] = {
"Automated Shredder",
"Siege of Orgrimmar",
"enUS",
},
[218543] = {
"Feather of Ji-Kun",
"Throne of Thunder",
"enUS",
},
[61946] = {
"Harthak Stormcaller",
"Mogu'shan Palace",
"enUS",
},
[112118] = {
"Tainted Bloodpetal",
"The Emerald Nightmare",
"enUS",
},
[71153] = {
"Hisek the Swarmkeeper",
"Siege of Orgrimmar",
"enUS",
},
[16194] = {
"Unholy Axe",
"Naxxramas",
"enUS",
},
[69927] = {
"Zandalari Prelate",
"Throne of Thunder",
"enUS",
},
[59778] = {
"Krik'thik Striker",
"Gate of the Setting Sun",
"enUS",
},
[193462] = {
"Batak",
"The Nokhud Offensive",
"enUS",
},
[61929] = {
"Sik'thik Amber-Weaver",
"Siege of Niuzao Temple",
"enUS",
},
[15954] = {
"Noth the Plaguebringer",
"Naxxramas",
"enUS",
},
[80422] = {
"Iron Marksman",
"Blackrock Foundry",
"enUS",
},
[80676] = {
"Iron Flametwister",
"Blackrock Foundry",
"enUS",
},
[70224] = {
"Rotting Scavenger",
"Throne of Thunder",
"enUS",
},
[89890] = {
"Fel Lord Zakuun",
"Hellfire Citadel",
"enUS",
},
[61418] = {
"Crypt Guardian",
"Crypt of Forgotten Kings",
"enUS",
},
[59804] = {
"Gripping Hatred",
"Shado-Pan Monastery",
"enUS",
},
[59771] = {
"Zombified Corpse",
"Scarlet Monastery",
"enUS",
},
[78832] = {
"Grom'kar Man-at-Arms",
"Blackrock Foundry",
"enUS",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
"enUS",
},
[71154] = {
"Ka'roz the Locust",
"Siege of Orgrimmar",
"enUS",
},
[212403] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[56877] = {
"Raigonn",
"Gate of the Setting Sun",
"enUS",
},
[61339] = {
"Glintrok Oracle",
"Mogu'shan Palace",
"enUS",
},
[113128] = {
"Withered Skulker",
"The Nighthold",
"enUS",
},
[84859] = {
"Iron Cleaver",
"Blackrock Foundry",
"enUS",
},
[17371] = {
"Shadowmoon Warlock",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[70448] = {
"Ancient Python",
"Throne of Thunder",
"enUS",
},
[341820] = {
"Vault of the Black Empire",
"Ny'alotha, the Waking City",
"enUS",
},
[65402] = {
"Gurthan Swiftblade",
"Mogu'shan Palace",
"enUS",
},
[178133] = {
"Murkbrine Wavejumper",
"Tazavesh, the Veiled Market",
},
[209333] = {
"Gnarlroot",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[111081] = {
"Fulminant",
"The Nighthold",
"enUS",
},
[161217] = {
"Aqir Skitterer",
"Ny'alotha, the Waking City",
"enUS",
},
[61947] = {
"Kargesh Ribcrusher",
"Mogu'shan Palace",
"enUS",
},
[61340] = {
"Glintrok Hexxer",
"Mogu'shan Palace",
"enUS",
},
[58108] = {
"Krik'thik Infiltrator",
"Gate of the Setting Sun",
"enUS",
},
[212405] = {
"Aspiring Forgehand",
"The Stonevault",
"enUS",
},
[92142] = {
"Blademaster Jubei'thos",
"Hellfire Citadel",
"enUS",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[92330] = {
"Soul of Socrethar",
"Hellfire Citadel",
"enUS",
},
[161218] = {
"Aqir Crusher",
"Ny'alotha, the Waking City",
"enUS",
},
[58876] = {
"Starving Hound",
"Scarlet Halls",
"enUS",
},
[18331] = {
"Ethereal Darkcaster",
"Auchindoun: Mana-Tombs",
"enUS",
},
[59368] = {
"Krastinovian Carver",
"Scholomance",
"enUS",
},
[17477] = {
"Hellfire Imp",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[86256] = {
"Gorian High Sorcerer",
"Highmaul",
"enUS",
},
[192955] = {
"Draconic Illusion",
"The Azure Vault",
"enUS",
},
[59240] = {
"Scarlet Hall Guardian",
"Scarlet Halls",
"enUS",
},
[17724] = {
"Underbat",
"Coilfang: The Underbog",
"enUS",
},
[81779] = {
"Ogron Mauler",
"Highmaul",
"enUS",
},
[71156] = {
"Kaz'tik the Manipulator",
"Siege of Orgrimmar",
"enUS",
},
[220085] = {
"Strange Bowl of Dice",
"Naval Battle Scenario",
"enUS",
},
[192464] = {
"Raging Ember",
"Neltharus",
"enUS",
},
[120808] = {
"Lylth the Silent",
"Tomb of Sargeras",
"enUS",
},
[87719] = {
"Ogron Hauler",
"Blackrock Foundry",
"enUS",
},
[111004] = {
"Gelatinized Decay",
"The Emerald Nightmare",
"enUS",
},
[92911] = {
"Hulking Berserker",
"Hellfire Citadel",
"enUS",
},
[111860] = {
"Bo'lan the Marked",
"The Emerald Nightmare",
"enUS",
},
[17826] = {
"Swamplord Musel'ek",
"Coilfang: The Underbog",
"enUS",
},
[18309] = {
"Ethereal Scavenger",
"Auchindoun: Mana-Tombs",
"enUS",
},
[159417] = {
"Demented Knife-Twister",
"Ny'alotha, the Waking City",
"enUS",
},
[61436] = {
"Sik'thik Bladedancer",
"Siege of Niuzao Temple",
"enUS",
},
[114922] = {
"Dark Seraph",
"Trial of Valor",
"enUS",
},
[159303] = {
"Monstrous Behemoth",
"Ny'alotha, the Waking City",
"enUS",
},
[189886] = {
"Blazebound Firestorm",
"Ruby Life Pools",
"enUS",
},
[125590] = {
"Antoran Felguard",
"Antorus, the Burning Throne",
"enUS",
},
[30071] = {
"Stitched Colossus",
"Naxxramas",
"enUS",
},
[71157] = {
"Xaril the Poisoned Mind",
"Siege of Orgrimmar",
"enUS",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[92144] = {
"Dia Darkwhisper",
"Hellfire Citadel",
"enUS",
},
[73904] = {
"Kor'kron Iron Sentinel",
"Siege of Orgrimmar",
"enUS",
},
[59613] = {
"Professor Slate",
"Scholomance",
"enUS",
},
[161312] = {
"Crushing Tendril",
"Ny'alotha, the Waking City",
"enUS",
},
[111980] = {
"Nightmother",
"The Emerald Nightmare",
"enUS",
},
[260526] = {
"Spoils",
"Trial of Valor",
"enUS",
},
[60381] = {
"Zandalari Infiltrator",
"Mogu'shan Vaults",
"enUS",
},
[195851] = {
"Ukhel Deathspeaker",
"The Nokhud Offensive",
"enUS",
},
[114923] = {
"Shatterbone Skeleton",
"Trial of Valor",
"enUS",
},
[213434] = {
"Sporbit",
"Mycomancer Cavern",
"enUS",
},
[16193] = {
"Skeletal Smith",
"Naxxramas",
"enUS",
},
[77692] = {
"Kromog",
"Blackrock Foundry",
"enUS",
},
[17725] = {
"Underbog Lurker",
"Coilfang: The Underbog",
"enUS",
},
[111852] = {
"Rothos",
"The Emerald Nightmare",
"enUS",
},
[16067] = {
"Deathcharger Steed",
"Naxxramas",
"enUS",
},
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
"enUS",
},
[405307] = {
"Demonic Gateway",
"Antorus, the Burning Throne",
"enUS",
},
[16163] = {
"Death Knight Cavalier",
"Naxxramas",
"enUS",
},
[92913] = {
"Gorebound Berserker",
"Hellfire Citadel",
"enUS",
},
[88818] = {
"Security Guard",
"Blackrock Foundry",
"enUS",
},
[219066] = {
"Afflicted Civilian",
"The Rookery",
"enUS",
},
[214277] = {
"The Dark Grimoire",
"Scholomance",
"enUS",
},
[16127] = {
"Spectral Trainee",
"Naxxramas",
"enUS",
},
[77557] = {
"Admiral Gar'an",
"Blackrock Foundry",
"enUS",
},
[165430] = {
"Malignant Spawn",
"Plaguefall",
},
[61565] = {
"Quilen Statue",
"Crypt of Forgotten Kings",
"enUS",
},
[216582] = {
"Kx",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[15953] = {
"Grand Widow Faerlina",
"Naxxramas",
"enUS",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
},
[163621] = {
"Goregrind",
"The Necrotic Wake",
},
[62205] = {
"Wing Leader Ner'onok",
"Siege of Niuzao Temple",
"enUS",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[92146] = {
"Gurtogg Bloodboil",
"Hellfire Citadel",
"enUS",
},
[67832] = {
"Corrupted Darkhatched Slayer",
"Dagger in the Dark",
"enUS",
},
[199719] = {
"Nokhud Wardog",
"The Nokhud Offensive",
"enUS",
},
[192791] = {
"Nokhud Warspear",
"The Nokhud Offensive",
"enUS",
},
[16385] = {
"Lightning Totem",
"Naxxramas",
"enUS",
},
[204188] = {
"Tomb-Raider Drywhisker",
"Kriegval's Rest",
"enUS",
},
[59518] = {
"Bloated Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[85748] = {
"Iron Mauler",
"Blackrock Foundry",
"enUS",
},
[17414] = {
"Shadowmoon Technician",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[217533] = {
"Atik",
"Ara-Kara, City of Echoes",
"enUS",
},
[155434] = {
"Emissary of the Tides",
"Freehold",
},
[219148] = {
"Skardyn Metamorphosis",
"Hall of Awakening",
"enUS",
},
[111858] = {
"Guardian Rurson",
"The Emerald Nightmare",
"enUS",
},
[17734] = {
"Underbog Lord",
"Coilfang: The Underbog",
"enUS",
},
[30083] = {
"Marauding Geist",
"Naxxramas",
"enUS",
},
[61345] = {
"Mogu Archer",
"Mogu'shan Vaults",
"enUS",
},
[63519] = {
"Water Spirit",
"Brewmoon Festival",
"enUS",
},
[17990] = {
"Underbog Mushroom",
"Coilfang: The Underbog",
"enUS",
},
[88820] = {
"Furnace Engineer",
"Blackrock Foundry",
"enUS",
},
[189893] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
"enUS",
},
[111398] = {
"Nightmare Amalgamation",
"The Emerald Nightmare",
"enUS",
},
[93233] = {
"Lord Aram'el",
"Hellfire Citadel",
"enUS",
},
[200131] = {
"Sha-Touched Guardian",
"Temple of the Jade Serpent",
"enUS",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
"enUS",
},
[15952] = {
"Maexxna",
"Naxxramas",
"enUS",
},
[161229] = {
"Aqir Venomweaver",
"Ny'alotha, the Waking City",
"enUS",
},
[127723] = {
"Imperator Deconix",
"Antorus, the Burning Throne",
"enUS",
},
[95408] = {
"Anetheron",
"Hellfire Citadel",
"enUS",
},
[61250] = {
"Sorcerer Mogu",
"Mogu'shan Vaults",
"enUS",
},
[71161] = {
"Kil'ruk the Wind-Reaver",
"Siege of Orgrimmar",
"enUS",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[15936] = {
"Heigan the Unclean",
"Naxxramas",
"enUS",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[201668] = {
"Neltharion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[88821] = {
"Bellows Operator",
"Blackrock Foundry",
"enUS",
},
[59746] = {
"Scarlet Centurion",
"Scarlet Monastery",
"enUS",
},
[86326] = {
"Breaker Ritualist",
"Highmaul",
"enUS",
},
[440229] = {
"Minecart",
"The Stonevault",
"enUS",
},
[69821] = {
"Thunder Lord",
"Throne of Thunder",
"enUS",
},
[216341] = {
"Jabbing Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[59519] = {
"Stout Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[213954] = {
"Rock Smasher",
"The Stonevault",
"enUS",
},
[127724] = {
"Fanatical Pyromancer",
"Antorus, the Burning Throne",
"enUS",
},
[70589] = {
"Cavern Burrower",
"Throne of Thunder",
"enUS",
},
[111856] = {
"Guardian Gorroc",
"The Emerald Nightmare",
"enUS",
},
[67263] = {
"Darkhatched Lizard-Lord",
"Dagger in the Dark",
"enUS",
},
[455489] = {
"|cff1EFF00Sturdy Chest",
"Kriegval's Rest",
"enUS",
},
[214551] = {
"Wandering Gutter",
"Tak-Rethan Abyss",
"enUS",
},
[56448] = {
"Wise Mari",
"Temple of the Jade Serpent",
"enUS",
},
[63521] = {
"Disturbed Saurok",
"Brewmoon Festival",
"enUS",
},
[277355] = {
"The Pantheon's Bounty",
"Antorus, the Burning Throne",
"enUS",
},
[220437] = {
"Overseer Kaskel",
"The Spiral Weave",
"enUS",
},
[72954] = {
"Kor'thik Honor Guard",
"Siege of Orgrimmar",
"enUS",
},
[95282] = {
"Azgalor",
"Hellfire Citadel",
"enUS",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[114360] = {
"Hyrja",
"Trial of Valor",
"enUS",
},
[61567] = {
"Vizier Jin'bak",
"Siege of Niuzao Temple",
"enUS",
},
[195875] = {
"Desecrated Bakar",
"The Nokhud Offensive",
"enUS",
},
[127725] = {
"Felblade Shocktrooper",
"Antorus, the Burning Throne",
"enUS",
},
[157238] = {
"Prophet Skitra",
"Ny'alotha, the Waking City",
"enUS",
},
[111405] = {
"Shadow Pounder",
"The Emerald Nightmare",
"enUS",
},
[163891] = {
"Rotmarrow Slime",
"Plaguefall",
},
[246148] = {
"Heart of the Overlord",
"Dreadscar Rift",
"enUS",
},
[212764] = {
"Engine Speaker",
"The Stonevault",
"enUS",
},
[60708] = {
"Meng the Demented",
"Mogu'shan Vaults",
"enUS",
},
[59684] = {
"Hozen Party Animal",
"Stormstout Brewery",
"enUS",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
"enUS",
},
[161746] = {
"Ossirat",
"Ny'alotha, the Waking City",
"enUS",
},
[85240] = {
"Night-Twisted Soothsayer",
"Highmaul",
"enUS",
},
[162103] = {
"Executor Tarvold",
"Sanguine Depths",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
"enUS",
},
[259592] = {
"Chair",
"Return to Karazhan",
"enUS",
},
[217541] = {
"Nightfall Initiate",
"Nightfall Sanctum",
"enUS",
},
[63743] = {
"Dirty Virmen",
"Brewmoon Festival",
"enUS",
},
[105322] = {
"Deathglare Tentacle",
"The Emerald Nightmare",
"enUS",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[17735] = {
"Wrathfin Warrior",
"Coilfang: The Underbog",
"enUS",
},
[71160] = {
"Iyyokuk the Lucid",
"Siege of Orgrimmar",
"enUS",
},
[189471] = {
"Qalashi Blacksmith",
"Neltharus",
"enUS",
},
[168393] = {
"Plaguebelcher",
"Plaguefall",
},
[266483] = {
"Gift of the Nightborne",
"The Nighthold",
"enUS",
},
[222149] = {
"Injured Earthen",
"The Stonevault",
"enUS",
},
[189901] = {
"Warlord Sargha",
"Neltharus",
"enUS",
},
[202278] = {
"Orb of Naxxramas",
"Naxxramas",
"enUS",
},
[85241] = {
"Night-Twisted Brute",
"Highmaul",
"enUS",
},
[18311] = {
"Ethereal Crypt Raider",
"Auchindoun: Mana-Tombs",
"enUS",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
"enUS",
},
[219149] = {
"Deranged Skardyn",
"Hall of Awakening",
"enUS",
},
[59551] = {
"Bopper",
"Stormstout Brewery",
"enUS",
},
[157475] = {
"Synthesis Growth",
"Ny'alotha, the Waking City",
"enUS",
},
[189232] = {
"Kokia Blazehoof",
"Ruby Life Pools",
"enUS",
},
[59175] = {
"Master Archer",
"Scarlet Halls",
"enUS",
},
[71158] = {
"Rik'kal the Dissector",
"Siege of Orgrimmar",
"enUS",
},
[159305] = {
"Maddened Conscript",
"Ny'alotha, the Waking City",
"enUS",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
"enUS",
},
[112671] = {
"Duskwatch Battle-Magus",
"The Nighthold",
"enUS",
},
[87229] = {
"Iron Blood Mage",
"Highmaul",
"enUS",
},
[201261] = {
"Kazzara, the Hellforged",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59303] = {
"Houndmaster Braun",
"Scarlet Halls",
"enUS",
},
[61341] = {
"Mounted Mogu",
"Mogu'shan Vaults",
"enUS",
},
[135246] = {
"\"Stabby\" Lottie",
"Skittering Hollow (Islands 5)",
},
[94779] = {
"Sovokk",
"Hellfire Citadel",
"enUS",
},
[73414] = {
"Kor'kron Reaper",
"Siege of Orgrimmar",
"enUS",
},
[59751] = {
"Shado-Pan Warden",
"Shado-Pan Monastery",
"enUS",
},
[59521] = {
"Bubbling Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[157253] = {
"Ka'zir",
"Ny'alotha, the Waking City",
"enUS",
},
[63872] = {
"Batu",
"Arena of Annihilation",
"enUS",
},
[157254] = {
"Tek'ris",
"Ny'alotha, the Waking City",
"enUS",
},
[16036] = {
"Frenzied Bat",
"Naxxramas",
"enUS",
},
[60033] = {
"Frenzied Spirit",
"Scarlet Monastery",
"enUS",
},
[58856] = {
"Haunting Sha",
"Temple of the Jade Serpent",
"enUS",
},
[196559] = {
"Volatile Sapling",
"The Azure Vault",
"enUS",
},
[16164] = {
"Shade of Naxxramas",
"Naxxramas",
"enUS",
},
[121473] = {
"Coercitor Nixa",
"Tomb of Sargeras",
"enUS",
},
[56706] = {
"Krik'thik Bombardier",
"Gate of the Setting Sun",
"enUS",
},
[210172] = {
"Zaqali Juggernaut",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[85243] = {
"Void Aberration",
"Highmaul",
"enUS",
},
[24761] = {
"Brightscale Wyrm",
"Magisters' Terrace",
"enUS",
},
[69375] = {
"Hidden Fog",
"Throne of Thunder",
"enUS",
},
[157461] = {
"Mycelial Cyst",
"Ny'alotha, the Waking City",
"enUS",
},
[114932] = {
"Deepbrine Monstrosity",
"Trial of Valor",
"enUS",
},
[210481] = {
"Fine Chair",
"Scarlet Halls",
"enUS",
},
[71155] = {
"Korven the Prime",
"Siege of Orgrimmar",
"enUS",
},
[33288] = {
"Yogg-Saron",
"Ulduar",
"enUS",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
},
[413563] = {
"|cff1EFF00Heavy Trunk",
"Kriegval's Rest",
"enUS",
},
[59369] = {
"Doctor Theolen Krastinov",
"Scholomance",
"enUS",
},
[159764] = {
"Jesh'ra",
"Ny'alotha, the Waking City",
"enUS",
},
[61928] = {
"Sik'thik Guardian",
"Siege of Niuzao Temple",
"enUS",
},
[205309] = {
"Overlord Mechagon",
"10.1.5 Time Rifts - Robot (A.Z.E.R.O.T.H.)",
"enUS",
},
[60009] = {
"Feng the Accursed",
"Mogu'shan Vaults",
"enUS",
},
[210894] = {
"Gold Coins",
"Scarlet Halls",
"enUS",
},
[181577] = {
"Naxxramas Portal",
"Naxxramas",
"enUS",
},
[59293] = {
"Scarlet Cannoneer",
"Scarlet Halls",
"enUS",
},
[59242] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[80071] = {
"Bladespire Sorcerer",
"Highmaul",
"enUS",
},
[59522] = {
"Sudsy Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
},
[111350] = {
"Skittering Shadows",
"The Emerald Nightmare",
"enUS",
},
[69069] = {
"Living Fluid",
"Throne of Thunder",
"enUS",
},
[455510] = {
"|cff1EFF00Sturdy Chest",
"Kriegval's Rest",
"enUS",
},
[30085] = {
"Vigilant Shade",
"Naxxramas",
"enUS",
},
[405286] = {
"Torn Page",
"Return to Karazhan",
"enUS",
},
[59372] = {
"Scarlet Scholar",
"Scarlet Halls",
"enUS",
},
[455511] = {
"|cff1EFF00Sturdy Chest",
"Kriegval's Rest",
"enUS",
},
[59545] = {
"The Golden Beetle",
"Temple of the Jade Serpent",
"enUS",
},
[303148] = {
"Soulwell",
"Magisters' Terrace",
"enUS",
},
[120158] = {
"Volatile Corruption",
"Tomb of Sargeras",
"enUS",
},
[85245] = {
"Night-Twisted Ritualist",
"Highmaul",
"enUS",
},
[18312] = {
"Ethereal Spellbinder",
"Auchindoun: Mana-Tombs",
"enUS",
},
[114361] = {
"Hymdall",
"Trial of Valor",
"enUS",
},
[61442] = {
"Kuai the Brute",
"Mogu'shan Palace",
"enUS",
},
[182607] = {
"Proximity Bomb",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[59801] = {
"Krik'thik Wind Shaper",
"Gate of the Setting Sun",
"enUS",
},
[277381] = {
"Portal",
"Antorus, the Burning Throne",
"enUS",
},
[181578] = {
"Naxxramas Portal",
"Naxxramas",
"enUS",
},
[59544] = {
"The Nodding Tiger",
"Temple of the Jade Serpent",
"enUS",
},
[221160] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[205638] = {
"Sundered Flame Banner",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[69712] = {
"Ji-Kun",
"Throne of Thunder",
"enUS",
},
[19016] = {
"Hellfire Familiar",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
},
[214251] = {
"Kobyss Witherer",
"Tak-Rethan Abyss",
"enUS",
},
[63106] = {
"Sik'thik Swarmer",
"Siege of Niuzao Temple",
"enUS",
},
[61399] = {
"Glintrok Scout",
"Mogu'shan Palace",
"enUS",
},
[76877] = {
"Gruul",
"Blackrock Foundry",
"enUS",
},
[71504] = {
"Siegecrafter Blackfuse",
"Siege of Orgrimmar",
"enUS",
},
[221158] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[111933] = {
"Venomous Spiderling",
"The Emerald Nightmare",
"enUS",
},
[127732] = {
"Clobex",
"Antorus, the Burning Throne",
"enUS",
},
[164185] = {
"Echelon",
"Halls of Atonement",
},
[90316] = {
"Shadow-Lord Iskar",
"Hellfire Citadel",
"enUS",
},
[94663] = {
"Grand Corruptor U'rogg",
"Hellfire Citadel",
"enUS",
},
[70227] = {
"Skittering Spiderling",
"Throne of Thunder",
"enUS",
},
[205644] = {
"Oozing Sludge",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[16125] = {
"Unrelenting Death Knight",
"Naxxramas",
"enUS",
},
[71123] = {
"Echo of Y'Shaarj",
"Heart of the Old God Scenario",
"enUS",
},
[118460] = {
"Engine of Souls",
"Tomb of Sargeras",
"enUS",
},
[17381] = {
"The Maker",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[112718] = {
"Sidereal Familiar",
"The Nighthold",
"enUS",
},
[191311] = {
"Infinite Whelp",
"Uldaman: Legacy of Tyr",
"enUS",
},
[113090] = {
"Corrupted Gatewarden",
"The Emerald Nightmare",
"enUS",
},
[416398] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[70179] = {
"Ritual Guard",
"Throne of Thunder",
"enUS",
},
[61699] = {
"Sik'thik Amberwing",
"Siege of Niuzao Temple",
"enUS",
},
[211277] = {
"Coffer of Forgotten Souls",
"Scholomance",
"enUS",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
"enUS",
},
[16243] = {
"Plague Slime",
"Naxxramas",
"enUS",
},
[91646] = {
"Grim Collaborator",
"Hellfire Citadel",
"enUS",
},
[205735] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214350] = {
"Turned Speaker",
"The Stonevault",
"enUS",
},
[69078] = {
"Sul the Sandcrawler",
"Throne of Thunder",
"enUS",
},
[113089] = {
"Defiled Keeper",
"The Emerald Nightmare",
"enUS",
},
[58756] = {
"Scarlet Evoker",
"Scarlet Halls",
"enUS",
},
[178142] = {
"Murkbrine Fishmancer",
"Tazavesh, the Veiled Market",
},
[62254] = {
"Quilen Watcher",
"Crypt of Forgotten Kings",
"enUS",
},
[85711] = {
"Aquatic Technician",
"Blackrock Foundry",
"enUS",
},
[114625] = {
"Phantom Guest",
"Return to Karazhan",
"enUS",
},
[213834] = {
"Candleclaw Mole",
"New Candle, New Hope",
"enUS",
},
[194389] = {
"Lava Spawn",
"Neltharus",
"enUS",
},
[209230] = {
"Kyrioss",
"The Rookery",
"enUS",
},
[161251] = {
"Cultist Sycophant",
"Ny'alotha, the Waking City",
"enUS",
},
[87448] = {
"Ironworker",
"Blackrock Foundry",
"enUS",
},
[207320] = {
"Hero's Call Board",
"SMV Alliance Garrison Level 2",
"enUS",
},
[94804] = {
"Shambling Hulk",
"Hellfire Citadel",
"enUS",
},
[254243] = {
"Observatory Door",
"The Nighthold",
"enUS",
},
[70236] = {
"Zandalari Storm-Caller",
"Throne of Thunder",
"enUS",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[179944] = {
"Meeting Stone Summoning Portal",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
},
[71329] = {
"Lieutenant Boltblaster",
"Naval Battle Scenario",
"enUS",
},
[72964] = {
"Goro'dan",
"Siege of Orgrimmar",
"enUS",
},
[18313] = {
"Ethereal Sorcerer",
"Auchindoun: Mana-Tombs",
"enUS",
},
[73095] = {
"Blackfuse Engineer",
"Siege of Orgrimmar",
"enUS",
},
[61444] = {
"Ming the Cunning",
"Mogu'shan Palace",
"enUS",
},
[113093] = {
"Infected Gazelle",
"The Emerald Nightmare",
"enUS",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[111355] = {
"Taintheart Tormenter",
"The Emerald Nightmare",
"enUS",
},
[114633] = {
"Spectral Valet",
"Return to Karazhan",
"enUS",
},
[108360] = {
"Acidmaw Scorpid",
"The Nighthold",
"enUS",
},
[91648] = {
"Somber Guardian",
"Hellfire Citadel",
"enUS",
},
[297873] = {
"Titan's Cache",
"Ulduar",
"enUS",
},
[218961] = {
"Starved Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[33985] = {
"Corruptor Tentacle",
"Ulduar",
"enUS",
},
[58757] = {
"Scholomance Acolyte",
"Scholomance",
"enUS",
},
[62980] = {
"Imperial Vizier Zor'lok",
"Heart of Fear",
"enUS",
},
[114632] = {
"Spectral Attendant",
"Return to Karazhan",
"enUS",
},
[167536] = {
"Harugia the Bloodthirsty",
"Theater of Pain",
},
[93952] = {
"Fel Raven",
"Hellfire Citadel",
"enUS",
},
[78233] = {
"Darkshard Crystalback",
"Blackrock Foundry",
"enUS",
},
[208478] = {
"Volcoross",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[198872] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[67681] = {
"Kor'kron Bodyguard",
"Dagger in the Dark",
"enUS",
},
[70240] = {
"Shan'ze Celestial Shaper",
"Throne of Thunder",
"enUS",
},
[16037] = {
"Plagued Bat",
"Naxxramas",
"enUS",
},
[104528] = {
"High Botanist Tel'arn",
"The Nighthold",
"enUS",
},
[179821] = {
"Commander Zo'far",
"Tazavesh, the Veiled Market",
},
[72927] = {
"Kovok",
"Siege of Orgrimmar",
"enUS",
},
[16165] = {
"Necro Knight",
"Naxxramas",
"enUS",
},
[72198] = {
"Empowered Desecrated Weapon",
"Siege of Orgrimmar",
"enUS",
},
[63312] = {
"Jol'Grum",
"Arena of Annihilation",
"enUS",
},
[186338] = {
"Maruuk",
"The Nokhud Offensive",
"enUS",
},
[72966] = {
"Resonating Amber",
"Siege of Orgrimmar",
"enUS",
},
[70683] = {
"Dark Shaman Xorenth",
"The Secrets of Ragefire",
"enUS",
},
[69383] = {
"Quivering Blob",
"Throne of Thunder",
"enUS",
},
[90114] = {
"Iron Dragoon",
"Hellfire Citadel",
"enUS",
},
[86275] = {
"Gorian Enforcer",
"Highmaul",
"enUS",
},
[61701] = {
"Sik'thik Warrior",
"Siege of Niuzao Temple",
"enUS",
},
[64947] = {
"Mogu'shan Warden",
"Mogu'shan Vaults",
"enUS",
},
[70663] = {
"Embercore",
"The Secrets of Ragefire",
"enUS",
},
[214649] = {
"Ancient Mogu Vault",
"Mogu'shan Palace",
"enUS",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[16021] = {
"Living Monstrosity",
"Naxxramas",
"enUS",
},
[196577] = {
"Spellbound Battleaxe",
"Algeth'ar Academy",
"enUS",
},
[93913] = {
"Fel Scorcher",
"Hellfire Citadel",
"enUS",
},
[186740] = {
"Arcane Construct",
"The Azure Vault",
"enUS",
},
[70232] = {
"Muckbat",
"Throne of Thunder",
"enUS",
},
[76806] = {
"Heart of the Mountain",
"Blackrock Foundry",
"enUS",
},
[116689] = {
"Atrigan",
"Tomb of Sargeras",
"enUS",
},
[60731] = {
"Undying Shadows",
"Mogu'shan Vaults",
"enUS",
},
[216541] = {
"Threadmaestro Fothis",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[86612] = {
"Spore Shooter",
"Highmaul",
"enUS",
},
[185534] = {
"Bonebolt Hunter",
"Brackenhide Hollow",
"enUS",
},
[210288] = {
"Ancient Core Hound",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[207468] = {
"Gnarled Reviver",
"Mycomancer Cavern",
"enUS",
},
[61242] = {
"Glintrok Ironhide",
"Mogu'shan Palace",
"enUS",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
},
[93068] = {
"Xhul'horac",
"Hellfire Citadel",
"enUS",
},
[82532] = {
"Krush",
"Highmaul",
"enUS",
},
[112638] = {
"Astral Defender",
"The Nighthold",
"enUS",
},
[93023] = {
"Siegemaster Mar'tak",
"Hellfire Citadel",
"enUS",
},
[197509] = {
"Primal Thundercloud",
"Ruby Life Pools",
"enUS",
},
[59764] = {
"Healing Tide Totem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[63031] = {
"Set'thik Fanatic",
"Heart of Fear",
"enUS",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
"enUS",
},
[18314] = {
"Nexus Stalker",
"Auchindoun: Mana-Tombs",
"enUS",
},
[93955] = {
"Delusional Zealot",
"Hellfire Citadel",
"enUS",
},
[56764] = {
"Consuming Sha",
"Shado-Pan Monastery",
"enUS",
},
[18315] = {
"Ethereal Theurgist",
"Auchindoun: Mana-Tombs",
"enUS",
},
[70153] = {
"Fungal Growth",
"Throne of Thunder",
"enUS",
},
[56862] = {
"Drunken Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[70665] = {
"Kor'kron Dire Soldier",
"The Secrets of Ragefire",
"enUS",
},
[16056] = {
"Diseased Maggot",
"Naxxramas",
"enUS",
},
[16017] = {
"Patchwork Golem",
"Naxxramas",
"enUS",
},
[216544] = {
"Sureki String Leader",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[234615] = {
"Chair",
"SMV Alliance Garrison Level 2",
"enUS",
},
[72154] = {
"Desecrated Weapon",
"Siege of Orgrimmar",
"enUS",
},
[61623] = {
"Sap Globule",
"Siege of Niuzao Temple",
"enUS",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
"enUS",
},
[17397] = {
"Shadowmoon Adept",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[61247] = {
"Glintrok Greenhorn",
"Mogu'shan Palace",
"enUS",
},
[106087] = {
"Elerethe Renferal",
"The Emerald Nightmare",
"enUS",
},
[157354] = {
"Vexiona",
"Ny'alotha, the Waking City",
"enUS",
},
[23561] = {
"Soldier of the Frozen Wastes",
"Naxxramas",
"enUS",
},
[229854] = {
"Inquisitor Speaker",
"Nightfall Sanctum",
"enUS",
},
[94724] = {
"Bryanda",
"Hellfire Citadel",
"enUS",
},
[159514] = {
"Blood of Ny'alotha",
"Ny'alotha, the Waking City",
"enUS",
},
[69905] = {
"Gurubashi Berserker",
"Throne of Thunder",
"enUS",
},
[211135] = {
"Sliding Door",
"Stormstout Brewery",
"enUS",
},
[24560] = {
"Priestess Delrissa",
"Magisters' Terrace",
"enUS",
},
[67457] = {
"Darkhatched Swarmling",
"Dagger in the Dark",
"enUS",
},
[114541] = {
"Spectral Patron",
"Return to Karazhan",
"enUS",
},
[229855] = {
"Shadeguard Speaker",
"Nightfall Sanctum",
"enUS",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[64902] = {
"Kor'thik Fleshrender",
"Heart of Fear",
"enUS",
},
[76809] = {
"Foreman Feldspar",
"Blackrock Foundry",
"enUS",
},
[113920] = {
"Flail of Il'gynoth",
"The Emerald Nightmare",
"enUS",
},
[69131] = {
"Frost King Malakk",
"Throne of Thunder",
"enUS",
},
[115115] = {
"Coldmist Stalker",
"Return to Karazhan",
"enUS",
},
},
["indicator_scale"] = 1.039999961853027,
["aura_grow_direction"] = 1,
["indicator_anchor"] = {
["x"] = 0,
},
["health_selection_overlay_alpha"] = 0.199999988079071,
["minor_height_scale"] = 0.9999999403953552,
["transparency_behavior_on_friendlies"] = true,
["extra_icon_show_enrage_border"] = {
0,
0,
0,
},
["aura_padding"] = 0.7999999523162842,
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 66,
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Options"] = {
},
["Desc"] = "Change the color for the heal absorb, heal prediction and shield amount indicators.",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --heal absorb\n    unitFrame.healthBar.healAbsorbIndicator:SetVertexColor (DetailsFramework:ParseColors (envTable.HealAbsorbColor))\n    \n    --shield absorb\n    unitFrame.healthBar.shieldAbsorbIndicator:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldsColor))\n    \n    --incoming heal\n    unitFrame.healthBar.incomingHealIndicator:SetVertexColor (DetailsFramework:ParseColors (envTable.IncomingHealColor))\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}           \n    \n    --make sure to enable the desired indicators at /plater options > Advanced tab > Show Heal/Shield Prediction\n    \n    --color when the heal absorb indicator\n    envTable.HealAbsorbColor = \"maroon\"\n    \n    --color of incoming heal indicator\n    envTable.IncomingHealColor = \"darkgreen\"\n    \n    --color of shield indicator\n    envTable.ShieldsColor = \"#C59000\"    \n    \nend\n\n\n",
},
["Prio"] = 99,
["Time"] = 1650439879,
["PlaterCore"] = 1,
["HooksTemp"] = {
},
["Name"] = "Change Prediction Color",
["Icon"] = 1035048,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
},
{
["Enabled"] = true,
["Revision"] = 69,
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Options"] = {
},
["Desc"] = "Adds a pixels perfect border around the cast bar.",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \n    --create thee border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end\n    \nend\n\n\n\n\n",
},
["Prio"] = 99,
["Time"] = 1649227841,
["PlaterCore"] = 1,
["HooksTemp"] = {
},
["Name"] = "Cast Bar Border",
["Icon"] = 133004,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
},
{
["Enabled"] = true,
["Revision"] = 57,
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Options"] = {
},
["Desc"] = "Adds a pixels perfect border around the cast bar spell icon.",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.castBar.IconOverlayFrame) then\n        unitFrame.castBar.IconOverlayFrame:Hide()\n    end\n    \nend\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.AnchorSide = \"right\"\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    function envTable.BuildFrames (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.IconBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.IconBorder:SetBorderSizes (size, size, size, size)\n        castBar.IconBorder:UpdateSizes()\n        \n        local icon = castBar.Icon\n        if (envTable.AnchorSide == \"left\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\")\n            icon:SetPoint (\"bottomright\", castBar, \"bottomleft\")\n            icon:SetWidth (icon:GetHeight())\n            \n        elseif (envTable.AnchorSide == \"right\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\")\n            icon:SetPoint (\"bottomleft\", castBar, \"bottomright\")\n            icon:SetWidth (icon:GetHeight())\n            \n        end\n        \n        icon:Show()\n        castBar.IconOverlayFrame:Show()\n    end\n    \n    if (not unitFrame.castBar.IconOverlayFrame) then\n        --icon support frame\n        unitFrame.castBar.IconOverlayFrame = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"topleft\", unitFrame.castBar.Icon, \"topleft\")\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"bottomright\", unitFrame.castBar.Icon, \"bottomright\")\n        \n        unitFrame.castBar.IconBorder = CreateFrame (\"frame\", nil,  unitFrame.castBar.IconOverlayFrame, \"NamePlateFullBorderTemplate\")\n    end    \n    \nend\n\n\n\n\n",
},
["Prio"] = 99,
["Time"] = 1649227840,
["PlaterCore"] = 1,
["HooksTemp"] = {
},
["Name"] = "Cast Icon Border",
["Icon"] = 133004,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateRaidMark (unitFrame, unitId)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --normal Marker\n    envTable.Size = 18\n    envTable.Anchor = {\n        side = 8, -- Right side\n        x = -2, \n        y = 0,\n    }\n    \n    --Name only Marker\n    envTable.SpecialSize = 22\n    envTable.SpecialAnchor = {\n        side = 8, -- Right side\n        x = -2, \n        y = 2,\n    }\n    \n    envTable.UpdateRaidMark = function (unitFrame, unitId)\n        local plateFrame = C_NamePlate.GetNamePlateForUnit (unitId)\n        local marker = plateFrame.unitFrame.PlaterRaidTargetFrame\n        if marker then\n            if plateFrame.IsFriendlyPlayerWithoutHealthBar or\n            plateFrame.IsNpcWithoutHealthBar then\n                marker:SetSize (envTable.SpecialSize, envTable.SpecialSize)\n                Plater.SetAnchor (marker, envTable.SpecialAnchor, unitFrame.ActorNameSpecial)\n            else\n                --marker:SetSize (envTable.Size, envTable.Size)\n                --Plater.SetAnchor (marker, envTable.Anchor, unitFrame.unitName)\n            end\n        end\n    end\n    \nend",
},
["Time"] = 1649227841,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 878218,
["Enabled"] = true,
["Revision"] = 651,
["semver"] = "",
["Author"] = "호불-아즈샤라",
["Desc"] = "Raidmark in the Unitname",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Raidmark in the Unitname",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    local mark = unitId and GetRaidTargetIndex(unitId)\n    envTable.namer(unitId, mark, true, false, false, \"Created\")\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    -- Catch all \n    envTable.namer(unitId, GetRaidTargetIndex(unitId), true, false, false, \"Updated\")\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    envTable.namer(unitId, GetRaidTargetIndex(unitId), true, false, false, \"Added\")\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFEAEA0D\", -- Yellow 5 Point Star\n        [2] = \"FFEAB10D\", -- Orange Circle\n        [3] = \"FFCD00FF\", -- Purple Diamond\n        [4] = \"FF06D425\", -- Green Triangle\n        [5] = \"FFB3E3D8\", -- Light Blue Moon\n        [6] = \"FF0CD2EA\", -- Blue Square\n        [7] = \"FFD6210B\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    -- Old way was some degen fucking shit this is easier\n    local nameBlacklist = {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,  \n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true, \n        [\"Terror\"] = true, \n        [\"Totem\"] = true, \n        [\"Waycrest\"] = true,\n        [\"Dummy\"] = true, -- Testing Purposes\n        [\"Aspect\"] = true\n    }\n    \n    \n    -- Override for names, Thanks to Nnoggie for all of the dungeon ones\n    local renameTable = {\n        -- Testing\n        [\"Fleshripper Vulture\"] = \"Shit Bird\",\n        [\"Roaming Nibbler\"] = \"Roaming Saurid\",\n        -- Grand Delusions\n        [\"Thing From Beyond\"] = \"Ion Hazzikostas\",\n        -- Plaguefall\n        [\"Plagueroc\"] = \"Plaguecock\",\n        [\"Doctor Ickus\"] = \"Dickus\",\n        -- Sanguine Depths\n        [\"Animated Weapon\"] = \"Assclapper\",\n        [\"Kryxis the Voracious\"] = \"Steroid Stomper\",\n        [\"Frenzied Ghoul\"] = \"Death\",\n        [\"General Kaal\"] = \"Mommy Kaal\",\n        -- Mists of Tirna Scithe\n        [\"Droman Oulfarran\"] = \"Simp Tree\",\n        [\"Mistcaller\"] = \"Lady UwU\",\n        [\"Tred'ova\"] = \"Tred'killya\",\n        -- M+ Encrypted Affix\n        [\"Urh Relic\"] = \"CDR Relic\",\n        [\"Wo Relic\"] = \"Invis Relic\",\n        [\"Vy Relic\"] = \"Hate Relic\",\n        [\"Urh Dismantler\"] = \"CDR boi\",\n        [\"Wo Drifter\"] = \"Invis boi\",\n        [\"Vy Interceptor\"] = \"Haste boi\",\n    }\n    \n    \n    \n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs, Do i want this?? no idea\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    function envTable.namer(unitId, marker, nameColouring, isBoss, debugMode, debugEntry)\n        if unitId then\n            \n            local name = UnitName(unitId)\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            local unitName\n            -- Testing mode\n            if debugMode then\n                print(\"DebugMode: \"..debugEntry..\" - Checking for dummy name\")\n                if b == \"Dummy\" or c == \"Dummy\" or d == \"Dummy\" or e == \"Dummy\" or f == \"Dummy\" then\n                    local lastName = b:find(\"Dummy\") and b or c:find(\"Dummy\") and c or d:find(\"Dummy\") and d\n                    print(\"DebugMode: \"..debugEntry..\" - Dummy Found!\")\n                    unitName = name ~=nil and lastName\n                end\n            end\n            \n            \n            if nameBlacklist[b] then\n                unitName = name ~=nil and (a or b or c or d or e or f) or nil\n            else\n                unitName = name ~=nil and (f or e or d or c or b or a) or ni\n            end\n            \n            if unitId and marker == nil and nameColouring then\n                marker = 8\n            end\n            \n            \n            \n            if unitName == nil then\n                unitName = name\n            end\n            \n            \n            if renameTable[name] then\n                unitName = renameTable[name]\n            end\n            \n            if unitId and marker and nameColouring then\n                unitFrame.healthBar.unitName:SetText(WrapTextInColorCode(unitName, markerToHex[marker]))\n            elseif unitId then\n                unitFrame.healthBar.unitName:SetText(unitName)\n            end\n        end   \n    end\nend",
},
["Time"] = 1653546694,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 629482,
["Enabled"] = true,
["Revision"] = 129,
["semver"] = "",
["Author"] = "Rhk-Tarren Mill",
["Desc"] = "Aimed at making calls in dungeons simpler by using the last name of a mob or first name of certains ones i.e Jessie Howlis -> Jessie",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "M+ Renamer",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckForQuest (unitFrame)\n    \nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.ExtraQuestMarker22154:Hide()\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckForQuest (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.ExtraQuestMarker22154) then\n        \n        unitFrame.ExtraQuestMarker22154:Hide()\n        \n    end    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.Texture = [[Interface\\OPTIONSFRAME\\UI-OptionsFrame-NewFeatureIcon]]\n    envTable.Size = 18\n    envTable.Anchor = {\n        side = 3, --right side\n        x = 2,\n        y = 0\n    }\n    \n    if (not unitFrame.ExtraQuestMarker22154) then\n        unitFrame.ExtraQuestMarker22154 = unitFrame:CreateTexture (nil, \"overlay\")\n        local texture = unitFrame.ExtraQuestMarker22154\n        \n        texture:SetTexture (envTable.Texture)\n        texture:SetSize (envTable.Size, envTable.Size)\n        Plater.SetAnchor (texture, envTable.Anchor)\n    end\n    \n    function envTable.CheckForQuest (unitFrame)\n        if (unitFrame.namePlateIsQuestObjective) then\n            unitFrame.ExtraQuestMarker22154:Show()\n            \n        else\n            unitFrame.ExtraQuestMarker22154:Hide()\n            \n        end\n    end\nend\n\n\n\n\n\n\n",
},
["Time"] = 1650439916,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/platerquesticon/2",
["Icon"] = "Interface\\OptionsFrame\\UI-OptionsFrame-NewFeatureIcon",
["Enabled"] = false,
["Revision"] = 45,
["semver"] = "1.0.1",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show an extra icon if the unit is a part of a quest you're current doing. You may adjust where the exclamation mark is shown in the Constructor.",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Extra Quest Icon",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --percent of total cast bar size, default: 60% spell name\n    local spellNameSize = 0.40\n    \n    --update function\n    function envTable.UpdateCastBarName(unitId, castBar)\n        --do nothing if interrupted\n        if castBar.IsInterrupted then\n            return\n            \n        end\n        \n        --get the target's unitId \n        local targetUnitId = unitId .. \"target\"\n        \n        --does the unit exists?\n        if (UnitExists(targetUnitId)) then\n            \n            --get the target name\n            local targetName = UnitName(targetUnitId)\n            \n            --does the target name exists?\n            if (targetName) then\n                --get the current spell name\n                local spellName = castBar.SpellName\n                --reset the text in the cast bar\n                castBar.Text:SetText(spellName)\n                \n                --paint the target name with the player's class color\n                local targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                \n                --castbar width\n                local castBarWidth = castBar:GetWidth()\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth * spellNameSize)\n                \n                --set the new text in the castbar spell name fontstring\n                local currentText = castBar.Text:GetText()\n                if (currentText ~= nil and currentText ~= '') then \n                    castBar.Text:SetText(currentText .. \" -> \" .. targetNameByColor)\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth)    \n                end                \n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1649228051,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/VOuCDrV8Y/1",
["Icon"] = 2126355,
["Enabled"] = true,
["Revision"] = 76,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show the cast target name with the spell name",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Cast Target on Spell Name",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Player Logon"] = "function()\n    \n    --Reload after importing or changing anything\n    --Choose the Arrow from the Target Tab\n    \n    Plater.TargetIndicators  [\"EthricArrow\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        width = 26, -- Change size\n        height = 26,\n        x = 17, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow2\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow2.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow3\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow2.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow4\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow4.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow5\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow5.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow6\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow6.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow7\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow7.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 14, -- Change size\n        height = 14,\n        x = 18, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow8\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow8.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 17, -- Change size\n        height = 17,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow9\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow9.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow10\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow10.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0, \n    }\n    \nend",
},
["Time"] = 1650382647,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/okQgj8zoy/6",
["Icon"] = "INTERFACE\\ICONS\\70_inscription_vantus_rune_nightmare",
["Enabled"] = true,
["Revision"] = 22,
["semver"] = "1.0.5",
["Author"] = "Ethric-Twisting Nether",
["Desc"] = "Target Arrows",
["Prio"] = 99,
["Name"] = "Ethric's Arrows",
["PlaterCore"] = 1,
["version"] = 6,
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["LastHookEdited"] = "Initialization",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptId(unitFrame)\nend\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    unitFrame.castBar:UpdateCastColor()\nend",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptIDs()\n    modTable.updateInterruptId(unitFrame)\nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not envTable.lastUpdateTime or (envTable.lastUpdateTime < modTable.lastUpdateTime) then\n        modTable.setCastColorFunction (unitFrame)\n        envTable.lastUpdateTime = modTable.lastUpdateTime\n    end\nend",
["Initialization"] = "function (modTable)\n    \n    --Disable for classic - for now\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function modTable.updateInterruptIDs () end\n        function modTable.setCastColorFunction (unitFrame) end\n        function modTable.updateInterruptId (unitFrame) end\n        return\n    end\n    \n    -- settings:\n    local noKickReadyColor = modTable.config.noKickReadyColor or \"blue\"\n    local kickReadyInTimeColor = modTable.config.kickReadyInTimeColor or \"purple\"\n    local kickOutOfRangeColor = modTable.config.kickOutOfRangeColor or \"orange\"\n    local kickOutOfRangeEnabled = modTable.config.kickOutOfRangeEnabled\n    local kickReadyInTimeGraceTime = modTable.config.kickReadyInTimeGraceTime or 0.5 --sec - additional time on the CD to account for reaction, lag, etc\n    local checkCovenant = true\n    local showSpark = modTable.config.showSpark\n    local sparkColor = modTable.config.sparkColor\n    local sparkWidth = modTable.config.sparkWidth\n    local sparkTexture = modTable.config.sparkTexture\n    \n    local specialCastColorsEnabled = modTable.config.specialColorsEnabled\n    local specialColorsData = modTable.config.specialColors\n    local platerCastColorsEnabled = modTable.config.platerCastColorsEnabled\n    local specialColorsForNonInterruptibleEnabled = modTable.config.specialColorsForNonInterruptibleEnabled\n    local specialColors = {}\n    \n    if platerCastColorsEnabled or specialColorsForNonInterruptibleEnabled then\n        for id, colorData in pairs(Plater.db.profile.cast_colors) do\n            if colorData and colorData[1] and colorData[2] then\n                specialColors[tonumber(id) or id] = {Plater:ParseColors(colorData[2])}\n            end\n        end\n    end\n    if specialCastColorsEnabled or specialColorsForNonInterruptibleEnabled then\n        for id, color in pairs(specialColorsData) do\n            specialColors[tonumber(id) or id] = {Plater:ParseColors(color)}\n        end\n    end\n    local useSpecial = specialCastColorsEnabled or platerCastColorsEnabled\n    \n    \n    -- functions:\n    \n    -- determine interrupt spell according to spec\n    function modTable.updateInterruptIDs ()\n        local specId = GetSpecializationInfo(GetSpecialization())\n        modTable.knownSpecID = specId\n        local interruptIDs = {} -- contains: [spellID] = <is player ability>, false meaning pet or weird workarounds needed\n        if Plater.PlayerClass == \"ROGUE\" then\n            interruptIDs[1766] = true\n        elseif Plater.PlayerClass == \"DEATHKNIGHT\" then\n            interruptIDs[47528] = true\n        elseif Plater.PlayerClass == \"DEMONHUNTER\" then\n            interruptIDs[183752] = true\n        elseif Plater.PlayerClass == \"DRUID\" then\n            if specId == 103 or specId == 104 then\n                interruptIDs[106839] = true -- feral/guardian\n            elseif specId == 102 then\n                interruptIDs[78675] = true -- moonkin\n            end\n        elseif Plater.PlayerClass == \"HUNTER\" then\n            if specId == 255 then\n                interruptIDs[187707] = true -- SV\n            else\n                interruptIDs[147362] = true -- BM/MS\n            end\n        elseif Plater.PlayerClass == \"MONK\" then\n            if specId == 268 or specId == 269 then\n                interruptIDs[116705] = true --WW/BM\n            end\n        elseif Plater.PlayerClass == \"PALADIN\" then\n            if specId == 66 or specId == 70 then\n                interruptIDs[96231] = true --prot/ret\n            end\n            if specId == 66 then\n                interruptIDs[31935] = true --prot\n                if checkCovenant and IsPlayerSpell(304971) then\n                    interruptIDs[304971] = true --kyrian\n                end\n            end\n        elseif Plater.PlayerClass == \"SHAMAN\" then\n            interruptIDs[57994] = true\n        elseif Plater.PlayerClass == \"WARRIOR\" then\n            interruptIDs[6552] = true\n        elseif Plater.PlayerClass == \"MAGE\" then\n            interruptIDs[2139] = true\n        elseif Plater.PlayerClass == \"PRIEST\" then\n            if specId == 258 then\n                interruptIDs[15487] = true\n            end\n        elseif Plater.PlayerClass == \"WARLOCK\" then\n            interruptIDs[119910] = 119898 --Spell Lock (command ability)\n            if IsPlayerSpell(108503) then --GoSac\n                interruptIDs[132409] = 119898 --sacrificed Spell Lock (command ability)\n            end\n            if IsPlayerSpell(212619) then --Call Felhunter (PVP ability)\n                interruptIDs[212619] = true\n            end\n            if specId == 266 then\n                interruptIDs[119914] = 119898 --demo/fel guard  Axe Toss (command ability)\n            end\n        end\n        modTable.interruptSpellIDs = interruptIDs\n    end\n    \n    function modTable.updateInterruptId (unitFrame)\n        local specId = GetSpecializationInfo(GetSpecialization())\n        if not modTable.interruptSpellIDs or modTable.knownSpecID ~= specId then\n            modTable.updateInterruptIDs()\n        end\n        unitFrame.castBar.interruptSpellIDs = modTable.interruptSpellIDs\n    end\n    \n    function modTable.setCastColorFunction (unitFrame)\n        -- create spark (if needed)\n        local castBar = unitFrame.castBar\n        if not castBar.InterruptSpark then\n            castBar.InterruptSpark = castBar:CreateTexture (nil, \"overlay\")\n            castBar.InterruptSpark:SetDrawLayer (\"overlay\", 4)\n            castBar.InterruptSpark:SetBlendMode (\"ADD\")\n            castBar.InterruptSpark:SetHeight(castBar:GetHeight() + 6)\n        end\n        castBar.InterruptSpark:SetTexture(Plater.SparkTextures[sparkTexture])\n        castBar.InterruptSpark:SetVertexColor(Plater:ParseColors(sparkColor))\n        castBar.InterruptSpark:SetWidth(sparkWidth)\n        \n        -- overwrite the color function:\n        castBar.GetCastColor = function (self)\n            \n            self.InterruptSpark:Hide()\n            \n            local interruptCD, interruptReadyInTime = nil, false\n            local interruptDur, interruptStart = 0, 0\n            local spellOutOfRange = false --skip per default\n            if self.interruptSpellIDs and UnitCanAttack(\"player\", self.unit) then\n                \n                for interruptSpellId, playerAbility in pairs(self.interruptSpellIDs) do\n                    if playerAbility == true then\n                        \n                        if IsSpellKnown(interruptSpellId) then\n                            local cdStart, cdDur =  GetSpellCooldown(interruptSpellId)\n                            local tmpInterruptCD = (cdStart > 0 and  cdDur - (GetTime() - cdStart)) or 0\n                            if not interruptCD or (tmpInterruptCD < interruptCD) then\n                                interruptCD = tmpInterruptCD\n                                interruptDur = cdDur\n                                interruptStart = cdStart\n                                spellOutOfRange = IsSpellInRange(GetSpellInfo(interruptSpellId), self.unit) == 0\n                            end\n                        end\n                    else\n                        if type(playerAbility) == \"number\" then\n                            -- workaround for spell overrides (on WL command ability, etc.)\n                            if FindSpellOverrideByID(playerAbility) == interruptSpellId then\n                                local cdStart, cdDur =  GetSpellCooldown(interruptSpellId)\n                                local tmpInterruptCD = (cdStart > 0 and  cdDur - (GetTime() - cdStart)) or 0\n                                if tmpInterruptCD > 0 and (not interruptCD or  (tmpInterruptCD < interruptCD)) then\n                                    interruptCD = tmpInterruptCD\n                                    interruptDur = cdDur\n                                    interruptStart = cdStart\n                                    spellOutOfRange = IsSpellInRange(GetSpellInfo(interruptSpellId), self.unit) == 0\n                                end \n                            end\n                        end\n                    end\n                end\n                \n                if not interruptCD then\n                    interruptCD = 0\n                end\n                \n                if self.channeling then\n                    interruptReadyInTime = (interruptCD + kickReadyInTimeGraceTime) < self.value\n                else\n                    interruptReadyInTime = (interruptCD + kickReadyInTimeGraceTime) < (self.maxValue - self.value)\n                end\n            end\n            \n            if not interruptCD then\n                interruptCD = 0\n            end\n            \n            if (not self.canInterrupt) then\n                return (specialColorsForNonInterruptibleEnabled and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.NonInterruptible\n                \n            elseif (self.failed) then\n                return self.Colors.Failed\n                \n            elseif (self.interrupted) then\n                return self.Colors.Interrupted\n                \n            elseif (self.finished) then\n                return self.Colors.Finished\n                \n            elseif interruptCD > 0 and interruptReadyInTime then\n                if showSpark then\n                    self.InterruptSpark:Show()\n                    local sparkPosition = (interruptStart + interruptDur - self.spellStartTime + kickReadyInTimeGraceTime)/self.maxValue\n                    if self.channeling then\n                        sparkPosition = 1-sparkPosition\n                    end\n                    self.InterruptSpark:SetPoint (\"center\", self, \"left\", sparkPosition  * self:GetWidth(), 0)\n                end\n                return kickReadyInTimeColor\n                \n            elseif interruptCD > 0 then\n                return noKickReadyColor\n                \n            elseif kickOutOfRangeEnabled and spellOutOfRange then\n                return kickOutOfRangeColor\n                \n            elseif (self.channeling) then\n                return self.Colors.Channeling\n                \n            else\n                return (useSpecial and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.Casting\n                \n            end\n        end\n    end\n    \n    modTable.lastUpdateTime = time()\n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptId(unitFrame)\n    modTable.setCastColorFunction(unitFrame)\nend",
},
["Time"] = 1650437255,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/jHilJiXiY/37",
["Icon"] = 132219,
["Enabled"] = true,
["Revision"] = 767,
["semver"] = "1.2.12",
["Author"] = "Viash-Thrall",
["Desc"] = "Sets the cast bar color to the specified one if your interrupt spell is not ready. Uses other Plater color settings otherwise.",
["Prio"] = 99,
["Name"] = "Interrupt not ready Cast Color",
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "General:",
["Value"] = "General:",
["Key"] = "option8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Kick not Ready Color",
["Value"] = {
0,
0,
1,
1,
},
["Key"] = "noKickReadyColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Kick Ready in Time Color",
["Value"] = {
0.50196078431373,
0,
1,
1,
},
["Key"] = "kickReadyInTimeColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Kick out of Range Color",
["Value"] = {
1,
0.54901960784314,
0,
1,
},
["Key"] = "kickOutOfRangeColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Check 'Out Of Range'",
["Value"] = false,
["Key"] = "kickOutOfRangeEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "kickReadyInTimeGraceTime",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Reaction grace Time",
},
{
["Type"] = 4,
["Name"] = "Enable special Colors",
["Value"] = false,
["Key"] = "specialColorsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Enable Plater Cast Colors",
["Value"] = false,
["Key"] = "platerCastColorsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Colors for not-interruptible",
["Value"] = false,
["Key"] = "specialColorsForNonInterruptibleEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 10",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Spark:",
["Value"] = "Spark:",
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Spark",
["Value"] = true,
["Key"] = "showSpark",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0,
1,
0,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 12,
["Key"] = "sparkWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Spark Width",
},
{
["Type"] = 2,
["Max"] = 8,
["Desc"] = "",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "sparkTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Spark Texure",
},
{
["Type"] = 7,
["Name"] = "Special Cast Colors",
["Value"] = {
{
"116",
"navy",
},
},
["Key"] = "specialColors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["HooksTemp"] = {
},
["version"] = 37,
},
{
["Enabled"] = true,
["Revision"] = 203,
["semver"] = "1.0.0",
["HooksTemp"] = {
},
["Name"] = "Target Mark Color Change",
["Author"] = "Fragile-烈焰峰",
["Time"] = 1650437263,
["Desc"] = "",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local raidMark = Plater.GetRaidMark (unitFrame)\n    \n    local color = envTable.MarkToColor[raidMark]\n    \n    if raidMark then\n        \n        Plater.SetNameplateColor (unitFrame, color)\n        envTable.HasRaidMark = true\n        \n    end\n    \nend\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.MarkToColor = {\n        [1] = \"#d9cf45\",--YellowStar\n        [2] = \"#ed820f\", --Orange Circle\n        [3] = \"#b30fd6\", --Purple Diamond\n        [4] = \"#24a824\", --Green Triangle\n        [5] = \"#99bfd9\", --Silver Moon\n        [6] = \"#00a3ff\", --Blue Square\n        [7] = \"#d12e2e\", --Red Cross\n        [8] = \"#e3d4bd\", --White Skull    \n    }\n    \nend\n\n\n",
["Raid Target"] = "function (self, unitId, unitFrame, envTable)\n    \n    local raidMark = Plater.GetRaidMark (unitFrame)    \n    \n    if (not raidMark) then\n        if envTable.HasRaidMark then\n            \n            Plater.RefreshNameplateColor(unitFrame)\n            envTable.HasRaidMark = nil\n            \n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n",
},
["Prio"] = 99,
["version"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["PlaterCore"] = 1,
["url"] = "https://wago.io/tEQKn0Ns8/1",
["Icon"] = "INTERFACE\\ICONS\\Achievement_DoubleRainbow",
["LastHookEdited"] = "Constructor",
},
{
["LastHookEdited"] = "Initialization",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    -- settings:\n    \n    -- for the LibCustomGlow implementation:\n    modTable.options = {\n        glowType = \"pixel\",\n        color = modTable.config.glowColor,--\"red\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = modTable.config.antsAmount, --8, -- number of lines. Defaul value is 8;\n        frequency = modTable.config.frequency, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = modTable.config.antsLength, -- length of lines. Default value depends on region size and number of lines;\n        th = modTable.config.antsThickness, -- thickness of lines. Default value is 2;\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        border = modTable.config.antsBorder, -- set to true to create border under lines;\n        key = \"StealPurgeAuraGlow\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local buffSpecialGlow = true\n    \n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n                if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                    auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                    local offset = modTable.config.antsThickness\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                end\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                    if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                        auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                        local offset = modTable.config.antsThickness\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                    end\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
},
["Time"] = 1650437628,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/turHC0a5k/7",
["Icon"] = "INTERFACE\\ICONS\\Ability_Creature_Cursed_04",
["Enabled"] = false,
["Revision"] = 283,
["semver"] = "1.0.6",
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
["Prio"] = 99,
["Name"] = "Steal/Purge Aura Glow",
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "@scriptname Options:",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
1,
0,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the glow ants.",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "Amount of ants in the glow effect.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 6,
["Key"] = "antsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Ants Amount",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Ants move speed",
["Min"] = -1,
["Fraction"] = true,
["Value"] = 0.25,
["Key"] = "frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Speed",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 4,
["Key"] = "antsLength",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Ants length",
},
{
["Type"] = 2,
["Max"] = 4,
["Desc"] = "",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 2,
["Key"] = "antsThickness",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Ants Thickness",
},
{
["Type"] = 4,
["Name"] = "Ants Border",
["Value"] = false,
["Key"] = "antsBorder",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Outer Glow",
["Value"] = false,
["Key"] = "outerGlow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["HooksTemp"] = {
},
["version"] = 7,
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "Constructor",
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    unitFrame.questProgressIconFrame:Hide()\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateQuestProgress(unitFrame)\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateQuestProgress(unitFrame)\n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- Updated for Shadowlands --\n    \n    -- text settings\n    local textColor = \"orange\";\n    local textSize = 10;\n    local textOutline = \"OUTLINE\";--\"NONE\", \"OUTLINE\", \"THICKOUTLINE\"\n    local textShadowAlpha = 0; -- 0 = transparent, 1 = 100% solid\n    local textX = 0;\n    local textY = -25;\n    local textAnchor = \"center\"; -- \"center\", \"top\", \"bottom\", \"topleft\", \"left\", \"bottomleft\", \"topright\", \"right\", \"bottomright\"\n    local textIconAnchor = \"center\"; -- \"center\", \"top\", \"bottom\", \"topleft\", \"left\", \"bottomleft\", \"topright\", \"right\", \"bottomright\"\n    local TextType = \" / \"\n    \n    --icon settings\n    local iconSize = 25\n    \n    -- positioning\n    local iconAnchor = {\n        side = 8, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 0, --x offset\n        y = 20, --y offset\n    };\n    \n    -- icon options\n    --    local iconQuestHR = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\JimmosQuestIcon.tga]];\n    local iconQuestHR = [[Interface\\OPTIONSFRAME\\UI-OptionsFrame-NewFeatureIcon]];\n    \n    \n    ------------------------------------------------------------------------------------------------------------- \n    --frames:\n    \n    --create the icon frame that will show the quest need\n    if (not unitFrame.questProgressIconFrame) then\n        envTable.questProgressIconFrame = unitFrame:CreateTexture (nil, \"overlay\")\n        envTable.questProgressIconFrame:SetTexture (iconQuestHR)\n        envTable.questProgressIconFrame:SetSize (iconSize, iconSize)\n        Plater.SetAnchor (envTable.questProgressIconFrame, iconAnchor)\n        unitFrame.questProgressIconFrame = envTable.questProgressIconFrame\n    end\n    \n    \n    --create the text frame that will show the quest progress\n    if (not  unitFrame.healthBar.questProgressTextFrame) then\n        envTable.questProgressTextFrame = Plater:CreateLabel (unitFrame.healthBar);\n        Plater:SetFontSize (envTable.questProgressTextFrame, textSize);\n        Plater:SetFontColor (envTable.questProgressTextFrame, textColor);\n        Plater:SetFontOutline (envTable.questProgressTextFrame, textOutline);\n        envTable.questProgressTextFrame:SetPoint (textAnchor, unitFrame.questProgressIconFrame, textIconAnchor, textX, textY);\n        DetailsFramework:SetFontShadow (envTable.questProgressTextFrame, 0, 0, 0, textShadowAlpha);\n        unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n        envTable.questProgressTextFrame:SetText(\"\")\n    end\n    \n    ------------------------------------------------------------------------------------------------------------- \n    --functions\n    \n    function envTable.updateQuestProgress (unitFrame)\n        if unitFrame and unitFrame.namePlateIsQuestObjective then\n            --            print(unitFrame.QuestAmountCurrent)\n            --            print(unitFrame.QuestAmountTotal)\n            if unitFrame.QuestAmountCurrent then\n                if unitFrame.QuestAmountTotal then\n                    TextType = (unitFrame.QuestAmountCurrent or 0) .. \" / \"\n                    .. unitFrame.QuestAmountTotal\n                    unitFrame.questProgressIconFrame:SetTexture (iconQuestHR);\n                else\n                    TextType = (unitFrame.QuestAmountCurrent) .. \"%\"\n                    unitFrame.questProgressIconFrame:SetTexture (iconQuestHR);\n                end\n            end\n            unitFrame.questProgressIconFrame:Show();\n            unitFrame.healthBar.questProgressTextFrame:SetText(TextType)\n        else\n            unitFrame.questProgressIconFrame:Hide();\n            unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n        end\n    end\n    \nend",
},
["Time"] = 1650439946,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/CCzSeTp-U/6",
["Icon"] = 134411,
["Enabled"] = true,
["Revision"] = 76,
["semver"] = "2.1.3",
["Author"] = "Jimmo-Frostmourne",
["Desc"] = "Adds a custom Quest Icon to show quest related mobs and progress towards completion.",
["Prio"] = 99,
["Name"] = "Jimmo's Quest Marker",
["PlaterCore"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["version"] = 6,
},
},
["last_news_time"] = 1550158598,
["auras_per_row_auto"] = false,
["cast_statusbar_fadeout_time"] = 0.3999999761581421,
["aura_stack_size"] = 9,
["auras_per_row_amount2"] = 4,
["aura_width"] = 22,
["aura_height2"] = 14,
["ghost_auras"] = {
["auras"] = {
["WARLOCK"] = {
{
[172] = true,
[980] = true,
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
},
},
["buff_frame_anchor_and_size_migrated"] = true,
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1683596223,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 146,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["__TrashAt"] = 1725100665,
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Health Markers [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Name"] = "Vertical Line Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Name"] = "Fill Alpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1669327146,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 65,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["__TrashAt"] = 1725100665,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Name"] = "Aura is Shield [P]",
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["SpellIds"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1670202265,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 620,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["__TrashAt"] = 1725100665,
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Frontal Cone [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "animSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
},
},
["health_cutoff"] = false,
["aura_border_colors"] = {
["enrage"] = {
0,
0,
0,
},
["steal_or_purge"] = {
0.27843137254902,
0.92156862745098,
0.98039215686275,
},
["crowdcontrol"] = {
0,
0,
0,
},
["offensive"] = {
nil,
0,
0,
},
["is_show_all"] = {
0,
0,
0,
},
["defensive"] = {
0,
0,
0,
},
["is_buff"] = {
nil,
0,
0,
},
},
["castbar_target_anchor"] = {
["y"] = 8.349998474121094,
["x"] = 24.72999572753906,
["side"] = 6,
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["script_auto_imported"] = {
["Cast - Important by Color [P]"] = 2,
["Relics 9.2 M Dungeons"] = 2,
["Cast - Effect After Cast [P]"] = 2,
["Explosion Affix M+"] = 14,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Unit - Show Energy"] = 11,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Cast - Circular Swipe"] = 4,
["Aura - Invalidate Unit"] = 1,
["Add - Important [P]"] = 4,
["Cast - Shining Green [P]"] = 3,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Cast - Heroic Leap [P]"] = 3,
["Add - Tag Number [P]"] = 2,
["Unit Power"] = 1,
["Add - Explode on Die [P]"] = 1,
["Cast - Special Ability [P]"] = 3,
["Cast - Tank Interrupt"] = 12,
["Cast - Important Target [P]"] = 2,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Cast - AoE With Range [P]"] = 2,
["Cast - Voidzone [P]"] = 2,
["Unit - Important"] = 11,
["Cast - Glowing [P]"] = 10,
["Cast - Quick Flash"] = 2,
["Cast - AoE Hit All [P]"] = 3,
["Cast - Shield Interrupt"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Add - Warning [P]"] = 5,
["Spiteful Affix"] = 3,
["Aura is Shield [P]"] = 5,
["Cast - Debuff [P]"] = 2,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Color Change"] = 1,
["Cast - Heal Cut [P]"] = 3,
["Cast - Stop Casting"] = 4,
["Auto Set Skull"] = 11,
["Countdown"] = 11,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Very Important"] = 15,
["Aura Border Color"] = 1,
["Cast - On Going Cast [P]"] = 2,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Fixate"] = 11,
["Unit - Health Markers"] = 12,
["Aura - Is Cast Bar [P]"] = 1,
["Aura - Buff Alert"] = 15,
["Fixate On You"] = 11,
},
["target_highlight_color"] = {
1,
1,
},
["extra_icon_anchor"] = {
["y"] = -13,
["x"] = 0,
["side"] = 8,
},
["extra_icon_wide_icon"] = false,
["range_check_alpha"] = 1,
["extra_icon_auras"] = {
"Adrenaline Rush",
"Alliance Flag",
"Alter Time",
"Anti-Magic Shell",
"Arcane Power",
"Archangel",
"Ardent Defender",
"Aspect of the Turtle",
"Asphyxiate",
"Astral Shift",
"Aura Mastery",
"Avatar",
"Avenger's Shield",
"Axe Toss",
"Banish",
"Barkskin",
"Berserker Rage",
"Binding Shot",
"Bladestorm",
"Blazing Barrier",
"Blessing of Freedom",
"Blessing of Protection",
"Blessing of Sacrifice",
"Blind",
"Blinding Light",
"Blinding Sleet",
"Bloodlust",
"Heroism",
"Time Warp",
"Blur",
"Casting Circle",
"Celestial Alignment",
"Chaos Nova",
"Charge",
"Cheap Shot",
"Cheat Death",
"Cloak of Shadows",
"Combat Readiness",
"Corpse Shield",
"Dampen Harm",
"Dark Archangel Form",
"Dark Pact",
"Deterrence",
"Die by the Sword",
"Diffuse Magic",
"Disarm",
"Dispersion",
"Divine Shield",
"Dragon's Breath",
"Duel",
"Earthgrab Totem",
"Entangling Roots",
"Entrapment",
"Ethereal Form",
"Evasion",
"Eye for an Eye",
"Fear",
"Fel Eruption",
"Fists of Fury",
"Fortifying Brew",
"Freeze",
"Freezing Arrow",
"Frost Nova",
"Freezing Trap",
"Garrote",
"Gnaw",
"Gouge",
"Grounding Totem Effect",
"Guardian Spirit",
"Guardian of Ancient Kings",
"Guardian of the Forgotten Queen",
"Hammer of Justice",
"Hand of Thros",
"Haunted Urn",
"Hex",
"Holy Word: Chastise",
"Horde Flag",
"Howl of Terror",
"Ice Block",
"Ice Floes",
"Ice Form",
"Icebound Fortitude",
"Icy Veins",
217832,
"Incapacitating Roar",
"Innervate",
"Intimidating Shout",
"Intimidating Roar",
"Ironbark",
"Kidney Shot",
"Killing Spree",
"Last Word",
"Leap",
"Leg Sweep",
"Life Cocoon",
"Maim",
"Mass Entanglement",
"Master of the Elements",
"Mending Bandage",
"Mesmerize",
162264,
"Meteor Strike Infernal",
"Mighty Bash",
"Mind Bomb",
"Mind Control",
"Mortal Coil",
"Narrow Escape",
"Nether Bond",
"Nether Ward",
"Netherstorm Flag",
"Netherwalk",
"Pain Suppression",
"Paralysis",
51271,
"Polymorph",
"Power Infusion",
"Predatory Swiftness",
"Prismatic Barrier",
"Psychic Scream",
163505,
"Recklessness",
"Repentance",
"Ring of Frost",
"Roar of Sacrifice",
6770,
"Scatter Shot",
"Seduction",
"Serenity",
"Shackle Undead",
"Shadow Blades",
"Shadow Reflection",
"Shadowfury",
"Shield Wall",
"Shockwave",
"Sigil of Misery",
"Sigil of Silence",
"Silenced",
"Sin and Punishment",
"Smoke Bomb",
"Solar Beam",
"Soul Harvest",
"Spectral Sight",
"Spell Reflection",
"Static Charge",
"Storm Bolt",
137639,
"Strangulate",
"Survival Instinct",
"Temporal Shield",
"Touch of Karma",
"Tracker's Net",
"Undying Rage",
"Unending Resolve Cooldown Reduction",
"Vampiric Embrace",
"Voidform",
"War Banner",
"Wracking Pains Proc",
"Wyvern Sting",
"Zen Meditation",
"Immolate",
"Immolate",
},
["castbar_target_font"] = "Naowh",
["ui_parent_cast_level"] = 1,
["semver"] = "1.0.7",
["ui_parent_buff2_level"] = 1,
["range_check_in_range_or_target_alpha_friendlies"] = 1,
["aura_frame2_anchor"] = {
["y"] = 31.09999084472656,
["x"] = -0.600006103515625,
["side"] = 3,
},
["use_color_lerp"] = true,
["aura_alpha"] = 0.5999999642372131,
["auto_toggle_friendly"] = {
["cities"] = false,
["world"] = false,
},
["indicator_faction"] = false,
["debuff_show_cc"] = false,
["extra_icon_height"] = 26,
["aura_x_offset"] = 0.8699951171875,
["range_check_alpha_friendlies"] = 1,
["transparency_behavior"] = 3,
["spell_animations"] = false,
["ui_parent_scale_tune"] = 1.109999895095825,
["debuff_show_cc_border"] = {
0,
0,
0,
},
["aura_stack_color"] = {
nil,
0.94509803921569,
0.93725490196078,
},
["aura_consolidate"] = true,
["ui_parent_buff_level"] = 1,
["health_statusbar_bgtexture"] = "Clean",
["auto_toggle_combat_enabled"] = true,
["extra_icon_width"] = 26,
["tank"] = {
["colors"] = {
["anothertank"] = {
0.73333333333333,
0.19607843137255,
},
["aggro"] = {
0.38039215686275,
0.87450980392157,
0.23137254901961,
},
["nocombat"] = {
0.99607843137255,
0.29803921568627,
0.30980392156863,
},
["noaggro"] = {
0.99607843137255,
0.29803921568627,
0.30980392156863,
},
["pulling"] = {
nil,
0.93333333333333,
0.43137254901961,
},
},
},
["health_statusbar_texture"] = "Clean",
["hook_auto_imported"] = {
["Targetting Alpha"] = 3,
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Bwonsamdi Reaping"] = 1,
["Execute Range"] = 1,
["Jaina Encounter"] = 6,
["Blockade Encounter"] = 1,
["Cast Bar Icon Config"] = 2,
["Hide Neutral Units"] = 1,
["Extra Border"] = 2,
["Combo Points"] = 6,
["Target Color"] = 3,
["Attacking Specific Unit"] = 2,
["Aura Reorder"] = 3,
},
["castbar_target_show"] = true,
["cast_statusbar_color"] = {
nil,
0.93333333333333,
0.43137254901961,
0.96000000089407,
},
["update_throttle"] = 0.1200000047683716,
["minor_width_scale"] = 0.9999999403953552,
["indicator_pet"] = false,
["color_lerp_speed"] = 7,
["aura_frame1_anchor"] = {
["y"] = 7.5,
["x"] = 0.8699951171875,
["side"] = 7,
},
["tocversion"] = 100206,
["castbar_icon_show"] = false,
["indicator_extra_raidmark"] = false,
["honor_blizzard_plate_alpha"] = true,
["aura_timer_text_font"] = "Naowh",
["extra_icon_timer_font"] = "GothamNarrowUltra",
["not_affecting_combat_alpha"] = 1,
["extra_icon_stack_font"] = "GothamNarrowUltra",
["border_color"] = {
nil,
nil,
nil,
1,
},
["aura_height"] = 14,
["non_targeted_alpha_enabled"] = true,
["use_health_animation"] = true,
["cast_statusbar_bgtexture"] = "Clean",
["aura2_x_offset"] = -0.600006103515625,
["target_indicator"] = "EthricArrow2",
["indicator_rare"] = false,
["npc_colors"] = {
[165872] = {
true,
false,
"deepskyblue",
},
[177889] = {
true,
false,
"mediumslateblue",
},
[165076] = {
true,
false,
"aqua",
},
[179388] = {
true,
false,
"aqua",
},
[162049] = {
true,
false,
"mediumslateblue",
},
[177891] = {
true,
false,
"deepskyblue",
},
[148120] = {
false,
false,
"blue",
},
[168393] = {
true,
false,
"deepskyblue",
},
[177892] = {
true,
false,
"deepskyblue",
},
[167533] = {
true,
false,
"deepskyblue",
},
[173016] = {
true,
false,
"aqua",
},
[165430] = {
true,
false,
"deepskyblue",
},
[162689] = {
true,
false,
"deepskyblue",
},
[169861] = {
true,
false,
"deepskyblue",
},
[169893] = {
true,
false,
"mediumslateblue",
},
[170690] = {
true,
false,
"deepskyblue",
},
[176396] = {
true,
false,
"mediumslateblue",
},
[170850] = {
true,
false,
"deepskyblue",
},
[170882] = {
true,
false,
"aqua",
},
[168396] = {
true,
false,
"deepskyblue",
},
[146753] = {
false,
false,
"blue",
},
[162691] = {
true,
false,
"mediumslateblue",
},
[163520] = {
true,
false,
"deepskyblue",
},
[169927] = {
true,
false,
"mediumslateblue",
},
[161895] = {
true,
false,
"magenta",
},
[162692] = {
true,
false,
"deepskyblue",
},
[165529] = {
true,
false,
"aqua",
},
[179841] = {
true,
false,
"aqua",
},
[174773] = {
true,
false,
"magenta",
},
[168717] = {
true,
false,
"deepskyblue",
},
[164414] = {
true,
false,
"aqua",
},
[163458] = {
true,
false,
"aqua",
},
[164510] = {
true,
false,
"deepskyblue",
},
[179842] = {
true,
false,
"deepskyblue",
},
[168718] = {
true,
false,
"aqua",
},
[163459] = {
true,
false,
"aqua",
},
[160495] = {
true,
false,
"aqua",
},
[168942] = {
true,
false,
"deepskyblue",
},
[163619] = {
false,
false,
"white",
},
[165946] = {
true,
false,
"deepskyblue",
},
[179334] = {
true,
false,
"mediumslateblue",
},
[163620] = {
true,
false,
"deepskyblue",
},
[120651] = {
true,
false,
"darksalmon",
},
[163621] = {
true,
false,
"deepskyblue",
},
[146409] = {
false,
false,
"darkgreen",
},
[168658] = {
true,
false,
"deepskyblue",
},
[164929] = {
true,
false,
"deepskyblue",
},
[167607] = {
true,
false,
"deepskyblue",
},
[166396] = {
true,
false,
"aqua",
},
[170572] = {
true,
false,
"aqua",
},
[176565] = {
true,
false,
"aqua",
},
[162317] = {
true,
false,
"deepskyblue",
},
[165919] = {
true,
false,
"deepskyblue",
},
[174175] = {
true,
false,
"deepskyblue",
},
[166302] = {
true,
false,
"aqua",
},
[165824] = {
true,
false,
"mediumslateblue",
},
[155433] = {
false,
false,
"magenta",
},
[169905] = {
true,
false,
"deepskyblue",
},
[155434] = {
false,
false,
"violet",
},
[165762] = {
true,
false,
"deepskyblue",
},
[168886] = {
true,
false,
"deepskyblue",
},
[172265] = {
true,
false,
"aqua",
},
[163882] = {
true,
false,
"deepskyblue",
},
[185685] = {
true,
false,
"orangered",
},
[167612] = {
true,
false,
"aqua",
},
[163086] = {
true,
false,
"deepskyblue",
},
[165222] = {
true,
false,
"aqua",
},
[165764] = {
true,
false,
"mediumslateblue",
},
[179821] = {
true,
false,
"mediumslateblue",
},
[165414] = {
true,
false,
"aqua",
},
[171343] = {
true,
false,
"deepskyblue",
},
[166275] = {
true,
false,
"aqua",
},
[173447] = {
false,
false,
"white",
},
[178133] = {
false,
false,
"aqua",
},
[178165] = {
true,
false,
"mediumslateblue",
},
[171376] = {
true,
false,
"deepskyblue",
},
[163121] = {
true,
false,
"deepskyblue",
},
[167998] = {
true,
false,
"deepskyblue",
},
[168572] = {
true,
false,
"deepskyblue",
},
[177816] = {
true,
false,
"deepskyblue",
},
[162038] = {
true,
false,
"deepskyblue",
},
[168318] = {
true,
false,
"deepskyblue",
},
[180335] = {
true,
false,
"deepskyblue",
},
[164557] = {
true,
false,
"deepskyblue",
},
[162039] = {
true,
false,
"aqua",
},
[168446] = {
true,
false,
"mediumslateblue",
},
[162103] = {
true,
false,
"deepskyblue",
},
[180336] = {
true,
false,
"aqua",
},
[168627] = {
true,
false,
"aqua",
},
[162040] = {
true,
false,
"deepskyblue",
},
[178392] = {
true,
false,
"deepskyblue",
},
[174197] = {
true,
false,
"aqua",
},
[180431] = {
true,
false,
"aqua",
},
[168443] = {
true,
false,
"deepskyblue",
},
[174210] = {
true,
false,
"aqua",
},
[177787] = {
true,
false,
"aqua",
},
[162047] = {
true,
false,
"deepskyblue",
},
[163524] = {
true,
false,
"mediumslateblue",
},
[180433] = {
true,
false,
"orangered",
},
[165197] = {
true,
false,
"mediumslateblue",
},
[163157] = {
true,
false,
"deepskyblue",
},
[163618] = {
true,
false,
"deepskyblue",
},
[171799] = {
true,
false,
"deepskyblue",
},
[163862] = {
true,
false,
"deepskyblue",
},
[173044] = {
true,
false,
"aqua",
},
[164506] = {
true,
false,
"mediumslateblue",
},
[168681] = {
true,
false,
"mediumslateblue",
},
[163891] = {
true,
false,
"aqua",
},
[179733] = {
true,
false,
"orangered",
},
[178142] = {
true,
false,
"aqua",
},
[179269] = {
true,
false,
"deepskyblue",
},
[162744] = {
true,
false,
"deepskyblue",
},
[167876] = {
true,
false,
"deepskyblue",
},
[168418] = {
true,
false,
"aqua",
},
[170490] = {
true,
false,
"aqua",
},
[168992] = {
true,
false,
"aqua",
},
[166589] = {
true,
false,
"deepskyblue",
},
[166299] = {
true,
false,
"aqua",
},
[168578] = {
true,
false,
"aqua",
},
[164266] = {
true,
false,
"deepskyblue",
},
[164562] = {
true,
false,
"deepskyblue",
},
[176395] = {
true,
false,
"deepskyblue",
},
[178141] = {
true,
false,
"deepskyblue",
},
[163128] = {
true,
false,
"aqua",
},
[167536] = {
true,
false,
"deepskyblue",
},
[167111] = {
true,
false,
"deepskyblue",
},
[172981] = {
true,
false,
"deepskyblue",
},
[167493] = {
true,
false,
"aqua",
},
[163126] = {
true,
false,
"aqua",
},
[168420] = {
true,
false,
"aqua",
},
[165137] = {
true,
false,
"deepskyblue",
},
[163894] = {
true,
false,
"deepskyblue",
},
[173729] = {
true,
false,
"mediumslateblue",
},
[167965] = {
true,
false,
"aqua",
},
[164921] = {
true,
false,
"aqua",
},
[168357] = {
true,
false,
"aqua",
},
[135246] = {
false,
false,
"white",
},
[179386] = {
true,
false,
"deepskyblue",
},
[177817] = {
true,
false,
"aqua",
},
[166276] = {
true,
false,
"deepskyblue",
},
[164185] = {
true,
false,
"deepskyblue",
},
},
["auto_toggle_stacking_enabled"] = true,
["auras_per_row_amount"] = 4,
["indicator_raidmark_anchor"] = {
["y"] = 2,
["x"] = 0,
["side"] = 9,
},
["aura_show_buff_by_the_unit"] = false,
["pet_width_scale"] = 0.9999999403953552,
["target_shady_alpha"] = 0.5999999642372131,
["aura_cooldown_reverse"] = false,
["tap_denied_color"] = {
0.37254901960784,
0.37254901960784,
0.37254901960784,
},
["resources"] = {
["y_offset_target"] = 20,
["y_offset_target_withauras"] = 32,
},
["castbar_target_outline"] = "NONE",
["indicator_elite"] = false,
["saved_cvars"] = {
["ShowClassColorInNameplate"] = "1",
["nameplateOverlapV"] = "0.7789871096611",
["nameplateLargeTopInset"] = "0.10000000149012",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplatePersonalShowInCombat"] = "1",
["nameplateTargetRadialPosition"] = "1",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateShowAll"] = "1",
["nameplateMaxDistance"] = "39",
["nameplateShowFriendlyMinions"] = "0",
["nameplateSelfScale"] = "1",
["nameplateTargetBehindMaxDistance"] = "30",
["SoftTargetInteract"] = "3",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplatePersonalShowAlways"] = "0",
["nameplateMotionSpeed"] = "0.05",
["nameplateGlobalScale"] = "1",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "1.4143263101578",
["nameplateShowFriends"] = "0",
["nameplateMotion"] = "1",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateMinScale"] = "1",
["ShowNamePlateLoseAggroFlash"] = "1",
["nameplateOtherTopInset"] = "0.10000000149012",
["nameplateSelfTopInset"] = "0.5",
["nameplateSelfBottomInset"] = "0.2",
["nameplateSelfAlpha"] = "1",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateOccludedAlphaMult"] = "0.4",
["NamePlateHorizontalScale"] = "1",
["nameplatePersonalShowWithTarget"] = "1",
["SoftTargetIconGameObject"] = "1",
["nameplateShowOnlyNames"] = "1",
},
["transparency_behavior_use_division"] = true,
["extra_icon_use_blizzard_border_color"] = false,
["login_counter"] = 16763,
["extra_icon_caster_name"] = false,
["aura_cooldown_show_swipe"] = false,
["pet_height_scale"] = 0.9999999403953552,
["first_run3"] = true,
["hover_highlight_alpha"] = 0.5,
["indicator_spec"] = false,
["aura_timer_text_outline"] = "NONE",
["extra_icon_auras_mine"] = {
["Axe Toss"] = true,
["Mortal Coil"] = true,
},
["castbar_icon_attach_to_side"] = "right",
["aura_stack_font"] = "Naowh",
["patch_version"] = 37,
["profile_name"] = "Claudio",
["range_check_in_range_or_target_alpha"] = 1,
["aura_timer_text_size"] = 9,
["ui_parent_target_strata"] = "MEDIUM",
["auto_toggle_combat"] = {
["enemy_ooc"] = true,
["enemy_ic"] = true,
["blizz_healthbar_ooc"] = true,
["blizz_healthbar_ic"] = true,
},
["number_region_first_run"] = true,
["aura_tracker"] = {
["buff_tracked"] = {
[295425] = true,
},
["debuff_banned"] = {
["264263"] = true,
["339137"] = true,
},
},
["target_highlight_alpha"] = 0.239999994635582,
["news_frame"] = {
["PlaterNewsFrame"] = {
["scale"] = 1,
},
},
["aura_height_personal"] = 19,
["version"] = 8,
["hide_friendly_castbars"] = true,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1.100000023841858,
},
},
["target_highlight_height"] = 12,
["aura_width2"] = 22,
["click_space_friendly"] = {
50,
1,
},
["dps"] = {
["colors"] = {
["notontank"] = {
0.99607843137255,
0.29803921568627,
0.30980392156863,
},
["aggro"] = {
0.99607843137255,
0.29803921568627,
0.30980392156863,
},
["noaggro"] = {
0.73333333333333,
0.19607843137255,
},
["pulling"] = {
nil,
0.93333333333333,
0.43137254901961,
},
},
},
["extra_icon_show_offensive_border"] = {
nil,
0,
0,
},
["health_statusbar_bgcolor"] = {
0.1294117647058823,
0.1294117647058823,
0.1294117647058823,
0.8762810155749321,
},
["aura2_grow_direction"] = 3,
["cast_statusbar_texture"] = "Clean",
["healthbar_framelevel"] = 0,
["aura_cooldown_edge_texture"] = "Interface\\GLUES\\loadingOld",
["extra_icon_show_purge_border"] = {
nil,
0,
0,
},
["extra_icon_show_defensive_border"] = {
0,
0,
0,
},
["cast_statusbar_spark_width"] = 4,
["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator7",
},
},
["performance_units"] = {
[176920] = true,
[214441] = true,
[211306] = true,
[196642] = true,
[167999] = true,
[189707] = true,
},
["InterruptableSpells"] = {
[420320] = true,
[1766] = true,
[377008] = true,
[324293] = true,
[93985] = true,
[47528] = true,
[384365] = true,
[322767] = true,
[327130] = true,
[351338] = true,
[37470] = true,
[2139] = true,
[381516] = true,
[116705] = true,
[347008] = true,
[322938] = true,
[436679] = true,
[461904] = true,
[320171] = true,
[454440] = true,
[256957] = true,
[426240] = true,
[420090] = true,
[220543] = true,
[340544] = true,
[420330] = true,
[429812] = true,
[324914] = true,
[398388] = true,
[96231] = true,
[320462] = true,
[321828] = true,
[32747] = true,
[323057] = true,
[147362] = true,
[328667] = true,
[19647] = true,
[6552] = true,
[272581] = true,
[31935] = true,
[404754] = true,
[11972] = true,
[324776] = true,
[97547] = true,
[338353] = true,
[187707] = true,
[275826] = true,
[427609] = true,
[320336] = true,
[257732] = true,
[183752] = true,
[334748] = true,
[257063] = true,
[686] = true,
[322274] = true,
[326046] = true,
[335143] = true,
[328406] = true,
[57994] = true,
[333602] = true,
},
["captured_casts"] = {
[36807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Oracle",
["npcID"] = 17771,
},
[386509] = {
["source"] = "Ezrigeth",
["event"] = "SPELL_CAST_START",
["npcID"] = 187666,
},
[398796] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Brute",
["npcID"] = 200486,
},
[124800] = {
["source"] = "Krik'thik Limbpincer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61181,
},
[413131] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[294362] = {
["npcID"] = 155908,
},
[86405] = {
["source"] = "Rockshell Snapclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 63369,
},
[327127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flesh Crafter",
["npcID"] = 165872,
},
[331223] = {
["npcID"] = 162763,
},
[456136] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkshade",
["npcID"] = 218452,
},
[339415] = {
["encounterName"] = "Xav the Unfallen",
["npcID"] = 162329,
["encounterID"] = 2366,
},
[58053] = {
["npcID"] = 30189,
},
[427469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fanatical Conjuror",
["npcID"] = 206698,
},
[413135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Kraglin",
["npcID"] = 201625,
},
[456138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimlurk",
["npcID"] = 223091,
},
[368085] = {
["npcID"] = 183722,
},
[394706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Frost",
["npcID"] = 198702,
},
[404945] = {
["source"] = "Winglord Iyazael",
["event"] = "SPELL_CAST_START",
["npcID"] = 199401,
},
[275937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frigidus",
["npcID"] = 204425,
},
[392659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Alpha",
["npcID"] = 194224,
},
[129921] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Maw of Despair",
["npcID"] = 59237,
},
[228086] = {
["npcID"] = 114584,
},
[320989] = {
["npcID"] = 158870,
},
[347610] = {
["encounterName"] = "So'azmi",
["npcID"] = 175806,
["encounterID"] = 2437,
},
[447950] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Chamber Expeller",
["npcID"] = 224368,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[376279] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[329181] = {
["encounterName"] = "Sire Denathrius",
["npcID"] = 167406,
},
[384471] = {
["source"] = "Lava Tarantula",
["event"] = "SPELL_CAST_START",
["npcID"] = 191672,
},
[320991] = {
["npcID"] = 162038,
},
[300514] = {
["npcID"] = 150146,
},
[384473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Icegnaw Mantacorn",
["npcID"] = 187826,
},
[392665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Thunderhide",
["npcID"] = 187258,
},
[125315] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bataari War Yeti",
["npcID"] = 64185,
},
[349663] = {
["encounterName"] = "The Grand Menagerie",
["npcID"] = 176556,
["encounterID"] = 2441,
},
[419287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crenna Earth-Daughter",
["npcID"] = 209072,
},
[119684] = {
["encounterName"] = "Xin the Weaponmaster",
["source"] = "Xin the Weaponmaster",
["npcID"] = 61398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1441,
},
[384476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Longbow",
["npcID"] = 192789,
},
[363999] = {
["npcID"] = 183747,
},
[122244] = {
["source"] = "Sik'thik Engineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 62632,
},
[400859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skornak",
["npcID"] = 203643,
},
[445910] = {
["source"] = "Sporbit",
["event"] = "SPELL_CAST_START",
["npcID"] = 213434,
},
[386526] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nullmagic Hornswog",
["npcID"] = 187246,
},
[331237] = {
["npcID"] = 162763,
},
[31717] = {
["encounterName"] = "The Black Stalker",
["source"] = "The Black Stalker",
["npcID"] = 17882,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1948,
},
[320999] = {
["npcID"] = 164852,
},
[392671] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vicious Ice Borer",
["npcID"] = 186392,
},
[321000] = {
["npcID"] = 161397,
},
[56775] = {
["source"] = "Azure Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 26722,
},
[130436] = {
["source"] = "Thunder Hold Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 66286,
},
[392672] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Vanguard",
["npcID"] = 196927,
},
[427484] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fanatical Conjuror",
["npcID"] = 206698,
},
[382434] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[134920] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["npcID"] = 67977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1565,
},
[347623] = {
["encounterName"] = "So'azmi",
["npcID"] = 175806,
["encounterID"] = 2437,
},
[382435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Speaker",
["npcID"] = 186191,
},
[376292] = {
["encounterName"] = "Chrono-Lord Deios",
["npcID"] = 184125,
["encounterID"] = 2559,
},
[421343] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["npcID"] = 200927,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2824,
},
[310766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eye of the Depths",
["npcID"] = 159510,
},
[282098] = {
["encounterName"] = "Conclave of the Chosen",
["npcID"] = 144747,
["encounterID"] = 2268,
},
[447966] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Drahga Shadowburner",
["npcID"] = 40319,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[137994] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Ritualist",
["npcID"] = 69702,
},
[118663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snagtooth Hooligan",
["npcID"] = 56462,
},
[372201] = {
["source"] = "Qalashi Irontorch",
["event"] = "SPELL_CAST_START",
["npcID"] = 189464,
},
[333294] = {
["npcID"] = 169893,
},
[396775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klozicc the Ascended",
["npcID"] = 187209,
},
[137995] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Ritualist",
["npcID"] = 69702,
},
[321009] = {
["encounterName"] = "Kin-Tara",
["npcID"] = 162059,
["encounterID"] = 2357,
},
[323057] = {
["encounterName"] = "Ingra Maloch",
["npcID"] = 164567,
["encounterID"] = 2397,
},
[390633] = {
["npcID"] = 189954,
},
[167688] = {
["encounterName"] = "Nitrogg Thundertower",
["npcID"] = 82721,
["encounterID"] = 1732,
},
[411111] = {
["source"] = "Calibrating Scent Matrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 203606,
},
[323058] = {
["npcID"] = 165609,
},
[392682] = {
["source"] = "Jadzigeth",
["event"] = "SPELL_CAST_START",
["npcID"] = 188447,
},
[411112] = {
["source"] = "Calibrating Scent Matrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 203606,
},
[323059] = {
["encounterName"] = "Ingra Maloch",
["npcID"] = 164804,
["encounterID"] = 2397,
},
[384492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Beastmaster",
["npcID"] = 192794,
},
[394731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Earth",
["npcID"] = 198709,
},
[333299] = {
["npcID"] = 169893,
},
[384493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shikaar Hunter",
["npcID"] = 184657,
},
[396780] = {
["source"] = "Rimebound Subjugator",
["event"] = "SPELL_CAST_START",
["npcID"] = 195837,
},
[339444] = {
["npcID"] = 173276,
},
[439784] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[400877] = {
["source"] = "Flowfy",
["event"] = "SPELL_CAST_START",
["npcID"] = 203660,
},
[172810] = {
["npcID"] = 81603,
},
[323064] = {
["encounterName"] = "Hakkar, the Soulflayer",
["encounterID"] = 2395,
["npcID"] = 164558,
},
[188169] = {
["encounterName"] = "Rokmora",
["source"] = "Rokmora",
["npcID"] = 91003,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1790,
},
[282110] = {
["source"] = "Kaldorei Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210645,
},
[124297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yorik Sharpeye",
["npcID"] = 50336,
},
[386546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Elemental",
["npcID"] = 186741,
},
[355830] = {
["npcID"] = 179893,
},
[294398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Samara",
["npcID"] = 146164,
},
[386547] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[396786] = {
["source"] = "Rimebound Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 191654,
},
[199433] = {
["source"] = "Stormfang Bonecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 187931,
},
[390644] = {
["npcID"] = 189954,
},
[400883] = {
["source"] = "Zaqali Blazestalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199828,
},
[382454] = {
["source"] = "Azure Dragonspawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 188802,
},
[445935] = {
["source"] = "Bomb",
["event"] = "SPELL_CAST_START",
["npcID"] = 222265,
},
[316927] = {
["source"] = "Barrow Spider",
["event"] = "SPELL_CAST_START",
["npcID"] = 160394,
},
[118667] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twitchheel Hoarder",
["npcID"] = 56538,
},
[366074] = {
["npcID"] = 183927,
},
[300547] = {
["npcID"] = 150142,
},
[271880] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Farthing",
["npcID"] = 134328,
},
[366077] = {
["npcID"] = 183925,
},
[400889] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampant Tide",
["npcID"] = 201463,
},
[394746] = {
["source"] = "Liskron the Dazzling",
["event"] = "SPELL_CAST_START",
["npcID"] = 193273,
},
[417272] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Lich King",
["npcID"] = 205305,
},
[209676] = {
["encounterName"] = "Advisor Melandrus",
["encounterID"] = 1870,
["npcID"] = 104218,
},
[372222] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[267787] = {
["encounterName"] = "MOTHER",
["npcID"] = 135452,
["encounterID"] = 2141,
},
[450037] = {
["source"] = "Malfunctioning Spire",
["event"] = "SPELL_CAST_START",
["npcID"] = 220068,
},
[372223] = {
["source"] = "Qalashi Bonetender",
["event"] = "SPELL_CAST_START",
["npcID"] = 189265,
},
[392701] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zerimek",
["npcID"] = 188451,
},
[394749] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Storm",
["npcID"] = 198716,
},
[343556] = {
["encounterName"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["npcID"] = 162689,
},
[386559] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["npcID"] = 189727,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2617,
},
[396798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ohn'ir Windcaster",
["npcID"] = 199498,
},
[166675] = {
["npcID"] = 80937,
},
[372226] = {
["source"] = "Qalashi Bonetender",
["event"] = "SPELL_CAST_START",
["npcID"] = 189265,
},
[114062] = {
["encounterName"] = "Jandice Barov",
["source"] = "Jandice Barov",
["encounterID"] = 1427,
["event"] = "SPELL_CAST_START",
["npcID"] = 59184,
},
[329224] = {
["npcID"] = 168022,
},
[275983] = {
["npcID"] = 157820,
},
[400896] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampant Tide",
["npcID"] = 201463,
},
[361989] = {
["encounterName"] = "Anduin Wrynn",
["encounterID"] = 2546,
["npcID"] = 181954,
},
[275984] = {
["npcID"] = 166936,
},
[450043] = {
["source"] = "Malfunctioning Spire",
["event"] = "SPELL_CAST_START",
["npcID"] = 220068,
},
[419327] = {
["source"] = "Timeline Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 199748,
},
[396802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ohn'ir Windcaster",
["npcID"] = 199498,
},
[447996] = {
["source"] = "Rustcloud Runt",
["event"] = "SPELL_CAST_START",
["npcID"] = 222796,
},
[257802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Clobex",
["npcID"] = 127732,
},
[331275] = {
["npcID"] = 167533,
},
[269843] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Unbound Abomination",
["npcID"] = 133007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2123,
},
[115087] = {
["source"] = "Tigerfly",
["event"] = "SPELL_CAST_START",
["npcID"] = 56283,
},
[364040] = {
["encounterName"] = "Artificer Xy'mox",
["npcID"] = 184140,
["encounterID"] = 2553,
},
[300560] = {
["npcID"] = 150142,
},
[46029] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Blood Knight",
["npcID"] = 24684,
},
[321038] = {
["npcID"] = 162039,
},
[396805] = {
["source"] = "Gorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 192759,
},
[409093] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[396807] = {
["source"] = "Gorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 192759,
},
[157465] = {
["encounterName"] = "Vigilant Kaathar",
["source"] = "Vigilant Kaathar",
["npcID"] = 75839,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1686,
},
[382474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Speaker",
["npcID"] = 186191,
},
[273944] = {
["encounterName"] = "Mythrax",
["npcID"] = 139381,
["encounterID"] = 2135,
},
[341520] = {
["npcID"] = 173973,
},
[400905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kalecgos",
["npcID"] = 198942,
},
[321043] = {
["npcID"] = 158867,
},
[384524] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[22121] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timberstep Archer",
["npcID"] = 194041,
},
[60876] = {
["source"] = "Recalled Ghoul",
["event"] = "SPELL_CAST_START",
["npcID"] = 221434,
},
[439814] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[396812] = {
["source"] = "Spellbound Scepter",
["event"] = "SPELL_CAST_START",
["npcID"] = 196576,
},
[394765] = {
["source"] = "Morgg",
["event"] = "SPELL_CAST_START",
["npcID"] = 189244,
},
[314903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ossirat",
["npcID"] = 161746,
},
[154396] = {
["encounterName"] = "High Sage Viryx",
["source"] = "High Sage Viryx",
["npcID"] = 76266,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1701,
},
[278044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Venomsprout",
["npcID"] = 188814,
},
[47310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coren Direbrew",
["npcID"] = 23872,
},
[396814] = {
["source"] = "Rimebound Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195836,
},
[329239] = {
["npcID"] = 163882,
},
[331288] = {
["npcID"] = 167532,
},
[407055] = {
["source"] = "High Seer Jhatal",
["event"] = "SPELL_CAST_START",
["npcID"] = 199842,
},
[175899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorian Runemaster",
["npcID"] = 81272,
},
[345623] = {
["npcID"] = 165824,
},
[384531] = {
["encounterName"] = "Gutshot",
["source"] = "Rotfang Hyena",
["npcID"] = 194745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[370198] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kauj",
["npcID"] = 186386,
},
[396819] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vorgan the Mangler",
["npcID"] = 190467,
},
[448013] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Drahga Shadowburner",
["npcID"] = 40319,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[384533] = {
["source"] = "Memory of a Tuskarr Hero",
["event"] = "SPELL_CAST_START",
["npcID"] = 194731,
},
[372247] = {
["source"] = "Duskpaw Hidestitcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 187941,
},
[415250] = {
["source"] = "Invasive Sporecap",
["event"] = "SPELL_CAST_START",
["npcID"] = 207482,
},
[407060] = {
["source"] = "High Seer Jhatal",
["event"] = "SPELL_CAST_START",
["npcID"] = 199842,
},
[39376] = {
["isChanneled"] = true,
["source"] = "Mage Hunter Ascendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26727,
},
[443921] = {
["source"] = "Shadowguard Ethereal",
["event"] = "SPELL_CAST_START",
["npcID"] = 221305,
},
[396823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vorgan the Mangler",
["npcID"] = 190467,
},
[122259] = {
["source"] = "Sik'thik Engineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 62632,
},
[368155] = {
["npcID"] = 185505,
},
[378394] = {
["source"] = "Seaborne Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 214549,
},
[198428] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["npcID"] = 91004,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1791,
},
[390681] = {
["npcID"] = 189954,
},
[319010] = {
["npcID"] = 161530,
},
[396825] = {
["source"] = "Rimebound Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195836,
},
[431637] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Nightfall Shadowalker",
["npcID"] = 213895,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[417303] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Lich King",
["npcID"] = 205305,
},
[419351] = {
["source"] = "Infinite Saboteur",
["event"] = "SPELL_CAST_START",
["npcID"] = 208438,
},
[388635] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Volatile Spark",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 194999,
},
[456211] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scary Sticker",
["npcID"] = 216948,
},
[378397] = {
["npcID"] = 191095,
},
[282153] = {
["encounterName"] = "Mekkatorque",
["npcID"] = 144796,
["encounterID"] = 2276,
},
[431639] = {
["source"] = "Nerubian Saboteur",
["event"] = "SPELL_CAST_START",
["npcID"] = 212715,
},
[321061] = {
["encounterName"] = "The Manastorms",
["encounterID"] = 2394,
["npcID"] = 164555,
},
[445974] = {
["source"] = "Bomb",
["event"] = "SPELL_CAST_START",
["npcID"] = 222281,
},
[392733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greenbelt Turtle",
["npcID"] = 192775,
},
[405020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Watcher",
["npcID"] = 200407,
},
[392734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Lookout",
["npcID"] = 196926,
},
[394782] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ty'foon the Ascended",
["npcID"] = 191354,
},
[407069] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[192288] = {
["encounterName"] = "Hyrja",
["source"] = "Olmyr the Enlightened",
["npcID"] = 97202,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1806,
},
[443929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaheti Sentry",
["npcID"] = 218315,
},
[405022] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[368163] = {
["npcID"] = 178229,
},
[329256] = {
["encounterName"] = "Artificer Xy'mox",
["npcID"] = 169271,
["encounterID"] = 2405,
},
[364068] = {
["encounterName"] = "Anduin Wrynn",
["encounterID"] = 2546,
["npcID"] = 183666,
},
[124309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashfang Hyena",
["npcID"] = 60932,
},
[370212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Ironskin",
["npcID"] = 191524,
},
[331305] = {
["npcID"] = 161599,
},
[431645] = {
["source"] = "Dark Apothecary",
["event"] = "SPELL_CAST_START",
["npcID"] = 219651,
},
[376356] = {
["source"] = "Scout Watu",
["event"] = "SPELL_CAST_START",
["npcID"] = 190025,
},
[388643] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[325163] = {
["npcID"] = 171772,
},
[368166] = {
["npcID"] = 183814,
},
[372262] = {
["source"] = "Qalashi Bonesplitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 189467,
},
[439838] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[450077] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["npcID"] = 40484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1049,
},
[396836] = {
["source"] = "Colossal Glacier",
["event"] = "SPELL_CAST_START",
["npcID"] = 194798,
},
[448030] = {
["source"] = "Agile Pursuer",
["event"] = "SPELL_CAST_START",
["npcID"] = 223181,
},
[319022] = {
["npcID"] = 158259,
},
[364073] = {
["npcID"] = 184735,
},
[229151] = {
["encounterName"] = "Viz'aduum the Watcher",
["npcID"] = 114790,
["encounterID"] = 2017,
},
[353835] = {
["encounterName"] = "Myza's Oasis",
["npcID"] = 176565,
["encounterID"] = 2440,
},
[290355] = {
["npcID"] = 148119,
},
[120215] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Abomination of Anger",
["npcID"] = 61707,
},
[458271] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sakret'na",
["npcID"] = 215841,
},
[353836] = {
["encounterName"] = "Myza's Oasis",
["npcID"] = 176565,
["encounterID"] = 2440,
},
[310834] = {
["event"] = "SPELL_CAST_START",
["source"] = "Demented Knife-Twister",
["npcID"] = 159417,
},
[362028] = {
["encounterName"] = "The Jailer",
["npcID"] = 180990,
["encounterID"] = 2537,
},
[402985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gholna",
["npcID"] = 199853,
},
[355887] = {
["npcID"] = 181403,
},
[394795] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonewrecker Tokara",
["npcID"] = 193442,
},
[355888] = {
["npcID"] = 177807,
},
[260894] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["npcID"] = 131318,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2111,
},
[205605] = {
["npcID"] = 166137,
},
[331316] = {
["npcID"] = 167538,
},
[310839] = {
["event"] = "SPELL_CAST_START",
["source"] = "Occult Shadowmender",
["npcID"] = 159425,
},
[226083] = {
["npcID"] = 161528,
},
[284219] = {
["npcID"] = 150297,
},
[400941] = {
["source"] = "Blazing Bones",
["event"] = "SPELL_CAST_START",
["npcID"] = 203472,
},
[394798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azra's Prized Peony",
["npcID"] = 193135,
},
[183081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kirin Tor Guardian",
["npcID"] = 104091,
},
[450088] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["npcID"] = 40484,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1049,
},
[431659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Clotweave Widow",
["npcID"] = 216193,
},
[384561] = {
["source"] = "Memory of a Tuskarr Hero",
["event"] = "SPELL_CAST_START",
["npcID"] = 194731,
},
[394800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Council Earthcaller",
["npcID"] = 198500,
},
[394802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Council Stormcaller",
["npcID"] = 198502,
},
[445996] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[327227] = {
["encounterName"] = "Sire Denathrius",
["npcID"] = 167406,
["encounterID"] = 2407,
},
[405042] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[154415] = {
["encounterName"] = "Soulbinder Nyami",
["event"] = "SPELL_CAST_START",
["source"] = "Soulbinder Nyami",
["npcID"] = 76177,
},
[197418] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["encounterID"] = 1833,
["event"] = "SPELL_CAST_START",
["npcID"] = 98696,
},
[405043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Nightflame",
["npcID"] = 200931,
},
[392757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbound Proto-Drake",
["npcID"] = 195094,
},
[452142] = {
["source"] = "Obstorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 217082,
},
[9591] = {
["source"] = "Hatescale Spitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 63490,
},
[77216] = {
["npcID"] = 41182,
},
[450095] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Drahga Shadowburner",
["npcID"] = 40319,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[396854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutal Motivator",
["npcID"] = 184453,
},
[325183] = {
["npcID"] = 174941,
},
[355900] = {
["npcID"] = 177807,
},
[323137] = {
["encounterName"] = "Ingra Maloch",
["npcID"] = 164804,
["encounterID"] = 2397,
},
[327233] = {
["npcID"] = 168396,
},
[323138] = {
["encounterName"] = "Ingra Maloch",
["npcID"] = 164567,
["encounterID"] = 2397,
},
[378428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Avalanche",
["npcID"] = 188668,
},
[339521] = {
["npcID"] = 173484,
},
[390715] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[400954] = {
["source"] = "Volgoth the Flamebringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209129,
},
[153395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carrion Worm",
["npcID"] = 76057,
},
[366143] = {
["npcID"] = 184651,
},
[197422] = {
["encounterName"] = "Cordana Felsong",
["source"] = "Cordana Felsong",
["encounterID"] = 1818,
["event"] = "SPELL_CAST_START",
["npcID"] = 95888,
},
[239401] = {
["encounterName"] = "Demonic Inquisition",
["source"] = "Belac",
["npcID"] = 116691,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2048,
},
[183088] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mightstone Breaker",
["npcID"] = 90997,
},
[269900] = {
["npcID"] = 171141,
},
[396861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Golem",
["npcID"] = 190779,
},
[347716] = {
["npcID"] = 176394,
},
[431674] = {
["source"] = "Kaheti Ambusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 217448,
},
[32363] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Nexus-Prince Shaffar",
["npcID"] = 18344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1899,
},
[298571] = {
["encounterName"] = "Trixie & Naeno",
["npcID"] = 153756,
["encounterID"] = 2312,
},
[276046] = {
["npcID"] = 138794,
},
[327240] = {
["npcID"] = 165911,
},
[394816] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vorgan the Mangler",
["npcID"] = 190467,
},
[339527] = {
["npcID"] = 173469,
},
[374339] = {
["source"] = "Refti Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 190340,
},
[75683] = {
["encounterName"] = "Lady Naz'jar",
["encounterID"] = 1045,
["npcID"] = 40586,
},
[360006] = {
["encounterName"] = "Lords of Dread",
["encounterID"] = 2543,
["npcID"] = 181398,
},
[59603] = {
["source"] = "Dragonflayer Heartsplitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 24071,
},
[339529] = {
["npcID"] = 173448,
},
[120222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seething Sha",
["npcID"] = 61610,
},
[129437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krasari Hissing Wasp",
["npcID"] = 65802,
},
[347721] = {
["npcID"] = 176396,
},
[212784] = {
["npcID"] = 105715,
},
[323149] = {
["encounterName"] = "Ingra Maloch",
["npcID"] = 164567,
["encounterID"] = 2397,
},
[407107] = {
["source"] = "Earthrender Ku'siva",
["event"] = "SPELL_CAST_START",
["npcID"] = 199840,
},
[392773] = {
["source"] = "Rymek",
["event"] = "SPELL_CAST_START",
["npcID"] = 188846,
},
[380487] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[407108] = {
["source"] = "Earthrender Ku'siva",
["event"] = "SPELL_CAST_START",
["npcID"] = 199840,
},
[126878] = {
["source"] = "Taoshi",
["event"] = "SPELL_CAST_START",
["npcID"] = 62593,
},
[111008] = {
["source"] = "Scarlet Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 58590,
},
[191284] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["npcID"] = 94960,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1805,
},
[138043] = {
["source"] = "Zandalari Warscout",
["event"] = "SPELL_CAST_START",
["npcID"] = 69768,
},
[212786] = {
["encounterName"] = "Oakheart",
["npcID"] = 103344,
["encounterID"] = 1837,
},
[321105] = {
["encounterName"] = "General Kaal",
["encounterID"] = 2363,
["npcID"] = 168591,
},
[470591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Hopestealer",
["npcID"] = 217517,
},
[142139] = {
["source"] = "Earthborn Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 70822,
},
[225073] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defiled Keeper",
["npcID"] = 113089,
},
[125343] = {
["isChanneled"] = true,
["source"] = "Krosh",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56833,
},
[470592] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Shadeguard",
["npcID"] = 217519,
},
[162617] = {
["encounterName"] = "Rocketspark and Borka",
["npcID"] = 77816,
["encounterID"] = 1715,
},
[470593] = {
["encounterName"] = "Reformed Fury",
["source"] = "Reformed Fury",
["npcID"] = 218034,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2998,
},
[415304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Glorious Alliance Paladin",
["npcID"] = 207579,
},
[394827] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windseeker Avash",
["npcID"] = 192045,
},
[456260] = {
["source"] = "You?",
["event"] = "SPELL_CAST_START",
["npcID"] = 226694,
},
[400971] = {
["source"] = "Sulfuric Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 202622,
},
[454213] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["encounterID"] = 2960,
["event"] = "SPELL_CAST_START",
["npcID"] = 220314,
},
[382542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vicious Ice Slitherer",
["npcID"] = 186391,
},
[376399] = {
["npcID"] = 46915,
},
[394829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osseous Broodmother",
["npcID"] = 203348,
},
[117665] = {
["encounterName"] = "Sha of Doubt",
["source"] = "Sha of Doubt",
["npcID"] = 56439,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1439,
},
[111010] = {
["source"] = "Scarlet Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 58590,
},
[364114] = {
["encounterName"] = "Rygelon",
["encounterID"] = 2549,
["npcID"] = 182777,
},
[456263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candleflyer Captain",
["npcID"] = 220276,
},
[400974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamebringer Shaman",
["npcID"] = 203700,
},
[386640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarasek Looter",
["npcID"] = 187242,
},
[396879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Geothermus",
["npcID"] = 217416,
},
[415309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Glorious Alliance Paladin",
["npcID"] = 207579,
},
[370259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Earth Elemental",
["npcID"] = 187322,
},
[423501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rank Overseer",
["npcID"] = 211121,
},
[294493] = {
["source"] = "Timeless Causality",
["event"] = "SPELL_CAST_START",
["npcID"] = 186464,
},
[394833] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmammoth Breaker",
["npcID"] = 194912,
},
[76711] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Beguiler",
["npcID"] = 40167,
},
[407120] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Axe Thrower",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203799,
},
[400977] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[172860] = {
["npcID"] = 83025,
},
[396882] = {
["source"] = "Enraged Air Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 196155,
},
[407121] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Warlock",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203857,
},
[378453] = {
["isChanneled"] = true,
["source"] = "Inferna the Bound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186735,
},
[372310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jadzigeth",
["npcID"] = 188447,
},
[162622] = {
["source"] = "Huezeki Windsong",
["event"] = "SPELL_CAST_START",
["npcID"] = 205497,
},
[384597] = {
["source"] = "Qalashi Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 193293,
},
[378454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Avalanche",
["npcID"] = 187082,
},
[372311] = {
["source"] = "Qalashi Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 189266,
},
[319070] = {
["npcID"] = 163891,
},
[427601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightspawn",
["npcID"] = 206710,
},
[355930] = {
["npcID"] = 177816,
},
[407124] = {
["source"] = "Horde Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 207969,
},
[450127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siegehold Defender",
["npcID"] = 216016,
},
[329310] = {
["npcID"] = 158813,
},
[374361] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["encounterID"] = 2565,
["event"] = "SPELL_CAST_START",
["npcID"] = 190609,
},
[450128] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["encounterID"] = 2894,
["event"] = "SPELL_CAST_START",
["npcID"] = 214263,
},
[388696] = {
["source"] = "Moth'go Deeploom",
["event"] = "SPELL_CAST_START",
["npcID"] = 193735,
},
[130466] = {
["source"] = "Grunt des Flèches jumelles",
["event"] = "SPELL_CAST_START",
["npcID"] = 66269,
},
[409174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Incarnation of Entropy",
["npcID"] = 203811,
},
[452177] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arathi Reserve",
["npcID"] = 215727,
},
[372315] = {
["encounterName"] = "The Primal Council",
["source"] = "Kadros Icewrath",
["npcID"] = 187771,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[284262] = {
["encounterName"] = "Stormwall Blockade",
["npcID"] = 146251,
["encounterID"] = 2280,
},
[355934] = {
["npcID"] = 177817,
},
[382555] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bracken Warscourge",
["npcID"] = 185529,
},
[374365] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 181861,
},
[409177] = {
["event"] = "SPELL_CAST_START",
["source"] = "Entropic Hatred",
["npcID"] = 203809,
},
[403034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fyrakk",
["npcID"] = 200832,
},
[44504] = {
["encounterName"] = "Selin Fireheart",
["source"] = "Wretched Husk",
["npcID"] = 24690,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1897,
},
[106918] = {
["source"] = "Orchard Wasp",
["event"] = "SPELL_CAST_START",
["npcID"] = 56201,
},
[425561] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pack Mole",
["npcID"] = 211977,
},
[185152] = {
["npcID"] = 157820,
},
[38361] = {
["encounterName"] = "Yor",
["source"] = "Yor",
["npcID"] = 22927,
["event"] = "SPELL_CAST_START",
["encounterID"] = 250,
},
[339557] = {
["npcID"] = 173464,
},
[325223] = {
["npcID"] = 166304,
},
[382561] = {
["source"] = "Karthis Sleetsong",
["event"] = "SPELL_CAST_START",
["npcID"] = 189246,
},
[188225] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel Touched Seer",
["npcID"] = 94916,
},
[362084] = {
["npcID"] = 181324,
},
[82858] = {
["npcID"] = 42333,
},
[125349] = {
["isChanneled"] = true,
["source"] = "Krosh",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56833,
},
[388706] = {
["source"] = "Stormbound Essence",
["event"] = "SPELL_CAST_START",
["npcID"] = 187819,
},
[382563] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[329322] = {
["npcID"] = 155830,
},
[223038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadsoul Corruptor",
["npcID"] = 112261,
},
[366182] = {
["npcID"] = 183498,
},
[386660] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[366183] = {
["npcID"] = 183498,
},
[106920] = {
["event"] = "SPELL_CAST_START",
["source"] = "Regenerating Sha",
["npcID"] = 56763,
},
[355945] = {
["npcID"] = 179940,
},
[183108] = {
["source"] = "Luddy Quicksnap",
["event"] = "SPELL_CAST_START",
["npcID"] = 193292,
},
[450142] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["encounterID"] = 2894,
["event"] = "SPELL_CAST_START",
["npcID"] = 214263,
},
[329325] = {
["npcID"] = 155830,
},
[366185] = {
["npcID"] = 183499,
},
[329326] = {
["npcID"] = 155831,
},
[355947] = {
["npcID"] = 184426,
},
[284276] = {
["encounterName"] = "King Rastakhan",
["npcID"] = 145616,
["encounterID"] = 2272,
},
[390760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chief Grrlgllmesh",
["npcID"] = 186678,
},
[376426] = {
["npcID"] = 181840,
},
[448098] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Black Blood Harvester",
["npcID"] = 222455,
},
[124839] = {
["source"] = "Seething Fleshripper",
["event"] = "SPELL_CAST_START",
["npcID"] = 61299,
},
[76717] = {
["npcID"] = 40023,
},
[366189] = {
["npcID"] = 183500,
},
[335473] = {
["encounterName"] = "Sludgefist",
["npcID"] = 164407,
["encounterID"] = 2399,
},
[132941] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Alliance Swashbuckler",
["npcID"] = 69196,
},
[448100] = {
["event"] = "SPELL_CAST_START",
["source"] = "Black Blood Harvester",
["npcID"] = 222455,
},
[384620] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["npcID"] = 186615,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[396907] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Yu'lon",
["npcID"] = 56762,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[382573] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earthen Guardian",
["npcID"] = 184131,
},
[314998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Shadowcrafter",
["npcID"] = 161416,
},
[423529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anguished Dream Spirit",
["npcID"] = 210304,
},
[46042] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Warlock",
["npcID"] = 24686,
},
[394861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Henlare",
["npcID"] = 193229,
},
[323190] = {
["npcID"] = 163121,
},
[384623] = {
["source"] = "Qalashi Blacksmith",
["event"] = "SPELL_CAST_START",
["npcID"] = 189471,
},
[339573] = {
["encounterName"] = "Mordretha",
["npcID"] = 165946,
["encounterID"] = 2404,
},
[341621] = {
["encounterName"] = "Lady Inerva Darkvein",
["npcID"] = 165521,
["encounterID"] = 2406,
},
[228164] = {
["npcID"] = 114584,
},
[450153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vileroot",
["npcID"] = 214783,
},
[16496] = {
["npcID"] = 32883,
},
[382578] = {
["npcID"] = 184131,
},
[427629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fervent Sharpshooter",
["npcID"] = 206694,
},
[76719] = {
["npcID"] = 40021,
},
[366197] = {
["npcID"] = 183500,
},
[386675] = {
["source"] = "Novice Timewalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 189583,
},
[9081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowforge Darkcaster",
["npcID"] = 4848,
},
[423536] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[329340] = {
["npcID"] = 165410,
},
[46043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Warlock",
["npcID"] = 24686,
},
[394869] = {
["source"] = "Boneshaper Jardak",
["event"] = "SPELL_CAST_START",
["npcID"] = 188693,
},
[423538] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[335485] = {
["npcID"] = 181064,
},
[446064] = {
["encounterName"] = "Leviathan Caller",
["source"] = "Slamming Tentacle",
["npcID"] = 220741,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3002,
},
[87471] = {
["source"] = "Brineshell Snapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 63981,
},
[384633] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[306819] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Ra-den",
["npcID"] = 156866,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2331,
},
[407159] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 198997,
},
[347775] = {
["npcID"] = 176395,
},
[126379] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Prophet Khar'zul",
["npcID"] = 61541,
},
[163665] = {
["encounterName"] = "Grimrail Enforcers",
["npcID"] = 80805,
["encounterID"] = 1748,
},
[405113] = {
["source"] = "Shukoro Rapidstamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 198917,
},
[431734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadesworn Crusher",
["npcID"] = 218527,
},
[257862] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "Hadal Darkfathom",
["encounterID"] = 2099,
["event"] = "SPELL_CAST_START",
["npcID"] = 128651,
},
[129963] = {
["source"] = "Rothek",
["event"] = "SPELL_CAST_START",
["npcID"] = 62581,
},
[46044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Imp",
["npcID"] = 24815,
},
[209741] = {
["encounterName"] = "Advisor Melandrus",
["encounterID"] = 1870,
["npcID"] = 105754,
},
[396925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavamancer",
["npcID"] = 197149,
},
[325254] = {
["encounterName"] = "Grand Proctor Beryllia",
["npcID"] = 162102,
["encounterID"] = 2362,
},
[433785] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reinforced Drone",
["npcID"] = 216363,
},
[405117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[341637] = {
["npcID"] = 174126,
},
[225100] = {
["npcID"] = 104270,
},
[325256] = {
["npcID"] = 170522,
},
[392832] = {
["source"] = "Degmakh",
["event"] = "SPELL_CAST_START",
["npcID"] = 194251,
},
[370307] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[317066] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Thought Harvester",
["npcID"] = 162933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[417406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ankura Bloodhewer",
["npcID"] = 207589,
},
[325258] = {
["encounterName"] = "Mueh'zala",
["encounterID"] = 2396,
["npcID"] = 166608,
},
[409216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Manaweaver",
["npcID"] = 198872,
},
[398978] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Fiend",
["npcID"] = 200030,
},
[409217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Manaweaver",
["npcID"] = 198872,
},
[390788] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chief Grrlgllmesh",
["npcID"] = 186678,
},
[6685] = {
["npcID"] = 41182,
},
[388741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ukhel Gravestirrer",
["npcID"] = 189928,
},
[386694] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormsurge Totem",
["npcID"] = 194897,
},
[290450] = {
["encounterName"] = "King Rastakhan",
["npcID"] = 146320,
["encounterID"] = 2272,
},
[398981] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalwart Broodwarden",
["npcID"] = 198263,
},
[163671] = {
["source"] = "Nar'thalas Nightwatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 88782,
},
[111024] = {
["source"] = "Spirit of Redemption",
["event"] = "SPELL_CAST_START",
["npcID"] = 58592,
},
[388743] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Bakar",
["npcID"] = 188510,
},
[456319] = {
["source"] = "Aelric Leid",
["event"] = "SPELL_CAST_START",
["npcID"] = 213208,
},
[384648] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarls",
["npcID"] = 197354,
},
[360076] = {
["npcID"] = 184767,
},
[388745] = {
["source"] = "Icy Blue Crab",
["event"] = "SPELL_CAST_START",
["npcID"] = 197862,
},
[456321] = {
["source"] = "Aelric Leid",
["event"] = "SPELL_CAST_START",
["npcID"] = 213208,
},
[392841] = {
["source"] = "Degmakh",
["event"] = "SPELL_CAST_START",
["npcID"] = 194251,
},
[337552] = {
["npcID"] = 162853,
},
[125871] = {
["isChanneled"] = true,
["source"] = "Zar'thik Augurer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 64454,
},
[398985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broodguardian Ziruss",
["npcID"] = 198214,
},
[335505] = {
["npcID"] = 181064,
},
[388747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horned Flysnatcher",
["npcID"] = 196641,
},
[257870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Buccaneer",
["npcID"] = 130011,
},
[394891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Braekkas",
["npcID"] = 196855,
},
[317077] = {
["source"] = "Harpy Snatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 152571,
},
[122800] = {
["source"] = "Yalia Sagewhisper",
["event"] = "SPELL_CAST_START",
["npcID"] = 62825,
},
[331412] = {
["npcID"] = 165349,
},
[46046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Physician",
["npcID"] = 24687,
},
[394893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lookout Mordren",
["npcID"] = 193668,
},
[15801] = {
["encounterName"] = "Revelosh",
["source"] = "Revelosh",
["npcID"] = 6910,
["event"] = "SPELL_CAST_START",
["encounterID"] = 547,
},
[319127] = {
["npcID"] = 169123,
},
[452231] = {
["source"] = "Queensguard Zirix",
["event"] = "SPELL_CAST_START",
["npcID"] = 211858,
},
[372369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadepaw Hunter",
["npcID"] = 186490,
},
[407181] = {
["event"] = "SPELL_CAST_START",
["source"] = "Watcher Koranos",
["npcID"] = 200077,
},
[298651] = {
["encounterName"] = "Trixie & Naeno",
["npcID"] = 153756,
["encounterID"] = 2312,
},
[415373] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Glorious Alliance Footman",
["npcID"] = 207578,
},
[41183] = {
["source"] = "Ashtongue Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 22846,
},
[364180] = {
["npcID"] = 183596,
},
[174939] = {
["source"] = "Councilor Nouk",
["event"] = "SPELL_CAST_START",
["npcID"] = 81807,
},
[409231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Draconic Golem",
["npcID"] = 203826,
},
[321178] = {
["npcID"] = 162047,
},
[162653] = {
["source"] = "Thunderlord Beast-Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 80423,
},
[452235] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashen Stonestalker",
["npcID"] = 217624,
},
[405137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[456331] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flickerflame Candlecrusher",
["npcID"] = 219619,
},
[450188] = {
["source"] = "Candlelit Blind-Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 218213,
},
[337562] = {
["npcID"] = 162875,
},
[384663] = {
["source"] = "Forgewrought Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 194816,
},
[394903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lookout Mordren",
["npcID"] = 193668,
},
[388760] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[374426] = {
["source"] = "Initiate Radiya",
["event"] = "SPELL_CAST_START",
["npcID"] = 190014,
},
[106421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Guardian",
["npcID"] = 59741,
},
[106933] = {
["encounterName"] = "Striker Ga'dok",
["source"] = "Striker Ga'dok",
["npcID"] = 56589,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1405,
},
[125363] = {
["source"] = "Scritch",
["event"] = "SPELL_CAST_START",
["npcID"] = 50831,
},
[169824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spore Image",
["npcID"] = 84984,
},
[456338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anguishing Nightmare",
["npcID"] = 214415,
},
[417431] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[382620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonebolt Hunter",
["npcID"] = 185534,
},
[450196] = {
["source"] = "Candlelit Blind-Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 218213,
},
[321188] = {
["source"] = "Quilboar Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 150238,
},
[323236] = {
["encounterName"] = "Lord Chamberlain",
["npcID"] = 164218,
["encounterID"] = 2381,
},
[368287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonebolt Hunter",
["npcID"] = 185534,
},
[156515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whirling Dervish",
["npcID"] = 77605,
},
[356001] = {
["npcID"] = 177808,
},
[308903] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["npcID"] = 156523,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2327,
},
[193375] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["npcID"] = 91004,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1791,
},
[11642] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Priest",
["npcID"] = 67902,
},
[333477] = {
["npcID"] = 163621,
},
[403101] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201773,
},
[272046] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Sharkbait",
["npcID"] = 126841,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2093,
},
[333479] = {
["npcID"] = 163620,
},
[82362] = {
["npcID"] = 39987,
},
[347814] = {
["npcID"] = 176396,
},
[407199] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[376483] = {
["source"] = "Charred Cinderling",
["event"] = "SPELL_CAST_START",
["npcID"] = 187404,
},
[386722] = {
["npcID"] = 190482,
},
[298669] = {
["encounterName"] = "Trixie & Naeno",
["npcID"] = 150712,
["encounterID"] = 2312,
},
[101816] = {
["npcID"] = 54691,
},
[368294] = {
["npcID"] = 185752,
},
[452252] = {
["source"] = "Master Machinist Dunstan",
["event"] = "SPELL_CAST_START",
["npcID"] = 217353,
},
[368295] = {
["npcID"] = 183953,
},
[396964] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Flow Control Device",
["npcID"] = 198527,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[124854] = {
["source"] = "Zai the Outcast",
["event"] = "SPELL_CAST_START",
["npcID"] = 50769,
},
[345772] = {
["npcID"] = 175579,
},
[339629] = {
["npcID"] = 173145,
},
[407205] = {
["source"] = "Horde Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 203861,
},
[120759] = {
["encounterName"] = "Commander Vo'jak",
["source"] = "Commander Vo'jak",
["encounterID"] = 1502,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61634,
},
[372394] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[448161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Abomination",
["npcID"] = 219454,
},
[286389] = {
["npcID"] = 148665,
},
[181094] = {
["encounterName"] = "Hellfire Assault",
["source"] = "Felfire Demolisher",
["npcID"] = 91103,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1778,
},
[333488] = {
["encounterName"] = "Amarth, The Harvester",
["encounterID"] = 2388,
["npcID"] = 163157,
},
[178023] = {
["source"] = "Gorian Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 82528,
},
[228193] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114329,
["encounterID"] = 1957,
},
[163689] = {
["encounterName"] = "Grimrail Enforcers",
["npcID"] = 80816,
["encounterID"] = 1748,
},
[59616] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Dragonflayer Runecaster",
["encounterID"] = 2026,
["event"] = "SPELL_CAST_START",
["npcID"] = 23960,
},
[372397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadepaw Skulker",
["npcID"] = 190188,
},
[120760] = {
["encounterName"] = "Commander Vo'jak",
["source"] = "Commander Vo'jak",
["encounterID"] = 1502,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61634,
},
[129975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Incarnation of Despair",
["npcID"] = 65872,
},
[337587] = {
["npcID"] = 162880,
},
[384686] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["npcID"] = 186615,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[407212] = {
["source"] = "Djaradin Dragonhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 202108,
},
[204646] = {
["encounterName"] = "Oakheart",
["npcID"] = 103344,
["encounterID"] = 1837,
},
[452263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harvest Warden Izk'tilak",
["npcID"] = 220644,
},
[200551] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[396975] = {
["npcID"] = 191401,
},
[130488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Lieutenant",
["npcID"] = 66287,
},
[131000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Déchiqueteur garrosh’ar",
["npcID"] = 66327,
},
[41187] = {
["source"] = "Ashtongue Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 68096,
},
[57825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Elemental",
["npcID"] = 70979,
},
[374451] = {
["source"] = "Burning Chain Caster",
["event"] = "SPELL_CAST_START",
["npcID"] = 195919,
},
[329401] = {
["npcID"] = 159151,
},
[399025] = {
["source"] = "Arcane Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 200720,
},
[417455] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[59617] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Dragonflayer Runecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 23960,
},
[142192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crypt Guardian",
["npcID"] = 61783,
},
[106428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Novice",
["npcID"] = 56395,
},
[329404] = {
["npcID"] = 167464,
},
[462508] = {
["encounterName"] = "Blightbone",
["source"] = "Void Emissary",
["encounterID"] = 2387,
["event"] = "SPELL_CAST_START",
["npcID"] = 229537,
},
[166766] = {
["npcID"] = 184362,
},
[419506] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[439984] = {
["isChanneled"] = true,
["source"] = "Earthen-Ward Sentinel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216221,
},
[118715] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Jinanya the Clawblade",
["npcID"] = 56513,
},
[27891] = {
["source"] = "Sludge Belcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 16029,
},
[128954] = {
["event"] = "SPELL_CAST_START",
["source"] = "General Sho Lien",
["npcID"] = 60769,
},
[321216] = {
["npcID"] = 165007,
},
[169839] = {
["event"] = "SPELL_CAST_START",
["source"] = "Putrid Pyromancer",
["npcID"] = 84957,
},
[366267] = {
["npcID"] = 185008,
},
[386745] = {
["npcID"] = 189206,
},
[409271] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["npcID"] = 199703,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[50403] = {
["source"] = "Wastes Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 28005,
},
[169840] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Icecaller",
["npcID"] = 84989,
},
[399033] = {
["source"] = "Weyrn Spellslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 200736,
},
[433845] = {
["source"] = "Blood Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 216364,
},
[419511] = {
["source"] = "Chronaxie",
["event"] = "SPELL_CAST_START",
["npcID"] = 206070,
},
[356031] = {
["npcID"] = 177816,
},
[135029] = {
["npcID"] = 78116,
},
[169841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Addled Arcanomancer",
["npcID"] = 84990,
},
[106942] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Destroying Sha",
["npcID"] = 56765,
},
[366272] = {
["npcID"] = 185032,
},
[124860] = {
["source"] = "Zai the Outcast",
["event"] = "SPELL_CAST_START",
["npcID"] = 50769,
},
[315079] = {
["npcID"] = 161388,
},
[329414] = {
["npcID"] = 169885,
},
[419516] = {
["source"] = "Chronaxie",
["event"] = "SPELL_CAST_START",
["npcID"] = 206070,
},
[169843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Putrid Pyromancer",
["npcID"] = 84957,
},
[122301] = {
["source"] = "Water Sprite",
["event"] = "SPELL_CAST_START",
["npcID"] = 62930,
},
[122813] = {
["source"] = "Snow Blossom",
["event"] = "SPELL_CAST_START",
["npcID"] = 62781,
},
[388801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Warrior",
["npcID"] = 195855,
},
[458425] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gloomsprout",
["npcID"] = 215501,
},
[321226] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["npcID"] = 163157,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2388,
},
[411328] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diganthor",
["npcID"] = 204434,
},
[366278] = {
["npcID"] = 185032,
},
[388804] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[394948] = {
["source"] = "Ashbinder Tornecha",
["event"] = "SPELL_CAST_START",
["npcID"] = 192344,
},
[142201] = {
["source"] = "Echo of Y'Shaarj",
["event"] = "SPELL_CAST_START",
["npcID"] = 71123,
},
[257899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Ravager",
["npcID"] = 130012,
},
[313039] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["npcID"] = 157439,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2337,
},
[407236] = {
["source"] = "Shrinekeeper Qanosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 199839,
},
[394950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broodweaver Araznae",
["npcID"] = 193220,
},
[341709] = {
["encounterName"] = "Mistcaller",
["npcID"] = 164501,
["encounterID"] = 2392,
},
[419524] = {
["source"] = "Loose Time",
["event"] = "SPELL_CAST_START",
["npcID"] = 209170,
},
[169847] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Icecaller",
["npcID"] = 84989,
},
[329425] = {
["npcID"] = 157824,
},
[126911] = {
["source"] = "Shao-Tien Fist",
["event"] = "SPELL_CAST_START",
["npcID"] = 65134,
},
[413385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minister of Air",
["npcID"] = 45930,
},
[366287] = {
["npcID"] = 185032,
},
[417481] = {
["source"] = "Timeline Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 199748,
},
[364240] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 181549,
["encounterID"] = 2544,
},
[390861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angen",
["npcID"] = 193341,
},
[360145] = {
["encounterName"] = "Lords of Dread",
["encounterID"] = 2543,
["npcID"] = 181399,
},
[364241] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 181546,
["encounterID"] = 2544,
},
[267997] = {
["npcID"] = 135816,
},
[407245] = {
["source"] = "Shrinekeeper Qanosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 199839,
},
[257904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ludwig Von Tortollan",
["npcID"] = 129699,
},
[394959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Acequian",
["npcID"] = 187617,
},
[331479] = {
["npcID"] = 167923,
},
[415437] = {
["source"] = "Timestream Leech",
["event"] = "SPELL_CAST_START",
["npcID"] = 206066,
},
[329432] = {
["npcID"] = 170740,
},
[388817] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["npcID"] = 186616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[300764] = {
["npcID"] = 150165,
},
[331481] = {
["npcID"] = 167948,
},
[284383] = {
["encounterName"] = "Stormwall Blockade",
["npcID"] = 146253,
["encounterID"] = 2280,
},
[397010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Honor Guard",
["npcID"] = 197147,
},
[286432] = {
["npcID"] = 147571,
},
[121282] = {
["encounterName"] = "Wing Leader Ner'onok",
["source"] = "Wing Leader Ner'onok",
["encounterID"] = 1464,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62205,
},
[397011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Honor Guard",
["npcID"] = 197147,
},
[115139] = {
["encounterName"] = "Thalnos the Soulrender",
["source"] = "Thalnos the Soulrender",
["encounterID"] = 1423,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59789,
},
[175997] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Dulhu",
["npcID"] = 83894,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[9532] = {
["npcID"] = 2718,
},
[388822] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["encounterID"] = 2565,
["event"] = "SPELL_CAST_START",
["npcID"] = 190609,
},
[399061] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 200858,
},
[204666] = {
["encounterName"] = "Oakheart",
["npcID"] = 103344,
["encounterID"] = 1837,
},
[321247] = {
["encounterName"] = "Amarth, The Harvester",
["encounterID"] = 2388,
["npcID"] = 163157,
},
[397014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Emissary",
["npcID"] = 197146,
},
[399062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 200858,
},
[257908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Officer",
["npcID"] = 127106,
},
[419540] = {
["source"] = "Molten General",
["event"] = "SPELL_CAST_START",
["npcID"] = 207941,
},
[204667] = {
["encounterName"] = "Oakheart",
["npcID"] = 103344,
["encounterID"] = 1837,
},
[321249] = {
["npcID"] = 162051,
},
[115652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stout Brew Alemental",
["npcID"] = 59519,
},
[327393] = {
["npcID"] = 163618,
},
[399065] = {
["source"] = "Irontide Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200858,
},
[411353] = {
["event"] = "SPELL_CAST_START",
["source"] = "Empowered Protector Lynaera",
["npcID"] = 204419,
},
[366303] = {
["npcID"] = 183927,
},
[392924] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Channeler Ryvati",
["npcID"] = 197535,
},
[394972] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavabearer",
["npcID"] = 197148,
},
[409307] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Dreadsquall",
["npcID"] = 202262,
},
[46568] = {
["npcID"] = 25757,
},
[300777] = {
["npcID"] = 150165,
},
[360162] = {
["encounterName"] = "Vigilant Guardian",
["npcID"] = 180773,
["encounterID"] = 2512,
},
[372449] = {
["source"] = "Stormfang Bonecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 187931,
},
[128964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krasari Runekeeper",
["npcID"] = 65598,
},
[121285] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Knucklethump Smasher",
["npcID"] = 59410,
},
[106439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Novice",
["npcID"] = 56395,
},
[394976] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Voice From Beyond",
["encounterID"] = 2684,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198757,
},
[341735] = {
["npcID"] = 174336,
},
[83914] = {
["encounterName"] = "Ozumat",
["encounterID"] = 1047,
["npcID"] = 44715,
},
[444123] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["npcID"] = 209230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[372452] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Drift",
["npcID"] = 186421,
},
[399073] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Tidelord",
["npcID"] = 200488,
},
[403169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ishyra",
["npcID"] = 200579,
},
[317164] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Mycelial Cyst",
["npcID"] = 157461,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2337,
},
[88010] = {
["npcID"] = 45912,
},
[317165] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Mycelial Cyst",
["npcID"] = 157461,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2337,
},
[288497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huezeki Windsong",
["npcID"] = 205497,
},
[323309] = {
["npcID"] = 166932,
},
[174981] = {
["source"] = "High Councilor Mal'gris",
["event"] = "SPELL_CAST_START",
["npcID"] = 81811,
},
[83915] = {
["encounterName"] = "Ozumat",
["encounterID"] = 1047,
["npcID"] = 44715,
},
[372456] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[394982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalized Steelshard",
["npcID"] = 188048,
},
[421603] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[382696] = {
["npcID"] = 184131,
},
[167815] = {
["npcID"] = 83390,
},
[329455] = {
["encounterName"] = "Hungering Destroyer",
["npcID"] = 164261,
["encounterID"] = 2383,
},
[399079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Tidelord",
["npcID"] = 200488,
},
[40938] = {
["source"] = "Illidari Fearbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 22954,
},
[349934] = {
["encounterName"] = "The Grand Menagerie",
["npcID"] = 176555,
["encounterID"] = 2441,
},
[200580] = {
["npcID"] = 95779,
},
[274168] = {
["encounterName"] = "Zul",
["npcID"] = 138967,
["encounterID"] = 2145,
},
[15228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Oracle",
["npcID"] = 17771,
},
[456420] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[360176] = {
["encounterName"] = "Vigilant Guardian",
["npcID"] = 181856,
["encounterID"] = 2512,
},
[341747] = {
["npcID"] = 174158,
},
[327413] = {
["npcID"] = 168318,
},
[125384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adolescent Mushan",
["npcID"] = 56239,
},
[405228] = {
["source"] = "Duzalgor",
["event"] = "SPELL_CAST_START",
["npcID"] = 200610,
},
[331510] = {
["npcID"] = 170838,
},
[382704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Mender",
["npcID"] = 203736,
},
[319224] = {
["npcID"] = 157725,
},
[386800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arkhuu",
["npcID"] = 195300,
},
[153485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carrion Worm",
["npcID"] = 76057,
},
[40683] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[417517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ankura Bloodhewer",
["npcID"] = 207589,
},
[386801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grounded Primalist",
["npcID"] = 187204,
},
[390897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalepiercer",
["npcID"] = 186632,
},
[368373] = {
["npcID"] = 183516,
},
[427758] = {
["event"] = "SPELL_CAST_START",
["source"] = "Envoy of Winter",
["npcID"] = 209929,
},
[382708] = {
["source"] = "Qalashi Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 193293,
},
[128969] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crypt Guardian",
["npcID"] = 61783,
},
[339706] = {
["encounterName"] = "Mordretha",
["npcID"] = 173549,
["encounterID"] = 2404,
},
[423664] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[172941] = {
["source"] = "Sor the Eradicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 80691,
},
[360185] = {
["npcID"] = 181879,
},
[460525] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bytta",
["npcID"] = 222653,
},
[413427] = {
["source"] = "Pendule",
["event"] = "SPELL_CAST_START",
["npcID"] = 206074,
},
[382712] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wilted Oak",
["npcID"] = 186229,
},
[311041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Umbral Seer",
["npcID"] = 159219,
},
[121291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mischievous Snow Sprite",
["npcID"] = 59693,
},
[372474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shikaar Beastmaster",
["npcID"] = 182727,
},
[384761] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["npcID"] = 186615,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[172943] = {
["npcID"] = 84520,
},
[388857] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crag Walker",
["npcID"] = 197647,
},
[347903] = {
["npcID"] = 176395,
},
[339713] = {
["npcID"] = 162586,
},
[392955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korthrox the Destroyer",
["npcID"] = 183422,
},
[397051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cyclas",
["npcID"] = 199029,
},
[311046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Umbral Seer",
["npcID"] = 159219,
},
[349954] = {
["encounterName"] = "The Grand Menagerie",
["npcID"] = 176555,
["encounterID"] = 2441,
},
[392957] = {
["source"] = "Azure Vorquin",
["event"] = "SPELL_CAST_START",
["npcID"] = 190216,
},
[388862] = {
["source"] = "Corrupted Manafiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 196045,
},
[407292] = {
["source"] = "Erupting Shadowflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 199838,
},
[388863] = {
["source"] = "Corrupted Manafiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 196045,
},
[199567] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Image of Latosius",
["npcID"] = 101028,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[390912] = {
["source"] = "Vile Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 197219,
},
[106447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Novice",
["npcID"] = 56395,
},
[178067] = {
["source"] = "Sea Skrog",
["event"] = "SPELL_CAST_START",
["npcID"] = 88094,
},
[407296] = {
["source"] = "Erupting Shadowflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 199838,
},
[311052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maddened Conscript",
["npcID"] = 159305,
},
[403201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ishyra",
["npcID"] = 200579,
},
[374533] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["event"] = "SPELL_CAST_START",
["npcID"] = 189478,
},
[411393] = {
["source"] = "Bogg",
["event"] = "SPELL_CAST_START",
["npcID"] = 201747,
},
[372486] = {
["source"] = "Waste Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 187497,
},
[390916] = {
["source"] = "Salkii",
["event"] = "SPELL_CAST_START",
["npcID"] = 193885,
},
[411394] = {
["source"] = "Bogg",
["event"] = "SPELL_CAST_START",
["npcID"] = 201747,
},
[341771] = {
["npcID"] = 170882,
},
[125902] = {
["isChanneled"] = true,
["source"] = "Kor'thik Warsinger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 64458,
},
[300818] = {
["npcID"] = 150195,
},
[28280] = {
["source"] = "Grobbulus",
["event"] = "SPELL_CAST_START",
["npcID"] = 15931,
},
[421636] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[448257] = {
["event"] = "SPELL_CAST_START",
["source"] = "Foreseer Xix'amon",
["npcID"] = 215435,
},
[131022] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garrosh'ar Grunt",
["npcID"] = 66398,
},
[411399] = {
["source"] = "Bogg",
["event"] = "SPELL_CAST_START",
["npcID"] = 201747,
},
[409352] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Dreadsquall",
["npcID"] = 202262,
},
[172952] = {
["npcID"] = 83026,
},
[323347] = {
["npcID"] = 165137,
},
[325395] = {
["encounterName"] = "Domina Venomblade",
["encounterID"] = 2385,
["npcID"] = 166813,
},
[372494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormshackler Rynea",
["npcID"] = 189391,
},
[115153] = {
["source"] = "Riverstride Jinyu",
["event"] = "SPELL_CAST_START",
["npcID"] = 56289,
},
[372495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ensnaring Current",
["npcID"] = 191328,
},
[456453] = {
["source"] = "Skardyn Husk",
["event"] = "SPELL_CAST_START",
["npcID"] = 213566,
},
[125392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warbringer Qobi",
["npcID"] = 63528,
},
[390926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Barker",
["npcID"] = 194515,
},
[15869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Witch Doctor",
["npcID"] = 27555,
},
[411404] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shade of Skytalon",
["npcID"] = 204430,
},
[325399] = {
["encounterName"] = "Artificer Xy'mox",
["npcID"] = 166644,
["encounterID"] = 2405,
},
[131024] = {
["source"] = "Thunder Hold Sharp-Shooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 66288,
},
[306971] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["npcID"] = 157439,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2337,
},
[116178] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sudsy Brew Alemental",
["npcID"] = 59522,
},
[83926] = {
["encounterName"] = "Ozumat",
["encounterID"] = 1047,
["npcID"] = 44715,
},
[411407] = {
["source"] = "Time-Lost Waveshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 205363,
},
[388882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infuser Sariya",
["npcID"] = 190405,
},
[390930] = {
["npcID"] = 185784,
},
[411408] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shade of Skytalon",
["npcID"] = 204430,
},
[78807] = {
["encounterName"] = "Ozruk",
["encounterID"] = 1058,
["npcID"] = 42188,
},
[154527] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Soulbinder",
["npcID"] = 77812,
},
[331548] = {
["npcID"] = 167964,
},
[143265] = {
["encounterName"] = "Siegecrafter Blackfuse",
["source"] = "Siegecrafter Blackfuse",
["encounterID"] = 1601,
["event"] = "SPELL_CAST_START",
["npcID"] = 71504,
},
[288546] = {
["npcID"] = 148797,
},
[388886] = {
["source"] = "Spellbound Scepter",
["event"] = "SPELL_CAST_START",
["npcID"] = 196576,
},
[390934] = {
["source"] = "Salkii",
["event"] = "SPELL_CAST_START",
["npcID"] = 193885,
},
[331550] = {
["encounterName"] = "Lady Inerva Darkvein",
["npcID"] = 170197,
["encounterID"] = 2406,
},
[112084] = {
["encounterName"] = "Lorewalker Stonestep",
["source"] = "Zao Sunseeker",
["encounterID"] = 1417,
["event"] = "SPELL_CAST_START",
["npcID"] = 58826,
},
[288548] = {
["npcID"] = 148797,
},
[186269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blightshard Shaper",
["npcID"] = 90998,
},
[401175] = {
["source"] = "Ebyssian",
["event"] = "SPELL_CAST_START",
["npcID"] = 201707,
},
[272167] = {
["npcID"] = 136404,
},
[319266] = {
["npcID"] = 167033,
},
[390938] = {
["source"] = "Aggravated Skitterfly",
["event"] = "SPELL_CAST_START",
["npcID"] = 197406,
},
[444180] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Xur'khun the Defiled",
["npcID"] = 221845,
},
[282408] = {
["encounterName"] = "Mekkatorque",
["npcID"] = 144942,
["encounterID"] = 2276,
},
[333602] = {
["npcID"] = 163126,
},
[176032] = {
["npcID"] = 88163,
},
[395035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulharvester Duuren",
["npcID"] = 195928,
},
[382749] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queasy Hornswog",
["npcID"] = 194003,
},
[446230] = {
["encounterName"] = "Undersea Abomination",
["source"] = "Undersea Abomination",
["encounterID"] = 2895,
["event"] = "SPELL_CAST_START",
["npcID"] = 214348,
},
[300840] = {
["source"] = "Inhuman Test Subject",
["event"] = "SPELL_CAST_START",
["npcID"] = 202147,
},
[327461] = {
["npcID"] = 161105,
},
[282411] = {
["encounterName"] = "Conclave of the Chosen",
["npcID"] = 144941,
["encounterID"] = 2268,
},
[349987] = {
["encounterName"] = "The Grand Menagerie",
["npcID"] = 176555,
["encounterID"] = 2441,
},
[31865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seductress",
["npcID"] = 17399,
},
[390943] = {
["npcID"] = 185784,
},
[120789] = {
["encounterName"] = "Commander Vo'jak",
["source"] = "Commander Vo'jak",
["encounterID"] = 1502,
["event"] = "SPELL_CAST_START",
["npcID"] = 61634,
},
[362275] = {
["encounterName"] = "Rygelon",
["encounterID"] = 2549,
["npcID"] = 182777,
},
[196512] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["encounterID"] = 1807,
["event"] = "SPELL_CAST_START",
["npcID"] = 95674,
},
[386849] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unleashed Storm",
["npcID"] = 195846,
},
[388897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenging Hardshell",
["npcID"] = 193605,
},
[374563] = {
["source"] = "Dazzling Dragonfly",
["event"] = "SPELL_CAST_START",
["npcID"] = 190362,
},
[360229] = {
["encounterName"] = "Lords of Dread",
["encounterID"] = 2543,
["npcID"] = 181399,
},
[452378] = {
["source"] = "Civilian Puppet",
["event"] = "SPELL_CAST_START",
["npcID"] = 219495,
},
[306988] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["npcID"] = 157439,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2337,
},
[325418] = {
["npcID"] = 167113,
},
[319275] = {
["npcID"] = 165323,
},
[181155] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorebound Felcaster",
["npcID"] = 93931,
},
[133033] = {
["source"] = "Vol'jin",
["event"] = "SPELL_CAST_START",
["npcID"] = 67414,
},
[240540] = {
["source"] = "Razorjaw Swiftfin",
["event"] = "SPELL_CAST_START",
["npcID"] = 120516,
},
[413473] = {
["source"] = "Temporal Deviation",
["event"] = "SPELL_CAST_START",
["npcID"] = 206063,
},
[228254] = {
["npcID"] = 114626,
},
[147368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironfur Great Bull",
["npcID"] = 72844,
},
[149416] = {
["npcID"] = 183257,
},
[374567] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[272180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grotesque Horror",
["npcID"] = 138187,
},
[202658] = {
["source"] = "Malignant Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 102584,
},
[317231] = {
["encounterName"] = "Xav the Unfallen",
["npcID"] = 162329,
["encounterID"] = 2366,
},
[196515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Binder Ashioi",
["npcID"] = 100250,
},
[329518] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 165805,
["encounterID"] = 2402,
},
[364330] = {
["npcID"] = 184737,
},
[374569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Decay",
["npcID"] = 186227,
},
[384808] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["npcID"] = 186339,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2581,
},
[160680] = {
["encounterName"] = "Nitrogg Thundertower",
["npcID"] = 79548,
["encounterID"] = 1732,
},
[390952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand Flame",
["npcID"] = 188009,
},
[196516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ritualist Lesha",
["npcID"] = 100248,
},
[300852] = {
["source"] = "Inhuman Test Subject",
["event"] = "SPELL_CAST_START",
["npcID"] = 202147,
},
[401192] = {
["source"] = "Quicksmack Magk",
["event"] = "SPELL_CAST_START",
["npcID"] = 204651,
},
[321330] = {
["isChanneled"] = true,
["source"] = "Darkmaul Channeler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157328,
},
[117720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gormali Incinerator",
["npcID"] = 54703,
},
[401193] = {
["source"] = "Quicksmack Magk",
["event"] = "SPELL_CAST_START",
["npcID"] = 204651,
},
[202661] = {
["source"] = "Fel Scorcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 102583,
},
[115161] = {
["source"] = "Muck Snapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 56447,
},
[397100] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmas",
["npcID"] = 199027,
},
[22907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Witch",
["npcID"] = 24696,
},
[319286] = {
["npcID"] = 164084,
},
[419626] = {
["source"] = "Ignarion",
["event"] = "SPELL_CAST_START",
["npcID"] = 209360,
},
[331573] = {
["encounterName"] = "Lady Inerva Darkvein",
["npcID"] = 170199,
["encounterID"] = 2406,
},
[388911] = {
["source"] = "Spellbound Battleaxe",
["event"] = "SPELL_CAST_START",
["npcID"] = 196577,
},
[411437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Siegemaster",
["npcID"] = 198874,
},
[454440] = {
["source"] = "Bilge Rat Pillager",
["event"] = "SPELL_CAST_START",
["npcID"] = 135241,
},
[366387] = {
["npcID"] = 182688,
},
[290621] = {
["encounterName"] = "Lady Jaina Proudmoore",
["npcID"] = 146409,
["encounterID"] = 2281,
},
[191401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Marksman",
["npcID"] = 96640,
},
[327481] = {
["encounterName"] = "Kin-Tara",
["npcID"] = 162059,
["encounterID"] = 2357,
},
[386866] = {
["source"] = "Gorging Stagbeetle",
["event"] = "SPELL_CAST_START",
["npcID"] = 195709,
},
[339768] = {
["npcID"] = 158891,
},
[126937] = {
["source"] = "Sra'thik Ambercaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 64917,
},
[395058] = {
["source"] = "Pirdan The Blinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 186512,
},
[319292] = {
["source"] = "Ogre Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 156676,
},
[460587] = {
["source"] = "Vindictive Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 220472,
},
[339770] = {
["npcID"] = 173568,
},
[197546] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["encounterID"] = 1833,
["event"] = "SPELL_CAST_START",
["npcID"] = 98696,
},
[397108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Kelp Elemental",
["npcID"] = 196809,
},
[124378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Den Mother Moof",
["npcID"] = 63518,
},
[319294] = {
["source"] = "Torgok",
["event"] = "SPELL_CAST_START",
["npcID"] = 162817,
},
[395061] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonewrecker Tokara",
["npcID"] = 193442,
},
[388918] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[333629] = {
["encounterName"] = "Amarth, The Harvester",
["encounterID"] = 2388,
["npcID"] = 168246,
},
[139186] = {
["source"] = "Jubeka Shadowbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 70166,
},
[397110] = {
["npcID"] = 190008,
},
[280389] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["encounterID"] = 2109,
["event"] = "SPELL_CAST_START",
["npcID"] = 129208,
},
[372538] = {
["source"] = "Lava Flare",
["event"] = "SPELL_CAST_START",
["npcID"] = 189470,
},
[325440] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 165764,
["encounterID"] = 2402,
},
[409398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalline Guardian",
["npcID"] = 203831,
},
[372539] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[335680] = {
["npcID"] = 181782,
},
[423734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomfiend",
["npcID"] = 210910,
},
[384827] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[388923] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["encounterID"] = 2563,
["event"] = "SPELL_CAST_START",
["npcID"] = 196482,
},
[88032] = {
["npcID"] = 45912,
},
[44276] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zelfan",
["npcID"] = 24556,
},
[113629] = {
["source"] = "Boneweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 59193,
},
[407354] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slaghide Shalewing",
["npcID"] = 202303,
},
[388925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskanoth",
["npcID"] = 193533,
},
[401212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stone Infused Rock Snail",
["npcID"] = 203241,
},
[153524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plagued Bat",
["npcID"] = 75459,
},
[382783] = {
["source"] = "Obsidian Tyrant",
["event"] = "SPELL_CAST_START",
["npcID"] = 202483,
},
[118749] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frenzyhop",
["npcID"] = 56514,
},
[246697] = {
["source"] = "Shadowguard Subjugator",
["event"] = "SPELL_CAST_START",
["npcID"] = 124171,
},
[39413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Spearman",
["npcID"] = 17729,
},
[158644] = {
["event"] = "SPELL_CAST_START",
["source"] = "Solar Magnifier",
["npcID"] = 77559,
},
[401214] = {
["source"] = "Elder Honeypelt",
["event"] = "SPELL_CAST_START",
["npcID"] = 202451,
},
[362308] = {
["npcID"] = 185755,
},
[115678] = {
["source"] = "Greenwood Thief",
["event"] = "SPELL_CAST_START",
["npcID"] = 54930,
},
[407359] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slaghide Shalewing",
["npcID"] = 202303,
},
[401216] = {
["source"] = "Nevroll",
["event"] = "SPELL_CAST_START",
["npcID"] = 203039,
},
[307020] = {
["encounterName"] = "Vexiona",
["source"] = "Vexiona",
["npcID"] = 157354,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2336,
},
[333641] = {
["npcID"] = 169905,
},
[376644] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[198577] = {
["npcID"] = 135107,
},
[390979] = {
["source"] = "Dragonbane Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 186600,
},
[450364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Weaver",
["npcID"] = 222881,
},
[168885] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[431935] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Journalist Ist'iix",
["npcID"] = 226234,
},
[319310] = {
["isChanneled"] = true,
["source"] = "Hrun the Exiled",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156900,
},
[405316] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[390982] = {
["source"] = "Dragonbane Shieldcracker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186609,
},
[368457] = {
["npcID"] = 180746,
},
[172982] = {
["npcID"] = 83026,
},
[372553] = {
["source"] = "Hyena Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 187566,
},
[390983] = {
["source"] = "Qalashi Scaleripper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187602,
},
[393031] = {
["source"] = "Colossal Causality",
["event"] = "SPELL_CAST_START",
["npcID"] = 186672,
},
[337742] = {
["npcID"] = 159151,
},
[390984] = {
["source"] = "Worldcarver Wurmling",
["event"] = "SPELL_CAST_START",
["npcID"] = 187366,
},
[425796] = {
["source"] = "Harbinger of Incineration",
["event"] = "SPELL_CAST_START",
["npcID"] = 210147,
},
[395080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enkine the Voracious",
["npcID"] = 193134,
},
[440131] = {
["source"] = "Alleria Windrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 215014,
},
[403272] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[228273] = {
["npcID"] = 114637,
},
[360270] = {
["npcID"] = 181625,
},
[345936] = {
["encounterName"] = "Shriekwing",
["npcID"] = 164406,
["encounterID"] = 2398,
},
[372557] = {
["source"] = "Hyena Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 187566,
},
[390987] = {
["npcID"] = 46859,
},
[390988] = {
["source"] = "Death's Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 190985,
},
[197558] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["npcID"] = 95674,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1807,
},
[388941] = {
["source"] = "Rampaging Downpour",
["event"] = "SPELL_CAST_START",
["npcID"] = 193815,
},
[200630] = {
["npcID"] = 95769,
},
[388942] = {
["source"] = "Arcane Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 196671,
},
[368465] = {
["npcID"] = 180746,
},
[419659] = {
["source"] = "Observational Pollen Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 210624,
},
[372561] = {
["source"] = "Qalashi Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 189227,
},
[440137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lost Lynx",
["npcID"] = 225022,
},
[388944] = {
["npcID"] = 190904,
},
[114658] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58633,
},
[427852] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2883,
},
[382802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Rothexer",
["npcID"] = 187224,
},
[329561] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 165778,
["encounterID"] = 2402,
},
[228277] = {
["npcID"] = 114634,
},
[347992] = {
["encounterName"] = "Zo'phex the Sentinel",
["npcID"] = 175616,
["encounterID"] = 2425,
},
[372566] = {
["source"] = "Qalashi Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 189227,
},
[358232] = {
["npcID"] = 183366,
},
[325469] = {
["npcID"] = 166928,
},
[384854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fishface",
["npcID"] = 191926,
},
[168894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spore Image",
["npcID"] = 84386,
},
[298849] = {
["encounterName"] = "Trixie & Naeno",
["npcID"] = 150712,
["encounterID"] = 2312,
},
[228279] = {
["npcID"] = 114632,
},
[417619] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gill'dan",
["npcID"] = 204808,
},
[87527] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dustbelcher Initiate",
["npcID"] = 46694,
},
[388952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravenous Riversnapper",
["npcID"] = 192684,
},
[228280] = {
["npcID"] = 114629,
},
[360284] = {
["encounterName"] = "Lords of Dread",
["encounterID"] = 2543,
["npcID"] = 181399,
},
[254901] = {
["npcID"] = 136496,
},
[329569] = {
["npcID"] = 158160,
},
[210875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Sentinel",
["npcID"] = 96574,
},
[59638] = {
["npcID"] = 31216,
},
[317284] = {
["npcID"] = 162880,
},
[368478] = {
["npcID"] = 180746,
},
[413529] = {
["source"] = "Timestream Anomaly",
["event"] = "SPELL_CAST_START",
["npcID"] = 199749,
},
[374622] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Thundering Ravager",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 190690,
},
[139205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Prophet",
["npcID"] = 70557,
},
[37113] = {
["source"] = "Shadowmoon Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 17371,
},
[374623] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frozen Destroyer",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 190686,
},
[319334] = {
["source"] = "Jugnug",
["event"] = "SPELL_CAST_START",
["npcID"] = 153583,
},
[388958] = {
["isChanneled"] = true,
["source"] = "Arcane Ravager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196671,
},
[374624] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frozen Destroyer",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 190686,
},
[196543] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["npcID"] = 95674,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1807,
},
[364386] = {
["encounterName"] = "Rygelon",
["npcID"] = 182823,
["encounterID"] = 2549,
},
[407389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brimstone Serpent",
["npcID"] = 202272,
},
[409437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voracious Magma Worm",
["npcID"] = 203825,
},
[450393] = {
["source"] = "Obstorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 217082,
},
[124389] = {
["source"] = "Bloodthirsty Saurok",
["event"] = "SPELL_CAST_START",
["npcID"] = 63279,
},
[335720] = {
["npcID"] = 155812,
},
[193473] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Yaztal",
["npcID"] = 192337,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2684,
},
[341864] = {
["npcID"] = 174092,
},
[348008] = {
["npcID"] = 176394,
},
[341865] = {
["npcID"] = 174194,
},
[384868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Longbow",
["npcID"] = 192789,
},
[187331] = {
["source"] = "Gorebound Fanatic",
["event"] = "SPELL_CAST_START",
["npcID"] = 94563,
},
[114663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brewmaster Blanche",
["npcID"] = 58740,
},
[106984] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Gu Cloudstrike",
["npcID"] = 56747,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1303,
},
[323437] = {
["encounterName"] = "Lord Chamberlain",
["npcID"] = 164218,
["encounterID"] = 2381,
},
[341867] = {
["npcID"] = 165469,
},
[200642] = {
["npcID"] = 95771,
},
[323438] = {
["npcID"] = 169303,
},
[448351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Snuffercrusher",
["npcID"] = 218662,
},
[343916] = {
["npcID"] = 169102,
},
[127462] = {
["source"] = "Jade Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 65169,
},
[13952] = {
["source"] = "Lightsworn Vindicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 22861,
},
[409445] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voracious Magma Worm",
["npcID"] = 203825,
},
[374634] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189478,
},
[360300] = {
["encounterName"] = "Lords of Dread",
["encounterID"] = 2543,
["npcID"] = 181398,
},
[395112] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enkine the Voracious",
["npcID"] = 193134,
},
[256957] = {
["source"] = "Irontide Waveshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 129370,
},
[376683] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[378731] = {
["npcID"] = 190938,
},
[266106] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feral Bloodswarmer",
["npcID"] = 133835,
},
[391019] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[401258] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[44538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereum Smuggler",
["npcID"] = 24698,
},
[360304] = {
["encounterName"] = "Lords of Dread",
["encounterID"] = 2543,
["npcID"] = 181399,
},
[307064] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["npcID"] = 157439,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2337,
},
[403309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expulsion Drone",
["npcID"] = 202592,
},
[111594] = {
["source"] = "Scholomance Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 58757,
},
[317304] = {
["npcID"] = 163084,
},
[79854] = {
["source"] = "Pyromancer Flamehearth",
["event"] = "SPELL_CAST_START",
["npcID"] = 70709,
},
[388976] = {
["source"] = "Arcane Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 196671,
},
[195528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Storm",
["npcID"] = 95920,
},
[207815] = {
["encounterName"] = "Patrol Captain Gerdo",
["encounterID"] = 1868,
["npcID"] = 104215,
},
[411503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diganthor",
["npcID"] = 204434,
},
[325498] = {
["npcID"] = 168299,
},
[409456] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[405361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[382836] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["npcID"] = 186338,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[368502] = {
["npcID"] = 180924,
},
[36604] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verdant Emerald Lasher",
["npcID"] = 208750,
},
[440175] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mossbloom Hazewalker",
["npcID"] = 219019,
},
[116715] = {
["isChanneled"] = true,
["source"] = "Zhi-Zhi",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54924,
},
[321406] = {
["encounterName"] = "Doctor Ickus",
["encounterID"] = 2384,
["npcID"] = 169498,
},
[372600] = {
["encounterName"] = "Sentinel Talondras",
["npcID"] = 184124,
["encounterID"] = 2557,
},
[102381] = {
["encounterName"] = "Murozond",
["npcID"] = 54432,
["encounterID"] = 1271,
},
[368506] = {
["npcID"] = 180924,
},
[405366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[327552] = {
["npcID"] = 168573,
},
[325506] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 165764,
["encounterID"] = 2402,
},
[126955] = {
["source"] = "Mogu'shan Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 64061,
},
[427894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Master Damian",
["npcID"] = 212831,
},
[43516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Prisoner",
["npcID"] = 24255,
},
[51963] = {
["npcID"] = 27829,
},
[79857] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyromancer Flamehearth",
["npcID"] = 70709,
},
[22272] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ethereal Sorcerer",
["npcID"] = 18313,
},
[360320] = {
["npcID"] = 181652,
},
[413562] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Lurking Tempest",
["npcID"] = 204337,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1043,
},
[427897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Master Damian",
["npcID"] = 212831,
},
[407420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Runestone",
["npcID"] = 204001,
},
[254920] = {
["npcID"] = 169206,
},
[214989] = {
["source"] = "Spirit of Vengeance",
["event"] = "SPELL_CAST_START",
["npcID"] = 100364,
},
[11969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Firemane Ash Tail",
["npcID"] = 4331,
},
[368514] = {
["npcID"] = 183764,
},
[403326] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[391040] = {
["npcID"] = 185784,
},
[376706] = {
["source"] = "Nokhud Stormcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 190294,
},
[405375] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[350086] = {
["encounterName"] = "The Grand Menagerie",
["npcID"] = 176705,
["encounterID"] = 2441,
},
[440188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chitin Knight",
["npcID"] = 219725,
},
[384899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbow Stalker",
["npcID"] = 186208,
},
[111599] = {
["source"] = "Scholomance Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 58757,
},
[391043] = {
["npcID"] = 185784,
},
[409473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voracious Magma Worm",
["npcID"] = 203825,
},
[138201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Lord",
["npcID"] = 69821,
},
[372615] = {
["source"] = "Tamed Phoenix",
["event"] = "SPELL_CAST_START",
["npcID"] = 189247,
},
[200658] = {
["npcID"] = 95771,
},
[298897] = {
["encounterName"] = "Trixie & Naeno",
["npcID"] = 150712,
["encounterID"] = 2312,
},
[196563] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["npcID"] = 91784,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[444288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Web Acolyte",
["npcID"] = 218320,
},
[298898] = {
["encounterName"] = "Trixie & Naeno",
["npcID"] = 153755,
["encounterID"] = 2312,
},
[142298] = {
["source"] = "Embercore",
["event"] = "SPELL_CAST_START",
["npcID"] = 70663,
},
[368522] = {
["npcID"] = 183764,
},
[113136] = {
["encounterName"] = "Darkmaster Gandling",
["source"] = "Darkmaster Gandling",
["encounterID"] = 1430,
["event"] = "SPELL_CAST_START",
["npcID"] = 59080,
},
[341902] = {
["npcID"] = 174197,
},
[440195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wanton Shadow",
["npcID"] = 225338,
},
[391050] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Channeler Ryvati",
["npcID"] = 197535,
},
[360334] = {
["npcID"] = 181964,
},
[378764] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2568,
},
[325523] = {
["npcID"] = 165515,
},
[22273] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ethereal Sorcerer",
["npcID"] = 18313,
},
[372623] = {
["encounterName"] = "Sentinel Talondras",
["npcID"] = 184124,
["encounterID"] = 2557,
},
[83445] = {
["encounterName"] = "General Husam",
["npcID"] = 44577,
["encounterID"] = 1052,
},
[368528] = {
["npcID"] = 183764,
},
[201686] = {
["source"] = "Restless Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 100761,
},
[76790] = {
["npcID"] = 39616,
},
[319383] = {
["npcID"] = 165706,
},
[444296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arathi Knight",
["npcID"] = 206696,
},
[255952] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Skycap'n Kragg",
["npcID"] = 126832,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2093,
},
[391055] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[350101] = {
["encounterName"] = "The Grand Menagerie",
["npcID"] = 176705,
["encounterID"] = 2441,
},
[360340] = {
["npcID"] = 179043,
},
[346006] = {
["encounterName"] = "Zo'phex the Sentinel",
["npcID"] = 175616,
["encounterID"] = 2425,
},
[405391] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[376723] = {
["encounterName"] = "Balakar Khan",
["source"] = "Nokhud Stormcaster",
["npcID"] = 190294,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[401297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haleh",
["npcID"] = 199370,
},
[362390] = {
["encounterName"] = "Rygelon",
["npcID"] = 182777,
["encounterID"] = 2549,
},
[79351] = {
["encounterName"] = "High Priestess Azil",
["encounterID"] = 1057,
["npcID"] = 42333,
},
[376725] = {
["encounterName"] = "Balakar Khan",
["source"] = "Nokhud Stormcaster",
["npcID"] = 190294,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[256979] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Eudora",
["npcID"] = 126848,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[327581] = {
["npcID"] = 168396,
},
[448399] = {
["source"] = "Kobold Taskfinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 204127,
},
[409492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Afflicted Soul",
["npcID"] = 204773,
},
[325535] = {
["npcID"] = 164562,
},
[442257] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Blood Parasite",
["npcID"] = 220626,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2919,
},
[327584] = {
["npcID"] = 168393,
},
[413590] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 201788,
},
[333729] = {
["npcID"] = 168949,
},
[450451] = {
["encounterName"] = "Zekvir",
["source"] = "Zekvir",
["npcID"] = 225204,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2987,
},
[436117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eratus, the Unwoven Paradox",
["npcID"] = 217190,
},
[360351] = {
["npcID"] = 179043,
},
[193502] = {
["source"] = "Glayvianna Soulrender",
["event"] = "SPELL_CAST_START",
["npcID"] = 98177,
},
[372638] = {
["encounterName"] = "Shriekwing",
["npcID"] = 189706,
["encounterID"] = 2398,
},
[417689] = {
["event"] = "SPELL_CAST_START",
["source"] = "Meantron 7000",
["npcID"] = 206131,
},
[164834] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Naturalist",
["npcID"] = 81819,
},
[368544] = {
["npcID"] = 184597,
},
[364449] = {
["npcID"] = 179939,
},
[368545] = {
["npcID"] = 184599,
},
[111606] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58633,
},
[11970] = {
["npcID"] = 176995,
},
[356260] = {
["npcID"] = 179388,
},
[440218] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["npcID"] = 216649,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[335783] = {
["npcID"] = 155812,
},
[374691] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[368548] = {
["npcID"] = 185145,
},
[193505] = {
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 91000,
},
[382883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Rothexer",
["npcID"] = 187224,
},
[432030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Screamer",
["npcID"] = 215411,
},
[129013] = {
["source"] = "Windward Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 58213,
},
[113143] = {
["encounterName"] = "Darkmaster Gandling",
["source"] = "Darkmaster Gandling",
["encounterID"] = 1430,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59080,
},
[73212] = {
["source"] = "Darkspear Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 38326,
},
[368551] = {
["npcID"] = 184605,
},
[401316] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[362410] = {
["npcID"] = 181349,
},
[405413] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["encounterID"] = 2693,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200918,
},
[56064] = {
["source"] = "Naxxramas Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 15981,
},
[401318] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[325552] = {
["encounterName"] = "Domina Venomblade",
["encounterID"] = 2385,
["npcID"] = 164266,
},
[401319] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[405415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[199652] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Haldor",
["npcID"] = 95843,
},
[270264] = {
["event"] = "SPELL_CAST_START",
["source"] = "Portal Breacher",
["npcID"] = 209821,
},
[362413] = {
["npcID"] = 181344,
},
[413607] = {
["source"] = "Infinite Twilight Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 201223,
},
[228321] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kvaldir Spiritrender",
["npcID"] = 114538,
},
[444324] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["npcID"] = 209230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[288696] = {
["encounterName"] = "Stormwall Blockade",
["npcID"] = 146256,
["encounterID"] = 2280,
},
[61184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krasari Huntress",
["npcID"] = 58070,
},
[440231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark-Crazed Harvester",
["npcID"] = 206067,
},
[125432] = {
["source"] = "Sra'thik Pool-Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 63570,
},
[203750] = {
["source"] = "Arcane Chronomaton",
["event"] = "SPELL_CAST_START",
["npcID"] = 111622,
},
[401325] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[386991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Proto-Drake",
["npcID"] = 184869,
},
[111610] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58633,
},
[88061] = {
["npcID"] = 45915,
},
[386992] = {
["source"] = "Wild Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 191777,
},
[178154] = {
["encounterName"] = "Oshir",
["npcID"] = 89011,
["encounterID"] = 1750,
},
[374706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[319417] = {
["npcID"] = 157036,
},
[395184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Proto-Dragon",
["npcID"] = 185883,
},
[298940] = {
["encounterName"] = "Trixie & Naeno",
["npcID"] = 153755,
["encounterID"] = 2312,
},
[75775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Scavenger",
["npcID"] = 41146,
},
[386994] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Proto-Drake",
["npcID"] = 194086,
},
[202728] = {
["source"] = "Dreadlord Mendacius",
["event"] = "SPELL_CAST_START",
["npcID"] = 99649,
},
[221158] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Chaotoid",
["npcID"] = 111075,
},
[427950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Master Damian",
["npcID"] = 212831,
},
[323515] = {
["encounterName"] = "Gorechop",
["npcID"] = 162317,
["encounterID"] = 2365,
},
[129017] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dojani Enforcer",
["npcID"] = 65626,
},
[448429] = {
["source"] = "Kobold Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 203878,
},
[370615] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[83455] = {
["encounterName"] = "Siamat",
["npcID"] = 44704,
["encounterID"] = 1055,
},
[196587] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["encounterID"] = 1832,
["event"] = "SPELL_CAST_START",
["npcID"] = 98542,
},
[321471] = {
["encounterName"] = "Mistcaller",
["npcID"] = 164501,
["encounterID"] = 2392,
},
[298946] = {
["encounterName"] = "Trixie & Naeno",
["npcID"] = 153755,
["encounterID"] = 2312,
},
[268230] = {
["source"] = "Ashvane Deckhand",
["event"] = "SPELL_CAST_START",
["npcID"] = 138464,
},
[79872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaldorei Defender",
["npcID"] = 191112,
},
[427955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rank Overseer",
["npcID"] = 211121,
},
[413621] = {
["source"] = "Infinite Infiltrator",
["event"] = "SPELL_CAST_START",
["npcID"] = 206214,
},
[405431] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["encounterID"] = 2667,
["event"] = "SPELL_CAST_START",
["npcID"] = 198996,
},
[57091] = {
["encounterName"] = "Keristrasza",
["source"] = "Keristrasza",
["encounterID"] = 2011,
["event"] = "SPELL_CAST_START",
["npcID"] = 26723,
},
[57054] = {
["isChanneled"] = true,
["source"] = "Crystalline Tender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28231,
},
[334377] = {
["npcID"] = 171805,
},
[57056] = {
["isChanneled"] = true,
["source"] = "Crystalline Frayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26793,
},
[391098] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galzuda",
["npcID"] = 193330,
},
[245735] = {
["source"] = "Famished Broken",
["event"] = "SPELL_CAST_START",
["npcID"] = 122322,
},
[195046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Oracle",
["npcID"] = 95861,
},
[405433] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[57046] = {
["source"] = "Crazed Mana-Surge",
["event"] = "SPELL_CAST_START",
["npcID"] = 26737,
},
[401338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kob'rok",
["npcID"] = 203462,
},
[129531] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mo Mo",
["npcID"] = 59805,
},
[57047] = {
["source"] = "Crazed Mana-Surge",
["event"] = "SPELL_CAST_START",
["npcID"] = 26737,
},
[440246] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[393148] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maneet",
["npcID"] = 188704,
},
[395196] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Proto-Dragon",
["npcID"] = 185883,
},
[421817] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["npcID"] = 208743,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2826,
},
[374719] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonejaw Basilisk",
["npcID"] = 188128,
},
[175621] = {
["source"] = "Iron Flame Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 87515,
},
[387006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotting Treant",
["npcID"] = 186361,
},
[389054] = {
["source"] = "Arcane Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 196694,
},
[317383] = {
["source"] = "Quilboar Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 150237,
},
[401341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kob'rok",
["npcID"] = 203462,
},
[56937] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["encounterID"] = 2010,
["event"] = "SPELL_CAST_START",
["npcID"] = 26930,
},
[331718] = {
["npcID"] = 171772,
},
[199663] = {
["source"] = "Ghostly Councilor",
["event"] = "SPELL_CAST_START",
["npcID"] = 98370,
},
[401342] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimson Oldblood",
["npcID"] = 201054,
},
[422614] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[389056] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[432059] = {
["source"] = "Candlelit Hexthrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 213685,
},
[384961] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbow Stalker",
["npcID"] = 186208,
},
[378818] = {
["source"] = "Qalashi Thaumaturge",
["event"] = "SPELL_CAST_START",
["npcID"] = 192788,
},
[274383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vermin Trapper",
["npcID"] = 130404,
},
[56837] = {
["source"] = "Mage Hunter Ascendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 26727,
},
[56860] = {
["source"] = "Mage Hunter Initiate",
["event"] = "SPELL_CAST_START",
["npcID"] = 26728,
},
[164357] = {
["encounterName"] = "Witherbark",
["source"] = "Witherbark",
["npcID"] = 81522,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1746,
},
[12675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Oracle",
["npcID"] = 17771,
},
[374724] = {
["source"] = "Flamecaller Aymi",
["event"] = "SPELL_CAST_START",
["npcID"] = 190368,
},
[335817] = {
["encounterName"] = "Devos, Paragon of Loyalty",
["npcID"] = 162061,
["encounterID"] = 2359,
},
[288719] = {
["encounterName"] = "Lady Jaina Proudmoore",
["npcID"] = 146409,
["encounterID"] = 2281,
},
[356295] = {
["npcID"] = 170257,
},
[448444] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["npcID"] = 221896,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2877,
},
[450492] = {
["encounterName"] = "Zekvir",
["source"] = "Zekvir",
["npcID"] = 225204,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2987,
},
[411585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jalgon Stoutburn",
["npcID"] = 204426,
},
[48191] = {
["encounterName"] = "Frozen Commander",
["source"] = "Horde Ranger",
["isChanneled"] = true,
["encounterID"] = 519,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26801,
},
[228334] = {
["encounterName"] = "Shade of Medivh",
["npcID"] = 114350,
["encounterID"] = 1965,
},
[42723] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["encounterID"] = 2025,
["event"] = "SPELL_CAST_START",
["npcID"] = 23954,
},
[393298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Colossus",
["npcID"] = 188673,
},
[364488] = {
["encounterName"] = "The Jailer",
["npcID"] = 180990,
["encounterID"] = 2537,
},
[276435] = {
["npcID"] = 136499,
},
[458685] = {
["event"] = "SPELL_CAST_START",
["source"] = "Moth'ethk",
["npcID"] = 206203,
},
[226287] = {
["source"] = "Vileshard Chunk",
["event"] = "SPELL_CAST_START",
["npcID"] = 101438,
},
[194547] = {
["source"] = "Yalia Sagewhisper",
["event"] = "SPELL_CAST_START",
["npcID"] = 62825,
},
[42669] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["encounterID"] = 2025,
["event"] = "SPELL_CAST_START",
["npcID"] = 23954,
},
[188404] = {
["encounterName"] = "Hymdall",
["source"] = "Storm Drake",
["npcID"] = 97788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1805,
},
[214001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Lancer",
["npcID"] = 102095,
},
[462782] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Defense Turret",
["npcID"] = 229678,
},
[51586] = {
["source"] = "Dragonflayer Spiritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 28410,
},
[51587] = {
["source"] = "Dragonflayer Spiritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 28410,
},
[129534] = {
["source"] = "Mo Mo",
["event"] = "SPELL_CAST_START",
["npcID"] = 59805,
},
[404526] = {
["source"] = "Baine Bloodhoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 203204,
},
[241788] = {
["npcID"] = 114632,
},
[55077] = {
["source"] = "Savage Worg",
["event"] = "SPELL_CAST_START",
["npcID"] = 29735,
},
[59389] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Prince Keleseth",
["encounterID"] = 2026,
["event"] = "SPELL_CAST_START",
["npcID"] = 23953,
},
[372683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infused Whelp",
["npcID"] = 187894,
},
[276439] = {
["encounterName"] = "Vectis",
["npcID"] = 134442,
["encounterID"] = 2134,
},
[59685] = {
["source"] = "Dragonflayer Strategist",
["event"] = "SPELL_CAST_START",
["npcID"] = 23956,
},
[378827] = {
["source"] = "Qalashi Plunderer",
["event"] = "SPELL_CAST_START",
["npcID"] = 192786,
},
[323538] = {
["encounterName"] = "High Adjudicator Aleez",
["npcID"] = 165410,
["encounterID"] = 2403,
},
[407496] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[376780] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["encounterID"] = 2611,
["event"] = "SPELL_CAST_START",
["npcID"] = 189901,
},
[214003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Swordsman",
["npcID"] = 102094,
},
[446404] = {
["source"] = "Summoned Visage",
["event"] = "SPELL_CAST_START",
["npcID"] = 213686,
},
[15043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yu'lon Adept",
["npcID"] = 57316,
},
[60227] = {
["source"] = "Dragonflayer Strategist",
["event"] = "SPELL_CAST_START",
["npcID"] = 23956,
},
[136189] = {
["encounterName"] = "Council of Elders",
["source"] = "Sul the Sandcrawler",
["npcID"] = 69078,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[405450] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hungry Rock Snail",
["npcID"] = 203260,
},
[59696] = {
["source"] = "Proto-Drake Handler",
["event"] = "SPELL_CAST_START",
["npcID"] = 24082,
},
[417737] = {
["source"] = "Klaxxi Amber Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 207918,
},
[387021] = {
["source"] = "Agitated Essence",
["event"] = "SPELL_CAST_START",
["npcID"] = 192238,
},
[405812] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["npcID"] = 202375,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2689,
},
[374735] = {
["source"] = "Flamecaller Aymi",
["event"] = "SPELL_CAST_START",
["npcID"] = 190368,
},
[58967] = {
["source"] = "Drakkari Battle Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 29836,
},
[58966] = {
["source"] = "Drakkari Battle Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 29836,
},
[356306] = {
["npcID"] = 182214,
},
[391118] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalebane Lieutenant",
["npcID"] = 191739,
},
[315076] = {
["npcID"] = 161388,
},
[378832] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistyvale Mauler",
["npcID"] = 193948,
},
[326836] = {
["npcID"] = 162039,
},
[325591] = {
["npcID"] = 166863,
},
[192504] = {
["encounterName"] = "Tirathon Saltheril",
["source"] = "Tirathon Saltheril",
["encounterID"] = 1815,
["event"] = "SPELL_CAST_START",
["npcID"] = 95885,
},
[331044] = {
["npcID"] = 170860,
},
[323544] = {
["encounterName"] = "Hakkar, the Soulflayer",
["encounterID"] = 2395,
["npcID"] = 165905,
},
[440266] = {
["source"] = "Duskborn Darkhound",
["event"] = "SPELL_CAST_START",
["npcID"] = 229170,
},
[450505] = {
["encounterName"] = "Zekvir",
["source"] = "Zekvir",
["npcID"] = 225204,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2987,
},
[156669] = {
["encounterName"] = "The Iron Maidens",
["source"] = "Admiral Gar'an",
["encounterID"] = 1695,
["event"] = "SPELL_CAST_START",
["npcID"] = 77557,
},
[228700] = {
["npcID"] = 114338,
},
[116226] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slingtail Stickypaw",
["npcID"] = 55110,
},
[384978] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[378835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Rotflinger",
["npcID"] = 186362,
},
[266209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Deathspeaker",
["npcID"] = 134284,
},
[366549] = {
["npcID"] = 185154,
},
[401361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Towering Deepstrider",
["npcID"] = 203786,
},
[400077] = {
["source"] = "Deeplung Glowsplasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 204013,
},
[428695] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[341977] = {
["npcID"] = 170690,
},
[401362] = {
["event"] = "SPELL_CAST_START",
["source"] = "Half-bound Rageflame",
["npcID"] = 203699,
},
[59146] = {
["source"] = "Drakkari God Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 29820,
},
[257063] = {
["source"] = "Irontide Waveshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 129370,
},
[333787] = {
["npcID"] = 168934,
},
[450509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Captain",
["npcID"] = 216584,
},
[2602] = {
["encounterName"] = "Ancient Stone Keeper",
["source"] = "Earthen Sculptor",
["npcID"] = 7012,
["event"] = "SPELL_CAST_START",
["encounterID"] = 551,
},
[115506] = {
["source"] = "Scarlet Flamethrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 59705,
},
[75272] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["npcID"] = 39665,
["encounterID"] = 1040,
},
[458610] = {
["event"] = "SPELL_CAST_START",
["source"] = "Toadstomper",
["npcID"] = 207803,
},
[127422] = {
["source"] = "Jade Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 65169,
},
[372696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Juggernaut",
["npcID"] = 188244,
},
[456654] = {
["source"] = "Deathbound Husk",
["event"] = "SPELL_CAST_START",
["npcID"] = 220272,
},
[327646] = {
["encounterName"] = "Mueh'zala",
["encounterID"] = 2396,
["npcID"] = 166608,
},
[448057] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["npcID"] = 40484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1049,
},
[446416] = {
["event"] = "SPELL_CAST_START",
["source"] = "Honey-fused Droplet",
["npcID"] = 213697,
},
[142338] = {
["source"] = "Kor'kron Dark Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 71245,
},
[417748] = {
["source"] = "Klaxxi Blade Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 207922,
},
[226296] = {
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 91000,
},
[331743] = {
["npcID"] = 166276,
},
[456656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rabaan",
["npcID"] = 228343,
},
[327648] = {
["npcID"] = 168418,
},
[329171] = {
["encounterName"] = "Lord Chamberlain",
["npcID"] = 165737,
["encounterID"] = 2381,
},
[452133] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackblood Coalescence",
["npcID"] = 215205,
},
[41169] = {
["source"] = "Illidari Heartseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 23339,
},
[401368] = {
["source"] = "Volcanic Deepstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 200808,
},
[378843] = {
["npcID"] = 191713,
},
[446419] = {
["source"] = "Summoned Visage",
["event"] = "SPELL_CAST_START",
["npcID"] = 213686,
},
[446253] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Congealed Mass",
["npcID"] = 222461,
},
[360414] = {
["encounterName"] = "Vigilant Guardian",
["npcID"] = 180773,
["encounterID"] = 2512,
},
[452035] = {
["source"] = "Tempest Wolf",
["event"] = "SPELL_CAST_START",
["npcID"] = 222797,
},
[372701] = {
["encounterName"] = "Sentinel Talondras",
["npcID"] = 184124,
["encounterID"] = 2557,
},
[122784] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber-Shaper Un'sok",
["encounterID"] = 1499,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62511,
},
[401370] = {
["source"] = "Raging Owlbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 205316,
},
[40904] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[458325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venombite",
["npcID"] = 227632,
},
[366559] = {
["npcID"] = 185154,
},
[125311] = {
["source"] = "Scritch",
["event"] = "SPELL_CAST_START",
["npcID"] = 50831,
},
[387037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Revenant",
["npcID"] = 195917,
},
[159481] = {
["source"] = "Iron Gunnery Sergeant",
["event"] = "SPELL_CAST_START",
["npcID"] = 81318,
},
[325605] = {
["npcID"] = 170087,
},
[382410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trickclaw Mystic",
["npcID"] = 185528,
},
[378847] = {
["source"] = "Qalashi Spinecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 192787,
},
[178177] = {
["source"] = "Iron Flametwister",
["event"] = "SPELL_CAST_START",
["npcID"] = 80676,
},
[458397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kas'dru",
["npcID"] = 227635,
},
[401373] = {
["source"] = "Raging Owlbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 205316,
},
[387039] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Brute",
["npcID"] = 187299,
},
[307177] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Ritualist",
["npcID"] = 162716,
},
[402887] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gholna",
["npcID"] = 199853,
},
[327655] = {
["npcID"] = 168420,
},
[329703] = {
["npcID"] = 167464,
},
[421852] = {
["source"] = "Ashen Gladehart Buck",
["event"] = "SPELL_CAST_START",
["npcID"] = 213781,
},
[391136] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakonid Breaker",
["npcID"] = 187240,
},
[319465] = {
["npcID"] = 164184,
},
[378850] = {
["source"] = "Destabilized Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 181536,
},
[415492] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[458369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kas'dru",
["npcID"] = 227635,
},
[446079] = {
["encounterName"] = "Leviathan Caller",
["source"] = "Leviathan Caller",
["npcID"] = 220738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3002,
},
[130495] = {
["source"] = "Thunder Hold Sharp-Shooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 66288,
},
[39670] = {
["source"] = "Illidari Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 22853,
},
[448147] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Chamber Guardian",
["npcID"] = 223204,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[417759] = {
["source"] = "Klaxxi Amber Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 207918,
},
[329706] = {
["npcID"] = 182293,
},
[458452] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reekscale",
["npcID"] = 221076,
},
[366566] = {
["npcID"] = 184910,
},
[341796] = {
["npcID"] = 165066,
},
[329707] = {
["npcID"] = 158290,
},
[458311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venombite",
["npcID"] = 227632,
},
[114183] = {
["source"] = "Scarlet Scholar",
["event"] = "SPELL_CAST_START",
["npcID"] = 59372,
},
[374720] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2582,
},
[387045] = {
["source"] = "Ezrigeth",
["event"] = "SPELL_CAST_START",
["npcID"] = 187666,
},
[372711] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brackenhide Shaper",
["npcID"] = 186220,
},
[413123] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Kraglin",
["npcID"] = 201625,
},
[160772] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mereldar Citizen",
["npcID"] = 225601,
},
[335308] = {
["npcID"] = 171799,
},
[374215] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[440288] = {
["source"] = "Duskborn Darkhound",
["event"] = "SPELL_CAST_START",
["npcID"] = 229170,
},
[417763] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord Mechagon",
["npcID"] = 205309,
},
[444363] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "The Bloodbound Horror",
["npcID"] = 214502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[450129] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[131968] = {
["source"] = "Sik'thik Battle-Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 67093,
},
[401382] = {
["source"] = "Past Self",
["event"] = "SPELL_CAST_START",
["npcID"] = 185800,
},
[226304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vileshard Hulk",
["npcID"] = 91000,
},
[389096] = {
["source"] = "Alia Sunsoar",
["event"] = "SPELL_CAST_START",
["npcID"] = 196737,
},
[444023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Experiment",
["npcID"] = 221537,
},
[327664] = {
["encounterName"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["npcID"] = 162689,
},
[395240] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enkine the Voracious",
["npcID"] = 193134,
},
[129917] = {
["source"] = "Student of Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 60601,
},
[399336] = {
["source"] = "Tarasek Frostclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 201035,
},
[376811] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[395241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Voltweaver",
["npcID"] = 198868,
},
[389098] = {
["source"] = "Alia Sunsoar",
["event"] = "SPELL_CAST_START",
["npcID"] = 196737,
},
[366573] = {
["npcID"] = 185154,
},
[401385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carcaxas",
["npcID"] = 202836,
},
[329163] = {
["npcID"] = 168837,
},
[438245] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["npcID"] = 217748,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[374765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feasting Buzzard",
["npcID"] = 190960,
},
[325360] = {
["encounterName"] = "Grand Proctor Beryllia",
["npcID"] = 162102,
["encounterID"] = 2362,
},
[201733] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[137229] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["npcID"] = 68081,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1559,
},
[114185] = {
["isChanneled"] = true,
["source"] = "Scarlet Scholar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59372,
},
[385005] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rustpine Rager",
["npcID"] = 187405,
},
[362480] = {
["npcID"] = 182322,
},
[389101] = {
["source"] = "Alia Sunsoar",
["event"] = "SPELL_CAST_START",
["npcID"] = 196737,
},
[446086] = {
["source"] = "Sureki Unnaturaler",
["event"] = "SPELL_CAST_START",
["npcID"] = 216339,
},
[15620] = {
["npcID"] = 18965,
},
[387054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brinetooth Hunter",
["npcID"] = 187281,
},
[137230] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["npcID"] = 68081,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1559,
},
[388716] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[102411] = {
["npcID"] = 54693,
},
[456649] = {
["source"] = "Deathbound Husk",
["event"] = "SPELL_CAST_START",
["npcID"] = 220272,
},
[335305] = {
["npcID"] = 171799,
},
[166923] = {
["npcID"] = 81603,
},
[409581] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whisper in the Dark",
["npcID"] = 203806,
},
[272382] = {
["npcID"] = 182820,
},
[438218] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[259817] = {
["npcID"] = 159022,
},
[131088] = {
["source"] = "Mistblade Scale-Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 63179,
},
[436203] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[141327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Fizzboil",
["npcID"] = 71330,
},
[407535] = {
["source"] = "Horde Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 203861,
},
[445949] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Silkbow",
["npcID"] = 222273,
},
[116606] = {
["isChanneled"] = true,
["source"] = "Stone Quilen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60375,
},
[76815] = {
["npcID"] = 41096,
},
[257882] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "Hadal Darkfathom",
["encounterID"] = 2099,
["event"] = "SPELL_CAST_START",
["npcID"] = 128651,
},
[131089] = {
["source"] = "Koukou",
["event"] = "SPELL_CAST_START",
["npcID"] = 66213,
},
[436205] = {
["source"] = "Unstable Test Subject",
["event"] = "SPELL_CAST_START",
["npcID"] = 216328,
},
[462826] = {
["source"] = "Explosive Bomberbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 229706,
},
[448492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guard Captain Suleyman",
["npcID"] = 212826,
},
[129033] = {
["isChanneled"] = true,
["source"] = "Yalia Sagewhisper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62825,
},
[445882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Night-Twisted Hog",
["npcID"] = 215206,
},
[366409] = {
["npcID"] = 184908,
},
[353783] = {
["encounterName"] = "Myza's Oasis",
["npcID"] = 176565,
["encounterID"] = 2440,
},
[131090] = {
["source"] = "Koukou",
["event"] = "SPELL_CAST_START",
["npcID"] = 66213,
},
[354297] = {
["npcID"] = 180431,
},
[405491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Riches",
["npcID"] = 201573,
},
[207881] = {
["encounterName"] = "Talixae Flamewreath",
["encounterID"] = 1869,
["npcID"] = 104217,
},
[438153] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nether Phantom",
["npcID"] = 218429,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[129916] = {
["source"] = "Siftworm",
["event"] = "SPELL_CAST_START",
["npcID"] = 65711,
},
[405492] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[391158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tomnu",
["npcID"] = 193722,
},
[131091] = {
["source"] = "Corporal Jackson Silver",
["event"] = "SPELL_CAST_START",
["npcID"] = 65881,
},
[395254] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Tempestmaker",
["npcID"] = 198878,
},
[452024] = {
["source"] = "Earthenwork Ironstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 213951,
},
[399069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Tidelord",
["npcID"] = 200488,
},
[129034] = {
["isChanneled"] = true,
["source"] = "Snagtooth Tool-Grabber",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56185,
},
[329727] = {
["npcID"] = 159151,
},
[372730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Juggernaut",
["npcID"] = 188244,
},
[444172] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Xur'khun the Defiled",
["npcID"] = 221845,
},
[417781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord Mechagon",
["npcID"] = 205309,
},
[442210] = {
["encounterName"] = "Anub'zekt",
["source"] = "Bloodstained Webmage",
["encounterID"] = 2906,
["event"] = "SPELL_CAST_START",
["npcID"] = 220599,
},
[337349] = {
["npcID"] = 159459,
},
[134164] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Sentinel",
["npcID"] = 67900,
},
[376827] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[288774] = {
["isChanneled"] = true,
["source"] = "Malfunctioning Pylon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229739,
},
[348159] = {
["encounterName"] = "Doctor Ickus",
["encounterID"] = 2384,
["npcID"] = 164967,
},
[407544] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[425974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Infused Golem",
["npcID"] = 210109,
},
[387067] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten Creation",
["npcID"] = 193214,
},
[348160] = {
["encounterName"] = "Doctor Ickus",
["encounterID"] = 2384,
["npcID"] = 164967,
},
[440184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chitin Knight",
["npcID"] = 219725,
},
[376829] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[170738] = {
["event"] = "SPELL_CAST_START",
["source"] = "Undermage Kesalon",
["npcID"] = 85496,
},
[448384] = {
["source"] = "Flamekeeper Graz",
["event"] = "SPELL_CAST_START",
["npcID"] = 219279,
},
[333827] = {
["npcID"] = 167533,
},
[325361] = {
["encounterName"] = "Artificer Xy'mox",
["npcID"] = 166644,
["encounterID"] = 2405,
},
[116711] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["encounterID"] = 1390,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60009,
},
[372735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 187969,
},
[432120] = {
["source"] = "Overlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 228575,
},
[398780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Myrmidon",
["npcID"] = 200485,
},
[439789] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[227339] = {
["encounterName"] = "Attumen the Huntsman",
["npcID"] = 114264,
["encounterID"] = 1960,
},
[205549] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["encounterID"] = 1792,
["event"] = "SPELL_CAST_START",
["npcID"] = 91005,
},
[409018] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Prototype",
["npcID"] = 203927,
},
[411644] = {
["source"] = "Time-Lost Tidehunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 205365,
},
[458582] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Darkblade",
["npcID"] = 222274,
},
[154623] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Spirit-Tender",
["npcID"] = 77131,
},
[385024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Salty Salamander",
["npcID"] = 188027,
},
[190313] = {
["encounterName"] = "Archimonde",
["source"] = "Archimonde",
["npcID"] = 91331,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1799,
},
[89105] = {
["npcID"] = 45704,
},
[456696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Brute",
["npcID"] = 224152,
},
[231436] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfallen Rebel",
["npcID"] = 114931,
},
[275913] = {
["npcID"] = 140853,
},
[339975] = {
["npcID"] = 173609,
},
[446255] = {
["event"] = "SPELL_CAST_START",
["source"] = "Congealing Mass",
["npcID"] = 222459,
},
[393217] = {
["source"] = "Blazing Inferno",
["event"] = "SPELL_CAST_START",
["npcID"] = 189043,
},
[439811] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[227341] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114251,
["encounterID"] = 1957,
},
[407552] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[458746] = {
["source"] = "Remembered Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 224157,
},
[448155] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Abomination",
["npcID"] = 219454,
},
[307213] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["npcID"] = 157254,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2333,
},
[374789] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[185156] = {
["encounterName"] = "Hellfire Assault",
["source"] = "Gorebound Siegerider",
["npcID"] = 92916,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1778,
},
[272402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cutwater Knife Juggler",
["npcID"] = 129599,
},
[153623] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[146456] = {
["source"] = "Goro'dan",
["event"] = "SPELL_CAST_START",
["npcID"] = 72964,
},
[385029] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fleshripper Vulture",
["npcID"] = 186246,
},
[444414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blight Swarmer",
["npcID"] = 221669,
},
[372743] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[117628] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Zian of the Endless Shadow",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60701,
},
[143385] = {
["encounterName"] = "Siegecrafter Blackfuse",
["source"] = "Siegecrafter Blackfuse",
["encounterID"] = 1601,
["event"] = "SPELL_CAST_START",
["npcID"] = 71504,
},
[337344] = {
["npcID"] = 159459,
},
[76820] = {
["npcID"] = 41096,
},
[456702] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Blight",
["npcID"] = 220273,
},
[425397] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208459,
},
[164887] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Mender",
["npcID"] = 81820,
},
[436200] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[191508] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Aspirant",
["npcID"] = 101637,
},
[404919] = {
["source"] = "Shukoro Rapidstamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 198917,
},
[362507] = {
["npcID"] = 182690,
},
[130062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjunct Zet'uk",
["npcID"] = 65478,
},
[333839] = {
["npcID"] = 167534,
},
[394680] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reclaimer Makko",
["npcID"] = 191536,
},
[313362] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["npcID"] = 157439,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2337,
},
[448230] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Titan Orb",
["npcID"] = 221730,
},
[191509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hill Ettin",
["npcID"] = 102886,
},
[319506] = {
["npcID"] = 164232,
},
[395273] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Stormsentry",
["npcID"] = 196856,
},
[470587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Witherer",
["npcID"] = 214251,
},
[448515] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["npcID"] = 211290,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[448213] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[387083] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Briarback",
["npcID"] = 187264,
},
[274002] = {
["encounterName"] = "Chopper Redhook",
["source"] = "Chopper Redhook",
["encounterID"] = 2098,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128650,
},
[374797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windblessed Ohuna",
["npcID"] = 188088,
},
[385036] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Galesinger",
["npcID"] = 190373,
},
[80344] = {
["npcID"] = 43014,
},
[450045] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[432135] = {
["source"] = "Candlelit Pebblemaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 218658,
},
[106514] = {
["isChanneled"] = true,
["source"] = "Shan'ze Spiritclaw",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56596,
},
[198379] = {
["encounterName"] = "Archdruid Glaidalis",
["npcID"] = 96512,
["encounterID"] = 1836,
},
[61964] = {
["npcID"] = 32886,
},
[452099] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Animated Shadow",
["npcID"] = 224616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[124944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjunct Ikkess",
["npcID"] = 62074,
},
[444000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Woven Threadmancer",
["npcID"] = 218317,
},
[421898] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[333845] = {
["npcID"] = 167534,
},
[409612] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whisper in the Dark",
["npcID"] = 203806,
},
[415406] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[141342] = {
["source"] = "Grit",
["event"] = "SPELL_CAST_START",
["npcID"] = 70605,
},
[456711] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Lavabender",
["npcID"] = 224249,
},
[450568] = {
["encounterName"] = "Zekvir",
["source"] = "Zekvir",
["npcID"] = 225204,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2987,
},
[325413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spinemaw Acidgullet",
["npcID"] = 167113,
},
[323608] = {
["encounterName"] = "Mordretha",
["npcID"] = 165946,
["encounterID"] = 2404,
},
[361913] = {
["encounterName"] = "Lords of Dread",
["encounterID"] = 2543,
["npcID"] = 181398,
},
[366336] = {
["npcID"] = 183927,
},
[452162] = {
["source"] = "Covert Webmancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 223844,
},
[462856] = {
["source"] = "Nullbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 229729,
},
[456713] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Lavabender",
["npcID"] = 224249,
},
[376851] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[458228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sakret'na",
["npcID"] = 215841,
},
[339992] = {
["npcID"] = 173609,
},
[17290] = {
["source"] = "Hellfire Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 17477,
},
[368661] = {
["npcID"] = 179386,
},
[387091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Sunseeker",
["npcID"] = 187239,
},
[452013] = {
["source"] = "Tempest Wolf",
["event"] = "SPELL_CAST_START",
["npcID"] = 222797,
},
[391187] = {
["source"] = "Bisquius",
["event"] = "SPELL_CAST_START",
["npcID"] = 197557,
},
[368662] = {
["npcID"] = 180015,
},
[321564] = {
["npcID"] = 165829,
},
[462859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fervent Sharpshooter",
["npcID"] = 206694,
},
[228374] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kvaldir Reefcaller",
["npcID"] = 114539,
},
[360472] = {
["npcID"] = 178803,
},
[395284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Groffnar",
["npcID"] = 201537,
},
[61965] = {
["npcID"] = 32886,
},
[301088] = {
["npcID"] = 151657,
},
[385046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skulking Gutstabber",
["npcID"] = 186242,
},
[425392] = {
["source"] = "Flamewaker Infernoguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 210295,
},
[430097] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[458767] = {
["isChanneled"] = true,
["source"] = "Ravageant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207826,
},
[9734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Prisoner",
["npcID"] = 24255,
},
[413105] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["encounterID"] = 2666,
["event"] = "SPELL_CAST_START",
["npcID"] = 198995,
},
[452094] = {
["source"] = "Obstorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 217082,
},
[448528] = {
["source"] = "Spitfire Fusetender",
["event"] = "SPELL_CAST_START",
["npcID"] = 211777,
},
[79896] = {
["npcID"] = 184079,
},
[259092] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Stormcaller",
["npcID"] = 126919,
},
[409009] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summitshaper Lorac",
["npcID"] = 201522,
},
[388688] = {
["source"] = "Garlic-Breathed Hydra",
["event"] = "SPELL_CAST_START",
["npcID"] = 224751,
},
[450330] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["encounterID"] = 2894,
["event"] = "SPELL_CAST_START",
["npcID"] = 214263,
},
[189469] = {
["source"] = "Spirit of Vengeance",
["event"] = "SPELL_CAST_START",
["npcID"] = 100364,
},
[456351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boneseer Hookjaw",
["npcID"] = 213805,
},
[378413] = {
["source"] = "Water Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 191111,
},
[200732] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[316859] = {
["npcID"] = 174843,
},
[117780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Longfang Howler",
["npcID"] = 56524,
},
[440205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anguishing Nightmare",
["npcID"] = 214415,
},
[376860] = {
["npcID"] = 186854,
},
[195473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gritslime Snail",
["npcID"] = 91786,
},
[397338] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Tectonic Crusher",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 190588,
},
[391195] = {
["source"] = "Bisquius",
["event"] = "SPELL_CAST_START",
["npcID"] = 197557,
},
[444408] = {
["encounterName"] = "Reformed Fury",
["source"] = "Speaker Davenruth",
["npcID"] = 218022,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2998,
},
[462686] = {
["source"] = "Reno Jackson",
["event"] = "SPELL_CAST_START",
["npcID"] = 228044,
},
[121876] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Sra'thik Amber-Trapper",
["encounterID"] = 1498,
["event"] = "SPELL_CAST_START",
["npcID"] = 62405,
},
[415769] = {
["source"] = "Coalesced Time",
["event"] = "SPELL_CAST_START",
["npcID"] = 206140,
},
[388529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seabreaker Skrog",
["npcID"] = 192931,
},
[428019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Wicklighter",
["npcID"] = 210812,
},
[413544] = {
["source"] = "Timestream Anomaly",
["event"] = "SPELL_CAST_START",
["npcID"] = 199749,
},
[415770] = {
["source"] = "Coalesced Time",
["event"] = "SPELL_CAST_START",
["npcID"] = 206140,
},
[124948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjunct Ikkess",
["npcID"] = 62074,
},
[431702] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colormancer Nirethi",
["npcID"] = 222150,
},
[397341] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[391198] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tserasor the Preserver",
["npcID"] = 190598,
},
[208685] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Dominator Tentacle",
["encounterID"] = 1873,
["event"] = "SPELL_CAST_START",
["npcID"] = 105304,
},
[439857] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Whisperer",
["npcID"] = 219723,
},
[266286] = {
["source"] = "Sewer Vicejaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 134896,
},
[120213] = {
["isChanneled"] = true,
["source"] = "Big Gladiator Chief",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60170,
},
[376865] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[220934] = {
["source"] = "Azerite Manifestation",
["event"] = "SPELL_CAST_START",
["npcID"] = 222670,
},
[419798] = {
["source"] = "Druid of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 210686,
},
[415773] = {
["source"] = "Interval",
["event"] = "SPELL_CAST_START",
["npcID"] = 206065,
},
[438012] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[366629] = {
["npcID"] = 185155,
},
[452205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggregation of Horrors",
["npcID"] = 220999,
},
[432156] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxtail Outrider",
["npcID"] = 213095,
},
[124949] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjunct Ikkess",
["npcID"] = 62074,
},
[288814] = {
["npcID"] = 147830,
},
[274480] = {
["npcID"] = 139842,
},
[171044] = {
["npcID"] = 88512,
},
[329770] = {
["encounterName"] = "Artificer Xy'mox",
["npcID"] = 166644,
["encounterID"] = 2405,
},
[288815] = {
["npcID"] = 147830,
},
[189227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crawliac Cinderwitch",
["npcID"] = 95174,
},
[454438] = {
["source"] = "Ashvane Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 128969,
},
[393251] = {
["source"] = "Frenzied Grovetalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 187507,
},
[395299] = {
["source"] = "Spellforged Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 194402,
},
[456101] = {
["source"] = "Reconstructed Skardyn",
["event"] = "SPELL_CAST_START",
["npcID"] = 219245,
},
[391204] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uurtus",
["npcID"] = 193724,
},
[436180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampant Air Elemental",
["npcID"] = 215048,
},
[115065] = {
["source"] = "Prophète de la boue queutapulte",
["event"] = "SPELL_CAST_START",
["npcID"] = 55193,
},
[340011] = {
["npcID"] = 173613,
},
[374823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Squallbringer Cyraz",
["npcID"] = 190370,
},
[409635] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[368047] = {
["npcID"] = 178508,
},
[207906] = {
["encounterName"] = "Talixae Flamewreath",
["encounterID"] = 1869,
["npcID"] = 104217,
},
[366633] = {
["npcID"] = 185155,
},
[385063] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Cinderweaver",
["npcID"] = 190207,
},
[329774] = {
["encounterName"] = "Hungering Destroyer",
["npcID"] = 164261,
["encounterID"] = 2383,
},
[389159] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[456735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aquellion",
["npcID"] = 220274,
},
[433662] = {
["isChanneled"] = true,
["source"] = "Black Blood",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216856,
},
[444449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fervent Sharpshooter",
["npcID"] = 206694,
},
[448269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Foreseer Xix'amon",
["npcID"] = 215435,
},
[294327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enforcer Malzon",
["npcID"] = 147777,
},
[385065] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[284399] = {
["encounterName"] = "Jadefire Masters",
["npcID"] = 146105,
["encounterID"] = 2285,
},
[456295] = {
["source"] = "Aelric Leid",
["event"] = "SPELL_CAST_START",
["npcID"] = 213208,
},
[440107] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216649,
},
[427710] = {
["source"] = "Sporbit",
["event"] = "SPELL_CAST_START",
["npcID"] = 213434,
},
[288822] = {
["npcID"] = 147829,
},
[80382] = {
["source"] = "Explorer's League Digger",
["event"] = "SPELL_CAST_START",
["npcID"] = 38998,
},
[456140] = {
["source"] = "Grimslice",
["event"] = "SPELL_CAST_START",
["npcID"] = 221551,
},
[456346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anguishing Nightmare",
["npcID"] = 214415,
},
[425381] = {
["isChanneled"] = true,
["source"] = "Firelands Flameguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210290,
},
[128023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dread Remora",
["npcID"] = 63353,
},
[370104] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Metalshaper",
["npcID"] = 190767,
},
[393259] = {
["source"] = "Blazing Inferno",
["event"] = "SPELL_CAST_START",
["npcID"] = 189043,
},
[123928] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scar-Shell",
["npcID"] = 63311,
},
[378282] = {
["source"] = "Qalashi Thaumaturge",
["event"] = "SPELL_CAST_START",
["npcID"] = 192788,
},
[333875] = {
["npcID"] = 168942,
},
[139309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muckbat",
["npcID"] = 70232,
},
[294324] = {
["npcID"] = 144293,
},
[340019] = {
["npcID"] = 173604,
},
[191527] = {
["source"] = "Blade Dancer Illianna",
["event"] = "SPELL_CAST_START",
["npcID"] = 96657,
},
[333231] = {
["encounterName"] = "An Affront of Challengers",
["npcID"] = 164461,
["encounterID"] = 2391,
},
[442250] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Blood Parasite",
["npcID"] = 220626,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2919,
},
[227363] = {
["encounterName"] = "Attumen the Huntsman",
["npcID"] = 114264,
["encounterID"] = 1960,
},
[276540] = {
["npcID"] = 136499,
},
[442408] = {
["source"] = "Memory of Turalyon",
["event"] = "SPELL_CAST_START",
["npcID"] = 214649,
},
[164907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reanimated Ritual Bones",
["npcID"] = 75715,
},
[397358] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[423979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Cursed Crusher",
["npcID"] = 214419,
},
[448441] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorloc Springcaller",
["npcID"] = 218650,
},
[288828] = {
["npcID"] = 147829,
},
[356404] = {
["npcID"] = 180091,
},
[257756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Buccaneer",
["npcID"] = 129527,
},
[139311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotting Scavenger",
["npcID"] = 70224,
},
[448249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Titan Orb",
["npcID"] = 221730,
},
[456748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Proselityzer",
["npcID"] = 224898,
},
[456745] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Proselityzer",
["npcID"] = 224898,
},
[393265] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tombcaller Ganzaya",
["npcID"] = 188509,
},
[387122] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten Creation",
["npcID"] = 193214,
},
[290878] = {
["npcID"] = 146409,
},
[292926] = {
["npcID"] = 151127,
},
[385075] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[156718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Corpse Spider",
["npcID"] = 76104,
},
[356407] = {
["npcID"] = 180091,
},
[110968] = {
["source"] = "Scarlet Purifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 58569,
},
[458795] = {
["source"] = "Ravageant",
["event"] = "SPELL_CAST_START",
["npcID"] = 207826,
},
[172816] = {
["source"] = "Henry Garrick",
["event"] = "SPELL_CAST_START",
["npcID"] = 155197,
},
[113691] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["encounterID"] = 1420,
["event"] = "SPELL_CAST_START",
["npcID"] = 59150,
},
[81439] = {
["npcID"] = 43391,
},
[444145] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frenzied Siege Artillery",
["npcID"] = 224521,
},
[387125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Thunderbeast",
["npcID"] = 195696,
},
[462892] = {
["source"] = "Malfunctioning Pylon",
["event"] = "SPELL_CAST_START",
["npcID"] = 229739,
},
[374839] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["event"] = "SPELL_CAST_START",
["npcID"] = 189478,
},
[456751] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Valiona",
["npcID"] = 40320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[432125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Battlefront Hauler",
["npcID"] = 223789,
},
[310703] = {
["npcID"] = 159459,
},
[228391] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonespeaker Soulbinder",
["npcID"] = 114532,
},
[417843] = {
["source"] = "Listless Nae'dra",
["event"] = "SPELL_CAST_START",
["npcID"] = 211164,
},
[387127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Thunderbeast",
["npcID"] = 195696,
},
[128026] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dread Lurker",
["npcID"] = 62751,
},
[448560] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["npcID"] = 216619,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2907,
},
[456259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candleflyer Captain",
["npcID"] = 220276,
},
[337982] = {
["npcID"] = 162872,
},
[372794] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[81440] = {
["npcID"] = 43391,
},
[442418] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Journalist Ist'iix",
["npcID"] = 226234,
},
[329170] = {
["encounterName"] = "Lord Chamberlain",
["npcID"] = 165737,
["encounterID"] = 2381,
},
[123931] = {
["source"] = "Jol'Grum",
["event"] = "SPELL_CAST_START",
["npcID"] = 63312,
},
[423479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Wicklighter",
["npcID"] = 210812,
},
[124955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjunct Ek'vem",
["npcID"] = 62073,
},
[427869] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2883,
},
[428086] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[440372] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scary Skitterer",
["npcID"] = 216944,
},
[376892] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[272457] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["npcID"] = 131383,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2112,
},
[389179] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[434122] = {
["source"] = "Ascended Neophyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 216326,
},
[450613] = {
["source"] = "Flamekeeper Graz",
["event"] = "SPELL_CAST_START",
["npcID"] = 219279,
},
[400802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kalecgos",
["npcID"] = 187676,
},
[372800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Guardian",
["npcID"] = 187125,
},
[325700] = {
["npcID"] = 165529,
},
[106526] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["encounterID"] = 1418,
["event"] = "SPELL_CAST_START",
["npcID"] = 56448,
},
[440377] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["npcID"] = 217748,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[274507] = {
["encounterName"] = "Council o' Captains",
["source"] = "Bilge Rat Swabby",
["npcID"] = 129526,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[325701] = {
["npcID"] = 165529,
},
[147510] = {
["source"] = "Golganarr",
["event"] = "SPELL_CAST_START",
["npcID"] = 72970,
},
[226347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stoneclaw Hunter",
["npcID"] = 91332,
},
[446519] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shalehorn Impaler",
["npcID"] = 216970,
},
[391230] = {
["source"] = "Bisquius",
["event"] = "SPELL_CAST_START",
["npcID"] = 197557,
},
[448047] = {
["isChanneled"] = true,
["source"] = "Pale Priest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223646,
},
[387135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Arcblade",
["npcID"] = 194898,
},
[331846] = {
["npcID"] = 167964,
},
[183345] = {
["source"] = "Necrodark Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 104888,
},
[319560] = {
["npcID"] = 158054,
},
[444473] = {
["source"] = "Shacklefang Leafnose",
["event"] = "SPELL_CAST_START",
["npcID"] = 223167,
},
[12167] = {
["encounterName"] = "Grimlok",
["source"] = "Grimlok",
["npcID"] = 4854,
["event"] = "SPELL_CAST_START",
["encounterID"] = 553,
},
[81442] = {
["npcID"] = 43391,
},
[139319] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Storm-Caller",
["npcID"] = 70236,
},
[444095] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chieftain Gillcarver",
["npcID"] = 219633,
},
[161509] = {
["source"] = "Mandragora Lifedrinker",
["event"] = "SPELL_CAST_START",
["npcID"] = 80699,
},
[372147] = {
["event"] = "SPELL_CAST_START",
["source"] = "Balara",
["npcID"] = 193457,
},
[456762] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[272464] = {
["npcID"] = 136596,
},
[456438] = {
["source"] = "Cursed Miner",
["event"] = "SPELL_CAST_START",
["npcID"] = 213565,
},
[292942] = {
["npcID"] = 181800,
},
[442428] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[432117] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["encounterID"] = 2901,
["event"] = "SPELL_CAST_START",
["npcID"] = 215407,
},
[115062] = {
["source"] = "Ravageur hozen",
["event"] = "SPELL_CAST_START",
["npcID"] = 57119,
},
[434089] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[208944] = {
["encounterName"] = "Grand Magistrix Elisande",
["source"] = "Elisande",
["npcID"] = 106643,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1872,
},
[423324] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["encounterID"] = 2880,
["event"] = "SPELL_CAST_START",
["npcID"] = 210156,
},
[105504] = {
["event"] = "SPELL_CAST_START",
["source"] = "Miss Fanny",
["npcID"] = 56192,
},
[460595] = {
["source"] = "Irritated Salvager",
["event"] = "SPELL_CAST_START",
["npcID"] = 220471,
},
[452272] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kol Bruncrag",
["npcID"] = 213658,
},
[346186] = {
["npcID"] = 167323,
},
[364616] = {
["npcID"] = 183596,
},
[384416] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[192563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Purifier",
["npcID"] = 97197,
},
[444479] = {
["encounterName"] = "Reformed Fury",
["source"] = "Reformed Fury",
["npcID"] = 218034,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2998,
},
[372808] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[432130] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["encounterID"] = 2901,
["event"] = "SPELL_CAST_START",
["npcID"] = 215407,
},
[442432] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Broodtwister Ovi'nax",
["npcID"] = 214506,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2919,
},
[272469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abyssal Reach",
["npcID"] = 138538,
},
[415356] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarled Lasher",
["npcID"] = 207740,
},
[446474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Congealed Wax-hulk",
["npcID"] = 223206,
},
[417860] = {
["source"] = "Angered Umbraclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 211342,
},
[129566] = {
["source"] = "Bataari Fire-Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 59083,
},
[397383] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["npcID"] = 199703,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[450338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Discordant Hulk",
["npcID"] = 223118,
},
[362572] = {
["npcID"] = 182728,
},
[387145] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormcaller Boroo",
["npcID"] = 194317,
},
[428066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rank Overseer",
["npcID"] = 211121,
},
[450399] = {
["source"] = "Livid Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 227354,
},
[75813] = {
["npcID"] = 40634,
},
[370764] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Fury",
["npcID"] = 196116,
},
[448002] = {
["source"] = "Great Stormfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 216017,
},
[400999] = {
["source"] = "Bonesifter Marwak",
["event"] = "SPELL_CAST_START",
["npcID"] = 200681,
},
[188470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Surging Podling",
["npcID"] = 210210,
},
[173112] = {
["npcID"] = 83762,
},
[356431] = {
["npcID"] = 180113,
},
[456664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rabaan",
["npcID"] = 228343,
},
[401482] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["encounterID"] = 2670,
["event"] = "SPELL_CAST_START",
["npcID"] = 198998,
},
[370766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Thrasher",
["npcID"] = 196117,
},
[446533] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mycotic Shalehorn",
["npcID"] = 212704,
},
[456772] = {
["source"] = "Workmaster Nast",
["event"] = "SPELL_CAST_START",
["npcID"] = 213200,
},
[311382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deresh of the Nothingness",
["npcID"] = 159768,
},
[338003] = {
["npcID"] = 165414,
},
[438343] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[419870] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["npcID"] = 209230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[449941] = {
["source"] = "Emperor Pitfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 219265,
},
[292264] = {
["encounterName"] = "King Mechagon",
["encounterID"] = 2260,
["npcID"] = 144249,
},
[440007] = {
["source"] = "Iron-Runed Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 214576,
},
[209628] = {
["encounterName"] = "Advisor Melandrus",
["encounterID"] = 1870,
["npcID"] = 104218,
},
[391247] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bazual",
["npcID"] = 193532,
},
[387151] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["npcID"] = 186737,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2583,
},
[199389] = {
["encounterName"] = "Dresaron",
["npcID"] = 99200,
["encounterID"] = 1838,
},
[374865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Konkhular",
["npcID"] = 194544,
},
[417868] = {
["source"] = "Angered Umbraclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 211342,
},
[450182] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Mudspawn",
["npcID"] = 219897,
},
[314855] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gryth'ax the Executioner",
["npcID"] = 159224,
},
[456171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimlurk",
["npcID"] = 223091,
},
[448111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diu'mik",
["npcID"] = 211564,
},
[386921] = {
["encounterName"] = "Granyth",
["source"] = "Dragonkiller Lance",
["npcID"] = 194367,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[452314] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kol Bruncrag",
["npcID"] = 213658,
},
[351646] = {
["encounterName"] = "So'leah",
["npcID"] = 177269,
["encounterID"] = 2442,
},
[434252] = {
["source"] = "Nerubian Hauler",
["event"] = "SPELL_CAST_START",
["npcID"] = 217039,
},
[458638] = {
["source"] = "Awakened Flamecoil Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 225895,
},
[228373] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kvaldir Reefcaller",
["npcID"] = 114539,
},
[352345] = {
["encounterName"] = "Timecap'n Hooktail",
["npcID"] = 176178,
["encounterID"] = 2419,
},
[229429] = {
["npcID"] = 115388,
},
[173116] = {
["source"] = "Beremus the Overgrowth",
["event"] = "SPELL_CAST_START",
["npcID"] = 80700,
},
[397394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Thunderfist",
["npcID"] = 193373,
},
[114548] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["npcID"] = 59479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1414,
},
[385108] = {
["source"] = "Restless Podling",
["event"] = "SPELL_CAST_START",
["npcID"] = 187317,
},
[428111] = {
["source"] = "Jani",
["event"] = "SPELL_CAST_START",
["npcID"] = 213536,
},
[341406] = {
["npcID"] = 174012,
},
[456780] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Splash",
["npcID"] = 220275,
},
[450637] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepwalker Guardian",
["npcID"] = 219035,
},
[338011] = {
["npcID"] = 166318,
},
[123938] = {
["source"] = "Bloodthirsty Saurok",
["event"] = "SPELL_CAST_START",
["npcID"] = 63279,
},
[383062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayed Elder",
["npcID"] = 189531,
},
[460609] = {
["source"] = "Livid Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 227354,
},
[428089] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lowly Moleherd",
["npcID"] = 210818,
},
[181089] = {
["encounterName"] = "Tectus, The Living Mountain",
["source"] = "Tectus",
["encounterID"] = 1722,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 78948,
},
[9672] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Frostweaver",
["npcID"] = 66707,
},
[393302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Colossus",
["npcID"] = 188673,
},
[346204] = {
["encounterName"] = "Zo'phex the Sentinel",
["npcID"] = 175616,
["encounterID"] = 2425,
},
[198715] = {
["npcID"] = 100876,
},
[433841] = {
["source"] = "Blood Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 216364,
},
[456653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rabaan",
["npcID"] = 228343,
},
[28301] = {
["source"] = "Mad Scientist",
["event"] = "SPELL_CAST_START",
["npcID"] = 16020,
},
[448248] = {
["source"] = "Bloodstained Webmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 223253,
},
[65301] = {
["encounterName"] = "Yogg-Saron",
["encounterID"] = 1143,
["npcID"] = 33134,
},
[450546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Captain",
["npcID"] = 216584,
},
[321633] = {
["npcID"] = 175605,
},
[141379] = {
["source"] = "Frostmane Bonechiller",
["event"] = "SPELL_CAST_START",
["npcID"] = 70465,
},
[446409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enormous Kelp-Snaggler",
["npcID"] = 221061,
},
[448276] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungarian Sporeflinger",
["npcID"] = 218667,
},
[193597] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[323682] = {
["npcID"] = 163501,
},
[366685] = {
["npcID"] = 185271,
},
[393306] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Earthwarden",
["npcID"] = 193709,
},
[346208] = {
["npcID"] = 177899,
},
[157762] = {
["event"] = "SPELL_CAST_START",
["source"] = "Auchenai Soulpriest",
["npcID"] = 77696,
},
[157534] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Stormcaller",
["npcID"] = 88087,
},
[393307] = {
["event"] = "SPELL_CAST_START",
["source"] = "Living Flame",
["npcID"] = 184693,
},
[446261] = {
["source"] = "Emboldened Fog Wither",
["event"] = "SPELL_CAST_START",
["npcID"] = 219909,
},
[225079] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Defiled Keeper",
["npcID"] = 113089,
},
[456788] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "King Splash",
["npcID"] = 220275,
},
[446325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infected Peafowl",
["npcID"] = 212710,
},
[411738] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rashok",
["npcID"] = 201320,
},
[307303] = {
["npcID"] = 153095,
},
[448599] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hevo'myk",
["npcID"] = 211591,
},
[401500] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[401109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimson Oldblood",
["npcID"] = 201054,
},
[413787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Entropic Hatred",
["npcID"] = 203809,
},
[366689] = {
["npcID"] = 185268,
},
[130417] = {
["source"] = "Thunder Hold Infantryman",
["event"] = "SPELL_CAST_START",
["npcID"] = 66285,
},
[454675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angry Rocks",
["npcID"] = 220543,
},
[430171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wandering Candle",
["npcID"] = 208450,
},
[142406] = {
["source"] = "Kor'kron Emberguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 70798,
},
[120869] = {
["isChanneled"] = true,
["source"] = "Tomb Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60912,
},
[462936] = {
["source"] = "Medbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 229769,
},
[105511] = {
["source"] = "Miss Fanny",
["event"] = "SPELL_CAST_START",
["npcID"] = 56192,
},
[383073] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[452567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oath-Eater",
["npcID"] = 206844,
},
[123429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broketooth Sneaker",
["npcID"] = 60195,
},
[323689] = {
["npcID"] = 171381,
},
[446483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepwater Sludger",
["npcID"] = 216515,
},
[200768] = {
["npcID"] = 95766,
},
[110963] = {
["source"] = "Scarlet Purifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 58569,
},
[329834] = {
["encounterName"] = "Artificer Xy'mox",
["npcID"] = 169267,
["encounterID"] = 2405,
},
[333929] = {
["npcID"] = 171591,
},
[34842] = {
["source"] = "Uncontrolled Voidwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 16975,
},
[452699] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verdant Hulk",
["npcID"] = 215813,
},
[407200] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[374885] = {
["event"] = "SPELL_CAST_START",
["source"] = "Astral Attendant",
["npcID"] = 189555,
},
[376933] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2568,
},
[127412] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unga Scallywag",
["npcID"] = 62590,
},
[394641] = {
["source"] = "Frostfist",
["event"] = "SPELL_CAST_START",
["npcID"] = 192030,
},
[333931] = {
["npcID"] = 171591,
},
[376934] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[388669] = {
["source"] = "Garlic-Breathed Hydra",
["event"] = "SPELL_CAST_START",
["npcID"] = 224751,
},
[372839] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Spearthrower",
["npcID"] = 191570,
},
[333932] = {
["encounterName"] = "Sire Denathrius",
["npcID"] = 169813,
},
[105513] = {
["event"] = "SPELL_CAST_START",
["source"] = "Miss Fanny",
["npcID"] = 56192,
},
[362601] = {
["encounterName"] = "Lihuvim, Principal Architect",
["npcID"] = 182169,
["encounterID"] = 2539,
},
[356458] = {
["npcID"] = 180095,
},
[452171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swarm-Maven Donmiss",
["npcID"] = 216578,
},
[270453] = {
["source"] = "Geolord Grek'og",
["event"] = "SPELL_CAST_START",
["npcID"] = 151091,
},
[329838] = {
["npcID"] = 159027,
},
[198723] = {
["npcID"] = 99358,
},
[342125] = {
["npcID"] = 167538,
},
[295028] = {
["source"] = "Livid Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 220476,
},
[436322] = {
["source"] = "Atik",
["event"] = "SPELL_CAST_START",
["npcID"] = 217533,
},
[430179] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Oracle",
["npcID"] = 214439,
},
[432227] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["encounterID"] = 2901,
["event"] = "SPELL_CAST_START",
["npcID"] = 215407,
},
[417893] = {
["source"] = "Walking Nightmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 206627,
},
[458849] = {
["encounterName"] = "Nerl'athekk the Skulking",
["source"] = "Nerl'athekk the Skulking",
["encounterID"] = 2949,
["event"] = "SPELL_CAST_START",
["npcID"] = 220577,
},
[364652] = {
["encounterName"] = "Lihuvim, Principal Architect",
["npcID"] = 182169,
["encounterID"] = 2539,
},
[239439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eonic Defender",
["npcID"] = 120153,
},
[124967] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["encounterID"] = 1500,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60410,
},
[322968] = {
["npcID"] = 165111,
},
[456746] = {
["source"] = "Workmaster Earwax",
["event"] = "SPELL_CAST_START",
["npcID"] = 213195,
},
[374892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmammoth Calf",
["npcID"] = 180705,
},
[409704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kretchenwrath",
["npcID"] = 201673,
},
[450180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angry Rocks",
["npcID"] = 220543,
},
[440185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rustul Titancap",
["npcID"] = 213115,
},
[383084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Primalist",
["npcID"] = 190066,
},
[432037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sparklit Buttonmasher",
["npcID"] = 212596,
},
[321652] = {
["npcID"] = 175605,
},
[329110] = {
["encounterName"] = "Doctor Ickus",
["encounterID"] = 2384,
["npcID"] = 164967,
},
[333939] = {
["npcID"] = 165206,
},
[295032] = {
["source"] = "Livid Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 220476,
},
[411754] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conduit Guardian",
["npcID"] = 205478,
},
[186274] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Reaver",
["npcID"] = 90284,
},
[360562] = {
["encounterName"] = "The Jailer",
["npcID"] = 180990,
["encounterID"] = 2537,
},
[458853] = {
["encounterName"] = "Nerl'athekk the Skulking",
["source"] = "Nerl'athekk the Skulking",
["encounterID"] = 2949,
["event"] = "SPELL_CAST_START",
["npcID"] = 220577,
},
[411755] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conduit Guardian",
["npcID"] = 205478,
},
[431697] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Eradicator",
["npcID"] = 225408,
},
[301177] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["npcID"] = 150190,
["encounterID"] = 2291,
},
[434281] = {
["event"] = "SPELL_CAST_START",
["source"] = "Weeping Shade",
["npcID"] = 217268,
},
[311084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maddened Conscript",
["npcID"] = 159305,
},
[431714] = {
["source"] = "Dark Apothecary",
["event"] = "SPELL_CAST_START",
["npcID"] = 219651,
},
[448616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hevo'myk",
["npcID"] = 211591,
},
[423305] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[396684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dismay Fly",
["npcID"] = 193367,
},
[427609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arathi Knight",
["npcID"] = 206696,
},
[374898] = {
["event"] = "SPELL_CAST_START",
["source"] = "Old Arbhog",
["npcID"] = 196897,
},
[385137] = {
["source"] = "Basrikron",
["event"] = "SPELL_CAST_START",
["npcID"] = 193535,
},
[403567] = {
["source"] = "Warden Entrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 200960,
},
[372851] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[342135] = {
["npcID"] = 162744,
},
[75823] = {
["encounterName"] = "Corla, Herald of Twilight",
["npcID"] = 39679,
["encounterID"] = 1038,
},
[395377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thondrozus",
["npcID"] = 192769,
},
[225042] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Feeler",
["npcID"] = 113088,
},
[146511] = {
["source"] = "Sra'thik Amber-Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 72929,
},
[170028] = {
["encounterName"] = "Yalnu",
["source"] = "Lady Baihu",
["npcID"] = 84358,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[43291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Berserker",
["npcID"] = 24216,
},
[450197] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skittering Swarmer",
["npcID"] = 208245,
},
[142416] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Iyyokuk the Lucid",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71160,
},
[228171] = {
["encounterName"] = "Odyn",
["source"] = "Hymdall",
["npcID"] = 114361,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1958,
},
[129577] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korjan Slavemaster",
["npcID"] = 65638,
},
[321240] = {
["encounterName"] = "Tunk",
["source"] = "Tunk",
["encounterID"] = 2325,
["event"] = "SPELL_CAST_START",
["npcID"] = 157300,
},
[51901] = {
["source"] = "Emerald Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 27254,
},
[385141] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Galesinger",
["npcID"] = 190373,
},
[387189] = {
["source"] = "Freed Dracthyr",
["event"] = "SPELL_CAST_START",
["npcID"] = 201086,
},
[392692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Quilboar",
["npcID"] = 221743,
},
[342139] = {
["npcID"] = 167538,
},
[360569] = {
["npcID"] = 180930,
},
[362617] = {
["encounterName"] = "The Jailer",
["npcID"] = 180990,
["encounterID"] = 2537,
},
[153680] = {
["encounterName"] = "Bonemaw",
["source"] = "Bonemaw",
["npcID"] = 75452,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1679,
},
[66532] = {
["source"] = "Recalled Lord Jaraxxus",
["event"] = "SPELL_CAST_START",
["npcID"] = 221861,
},
[440181] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boskroot Brute",
["npcID"] = 212736,
},
[387191] = {
["source"] = "Strunraan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193534,
},
[364666] = {
["npcID"] = 178563,
},
[432113] = {
["source"] = "Overlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 228575,
},
[135251] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["npcID"] = 67977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1565,
},
[417675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Meantron 7000",
["npcID"] = 206131,
},
[372858] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2606,
},
[417386] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valhalas Vargul",
["npcID"] = 207804,
},
[385145] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Raptor",
["npcID"] = 187256,
},
[173135] = {
["npcID"] = 83578,
},
[28299] = {
["encounterName"] = "Thaddius",
["source"] = "Thaddius",
["encounterID"] = 1120,
["event"] = "SPELL_CAST_START",
["npcID"] = 15928,
},
[366716] = {
["npcID"] = 185274,
},
[432127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kix'arak",
["npcID"] = 224710,
},
[403576] = {
["source"] = "Warden Entrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 200960,
},
[389242] = {
["source"] = "Stormed Blackpaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 193827,
},
[372107] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[452169] = {
["source"] = "Queensguard Zirix",
["event"] = "SPELL_CAST_START",
["npcID"] = 211858,
},
[428150] = {
["source"] = "High Priest Aemya",
["event"] = "SPELL_CAST_START",
["npcID"] = 212827,
},
[458867] = {
["encounterName"] = "Nerl'athekk the Skulking",
["source"] = "Nerl'athekk the Skulking",
["encounterID"] = 2949,
["event"] = "SPELL_CAST_START",
["npcID"] = 220577,
},
[130414] = {
["source"] = "Strongarm Ace",
["event"] = "SPELL_CAST_START",
["npcID"] = 66000,
},
[409721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winglord Dezran",
["npcID"] = 202610,
},
[141380] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Bonechiller",
["npcID"] = 70465,
},
[372862] = {
["source"] = "Primal Waterspout",
["event"] = "SPELL_CAST_START",
["npcID"] = 194219,
},
[5605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonevault Oracle",
["npcID"] = 4852,
},
[181120] = {
["encounterName"] = "Hellfire Assault",
["source"] = "Iron Dragoon",
["npcID"] = 90114,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1778,
},
[321669] = {
["encounterName"] = "Mistcaller",
["npcID"] = 165108,
["encounterID"] = 2392,
},
[372863] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[465012] = {
["source"] = "Hulking Bloodguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 216338,
},
[360577] = {
["npcID"] = 180930,
},
[346243] = {
["npcID"] = 168233,
},
[331909] = {
["npcID"] = 165473,
},
[462836] = {
["isChanneled"] = true,
["source"] = "Remembered Firelord",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212088,
},
[409724] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neltharion",
["npcID"] = 201668,
},
[452730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verdant Hulk",
["npcID"] = 215813,
},
[389247] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktalon Avenger",
["npcID"] = 187187,
},
[456823] = {
["source"] = "Grand-Heister Bokk",
["event"] = "SPELL_CAST_START",
["npcID"] = 213679,
},
[79922] = {
["npcID"] = 42808,
},
[185425] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steeljaw Grizzly",
["npcID"] = 96677,
},
[323720] = {
["npcID"] = 184465,
},
[122413] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber Monstrosity",
["encounterID"] = 1499,
["event"] = "SPELL_CAST_START",
["npcID"] = 62711,
},
[125997] = {
["source"] = "Battleworn Paratrooper",
["event"] = "SPELL_CAST_START",
["npcID"] = 63764,
},
[452156] = {
["source"] = "Remembered Firelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 212088,
},
[327054] = {
["npcID"] = 158869,
},
[183378] = {
["source"] = "Felsworn Myrmidon",
["event"] = "SPELL_CAST_START",
["npcID"] = 127596,
},
[352390] = {
["npcID"] = 179334,
},
[272528] = {
["source"] = "Ashvane Sniper",
["event"] = "SPELL_CAST_START",
["npcID"] = 128967,
},
[389250] = {
["source"] = "Blacktalon Slayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 201831,
},
[270481] = {
["npcID"] = 135002,
},
[458874] = {
["encounterName"] = "Cult Leaders",
["source"] = "Shadeguard Speaker",
["encounterID"] = 3050,
["event"] = "SPELL_CAST_START",
["npcID"] = 229855,
},
[120195] = {
["encounterName"] = "Trial of the King",
["source"] = "Haiyan the Unstoppable",
["npcID"] = 61445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1442,
},
[389251] = {
["event"] = "SPELL_CAST_START",
["source"] = "Morlash",
["npcID"] = 201549,
},
[138044] = {
["source"] = "Zandalari Warscout",
["event"] = "SPELL_CAST_START",
["npcID"] = 69768,
},
[319628] = {
["npcID"] = 178359,
},
[62395] = {
["encounterName"] = "Flame Leviathan",
["encounterID"] = 1132,
["npcID"] = 33139,
},
[235597] = {
["encounterName"] = "Fallen Avatar",
["source"] = "Fallen Avatar",
["npcID"] = 116939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2038,
},
[81459] = {
["npcID"] = 43537,
},
[393348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalwart Broodwarden",
["npcID"] = 198263,
},
[387205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tyrhold Gryphon",
["npcID"] = 198417,
},
[256715] = {
["npcID"] = 128005,
},
[222110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Pounder",
["npcID"] = 111405,
},
[106864] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[346251] = {
["npcID"] = 168233,
},
[299153] = {
["encounterName"] = "Trixie & Naeno",
["npcID"] = 150712,
["encounterID"] = 2312,
},
[230094] = {
["npcID"] = 115765,
},
[76813] = {
["npcID"] = 41096,
},
[273810] = {
["encounterName"] = "Mythrax",
["npcID"] = 134546,
["encounterID"] = 2135,
},
[128046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjunct G'kkal",
["npcID"] = 63103,
},
[448640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Honor Guard",
["npcID"] = 214264,
},
[125480] = {
["source"] = "Amber Searsting",
["event"] = "SPELL_CAST_START",
["npcID"] = 63569,
},
[444546] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[331919] = {
["npcID"] = 168402,
},
[42526] = {
["source"] = "Spore",
["event"] = "SPELL_CAST_START",
["npcID"] = 23876,
},
[147546] = {
["source"] = "Golganarr",
["event"] = "SPELL_CAST_START",
["npcID"] = 72970,
},
[288917] = {
["npcID"] = 148199,
},
[186449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Reaver",
["npcID"] = 90284,
},
[268440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crackshot",
["npcID"] = 126918,
},
[360589] = {
["npcID"] = 182114,
},
[360591] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 182045,
["encounterID"] = 2544,
},
[389258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Piskato",
["npcID"] = 195973,
},
[442501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Ironweaver",
["npcID"] = 220551,
},
[360590] = {
["npcID"] = 182114,
},
[403593] = {
["source"] = "Magma Burster",
["event"] = "SPELL_CAST_START",
["npcID"] = 200801,
},
[405641] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[448644] = {
["encounterName"] = "Overseer Kaskel",
["source"] = "Overseer Kaskel",
["npcID"] = 220437,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2990,
},
[417928] = {
["source"] = "Wildfire Amberpaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 207144,
},
[163753] = {
["source"] = "Grom'kar Man-at-Arms",
["event"] = "SPELL_CAST_START",
["npcID"] = 78832,
},
[122408] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber Monstrosity",
["encounterID"] = 1499,
["event"] = "SPELL_CAST_START",
["npcID"] = 62711,
},
[391308] = {
["source"] = "Boolk",
["event"] = "SPELL_CAST_START",
["npcID"] = 191450,
},
[106546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloated Brew Alemental",
["npcID"] = 59518,
},
[148572] = {
["source"] = "Thresher Turret",
["event"] = "SPELL_CAST_START",
["npcID"] = 73742,
},
[115761] = {
["source"] = "Tian Pupil",
["event"] = "SPELL_CAST_START",
["npcID"] = 54944,
},
[417725] = {
["source"] = "Fury of N'zoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 205307,
},
[379023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hillside Forager",
["npcID"] = 191240,
},
[436360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caller of the Gloom",
["npcID"] = 216955,
},
[117809] = {
["isChanneled"] = true,
["source"] = "Jahesh of Osul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60802,
},
[325782] = {
["npcID"] = 165401,
},
[398720] = {
["source"] = "Irontide Bulwark",
["event"] = "SPELL_CAST_START",
["npcID"] = 200850,
},
[20716] = {
["source"] = "Bronze Shrine Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 26277,
},
[422027] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Spirit of the Kaldorei",
["npcID"] = 207800,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[440376] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scary Skitterer",
["npcID"] = 216944,
},
[392576] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Channeler",
["npcID"] = 198047,
},
[272542] = {
["source"] = "Ashvane Sniper",
["event"] = "SPELL_CAST_START",
["npcID"] = 128967,
},
[462983] = {
["source"] = "Automatic Ironstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 229778,
},
[126856] = {
["isChanneled"] = true,
["source"] = "Korvexxis",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62579,
},
[106547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Novice",
["npcID"] = 56395,
},
[382670] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[299164] = {
["encounterName"] = "Trixie & Naeno",
["npcID"] = 153756,
["encounterID"] = 2312,
},
[456841] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[393361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightrot",
["npcID"] = 188707,
},
[28294] = {
["source"] = "Living Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 16021,
},
[392698] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Quilboar",
["npcID"] = 221743,
},
[284831] = {
["encounterName"] = "King Rastakhan",
["npcID"] = 145616,
["encounterID"] = 2272,
},
[409744] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kretchenwrath",
["npcID"] = 201673,
},
[288927] = {
["npcID"] = 148195,
},
[389267] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invasive Clearwater Snapper",
["npcID"] = 195506,
},
[175879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorian Sorcerer",
["npcID"] = 85225,
},
[385172] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wind Serpent",
["npcID"] = 191645,
},
[272546] = {
["source"] = "Bilge Rat Buccaneer",
["event"] = "SPELL_CAST_START",
["npcID"] = 129366,
},
[389268] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Guardian",
["npcID"] = 187135,
},
[15493] = {
["source"] = "Remembered Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 214363,
},
[417937] = {
["source"] = "Rotted Gladiator",
["event"] = "SPELL_CAST_START",
["npcID"] = 207808,
},
[189531] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mystic Aaran",
["npcID"] = 95603,
},
[389269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Guardian",
["npcID"] = 187123,
},
[394622] = {
["source"] = "Wilted Oak",
["event"] = "SPELL_CAST_START",
["npcID"] = 197131,
},
[392574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Channeler",
["npcID"] = 198047,
},
[288930] = {
["npcID"] = 148195,
},
[389270] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Guardian",
["npcID"] = 187123,
},
[325790] = {
["npcID"] = 158629,
},
[147553] = {
["source"] = "Harbinger of Y'Shaarj",
["event"] = "SPELL_CAST_START",
["npcID"] = 73452,
},
[119347] = {
["source"] = "Sik'thik Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 61434,
},
[389271] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invasive Clearwater Snapper",
["npcID"] = 195506,
},
[422026] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[417941] = {
["source"] = "Rotted Gladiator",
["event"] = "SPELL_CAST_START",
["npcID"] = 207808,
},
[387224] = {
["source"] = "Sundered Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 199942,
},
[142315] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Xaril the Poisoned Mind",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71157,
},
[12471] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fixxul Lonelyheart",
["npcID"] = 66281,
},
[57374] = {
["encounterName"] = "The Four Horsemen",
["source"] = "Lady Blaumeux",
["encounterID"] = 1121,
["event"] = "SPELL_CAST_START",
["npcID"] = 16065,
},
[411798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oozing Sludge",
["npcID"] = 205644,
},
[389273] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmeater",
["npcID"] = 186612,
},
[199772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Champion",
["npcID"] = 97087,
},
[319650] = {
["encounterName"] = "Kryxis the Voracious",
["npcID"] = 162100,
["encounterID"] = 2360,
},
[147385] = {
["source"] = "Ironfur Great Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 72844,
},
[389274] = {
["npcID"] = 190070,
},
[440468] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["npcID"] = 216649,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[157794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Magus",
["npcID"] = 76263,
},
[394620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightrot",
["npcID"] = 188707,
},
[422039] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[134245] = {
["source"] = "Freed Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 68173,
},
[448485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guard Captain Suleyman",
["npcID"] = 212826,
},
[444377] = {
["source"] = "Recalled Grizzly",
["event"] = "SPELL_CAST_START",
["npcID"] = 226195,
},
[340130] = {
["npcID"] = 162114,
},
[317605] = {
["npcID"] = 167534,
},
[385181] = {
["encounterName"] = "Gulping Goliath",
["event"] = "SPELL_CAST_START",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
},
[297128] = {
["npcID"] = 144298,
},
[198750] = {
["encounterName"] = "Odyn",
["source"] = "Stormforged Obliterator",
["npcID"] = 102019,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1809,
},
[456853] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[124980] = {
["source"] = "Jonn-Dar",
["event"] = "SPELL_CAST_START",
["npcID"] = 50351,
},
[136294] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["npcID"] = 67977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1565,
},
[446615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Dark Architect",
["npcID"] = 213885,
},
[448663] = {
["encounterName"] = "The Puppetmaster",
["source"] = "The Puppetmaster?",
["encounterID"] = 3006,
["event"] = "SPELL_CAST_START",
["npcID"] = 220510,
},
[336037] = {
["npcID"] = 181186,
},
[327332] = {
["npcID"] = 163459,
},
[128052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjunct Pivvika",
["npcID"] = 63104,
},
[120373] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reclaimer Zuan",
["npcID"] = 61305,
},
[79930] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shinfel Blightsworn",
["npcID"] = 99146,
},
[141391] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Boltblaster",
["npcID"] = 71329,
},
[389280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shiverweb Crusher",
["npcID"] = 185814,
},
[146534] = {
["source"] = "Aggron",
["event"] = "SPELL_CAST_START",
["npcID"] = 72981,
},
[344230] = {
["encounterName"] = "Stone Legion Generals",
["npcID"] = 168112,
["encounterID"] = 2417,
},
[465051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xal'atath",
["npcID"] = 230937,
},
[157797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Arbiter",
["npcID"] = 77080,
},
[454813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caustic Skyrazor",
["npcID"] = 225817,
},
[450714] = {
["encounterName"] = "The Puppetmaster",
["source"] = "The Puppetmaster?",
["encounterID"] = 3006,
["event"] = "SPELL_CAST_START",
["npcID"] = 220510,
},
[193633] = {
["source"] = "Risen Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 98275,
},
[126005] = {
["source"] = "Jack Arrow",
["event"] = "SPELL_CAST_START",
["npcID"] = 63809,
},
[325802] = {
["npcID"] = 166936,
},
[270513] = {
["source"] = "Fragmented Core",
["event"] = "SPELL_CAST_START",
["npcID"] = 223953,
},
[164965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Mender",
["npcID"] = 81820,
},
[78907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaldorei Starcaller",
["npcID"] = 183994,
},
[131972] = {
["source"] = "Sik'thik Battle-Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 67093,
},
[376997] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["encounterID"] = 2564,
["event"] = "SPELL_CAST_START",
["npcID"] = 191736,
},
[395427] = {
["source"] = "Overseer Lahar",
["event"] = "SPELL_CAST_START",
["npcID"] = 189235,
},
[411000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Armored Mistral",
["npcID"] = 45915,
},
[366759] = {
["npcID"] = 183498,
},
[131178] = {
["npcID"] = 66768,
},
[450718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siegelord Xerosh",
["npcID"] = 224311,
},
[123958] = {
["source"] = "Little Liuyang",
["event"] = "SPELL_CAST_START",
["npcID"] = 63313,
},
[456861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spore-infused Shalewing",
["npcID"] = 221217,
},
[426145] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["npcID"] = 208745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2787,
},
[411811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbling Slime",
["npcID"] = 205651,
},
[405668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Destroyer",
["npcID"] = 201753,
},
[383143] = {
["source"] = "High Shaman Rotknuckle",
["event"] = "SPELL_CAST_START",
["npcID"] = 197356,
},
[372565] = {
["isChanneled"] = true,
["source"] = "Primal Terrasentry",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188067,
},
[396665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmas",
["npcID"] = 199027,
},
[189532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Binder Hallaani",
["npcID"] = 95613,
},
[342189] = {
["npcID"] = 174175,
},
[79932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jubeka Shadowbreaker",
["npcID"] = 99147,
},
[57376] = {
["encounterName"] = "The Four Horsemen",
["source"] = "Sir Zeliek",
["encounterID"] = 1121,
["event"] = "SPELL_CAST_START",
["npcID"] = 16063,
},
[28434] = {
["isChanneled"] = true,
["source"] = "Carrion Spinner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 15975,
},
[256709] = {
["source"] = "Riptide Shredder",
["event"] = "SPELL_CAST_START",
["npcID"] = 129371,
},
[442530] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "The Bloodbound Horror",
["npcID"] = 214502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[346286] = {
["encounterName"] = "Mailroom Mayhem",
["npcID"] = 175646,
["encounterID"] = 2424,
},
[422053] = {
["encounterName"] = "Gnarlroot",
["source"] = "Tainted Lasher",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 210231,
},
[82800] = {
["source"] = "Alliance Footman",
["event"] = "SPELL_CAST_START",
["npcID"] = 67901,
},
[393385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chalsec of the Earth",
["npcID"] = 193847,
},
[34083] = {
["npcID"] = 2725,
},
[454818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anub'ilith",
["npcID"] = 222185,
},
[456866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mother Aza'na",
["npcID"] = 222180,
},
[377004] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["encounterID"] = 2564,
["event"] = "SPELL_CAST_START",
["npcID"] = 191736,
},
[387243] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Murhulk",
["npcID"] = 195095,
},
[405673] = {
["source"] = "Overflowing Magma",
["event"] = "SPELL_CAST_START",
["npcID"] = 203277,
},
[334002] = {
["npcID"] = 173943,
},
[15547] = {
["source"] = "7th Legion Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 27162,
},
[454821] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Broker Rez'kal",
["npcID"] = 217693,
},
[141421] = {
["source"] = "Earthborn Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 70822,
},
[456868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mother Aza'na",
["npcID"] = 222180,
},
[405675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcanakk",
["npcID"] = 200911,
},
[272571] = {
["source"] = "Bilge Rat Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 129367,
},
[123960] = {
["source"] = "Little Liuyang",
["event"] = "SPELL_CAST_START",
["npcID"] = 63313,
},
[432142] = {
["source"] = "Nerubian War-Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 222731,
},
[233556] = {
["encounterName"] = "Fallen Avatar",
["source"] = "Containment Pylon",
["npcID"] = 117279,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2038,
},
[201830] = {
["source"] = "Dark Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 99875,
},
[245857] = {
["event"] = "SPELL_CAST_START",
["source"] = "Antoran Felguard",
["npcID"] = 129050,
},
[339325] = {
["npcID"] = 173298,
},
[442536] = {
["source"] = "Covert Webmancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 223844,
},
[428202] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[379033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loyal Bakar",
["npcID"] = 184656,
},
[120377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nakk'rakas",
["npcID"] = 60572,
},
[450728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siegelord Xerosh",
["npcID"] = 224311,
},
[292903] = {
["npcID"] = 181406,
},
[398712] = {
["source"] = "Nimbulatus, Storm's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199667,
},
[127510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unga Bird-Haver",
["npcID"] = 62475,
},
[57377] = {
["encounterName"] = "The Four Horsemen",
["source"] = "Sir Zeliek",
["encounterID"] = 1121,
["event"] = "SPELL_CAST_START",
["npcID"] = 16063,
},
[56326] = {
["source"] = "Muckscale Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 64008,
},
[141423] = {
["source"] = "Frostmane Witch Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 70464,
},
[210931] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Eye of Il'gynoth",
["encounterID"] = 1873,
["event"] = "SPELL_CAST_START",
["npcID"] = 105906,
},
[192617] = {
["encounterName"] = "Wrath of Azshara",
["source"] = "Wrath of Azshara",
["encounterID"] = 1814,
["event"] = "SPELL_CAST_START",
["npcID"] = 96028,
},
[125490] = {
["source"] = "Amber Searsting",
["event"] = "SPELL_CAST_START",
["npcID"] = 63569,
},
[162633] = {
["source"] = "Thunderlord Beast-Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 80423,
},
[172138] = {
["source"] = "Night-Twisted Supplicant",
["event"] = "SPELL_CAST_START",
["npcID"] = 86185,
},
[408946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Preserver",
["npcID"] = 198870,
},
[288959] = {
["npcID"] = 148221,
},
[413872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Meredy Huntswell",
["npcID"] = 209059,
},
[448684] = {
["source"] = "Sparking Electroscythes",
["event"] = "SPELL_CAST_START",
["npcID"] = 219970,
},
[129081] = {
["source"] = "Child of Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 60616,
},
[226406] = {
["source"] = "Emberhusk Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 113537,
},
[405437] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[44475] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Mage Guard",
["npcID"] = 24683,
},
[191595] = {
["source"] = "Felsworn Infester",
["event"] = "SPELL_CAST_START",
["npcID"] = 96587,
},
[329916] = {
["npcID"] = 171173,
},
[356537] = {
["npcID"] = 179334,
},
[37668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Spellbinder",
["npcID"] = 18312,
},
[374969] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["event"] = "SPELL_CAST_START",
["npcID"] = 189478,
},
[329917] = {
["npcID"] = 168578,
},
[300414] = {
["npcID"] = 150143,
},
[125441] = {
["source"] = "Kri'thik Screamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61377,
},
[9739] = {
["source"] = "Lost Trainee Druid",
["event"] = "SPELL_CAST_START",
["npcID"] = 210370,
},
[272581] = {
["source"] = "Bilge Rat Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 129367,
},
[454831] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caustic Skyrazor",
["npcID"] = 225817,
},
[407733] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[377017] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["encounterID"] = 2611,
["event"] = "SPELL_CAST_START",
["npcID"] = 189901,
},
[421746] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Stonewarmer",
["npcID"] = 210235,
},
[60869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Terror",
["npcID"] = 30633,
},
[29317] = {
["encounterName"] = "Gothik the Harvester",
["source"] = "Gothik the Harvester",
["encounterID"] = 1109,
["event"] = "SPELL_CAST_START",
["npcID"] = 16060,
},
[360636] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 181549,
["encounterID"] = 2544,
},
[303300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Infuser",
["npcID"] = 186112,
},
[348350] = {
["encounterName"] = "Zo'phex the Sentinel",
["npcID"] = 175616,
["encounterID"] = 2425,
},
[207979] = {
["npcID"] = 104273,
},
[192621] = {
["encounterName"] = "Ash'Golm",
["source"] = "Ash'Golm",
["encounterID"] = 1816,
["event"] = "SPELL_CAST_START",
["npcID"] = 95886,
},
[417241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gill'dan",
["npcID"] = 204808,
},
[340160] = {
["npcID"] = 173655,
},
[448691] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Deepflayer",
["npcID"] = 218657,
},
[207980] = {
["npcID"] = 104274,
},
[425379] = {
["source"] = "Flamespreader",
["event"] = "SPELL_CAST_START",
["npcID"] = 210294,
},
[141428] = {
["source"] = "Bonechiller Barafu",
["event"] = "SPELL_CAST_START",
["npcID"] = 70468,
},
[456883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gramwharl",
["npcID"] = 220308,
},
[336066] = {
["npcID"] = 182686,
},
[201837] = {
["npcID"] = 99366,
},
[442387] = {
["source"] = "Nerubian War-Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 222731,
},
[383165] = {
["source"] = "High Shaman Rotknuckle",
["event"] = "SPELL_CAST_START",
["npcID"] = 197356,
},
[319685] = {
["encounterName"] = "Kryxis the Voracious",
["npcID"] = 162100,
["encounterID"] = 2360,
},
[61730] = {
["source"] = "Snowplain Disciple",
["event"] = "SPELL_CAST_START",
["npcID"] = 26705,
},
[446646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaz'vik",
["npcID"] = 219751,
},
[440504] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[336068] = {
["npcID"] = 182686,
},
[272588] = {
["source"] = "Bilge Rat Cutthroat",
["event"] = "SPELL_CAST_START",
["npcID"] = 137511,
},
[15498] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Diviner",
["npcID"] = 66700,
},
[407740] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurantia",
["npcID"] = 203047,
},
[360643] = {
["npcID"] = 182155,
},
[372082] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[340165] = {
["npcID"] = 161527,
},
[417227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Horde Reaver",
["npcID"] = 207585,
},
[79938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zinnin Smythe",
["npcID"] = 99145,
},
[201839] = {
["encounterName"] = "Oakheart",
["source"] = "Taintheart Summoner",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 99366,
},
[356548] = {
["npcID"] = 178392,
},
[334023] = {
["npcID"] = 167536,
},
[360644] = {
["npcID"] = 184660,
},
[360647] = {
["npcID"] = 182155,
},
[231532] = {
["source"] = "Pyrestar Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 114845,
},
[448698] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rampaging Deepflayer",
["npcID"] = 218657,
},
[303308] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Infuser",
["npcID"] = 186112,
},
[272592] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Corruptor",
["npcID"] = 138281,
},
[323786] = {
["npcID"] = 163524,
},
[12747] = {
["npcID"] = 6519,
},
[327882] = {
["npcID"] = 168153,
},
[119358] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["encounterID"] = 1500,
["event"] = "SPELL_CAST_START",
["npcID"] = 60410,
},
[256106] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Skycap'n Kragg",
["npcID"] = 126832,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2093,
},
[87618] = {
["encounterName"] = "Asaad",
["npcID"] = 43875,
["encounterID"] = 1042,
},
[129085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperial Guard",
["npcID"] = 60826,
},
[407122] = {
["source"] = "Horde Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 203857,
},
[405698] = {
["source"] = "Baine Bloodhoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 201362,
},
[244844] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tidecaller Nezara",
["npcID"] = 157734,
},
[136986] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Spear-Shaper",
["npcID"] = 69388,
},
[142222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huntmaster S'thoc",
["npcID"] = 71259,
},
[405699] = {
["source"] = "Baine Bloodhoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 201362,
},
[372202] = {
["isChanneled"] = true,
["source"] = "Qalashi Irontorch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189464,
},
[327885] = {
["encounterName"] = "Lord Chamberlain",
["npcID"] = 164218,
["encounterID"] = 2381,
},
[153581] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soaring Chakram Master",
["npcID"] = 76132,
},
[194675] = {
["source"] = "Blazing Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 98963,
},
[124289] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yorik Sharpeye",
["npcID"] = 50336,
},
[421402] = {
["source"] = "Primalist Pyremancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209963,
},
[444608] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[124776] = {
["source"] = "Krik'thik Deep-Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 61374,
},
[275835] = {
["source"] = "Ashvane Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 137516,
},
[377033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ripsaw the Stalker",
["npcID"] = 193153,
},
[444609] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[165578] = {
["encounterName"] = "Bonemaw",
["source"] = "Bonemaw",
["npcID"] = 75452,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1679,
},
[128962] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krasari Runekeeper",
["npcID"] = 65598,
},
[377034] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["encounterID"] = 2564,
["event"] = "SPELL_CAST_START",
["npcID"] = 191736,
},
[156793] = {
["encounterName"] = "Ranjit",
["source"] = "Ranjit",
["npcID"] = 75964,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1698,
},
[384365] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Plainstomper",
["npcID"] = 191847,
},
[456897] = {
["source"] = "Azerite Manifestation",
["event"] = "SPELL_CAST_START",
["npcID"] = 222670,
},
[444055] = {
["source"] = "Rampaging Threadling",
["event"] = "SPELL_CAST_START",
["npcID"] = 222730,
},
[427999] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["npcID"] = 200927,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2824,
},
[227420] = {
["encounterName"] = "Opera Hall",
["encounterID"] = 1957,
["npcID"] = 114266,
},
[366797] = {
["npcID"] = 184804,
},
[393419] = {
["event"] = "SPELL_CAST_START",
["source"] = "Penumbrus",
["npcID"] = 189289,
},
[119360] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["encounterID"] = 1500,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60410,
},
[397514] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[388474] = {
["source"] = "Quiescent Threshadon",
["event"] = "SPELL_CAST_START",
["npcID"] = 194803,
},
[450756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Commander",
["npcID"] = 214762,
},
[325844] = {
["npcID"] = 165401,
},
[402793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gholna",
["npcID"] = 199853,
},
[456900] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[438473] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["encounterID"] = 2926,
["event"] = "SPELL_CAST_START",
["npcID"] = 213179,
},
[387277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Revenant",
["npcID"] = 195917,
},
[438471] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["encounterID"] = 2926,
["event"] = "SPELL_CAST_START",
["npcID"] = 213179,
},
[276699] = {
["npcID"] = 142243,
},
[192631] = {
["encounterName"] = "Ash'Golm",
["source"] = "Ash'Golm",
["npcID"] = 95886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1816,
},
[452806] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[422090] = {
["event"] = "SPELL_CAST_START",
["source"] = "Treant",
["npcID"] = 54983,
},
[456902] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[146537] = {
["source"] = "Aggron",
["event"] = "SPELL_CAST_START",
["npcID"] = 72981,
},
[127552] = {
["source"] = "Shao-Tien Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 65133,
},
[141438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Parker",
["npcID"] = 71326,
},
[129084] = {
["source"] = "Ruqin Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 59826,
},
[34344] = {
["source"] = "Unbound Bonemender",
["event"] = "SPELL_CAST_START",
["npcID"] = 68175,
},
[329943] = {
["encounterName"] = "Sire Denathrius",
["npcID"] = 168156,
},
[178298] = {
["npcID"] = 83763,
},
[424140] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[106563] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["npcID"] = 59479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1414,
},
[438476] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["encounterID"] = 2926,
["event"] = "SPELL_CAST_START",
["npcID"] = 213179,
},
[189547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Soul Cleaver",
["npcID"] = 95640,
},
[456905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Earthgorger",
["npcID"] = 218393,
},
[317661] = {
["npcID"] = 163503,
},
[450766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Living Honey",
["npcID"] = 217833,
},
[137344] = {
["encounterName"] = "Council of Elders",
["source"] = "High Priestess Mar'li",
["npcID"] = 69132,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[325850] = {
["npcID"] = 166942,
},
[376170] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[362710] = {
["npcID"] = 182804,
},
[130406] = {
["source"] = "Thunder Hold Laborer",
["event"] = "SPELL_CAST_START",
["npcID"] = 66284,
},
[224374] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Infernal Imp",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 112668,
},
[391382] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 197671,
},
[209602] = {
["encounterName"] = "Advisor Melandrus",
["encounterID"] = 1870,
["npcID"] = 104218,
},
[323804] = {
["npcID"] = 163524,
},
[391380] = {
["source"] = "Ohn'ir Windsage",
["event"] = "SPELL_CAST_START",
["npcID"] = 195352,
},
[376169] = {
["source"] = "High Thaumaturge Fural",
["event"] = "SPELL_CAST_START",
["npcID"] = 189905,
},
[316959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrosive Digester",
["npcID"] = 162828,
},
[430288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Fragment",
["npcID"] = 207202,
},
[224375] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Infernal Imp",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 112668,
},
[278755] = {
["event"] = "SPELL_CAST_START",
["source"] = "Befouled Spirit",
["npcID"] = 133685,
},
[193659] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["npcID"] = 95675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1808,
},
[227447] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114284,
["encounterID"] = 1957,
},
[456910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Earthgorger",
["npcID"] = 218393,
},
[319711] = {
["npcID"] = 166872,
},
[340189] = {
["npcID"] = 173655,
},
[119875] = {
["encounterName"] = "General Pa'valak",
["source"] = "General Pa'valak",
["encounterID"] = 1447,
["event"] = "SPELL_CAST_START",
["npcID"] = 61485,
},
[325855] = {
["npcID"] = 165401,
},
[322936] = {
["encounterName"] = "Halkias, the Sin-Stained Goliath",
["npcID"] = 165408,
["encounterID"] = 2401,
},
[117708] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Meng the Demented",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60708,
},
[124797] = {
["source"] = "Shan'ze Cloudrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 63895,
},
[424148] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["npcID"] = 209230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[319713] = {
["encounterName"] = "Kryxis the Voracious",
["npcID"] = 162100,
["encounterID"] = 2360,
},
[395480] = {
["source"] = "Gaelzion",
["event"] = "SPELL_CAST_START",
["npcID"] = 193653,
},
[398806] = {
["source"] = "Nimbulatus, Storm's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199667,
},
[391385] = {
["source"] = "Summoned Lava Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 182815,
},
[42024] = {
["source"] = "Ashtongue Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 68129,
},
[387290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Bloodpetal",
["npcID"] = 221880,
},
[323810] = {
["encounterName"] = "General Kaal",
["npcID"] = 166085,
["encounterID"] = 2363,
},
[421398] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[393434] = {
["source"] = "Freed Dracthyr",
["event"] = "SPELL_CAST_START",
["npcID"] = 201085,
},
[386411] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[199805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Sentinel",
["npcID"] = 96574,
},
[224378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Celestial Acolyte",
["npcID"] = 112655,
},
[241784] = {
["npcID"] = 114629,
},
[321764] = {
["npcID"] = 164861,
},
[146501] = {
["isChanneled"] = true,
["source"] = "Sra'thik Amber-Master",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72929,
},
[358624] = {
["npcID"] = 178997,
},
[106856] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[338147] = {
["npcID"] = 169885,
},
[114535] = {
["source"] = "Brother Lintpocket",
["event"] = "SPELL_CAST_START",
["npcID"] = 59701,
},
[275826] = {
["source"] = "Ashvane Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 128969,
},
[388796] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["encounterID"] = 2563,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196482,
},
[409757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[364769] = {
["npcID"] = 181360,
},
[334053] = {
["encounterName"] = "Oryphrion",
["npcID"] = 162060,
["encounterID"] = 2358,
},
[393439] = {
["source"] = "Sundered Ruinstalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199379,
},
[119365] = {
["source"] = "Sorcerer Mogu",
["event"] = "SPELL_CAST_START",
["npcID"] = 61250,
},
[102472] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["npcID"] = 54544,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1884,
},
[366818] = {
["npcID"] = 185275,
},
[225404] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trained Shadescale",
["npcID"] = 112804,
},
[413024] = {
["source"] = "Valow, Timesworn Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 201222,
},
[426206] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[106055] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["encounterID"] = 1418,
["event"] = "SPELL_CAST_START",
["npcID"] = 56448,
},
[188545] = {
["encounterName"] = "Hellfire Assault",
["source"] = "Gorebound Felcaster",
["npcID"] = 90409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1778,
},
[387297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Runebinder",
["npcID"] = 186354,
},
[446682] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warped Sapling",
["npcID"] = 220655,
},
[375011] = {
["npcID"] = 191019,
},
[368868] = {
["npcID"] = 184738,
},
[42281] = {
["npcID"] = 23694,
},
[117830] = {
["source"] = "Xiao",
["event"] = "SPELL_CAST_START",
["npcID"] = 54926,
},
[323821] = {
["encounterName"] = "General Kaal",
["npcID"] = 162099,
["encounterID"] = 2363,
},
[450779] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Living Honey",
["npcID"] = 217833,
},
[341352] = {
["npcID"] = 174092,
},
[413023] = {
["source"] = "Lerai, Timesworn Maiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 205152,
},
[394593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Lancer",
["npcID"] = 193198,
},
[418016] = {
["source"] = "Hand of the Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 207386,
},
[387300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feasting Wyrm",
["npcID"] = 192739,
},
[454877] = {
["source"] = "Rhak'ik",
["event"] = "SPELL_CAST_START",
["npcID"] = 221032,
},
[366823] = {
["npcID"] = 185275,
},
[450781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flickerflame Sticker",
["npcID"] = 212629,
},
[346346] = {
["npcID"] = 164713,
},
[123974] = {
["source"] = "Chagan Firehoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 63318,
},
[331379] = {
["npcID"] = 167965,
},
[417634] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[201858] = {
["npcID"] = 100539,
},
[337255] = {
["encounterName"] = "Tred'ova",
["npcID"] = 164517,
["encounterID"] = 2393,
},
[119843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crypt Guardian",
["npcID"] = 61766,
},
[139402] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "No'ku Stormsayer",
["npcID"] = 70276,
},
[338157] = {
["npcID"] = 165047,
},
[114022] = {
["source"] = "Scarlet Treasurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 59241,
},
[116157] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["encounterID"] = 1390,
["event"] = "SPELL_CAST_START",
["npcID"] = 60009,
},
[450784] = {
["source"] = "Xeph'itik",
["event"] = "SPELL_CAST_START",
["npcID"] = 219984,
},
[193668] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["npcID"] = 95675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1808,
},
[394591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tombcaller Ganzaya",
["npcID"] = 188509,
},
[130630] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gyrocopter Turret",
["npcID"] = 66299,
},
[385258] = {
["source"] = "Coastal Eel",
["event"] = "SPELL_CAST_START",
["npcID"] = 198782,
},
[423259] = {
["source"] = "Wildfire Blazekin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210685,
},
[372971] = {
["source"] = "Qalashi Blacksmith",
["event"] = "SPELL_CAST_START",
["npcID"] = 189471,
},
[120300] = {
["isChanneled"] = true,
["source"] = "Zandalari Shadow-Hunter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60524,
},
[450786] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Forager",
["npcID"] = 222976,
},
[378208] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["npcID"] = 186124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[340208] = {
["npcID"] = 173655,
},
[358638] = {
["npcID"] = 178997,
},
[117241] = {
["source"] = "Zandalari Fire-Dancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 60402,
},
[365921] = {
["npcID"] = 183406,
},
[407039] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Sarek Cinderbreath",
["encounterID"] = 2684,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 203812,
},
[440549] = {
["source"] = "Ragefin Executioner",
["event"] = "SPELL_CAST_START",
["npcID"] = 213408,
},
[401642] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[321780] = {
["isChanneled"] = true,
["source"] = "Zolramus Necromancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163618,
},
[317559] = {
["source"] = "Bloodbeak",
["event"] = "SPELL_CAST_START",
["npcID"] = 153964,
},
[325876] = {
["npcID"] = 165414,
},
[434407] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[440551] = {
["source"] = "Ragefin Executioner",
["event"] = "SPELL_CAST_START",
["npcID"] = 213408,
},
[142152] = {
["source"] = "Mouth of Terror",
["event"] = "SPELL_CAST_START",
["npcID"] = 70691,
},
[325877] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 165805,
["encounterID"] = 2402,
},
[393453] = {
["source"] = "Dracthyr Stoneclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 201079,
},
[395501] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["npcID"] = 192934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[117833] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Meng the Demented",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60708,
},
[146536] = {
["source"] = "Kor'thik Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 72954,
},
[393454] = {
["source"] = "Battlehorn Pyrhus",
["event"] = "SPELL_CAST_START",
["npcID"] = 190986,
},
[39211] = {
["npcID"] = 22461,
},
[128072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dread Scarab",
["npcID"] = 63587,
},
[389360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Timekeeper",
["npcID"] = 192516,
},
[270590] = {
["encounterName"] = "Viq'Goth",
["source"] = "Demolishing Terror",
["encounterID"] = 2100,
["event"] = "SPELL_CAST_START",
["npcID"] = 137626,
},
[407790] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[454888] = {
["source"] = "Khak'ik",
["event"] = "SPELL_CAST_START",
["npcID"] = 216032,
},
[456936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifested Protocol",
["npcID"] = 222946,
},
[114021] = {
["encounterName"] = "Houndmaster Braun",
["source"] = "Houndmaster Braun",
["encounterID"] = 1422,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59303,
},
[463081] = {
["source"] = "Awakened Phalanx",
["event"] = "SPELL_CAST_START",
["npcID"] = 229782,
},
[307453] = {
["encounterName"] = "Vexiona",
["source"] = "Vexiona",
["npcID"] = 157354,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2336,
},
[392539] = {
["source"] = "Awakened Terrasentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 197801,
},
[42027] = {
["encounterName"] = "Shade of Akama",
["source"] = "Ashtongue Spiritbinder",
["encounterID"] = 603,
["event"] = "SPELL_CAST_START",
["npcID"] = 23524,
},
[428269] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Void Chunk",
["npcID"] = 213684,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2836,
},
[227461] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114324,
["encounterID"] = 1957,
},
[387315] = {
["source"] = "Failed Scalecommander Haerothal",
["event"] = "SPELL_CAST_START",
["npcID"] = 201822,
},
[393458] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malifron",
["npcID"] = 190278,
},
[127561] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oku-Oku",
["npcID"] = 62486,
},
[446700] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Voracious Worm",
["npcID"] = 219046,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2919,
},
[403699] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[129097] = {
["source"] = "Norvakess",
["event"] = "SPELL_CAST_START",
["npcID"] = 62324,
},
[114182] = {
["source"] = "Scarlet Scholar",
["event"] = "SPELL_CAST_START",
["npcID"] = 59372,
},
[145552] = {
["source"] = "Irontide Coin Counter",
["event"] = "SPELL_CAST_START",
["npcID"] = 202398,
},
[424176] = {
["source"] = "Ancient Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 210637,
},
[311550] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jesh'ra",
["npcID"] = 159764,
},
[387317] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruby Culler",
["npcID"] = 190093,
},
[204574] = {
["encounterName"] = "Oakheart",
["npcID"] = 103344,
["encounterID"] = 1837,
},
[334076] = {
["npcID"] = 168942,
},
[209033] = {
["npcID"] = 104246,
},
[228269] = {
["encounterName"] = "Shade of Medivh",
["npcID"] = 114350,
["encounterID"] = 1965,
},
[9613] = {
["npcID"] = 48413,
},
[391414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Borzgas",
["npcID"] = 193896,
},
[310788] = {
["encounterName"] = "Il'gynoth, Corruption Reborn",
["source"] = "Organ of Corruption",
["npcID"] = 158343,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2345,
},
[411747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Elementium",
["npcID"] = 205628,
},
[147289] = {
["source"] = "Death Adder",
["event"] = "SPELL_CAST_START",
["npcID"] = 72841,
},
[314843] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["npcID"] = 158041,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[368890] = {
["npcID"] = 181408,
},
[144530] = {
["source"] = "Yu'lon",
["event"] = "SPELL_CAST_START",
["npcID"] = 71955,
},
[270334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Portal Breacher",
["npcID"] = 209821,
},
[402775] = {
["source"] = "Zaqali Cindershaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 199824,
},
[425300] = {
["isChanneled"] = true,
["source"] = "Zaqali Flamemancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210170,
},
[121284] = {
["encounterName"] = "Wing Leader Ner'onok",
["source"] = "Wing Leader Ner'onok",
["encounterID"] = 1464,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62205,
},
[123918] = {
["source"] = "Scar-Shell",
["event"] = "SPELL_CAST_START",
["npcID"] = 63311,
},
[411700] = {
["source"] = "Time-Lost Tidehunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 205365,
},
[241799] = {
["npcID"] = 183423,
},
[76369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Beguiler",
["npcID"] = 40167,
},
[340224] = {
["npcID"] = 161529,
},
[368034] = {
["npcID"] = 183722,
},
[391003] = {
["source"] = "High Shaman Rotknuckle",
["event"] = "SPELL_CAST_START",
["npcID"] = 197356,
},
[413012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Additive",
["npcID"] = 205671,
},
[128075] = {
["source"] = "Dreadmaw Grouper",
["event"] = "SPELL_CAST_START",
["npcID"] = 63375,
},
[288410] = {
["encounterName"] = "Mekkatorque",
["npcID"] = 144796,
["encounterID"] = 2276,
},
[11021] = {
["source"] = "Searing Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 4324,
},
[406918] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Lavamancer",
["npcID"] = 202256,
},
[421672] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[366847] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 182144,
["encounterID"] = 2544,
},
[385277] = {
["source"] = "Worldcarver A'tir",
["event"] = "SPELL_CAST_START",
["npcID"] = 186859,
},
[379134] = {
["npcID"] = 191092,
},
[372056] = {
["encounterName"] = "The Primal Council",
["source"] = "Opalfang",
["npcID"] = 187772,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[115650] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sudsy Brew Alemental",
["npcID"] = 59522,
},
[168082] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["npcID"] = 83892,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[329989] = {
["npcID"] = 174069,
},
[140400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Prophet",
["npcID"] = 70557,
},
[383231] = {
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193944,
},
[331398] = {
["npcID"] = 170147,
},
[122406] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Wind Lord Mel'jarak",
["encounterID"] = 1498,
["event"] = "SPELL_CAST_START",
["npcID"] = 62397,
},
[341422] = {
["npcID"] = 174194,
},
[276749] = {
["npcID"] = 136493,
},
[359768] = {
["npcID"] = 181360,
},
[41448] = {
["source"] = "Shek'zeer Needler",
["event"] = "SPELL_CAST_START",
["npcID"] = 64714,
},
[454904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Surek'Tak the Sundered",
["npcID"] = 222190,
},
[395029] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["npcID"] = 195119,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2606,
},
[442618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siege Dominator",
["npcID"] = 215601,
},
[126354] = {
["source"] = "Thunder Hold Sharp-Shooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 66288,
},
[12470] = {
["source"] = "Gold Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 32340,
},
[421971] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[418046] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203678,
},
[411903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Chemist",
["npcID"] = 205656,
},
[120706] = {
["source"] = "Dragon Launcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 62024,
},
[342280] = {
["encounterName"] = "Lady Inerva Darkvein",
["npcID"] = 165521,
["encounterID"] = 2406,
},
[86374] = {
["source"] = "Shado-Pan Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 61252,
},
[118626] = {
["source"] = "Shai Hu",
["event"] = "SPELL_CAST_START",
["npcID"] = 61069,
},
[149463] = {
["source"] = "Burning Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72895,
},
[383236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beguiled Aquamancer",
["npcID"] = 195960,
},
[352520] = {
["npcID"] = 178601,
},
[193682] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[446717] = {
["source"] = "Elder Shadeweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 221102,
},
[383237] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Lava Elemental",
["npcID"] = 187321,
},
[418049] = {
["source"] = "Vereesa Windrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 207816,
},
[411906] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Chemist",
["npcID"] = 205656,
},
[136297] = {
["isChanneled"] = true,
["source"] = "Goblin Cannon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 67694,
},
[318949] = {
["npcID"] = 163894,
},
[134059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilgewater Blastgineer",
["npcID"] = 67884,
},
[128034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dread Scarab",
["npcID"] = 63587,
},
[407207] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[451913] = {
["source"] = "The Puppetmaster?",
["event"] = "SPELL_CAST_START",
["npcID"] = 220507,
},
[418051] = {
["source"] = "Vereesa Windrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 207816,
},
[321807] = {
["npcID"] = 163619,
},
[128078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjunct Pivvika",
["npcID"] = 63104,
},
[366858] = {
["npcID"] = 183748,
},
[319298] = {
["source"] = "Torgok",
["event"] = "SPELL_CAST_START",
["npcID"] = 162817,
},
[272662] = {
["source"] = "Irontide Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 129369,
},
[141318] = {
["source"] = "Frostmane Headhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 70473,
},
[11829] = {
["source"] = "Gai-Cho Cauterizer",
["event"] = "SPELL_CAST_START",
["npcID"] = 62577,
},
[402766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Sentinel",
["npcID"] = 202260,
},
[411910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Young Storm Dragon",
["npcID"] = 45919,
},
[463104] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brood Infuser",
["npcID"] = 222167,
},
[123914] = {
["source"] = "Enraged Treant",
["event"] = "SPELL_CAST_START",
["npcID"] = 63467,
},
[360717] = {
["encounterName"] = "Lords of Dread",
["encounterID"] = 2543,
["npcID"] = 181398,
},
[420102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Garrick",
["npcID"] = 209057,
},
[111668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raigonn",
["npcID"] = 56877,
},
[124302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yorik Sharpeye",
["npcID"] = 50336,
},
[368909] = {
["npcID"] = 185861,
},
[411912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Devourer",
["npcID"] = 205673,
},
[128079] = {
["source"] = "Dreadspinner Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 61981,
},
[114249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broketooth Tosser",
["npcID"] = 59416,
},
[241808] = {
["npcID"] = 183424,
},
[313621] = {
["npcID"] = 177637,
},
[125436] = {
["isChanneled"] = true,
["source"] = "Kri'thik Boneslicer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61376,
},
[311015] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Behemoth",
["npcID"] = 159303,
},
[113134] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["encounterID"] = 1425,
["event"] = "SPELL_CAST_START",
["npcID"] = 3977,
},
[147543] = {
["source"] = "Golganarr",
["event"] = "SPELL_CAST_START",
["npcID"] = 72970,
},
[139231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Storm-Caller",
["npcID"] = 69390,
},
[257784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Brinescale",
["npcID"] = 129600,
},
[241809] = {
["npcID"] = 183424,
},
[123966] = {
["source"] = "Little Liuyang",
["event"] = "SPELL_CAST_START",
["npcID"] = 63313,
},
[126032] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cracklefang",
["npcID"] = 58768,
},
[375056] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[337235] = {
["encounterName"] = "Tred'ova",
["npcID"] = 164517,
["encounterID"] = 2393,
},
[387343] = {
["source"] = "Bouldron",
["event"] = "SPELL_CAST_START",
["npcID"] = 193644,
},
[130911] = {
["source"] = "Ga’trul",
["event"] = "SPELL_CAST_START",
["npcID"] = 66276,
},
[366866] = {
["npcID"] = 184651,
},
[377105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Guard",
["npcID"] = 190510,
},
[362771] = {
["encounterName"] = "Anduin Wrynn",
["encounterID"] = 2546,
["npcID"] = 183463,
},
[365903] = {
["npcID"] = 184627,
},
[375058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Old Arbhog",
["npcID"] = 196897,
},
[143280] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Skeer the Bloodseeker",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71152,
},
[156829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gul'kosh",
["npcID"] = 78437,
},
[223381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dire Shaman",
["npcID"] = 112153,
},
[257169] = {
["source"] = "Bilge Rat Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 135245,
},
[168092] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["npcID"] = 83892,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[444683] = {
["source"] = "Ramolith Curlhorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 221672,
},
[227477] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114284,
["encounterID"] = 1957,
},
[366869] = {
["npcID"] = 184651,
},
[141381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Boltblaster",
["npcID"] = 71329,
},
[132942] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Alliance Swashbuckler",
["npcID"] = 69196,
},
[439621] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Nx",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216648,
},
[257170] = {
["source"] = "Irontide Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 129369,
},
[128022] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dread Kunchong",
["npcID"] = 64717,
},
[172728] = {
["source"] = "Creeping Vine",
["event"] = "SPELL_CAST_START",
["npcID"] = 80697,
},
[60646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korjan Slavemaster",
["npcID"] = 65638,
},
[195253] = {
["event"] = "SPELL_CAST_START",
["source"] = "Restless Tides",
["npcID"] = 97173,
},
[202420] = {
["source"] = "Eredar War-Mind",
["event"] = "SPELL_CAST_START",
["npcID"] = 127597,
},
[374586] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189478,
},
[444687] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[310842] = {
["event"] = "SPELL_CAST_START",
["source"] = "Occult Shadowmender",
["npcID"] = 159425,
},
[125010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjunct Tzikzi",
["npcID"] = 62076,
},
[411923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diganthor",
["npcID"] = 204434,
},
[57780] = {
["npcID"] = 33236,
},
[241798] = {
["npcID"] = 183423,
},
[360730] = {
["npcID"] = 181115,
},
[63789] = {
["npcID"] = 33820,
},
[373017] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[375065] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Rotsinger",
["npcID"] = 186226,
},
[144546] = {
["npcID"] = 71992,
},
[387352] = {
["event"] = "SPELL_CAST_START",
["source"] = "Life Pools Crasher",
["npcID"] = 187105,
},
[390472] = {
["npcID"] = 189933,
},
[424212] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["npcID"] = 208743,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2826,
},
[113504] = {
["source"] = "Pandriarch Windfur",
["event"] = "SPELL_CAST_START",
["npcID"] = 56206,
},
[375068] = {
["encounterName"] = "Magmatusk",
["source"] = "Lava Tentacles",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 190023,
},
[389401] = {
["source"] = "Alora Mistbreeze",
["event"] = "SPELL_CAST_START",
["npcID"] = 189243,
},
[391449] = {
["isChanneled"] = true,
["source"] = "Borzgas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 193896,
},
[426261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sootsnout",
["npcID"] = 212412,
},
[111631] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58633,
},
[405784] = {
["source"] = "Tarasek Boarder",
["event"] = "SPELL_CAST_START",
["npcID"] = 203307,
},
[448787] = {
["source"] = "Lightspawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 206710,
},
[444692] = {
["source"] = "Ramolith Curlhorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 221672,
},
[297254] = {
["encounterName"] = "King Gobbamak",
["npcID"] = 150159,
["encounterID"] = 2290,
},
[35377] = {
["npcID"] = 176995,
},
[417338] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Lich King",
["npcID"] = 205305,
},
[428047] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verlann Timbercrush",
["npcID"] = 207554,
},
[321828] = {
["encounterName"] = "Mistcaller",
["npcID"] = 164501,
["encounterID"] = 2392,
},
[129575] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korjan Slavemaster",
["npcID"] = 65638,
},
[301351] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["npcID"] = 150190,
["encounterID"] = 2291,
},
[172193] = {
["npcID"] = 86216,
},
[403459] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[133990] = {
["source"] = "Thane Stonehearth",
["event"] = "SPELL_CAST_START",
["npcID"] = 67636,
},
[309005] = {
["npcID"] = 158181,
},
[385310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Shockcaster",
["npcID"] = 195119,
},
[403740] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[373024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayed Elder",
["npcID"] = 189531,
},
[448791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ardent Paladin",
["npcID"] = 206704,
},
[405279] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 198999,
},
[403741] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[207006] = {
["encounterName"] = "Gul'dan",
["source"] = "Inquisitor Vethriz",
["npcID"] = 104536,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1866,
},
[341323] = {
["npcID"] = 173973,
},
[409885] = {
["source"] = "Highmountain Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 201578,
},
[116155] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbling Brew Alemental",
["npcID"] = 59521,
},
[422172] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["npcID"] = 200927,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2824,
},
[342310] = {
["encounterName"] = "Artificer Xy'mox",
["npcID"] = 166644,
["encounterID"] = 2405,
},
[385313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Shockcaster",
["npcID"] = 195119,
},
[420125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Stonekin",
["npcID"] = 194291,
},
[337227] = {
["npcID"] = 169102,
},
[392738] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kargpaw the Fetid",
["npcID"] = 186660,
},
[382277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Balara",
["npcID"] = 193457,
},
[321834] = {
["encounterName"] = "Mistcaller",
["npcID"] = 164501,
["encounterID"] = 2392,
},
[339274] = {
["npcID"] = 173298,
},
[394563] = {
["source"] = "Death's Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 190985,
},
[121762] = {
["source"] = "Sik'thik Builder",
["event"] = "SPELL_CAST_START",
["npcID"] = 62633,
},
[79856] = {
["source"] = "Pyromancer Flamehearth",
["event"] = "SPELL_CAST_START",
["npcID"] = 70709,
},
[372460] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bakra the Bully",
["npcID"] = 186517,
},
[432414] = {
["source"] = "Wormcaller Iz'tikrine",
["event"] = "SPELL_CAST_START",
["npcID"] = 214153,
},
[125506] = {
["source"] = "Commander Lindon",
["event"] = "SPELL_CAST_START",
["npcID"] = 59191,
},
[147310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brilliant Windfeather",
["npcID"] = 72762,
},
[202913] = {
["encounterName"] = "Tirathon Saltheril",
["source"] = "Tirathon Saltheril",
["npcID"] = 95885,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1815,
},
[141413] = {
["source"] = "Ice Spike",
["event"] = "SPELL_CAST_START",
["npcID"] = 70988,
},
[404807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contamination Investigator",
["npcID"] = 202320,
},
[142296] = {
["source"] = "Dark Shaman Xorenth",
["event"] = "SPELL_CAST_START",
["npcID"] = 70683,
},
[130583] = {
["source"] = "Thunder Hold Cannoneer",
["event"] = "SPELL_CAST_START",
["npcID"] = 66395,
},
[375079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Squallbringer Cyraz",
["npcID"] = 190370,
},
[306953] = {
["encounterName"] = "Shad'har the Insatiable",
["source"] = "Shad'har the Insatiable",
["npcID"] = 157231,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2335,
},
[387337] = {
["npcID"] = 191093,
},
[116710] = {
["source"] = "Zhi-Zhi",
["event"] = "SPELL_CAST_START",
["npcID"] = 54924,
},
[424227] = {
["source"] = "Priestess of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 211076,
},
[130396] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gyrocopter Turret",
["npcID"] = 66299,
},
[452895] = {
["isChanneled"] = true,
["source"] = "Rabaan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228343,
},
[223392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dire Shaman",
["npcID"] = 112153,
},
[342317] = {
["npcID"] = 181005,
},
[393511] = {
["source"] = "Cauldronbearer Blakor",
["event"] = "SPELL_CAST_START",
["npcID"] = 186783,
},
[444705] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zealous Templar",
["npcID"] = 207949,
},
[373034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Mudskipper",
["npcID"] = 187540,
},
[110117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Sha",
["npcID"] = 65414,
},
[32364] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Nexus-Prince Shaffar",
["npcID"] = 18344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1899,
},
[128970] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crypt Guardian",
["npcID"] = 61783,
},
[198820] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Latosius",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[399656] = {
["source"] = "Igneous Darkness",
["event"] = "SPELL_CAST_START",
["npcID"] = 202866,
},
[426277] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Torchsnarl",
["npcID"] = 212993,
},
[374081] = {
["source"] = "Godoloto",
["event"] = "SPELL_CAST_START",
["npcID"] = 190022,
},
[125016] = {
["source"] = "Dog",
["event"] = "SPELL_CAST_START",
["npcID"] = 63955,
},
[342320] = {
["encounterName"] = "Lady Inerva Darkvein",
["npcID"] = 165521,
["encounterID"] = 2406,
},
[394558] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Flame",
["npcID"] = 198577,
},
[313652] = {
["encounterName"] = "The Hivemind",
["source"] = "Ka'zir",
["npcID"] = 157253,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2333,
},
[114147] = {
["source"] = "The Fearmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 59656,
},
[342321] = {
["encounterName"] = "Lady Inerva Darkvein",
["npcID"] = 165521,
["encounterID"] = 2406,
},
[79965] = {
["source"] = "Alliance Paladin",
["event"] = "SPELL_CAST_START",
["npcID"] = 214148,
},
[169129] = {
["encounterName"] = "Skulloc, Son of Gruul",
["npcID"] = 84464,
["encounterID"] = 1754,
},
[374080] = {
["source"] = "Primalist Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 190348,
},
[153268] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Exhumer",
["npcID"] = 77700,
},
[391470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Piton",
["npcID"] = 194464,
},
[115289] = {
["encounterName"] = "Thalnos the Soulrender",
["source"] = "Thalnos the Soulrender",
["encounterID"] = 1423,
["event"] = "SPELL_CAST_START",
["npcID"] = 59789,
},
[215204] = {
["encounterName"] = "Patrol Captain Gerdo",
["encounterID"] = 1868,
["npcID"] = 104918,
},
[440615] = {
["source"] = "Ragefin Shadowcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 213405,
},
[450854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathscreamer Iken'tak",
["npcID"] = 211263,
},
[362801] = {
["encounterName"] = "Artificer Xy'mox",
["npcID"] = 183501,
["encounterID"] = 2553,
},
[282939] = {
["encounterName"] = "Opulence",
["npcID"] = 145274,
["encounterID"] = 2271,
},
[146605] = {
["source"] = "Kovok",
["event"] = "SPELL_CAST_START",
["npcID"] = 72927,
},
[389423] = {
["source"] = "Thieving Conjurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 196388,
},
[214181] = {
["event"] = "SPELL_CAST_START",
["source"] = "Putrid Sludge",
["npcID"] = 112251,
},
[446760] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infesting Latcher",
["npcID"] = 222572,
},
[183465] = {
["source"] = "Tarspitter Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 91001,
},
[426283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedheart Invader",
["npcID"] = 212389,
},
[79884] = {
["source"] = "Ordo Warbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 60127,
},
[146606] = {
["source"] = "Kovok",
["event"] = "SPELL_CAST_START",
["npcID"] = 72927,
},
[350517] = {
["encounterName"] = "Timecap'n Hooktail",
["npcID"] = 175546,
["encounterID"] = 2419,
},
[393520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ceeqa the Peacetaker",
["npcID"] = 188708,
},
[59663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thexal Deathchill",
["npcID"] = 31775,
},
[340279] = {
["npcID"] = 173714,
},
[399664] = {
["source"] = "Igneous Darkness",
["event"] = "SPELL_CAST_START",
["npcID"] = 202866,
},
[33844] = {
["source"] = "Rapidly Grown Treant",
["event"] = "SPELL_CAST_START",
["npcID"] = 209218,
},
[411300] = {
["source"] = "Time-Lost Waveshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 205363,
},
[227493] = {
["encounterName"] = "Attumen the Huntsman",
["npcID"] = 114262,
["encounterID"] = 1960,
},
[130395] = {
["encounterName"] = "The Stone Guard",
["source"] = "Jasper Guardian",
["encounterID"] = 1395,
["event"] = "SPELL_CAST_START",
["npcID"] = 59915,
},
[385331] = {
["encounterName"] = "Umbrelskul",
["source"] = "Detonating Crystal",
["npcID"] = 195138,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[411952] = {
["source"] = "Infinite Timebender",
["event"] = "SPELL_CAST_START",
["npcID"] = 205337,
},
[141488] = {
["source"] = "Earthborn Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 70822,
},
[416048] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2709,
},
[393523] = {
["source"] = "Cracktooth",
["event"] = "SPELL_CAST_START",
["npcID"] = 187528,
},
[106434] = {
["encounterName"] = "Master Snowdrift",
["source"] = "Master Snowdrift",
["npcID"] = 56541,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1304,
},
[373046] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[375094] = {
["source"] = "Swift Hornstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 190029,
},
[188587] = {
["source"] = "Understone Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 102253,
},
[51218] = {
["event"] = "SPELL_CAST_START",
["source"] = "Proto-Whelp",
["npcID"] = 23750,
},
[239781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Acolyte",
["npcID"] = 120194,
},
[359743] = {
["npcID"] = 181870,
},
[393525] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ceeqa the Peacetaker",
["npcID"] = 188708,
},
[160943] = {
["encounterName"] = "Nitrogg Thundertower",
["npcID"] = 77483,
["encounterID"] = 1732,
},
[389430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unleashed Storm",
["npcID"] = 195846,
},
[133813] = {
["source"] = "Serpent Ward",
["event"] = "SPELL_CAST_START",
["npcID"] = 67906,
},
[13322] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rogue Wizard",
["npcID"] = 474,
},
[314889] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Exposed Synapse",
["npcID"] = 159578,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[389431] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bazual",
["npcID"] = 193532,
},
[417678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Meantron 7000",
["npcID"] = 206131,
},
[393527] = {
["source"] = "Cracktooth",
["event"] = "SPELL_CAST_START",
["npcID"] = 187528,
},
[272711] = {
["source"] = "Bilge Rat Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 135245,
},
[444722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zealous Templar",
["npcID"] = 207949,
},
[391480] = {
["source"] = "Two-Eye",
["event"] = "SPELL_CAST_START",
["npcID"] = 194522,
},
[229544] = {
["npcID"] = 115401,
},
[411958] = {
["source"] = "Iridikron's Creation",
["event"] = "SPELL_CAST_START",
["npcID"] = 205691,
},
[389433] = {
["source"] = "Darktooth Spirit-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195267,
},
[448818] = {
["source"] = "Kobold Skullface",
["event"] = "SPELL_CAST_START",
["npcID"] = 203951,
},
[385339] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["npcID"] = 186338,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[157874] = {
["source"] = "Modgud",
["event"] = "SPELL_CAST_START",
["npcID"] = 214869,
},
[426295] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sootsnout",
["npcID"] = 212412,
},
[453937] = {
["encounterName"] = "Zekvir",
["source"] = "Egg Cocoon",
["npcID"] = 224077,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2987,
},
[328002] = {
["npcID"] = 168574,
},
[371005] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Thrasher",
["npcID"] = 196117,
},
[340289] = {
["npcID"] = 173714,
},
[448820] = {
["source"] = "Kobold Skullface",
["event"] = "SPELL_CAST_START",
["npcID"] = 203951,
},
[360767] = {
["npcID"] = 181879,
},
[387388] = {
["source"] = "Thieving Conjurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 196388,
},
[113690] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["encounterID"] = 1420,
["event"] = "SPELL_CAST_START",
["npcID"] = 59150,
},
[201902] = {
["npcID"] = 100539,
},
[385341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Construct",
["npcID"] = 195335,
},
[403771] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[455984] = {
["source"] = "Voidstone Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 221307,
},
[428345] = {
["source"] = "Molten Scorpid",
["event"] = "SPELL_CAST_START",
["npcID"] = 213696,
},
[217260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudfin Shaman",
["npcID"] = 186679,
},
[403772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vakan",
["npcID"] = 199855,
},
[129082] = {
["source"] = "Ruqin Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 59826,
},
[161533] = {
["source"] = "Mandragora Lifedrinker",
["event"] = "SPELL_CAST_START",
["npcID"] = 80699,
},
[446776] = {
["event"] = "SPELL_CAST_START",
["source"] = "War Lynx",
["npcID"] = 206699,
},
[255144] = {
["npcID"] = 127919,
},
[405821] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[399678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamebringer Shaman",
["npcID"] = 203700,
},
[385344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Construct",
["npcID"] = 195335,
},
[137399] = {
["encounterName"] = "Jin'rokh the Breaker",
["event"] = "SPELL_CAST_START",
["source"] = "Jin'rokh the Breaker",
["npcID"] = 69465,
},
[438586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venommaster Nezarox",
["npcID"] = 219006,
},
[172718] = {
["npcID"] = 86215,
},
[377154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ripsaw the Stalker",
["npcID"] = 193153,
},
[417499] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Robotic Cauldron",
["npcID"] = 207111,
},
[373059] = {
["encounterName"] = "The Primal Council",
["source"] = "Kadros Icewrath",
["npcID"] = 187771,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[383298] = {
["source"] = "Summoned Lava Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 182815,
},
[116830] = {
["isChanneled"] = true,
["source"] = "Konk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 55509,
},
[402769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Sentinel",
["npcID"] = 202260,
},
[331069] = {
["npcID"] = 174405,
},
[389443] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Nullification Device",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 196712,
},
[120926] = {
["source"] = "Mo Mo",
["event"] = "SPELL_CAST_START",
["npcID"] = 59805,
},
[395586] = {
["source"] = "Spellforged Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 194402,
},
[51764] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonblight Mage Hunter",
["npcID"] = 26280,
},
[391491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sootscale the Indomitable",
["npcID"] = 190307,
},
[79971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunwalker Scout",
["npcID"] = 58850,
},
[413487] = {
["source"] = "Temporal Fusion",
["event"] = "SPELL_CAST_START",
["npcID"] = 206068,
},
[265540] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Maggot",
["npcID"] = 130909,
},
[228526] = {
["npcID"] = 183423,
},
[393540] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zhurtan the Riverboiler",
["npcID"] = 188687,
},
[417497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rude Crude",
["npcID"] = 206617,
},
[389446] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Nullification Device",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 196712,
},
[432448] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Ritualist",
["npcID"] = 214761,
},
[116831] = {
["source"] = "Konk",
["event"] = "SPELL_CAST_START",
["npcID"] = 55509,
},
[387398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistyvale Stonecarver",
["npcID"] = 196624,
},
[340300] = {
["npcID"] = 173720,
},
[130479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Lieutenant",
["npcID"] = 66287,
},
[385351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Construct",
["npcID"] = 195335,
},
[355640] = {
["npcID"] = 179840,
},
[340301] = {
["source"] = "Evolved Sample",
["event"] = "SPELL_CAST_START",
["npcID"] = 202651,
},
[167095] = {
["npcID"] = 83390,
},
[228528] = {
["npcID"] = 183423,
},
[193716] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[113760] = {
["source"] = "Fragrant Lotus",
["event"] = "SPELL_CAST_START",
["npcID"] = 56472,
},
[138427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gurubashi Berserker",
["npcID"] = 69905,
},
[328016] = {
["npcID"] = 168578,
},
[417808] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haywire Harvester",
["npcID"] = 205889,
},
[396600] = {
["source"] = "Gorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 192759,
},
[64971] = {
["npcID"] = 34198,
},
[419123] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[193717] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[340304] = {
["npcID"] = 173720,
},
[388623] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["encounterID"] = 2563,
["event"] = "SPELL_CAST_START",
["npcID"] = 196482,
},
[15472] = {
["source"] = "Shadowmoon Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 17371,
},
[388402] = {
["source"] = "Predatory Thresher",
["event"] = "SPELL_CAST_START",
["npcID"] = 198779,
},
[340305] = {
["npcID"] = 173720,
},
[120416] = {
["source"] = "Agitated Seedstealer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61302,
},
[393547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kraunot",
["npcID"] = 186401,
},
[30853] = {
["source"] = "Shadowmoon Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 17395,
},
[377166] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[285017] = {
["encounterName"] = "Stormwall Blockade",
["npcID"] = 146256,
["encounterID"] = 2280,
},
[450885] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Forager",
["npcID"] = 222976,
},
[428360] = {
["source"] = "Firelands Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210293,
},
[15503] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Eramas Brightblaze",
["npcID"] = 24554,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1895,
},
[238586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutal Punisher",
["npcID"] = 117421,
},
[409931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[444743] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Mage",
["npcID"] = 221760,
},
[31516] = {
["source"] = "Enraged Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 59166,
},
[146621] = {
["source"] = "Kovok",
["event"] = "SPELL_CAST_START",
["npcID"] = 72927,
},
[393550] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kraunot",
["npcID"] = 186401,
},
[150424] = {
["source"] = "Amani Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215675,
},
[128096] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vor'thik Dreadsworn",
["npcID"] = 62813,
},
[285020] = {
["encounterName"] = "Tussle Tonks",
["encounterID"] = 2257,
["npcID"] = 144244,
},
[120929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abomination of Anger",
["npcID"] = 61707,
},
[124359] = {
["event"] = "SPELL_CAST_START",
["source"] = "Den Mother Moof",
["npcID"] = 63518,
},
[227508] = {
["encounterName"] = "Maiden of Virtue",
["npcID"] = 113971,
["encounterID"] = 1954,
},
[313400] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Corruptor Tentacle",
["npcID"] = 158375,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[147646] = {
["source"] = "Crag Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72807,
},
[440652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wandering Candle",
["npcID"] = 208450,
},
[463176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voracious Stagshell",
["npcID"] = 222145,
},
[147647] = {
["source"] = "Harbinger of Y'Shaarj",
["event"] = "SPELL_CAST_START",
["npcID"] = 73452,
},
[287070] = {
["encounterName"] = "Opulence",
["npcID"] = 145261,
["encounterID"] = 2271,
},
[387410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boss",
["npcID"] = 194404,
},
[345397] = {
["encounterName"] = "Shriekwing",
["npcID"] = 164406,
["encounterID"] = 2398,
},
[448843] = {
["source"] = "Candleclaw Underboss",
["event"] = "SPELL_CAST_START",
["npcID"] = 213831,
},
[385363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mature Riverbeast",
["npcID"] = 194145,
},
[387411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulharvester Duuren",
["npcID"] = 195928,
},
[396641] = {
["source"] = "Harat the Ancient",
["event"] = "SPELL_CAST_START",
["npcID"] = 196246,
},
[120788] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperial Antiquator",
["npcID"] = 61641,
},
[418128] = {
["source"] = "Lord Thassarian",
["event"] = "SPELL_CAST_START",
["npcID"] = 207822,
},
[403794] = {
["source"] = "Duzalgor",
["event"] = "SPELL_CAST_START",
["npcID"] = 200610,
},
[9232] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["encounterID"] = 1425,
["event"] = "SPELL_CAST_START",
["npcID"] = 3977,
},
[403625] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[368983] = {
["npcID"] = 191378,
},
[123490] = {
["source"] = "Enslaved Bonesmasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 63030,
},
[315742] = {
["npcID"] = 158891,
},
[407891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Farseer",
["npcID"] = 204206,
},
[344411] = {
["npcID"] = 154330,
},
[448847] = {
["encounterName"] = "General Umbriss",
["source"] = "General Umbriss",
["npcID"] = 39625,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1051,
},
[162475] = {
["encounterName"] = "Tectus, The Living Mountain",
["source"] = "Tectus",
["encounterID"] = 1722,
["event"] = "SPELL_CAST_START",
["npcID"] = 78948,
},
[399701] = {
["source"] = "Scavenging Slicer",
["event"] = "SPELL_CAST_START",
["npcID"] = 204508,
},
[147649] = {
["source"] = "Crag Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72807,
},
[317792] = {
["npcID"] = 163366,
},
[463182] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["encounterID"] = 2109,
["event"] = "SPELL_CAST_START",
["npcID"] = 129208,
},
[366938] = {
["npcID"] = 185032,
},
[364891] = {
["npcID"] = 183737,
},
[136387] = {
["npcID"] = 23682,
},
[113764] = {
["encounterName"] = "Brother Korloff",
["source"] = "Brother Korloff",
["encounterID"] = 1424,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59223,
},
[147650] = {
["source"] = "Crag Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72807,
},
[196796] = {
["source"] = "Fel-Infused Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 99956,
},
[414038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aquifon",
["npcID"] = 203468,
},
[223417] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grisly Trapper",
["npcID"] = 112162,
},
[404779] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contamination Investigator",
["npcID"] = 202320,
},
[377179] = {
["npcID"] = 190230,
},
[423491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raelas Firewind",
["npcID"] = 209152,
},
[274792] = {
["npcID"] = 140149,
},
[319843] = {
["npcID"] = 161376,
},
[450899] = {
["source"] = "Cinderbee Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 222976,
},
[321891] = {
["encounterName"] = "Mistcaller",
["npcID"] = 165251,
["encounterID"] = 2392,
},
[311116] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spiked Tentacle",
["npcID"] = 159416,
},
[191678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viletongue Belcher",
["npcID"] = 96480,
},
[368990] = {
["encounterName"] = "Emberon",
["npcID"] = 184422,
["encounterID"] = 2558,
},
[311551] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Dark Inquisitor Xanesh",
["npcID"] = 156575,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2328,
},
[405850] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Destroyer",
["npcID"] = 201753,
},
[373087] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[229562] = {
["npcID"] = 115406,
},
[395612] = {
["event"] = "SPELL_CAST_START",
["source"] = "Helmet Missingway",
["npcID"] = 193263,
},
[422233] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[448854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Drunkard",
["npcID"] = 218655,
},
[336228] = {
["npcID"] = 170303,
},
[321894] = {
["encounterName"] = "Nalthor the Rimebinder",
["encounterID"] = 2390,
["npcID"] = 162693,
},
[446807] = {
["source"] = "Bomb",
["event"] = "SPELL_CAST_START",
["npcID"] = 222787,
},
[457046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifested Protocol",
["npcID"] = 222946,
},
[381280] = {
["source"] = "Uktulut Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 193203,
},
[398634] = {
["source"] = "Irontide Crackshot",
["event"] = "SPELL_CAST_START",
["npcID"] = 200852,
},
[323943] = {
["encounterName"] = "Devos, Paragon of Loyalty",
["npcID"] = 162061,
["encounterID"] = 2359,
},
[115809] = {
["source"] = "Greenwood Trickster",
["event"] = "SPELL_CAST_START",
["npcID"] = 54987,
},
[402989] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[129636] = {
["source"] = "Student of Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 60603,
},
[438618] = {
["source"] = "Engorged Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 214840,
},
[407902] = {
["source"] = "Horde Farseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 204206,
},
[303467] = {
["npcID"] = 176828,
},
[305515] = {
["encounterName"] = "Ravnyr",
["source"] = "Ravnyr",
["encounterID"] = 2326,
["event"] = "SPELL_CAST_START",
["npcID"] = 156501,
},
[115814] = {
["source"] = "Greenwood Trickster",
["event"] = "SPELL_CAST_START",
["npcID"] = 54987,
},
[310580] = {
["encounterName"] = "Drest'agath",
["source"] = "Maw of Drest'agath",
["npcID"] = 157613,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2343,
},
[92265] = {
["encounterName"] = "Slabhide",
["encounterID"] = 1059,
["npcID"] = 43214,
},
[144583] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Farseer Wolf Rider",
["encounterID"] = 1623,
["event"] = "SPELL_CAST_START",
["npcID"] = 71983,
},
[389474] = {
["npcID"] = 190904,
},
[448859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Drunkard",
["npcID"] = 218655,
},
[118104] = {
["source"] = "Unruly Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 56684,
},
[387427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uncontrolled Guardian",
["npcID"] = 181775,
},
[30851] = {
["source"] = "Shadowmoon Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 17395,
},
[285040] = {
["encounterName"] = "Stormwall Blockade",
["npcID"] = 146736,
["encounterID"] = 2280,
},
[192706] = {
["source"] = "Channeler Varisz",
["event"] = "SPELL_CAST_START",
["npcID"] = 100249,
},
[144584] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Farseer Wolf Rider",
["encounterID"] = 1623,
["event"] = "SPELL_CAST_START",
["npcID"] = 71983,
},
[438622] = {
["isChanneled"] = true,
["source"] = "Engorged Crawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214840,
},
[418145] = {
["source"] = "Lord Thassarian",
["event"] = "SPELL_CAST_START",
["npcID"] = 207822,
},
[139465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Ancestor",
["npcID"] = 69237,
},
[384366] = {
["source"] = "Shifting Falcon",
["event"] = "SPELL_CAST_START",
["npcID"] = 195324,
},
[223423] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Tainted Bloodpetal",
["encounterID"] = 1873,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 112118,
},
[398632] = {
["source"] = "Irontide Crackshot",
["event"] = "SPELL_CAST_START",
["npcID"] = 200852,
},
[200898] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Inquisitor Tormentorum",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 96015,
},
[323951] = {
["npcID"] = 168448,
},
[389478] = {
["source"] = "Darktooth Spirit-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195267,
},
[148138] = {
["source"] = "Blackfuse Engineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 73095,
},
[229567] = {
["npcID"] = 115407,
},
[307569] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["npcID"] = 157254,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2333,
},
[215233] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Dominator Tentacle",
["encounterID"] = 1873,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 105304,
},
[448864] = {
["source"] = "Burly Contender",
["event"] = "SPELL_CAST_START",
["npcID"] = 217646,
},
[398631] = {
["source"] = "Irontide Crackshot",
["event"] = "SPELL_CAST_START",
["npcID"] = 200852,
},
[182333] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Stormcaller",
["npcID"] = 88087,
},
[284106] = {
["encounterName"] = "Stormwall Blockade",
["npcID"] = 146251,
["encounterID"] = 2280,
},
[318768] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Psychophage",
["npcID"] = 163947,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[382597] = {
["source"] = "Frost Shackler",
["event"] = "SPELL_CAST_START",
["npcID"] = 190993,
},
[387433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cathan the Determined",
["npcID"] = 192224,
},
[422245] = {
["encounterName"] = "Ol' Waxbeard",
["source"] = "Ol' Waxbeard",
["npcID"] = 210153,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2829,
},
[405696] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["encounterID"] = 2667,
["event"] = "SPELL_CAST_START",
["npcID"] = 198996,
},
[385386] = {
["event"] = "SPELL_CAST_START",
["source"] = "Menial Attendant",
["npcID"] = 192702,
},
[372225] = {
["source"] = "Qalashi Bonesplitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 189467,
},
[392486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Channeler",
["npcID"] = 198047,
},
[399721] = {
["source"] = "Spellsworn Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 200598,
},
[139468] = {
["event"] = "SPELL_CAST_START",
["source"] = "No'ku Stormsayer",
["npcID"] = 70276,
},
[44503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wretched Husk",
["npcID"] = 24690,
},
[274809] = {
["npcID"] = 136496,
},
[445746] = {
["source"] = "Darkwater Tidecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 220621,
},
[200901] = {
["encounterName"] = "Hyrja",
["source"] = "Solsten",
["npcID"] = 97219,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1806,
},
[131034] = {
["source"] = "Vengeful Gurthani Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 65452,
},
[270515] = {
["source"] = "Azerite-Infused Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 137905,
},
[308527] = {
["encounterName"] = "Ravnyr",
["source"] = "Gor'groth",
["encounterID"] = 2326,
["event"] = "SPELL_CAST_START",
["npcID"] = 156814,
},
[418153] = {
["source"] = "Sans-poil la Menace",
["event"] = "SPELL_CAST_START",
["npcID"] = 213550,
},
[313583] = {
["isChanneled"] = true,
["source"] = "Meredy Huntswell",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156943,
},
[426345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Touched Elemental",
["npcID"] = 212400,
},
[73564] = {
["encounterName"] = "Siamat",
["npcID"] = 44819,
["encounterID"] = 1055,
},
[385390] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge-Keep Overseer",
["npcID"] = 192699,
},
[423200] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["encounterID"] = 2880,
["event"] = "SPELL_CAST_START",
["npcID"] = 210156,
},
[405868] = {
["source"] = "Invoq",
["event"] = "SPELL_CAST_START",
["npcID"] = 203627,
},
[387440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ukhel Beastcaller",
["npcID"] = 195878,
},
[393582] = {
["source"] = "Cindershard Igniter",
["event"] = "SPELL_CAST_START",
["npcID"] = 198382,
},
[389488] = {
["npcID"] = 191378,
},
[389487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lookout Mordren",
["npcID"] = 193668,
},
[407917] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[167589] = {
["encounterName"] = "Nitrogg Thundertower",
["npcID"] = 79548,
["encounterID"] = 1732,
},
[40251] = {
["encounterName"] = "Teron Gorefiend",
["source"] = "Teron Gorefiend",
["encounterID"] = 604,
["event"] = "SPELL_CAST_START",
["npcID"] = 22871,
},
[405870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mage Slayer Phytethil",
["npcID"] = 226298,
},
[455016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caustic Skyrazor",
["npcID"] = 225817,
},
[393584] = {
["source"] = "Gladehorn Armoredon",
["event"] = "SPELL_CAST_START",
["npcID"] = 196555,
},
[417752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord Mechagon",
["npcID"] = 205309,
},
[129036] = {
["isChanneled"] = true,
["source"] = "Snagtooth Tool-Grabber",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56185,
},
[384291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ayanga",
["npcID"] = 192961,
},
[325725] = {
["encounterName"] = "Mueh'zala",
["encounterID"] = 2396,
["npcID"] = 166608,
},
[413145] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[411236] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[395097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberdusk",
["npcID"] = 203664,
},
[377204] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["encounterID"] = 2611,
["event"] = "SPELL_CAST_START",
["npcID"] = 189901,
},
[325590] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 165763,
["encounterID"] = 2402,
},
[128105] = {
["source"] = "Oracle Hiss'ir",
["event"] = "SPELL_CAST_START",
["npcID"] = 63998,
},
[419166] = {
["event"] = "SPELL_CAST_START",
["source"] = "Austin Huxworth",
["npcID"] = 209065,
},
[372235] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Iskaaran Speaker",
["npcID"] = 217155,
},
[392480] = {
["source"] = "Galnmor",
["event"] = "SPELL_CAST_START",
["npcID"] = 193853,
},
[401022] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[448877] = {
["encounterName"] = "General Umbriss",
["source"] = "General Umbriss",
["npcID"] = 39625,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1051,
},
[418161] = {
["source"] = "Kirkessen the Zealous",
["event"] = "SPELL_CAST_START",
["npcID"] = 207821,
},
[419344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crenna Earth-Daughter",
["npcID"] = 209072,
},
[332156] = {
["npcID"] = 167963,
},
[191691] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viletongue Belcher",
["npcID"] = 96480,
},
[407198] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[38204] = {
["source"] = "Unbound Corrupter",
["event"] = "SPELL_CAST_START",
["npcID"] = 30868,
},
[368379] = {
["npcID"] = 183516,
},
[55098] = {
["encounterName"] = "Moorabi",
["source"] = "Moorabi",
["encounterID"] = 1980,
["event"] = "SPELL_CAST_START",
["npcID"] = 29305,
},
[157348] = {
["npcID"] = 77942,
},
[379256] = {
["encounterName"] = "Azureblade",
["source"] = "Draconic Image",
["npcID"] = 192955,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2585,
},
[389495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terillod the Devout",
["npcID"] = 193171,
},
[389496] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[335141] = {
["npcID"] = 165824,
},
[395639] = {
["source"] = "Spellforged Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 194401,
},
[260292] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["npcID"] = 131817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2118,
},
[283947] = {
["encounterName"] = "Opulence",
["npcID"] = 146132,
["encounterID"] = 2271,
},
[393592] = {
["source"] = "Gethrel the South Wind",
["event"] = "SPELL_CAST_START",
["npcID"] = 193848,
},
[123499] = {
["source"] = "Set'thik Fanatic",
["event"] = "SPELL_CAST_START",
["npcID"] = 63031,
},
[389497] = {
["source"] = "Eternal Sand",
["event"] = "SPELL_CAST_START",
["npcID"] = 187475,
},
[167120] = {
["npcID"] = 81279,
},
[278919] = {
["npcID"] = 170737,
},
[76634] = {
["npcID"] = 40925,
},
[463217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Guardian",
["npcID"] = 166276,
},
[413622] = {
["source"] = "Infinite Infiltrator",
["event"] = "SPELL_CAST_START",
["npcID"] = 206214,
},
[241305] = {
["encounterName"] = "Harjatan",
["source"] = "Razorjaw Acolyte",
["encounterID"] = 2036,
["event"] = "SPELL_CAST_START",
["npcID"] = 117154,
},
[341390] = {
["npcID"] = 174012,
},
[30937] = {
["source"] = "Shadowmoon Channeler",
["event"] = "SPELL_CAST_START",
["npcID"] = 17653,
},
[288041] = {
["encounterName"] = "Mekkatorque",
["npcID"] = 144796,
["encounterID"] = 2276,
},
[129643] = {
["source"] = "Corporal Jackson Silver",
["event"] = "SPELL_CAST_START",
["npcID"] = 65881,
},
[452980] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggregation of Horrors",
["npcID"] = 220999,
},
[134058] = {
["source"] = "Block Warden Carmine",
["event"] = "SPELL_CAST_START",
["npcID"] = 124024,
},
[114285] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hateful Ko Ko",
["npcID"] = 59430,
},
[370225] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrieking Whelp",
["npcID"] = 187159,
},
[387453] = {
["source"] = "Professor Maxdormu",
["event"] = "SPELL_CAST_START",
["npcID"] = 189668,
},
[162500] = {
["encounterName"] = "Rocketspark and Borka",
["npcID"] = 77803,
["encounterID"] = 1715,
},
[326021] = {
["npcID"] = 172312,
},
[116845] = {
["source"] = "Dook Ookem",
["event"] = "SPELL_CAST_START",
["npcID"] = 55622,
},
[412027] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Infinite Keeper",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 205212,
},
[448888] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[374045] = {
["source"] = "Containment Apparatus",
["event"] = "SPELL_CAST_START",
["npcID"] = 190342,
},
[424315] = {
["source"] = "Druid of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 211086,
},
[63802] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["npcID"] = 33134,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[360835] = {
["npcID"] = 179006,
},
[11985] = {
["npcID"] = 46914,
},
[129132] = {
["source"] = "Mogujia Soul-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 59797,
},
[418121] = {
["source"] = "Klaxxi Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 207923,
},
[79937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zinnin Smythe",
["npcID"] = 99145,
},
[311019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Behemoth",
["npcID"] = 159303,
},
[411730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Hound",
["npcID"] = 205611,
},
[395648] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sogglmoggl",
["npcID"] = 188859,
},
[389505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terillod the Devout",
["npcID"] = 193171,
},
[399744] = {
["source"] = "Spellsworn Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 200598,
},
[316890] = {
["source"] = "Ogre Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 153239,
},
[308953] = {
["encounterName"] = "Drest'agath",
["source"] = "Eye of Drest'agath",
["npcID"] = 157612,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2343,
},
[319831] = {
["npcID"] = 167433,
},
[407936] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[401421] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["encounterID"] = 2666,
["event"] = "SPELL_CAST_START",
["npcID"] = 198995,
},
[395650] = {
["source"] = "Conjured Nightmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 199014,
},
[392472] = {
["source"] = "Galnmor",
["event"] = "SPELL_CAST_START",
["npcID"] = 193853,
},
[399746] = {
["source"] = "Warp Crystal",
["event"] = "SPELL_CAST_START",
["npcID"] = 201082,
},
[200913] = {
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 98792,
},
[114004] = {
["encounterName"] = "Houndmaster Braun",
["source"] = "Houndmaster Braun",
["encounterID"] = 1422,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59303,
},
[259732] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["npcID"] = 131383,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2112,
},
[107120] = {
["encounterName"] = "Commander Ri'mok",
["source"] = "Commander Ri'mok",
["npcID"] = 56636,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1406,
},
[111670] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "Scarlet Zealot",
["encounterID"] = 1425,
["event"] = "SPELL_CAST_START",
["npcID"] = 58590,
},
[395652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sogglmoggl",
["npcID"] = 188859,
},
[55982] = {
["source"] = "Recalled Enormos",
["event"] = "SPELL_CAST_START",
["npcID"] = 225274,
},
[457085] = {
["source"] = "Remembered Firelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 212088,
},
[152792] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[395653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Leg Chewer",
["npcID"] = 217743,
},
[424322] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Fiend",
["npcID"] = 220815,
},
[228559] = {
["npcID"] = 183424,
},
[111216] = {
["encounterName"] = "Armsmaster Harlan",
["source"] = "Armsmaster Harlan",
["encounterID"] = 1421,
["event"] = "SPELL_CAST_START",
["npcID"] = 58632,
},
[321935] = {
["npcID"] = 164707,
},
[64059] = {
["encounterName"] = "Yogg-Saron",
["encounterID"] = 1143,
["npcID"] = 33890,
},
[14033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lorekeeper Vaeldrin",
["npcID"] = 58975,
},
[393607] = {
["source"] = "Bloodclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 187553,
},
[195234] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wavebinder",
["npcID"] = 97170,
},
[438658] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[448897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[319889] = {
["npcID"] = 157036,
},
[387465] = {
["isChanneled"] = true,
["source"] = "Arcane Commander",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190776,
},
[314655] = {
["source"] = "Henry Garrick",
["event"] = "SPELL_CAST_START",
["npcID"] = 161504,
},
[105471] = {
["event"] = "SPELL_CAST_START",
["source"] = "Miss Fanny",
["npcID"] = 56192,
},
[278935] = {
["npcID"] = 170737,
},
[210131] = {
["source"] = "Killclaw the Terrible",
["event"] = "SPELL_CAST_START",
["npcID"] = 153266,
},
[389514] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bazual",
["npcID"] = 193532,
},
[13321] = {
["source"] = "Felhound Manastalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 17401,
},
[385419] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge-Keep Custodian",
["npcID"] = 192703,
},
[214988] = {
["source"] = "Spirit of Vengeance",
["event"] = "SPELL_CAST_START",
["npcID"] = 100364,
},
[389515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broodweaver Araznae",
["npcID"] = 193220,
},
[423523] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anguished Dream Spirit",
["npcID"] = 210304,
},
[129135] = {
["source"] = "Crimson Lory",
["event"] = "SPELL_CAST_START",
["npcID"] = 60198,
},
[346513] = {
["npcID"] = 171581,
},
[418031] = {
["source"] = "Vereesa Windrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 207816,
},
[424328] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxtail Browbeater",
["npcID"] = 213000,
},
[328084] = {
["npcID"] = 168240,
},
[386781] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["npcID"] = 186737,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2583,
},
[406802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cavern Flayer",
["npcID"] = 202307,
},
[432520] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Nightfall Darkcaster",
["npcID"] = 213893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[415435] = {
["source"] = "Coalesced Moment",
["event"] = "SPELL_CAST_START",
["npcID"] = 206064,
},
[369942] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Dreadsquall",
["npcID"] = 191901,
},
[389518] = {
["event"] = "SPELL_CAST_START",
["source"] = "Koroleth",
["npcID"] = 188180,
},
[416139] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 199000,
},
[360850] = {
["npcID"] = 182149,
},
[113641] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["encounterID"] = 1420,
["event"] = "SPELL_CAST_START",
["npcID"] = 59150,
},
[420236] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[326039] = {
["encounterName"] = "Grand Proctor Beryllia",
["npcID"] = 162102,
["encounterID"] = 2362,
},
[393615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huntmaster Amaa",
["npcID"] = 188715,
},
[169179] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[412046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Magmaclaw Snapper",
["npcID"] = 204214,
},
[340375] = {
["npcID"] = 168148,
},
[335129] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 165066,
["encounterID"] = 2418,
},
[403855] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vakan",
["npcID"] = 199855,
},
[348566] = {
["encounterName"] = "Myza's Oasis",
["npcID"] = 180159,
["encounterID"] = 2440,
},
[428130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verlann Timbercrush",
["npcID"] = 207554,
},
[319898] = {
["npcID"] = 168022,
},
[157355] = {
["source"] = "Shadowmoon Channeller",
["event"] = "SPELL_CAST_START",
["npcID"] = 78135,
},
[446859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackblood Coalescence",
["npcID"] = 215205,
},
[208088] = {
["source"] = "Necrodark Greysworn",
["event"] = "SPELL_CAST_START",
["npcID"] = 104565,
},
[120946] = {
["source"] = "Sik'thik Amber-Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 61929,
},
[227542] = {
["encounterName"] = "Moroes",
["npcID"] = 114317,
["encounterID"] = 1961,
},
[119922] = {
["encounterName"] = "Trial of the King",
["source"] = "Kuai the Brute",
["npcID"] = 61442,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1442,
},
[342425] = {
["encounterName"] = "Stone Legion Generals",
["npcID"] = 168113,
["encounterID"] = 2417,
},
[401810] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[453897] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["encounterID"] = 2960,
["event"] = "SPELL_CAST_START",
["npcID"] = 220314,
},
[455052] = {
["source"] = "Supervisor Radlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 220897,
},
[114291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hopper",
["npcID"] = 59464,
},
[360856] = {
["npcID"] = 182392,
},
[305567] = {
["encounterName"] = "Ravnyr",
["source"] = "Ravnyr",
["encounterID"] = 2326,
["event"] = "SPELL_CAST_START",
["npcID"] = 156501,
},
[407596] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[448910] = {
["source"] = "Darklost Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 216260,
},
[360857] = {
["npcID"] = 182149,
},
[369049] = {
["encounterName"] = "Emberon",
["npcID"] = 186107,
["encounterID"] = 2558,
},
[227543] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114284,
["encounterID"] = 1957,
},
[228567] = {
["npcID"] = 114794,
},
[328094] = {
["npcID"] = 168627,
},
[395670] = {
["source"] = "Spellforged Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 194401,
},
[449817] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Toxic Swarmite",
["npcID"] = 222721,
},
[448912] = {
["source"] = "Shadowguard Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 216263,
},
[369050] = {
["npcID"] = 191224,
},
[152801] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[356764] = {
["npcID"] = 181408,
},
[138467] = {
["encounterName"] = "Durumu the Forgotten",
["source"] = "Appraising Eye",
["npcID"] = 67858,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1572,
},
[129496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lupello",
["npcID"] = 56357,
},
[387481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brinetooth Bruiser",
["npcID"] = 187285,
},
[463248] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Defender",
["npcID"] = 171772,
},
[366297] = {
["npcID"] = 184911,
},
[385434] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[419790] = {
["source"] = "Druid of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 210686,
},
[227545] = {
["encounterName"] = "Moroes",
["npcID"] = 114316,
["encounterID"] = 1961,
},
[444820] = {
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215475,
},
[405914] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[297382] = {
["encounterName"] = "King Gobbamak",
["npcID"] = 153172,
["encounterID"] = 2290,
},
[340385] = {
["npcID"] = 168147,
},
[416152] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 199000,
},
[459155] = {
["source"] = "Remembered Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 224157,
},
[395675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Embar Firepath",
["npcID"] = 187767,
},
[389532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Laden Lasher",
["npcID"] = 193541,
},
[435465] = {
["source"] = "Machinist Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 219361,
},
[369055] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Crustshaper",
["npcID"] = 186638,
},
[339966] = {
["npcID"] = 164861,
},
[332196] = {
["npcID"] = 167963,
},
[319910] = {
["npcID"] = 158771,
},
[418202] = {
["source"] = "Infinite Riftmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 208698,
},
[404748] = {
["source"] = "Navigator Bi-Yun",
["event"] = "SPELL_CAST_START",
["npcID"] = 201184,
},
[389534] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korthrox the Destroyer",
["npcID"] = 183422,
},
[228571] = {
["npcID"] = 114794,
},
[388773] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[395678] = {
["source"] = "Spellforged Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 184456,
},
[397726] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrieking Whelp",
["npcID"] = 188100,
},
[375201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruby Peafowl",
["npcID"] = 193609,
},
[121182] = {
["encounterName"] = "Gekkan",
["source"] = "Harthak Flameseeker",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61392,
},
[32417] = {
["isChanneled"] = true,
["source"] = "Zan'thik Manipulator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 65274,
},
[455065] = {
["source"] = "Arax'ne",
["event"] = "SPELL_CAST_START",
["npcID"] = 217465,
},
[81530] = {
["npcID"] = 43537,
},
[434589] = {
["source"] = "Overfiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 217429,
},
[412062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lead Researcher Sytorian",
["npcID"] = 203067,
},
[463256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Defender",
["npcID"] = 171772,
},
[409477] = {
["source"] = "Shadeisethal",
["event"] = "SPELL_CAST_START",
["npcID"] = 203411,
},
[385442] = {
["encounterName"] = "Gulping Goliath",
["event"] = "SPELL_CAST_START",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
},
[394843] = {
["source"] = "Skag the Thrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 193149,
},
[299437] = {
["npcID"] = 151301,
},
[418208] = {
["source"] = "Dark Prophet",
["event"] = "SPELL_CAST_START",
["npcID"] = 206474,
},
[393634] = {
["source"] = "Rakkesh of the Flow",
["event"] = "SPELL_CAST_START",
["npcID"] = 193849,
},
[165093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verdant Mandragora",
["npcID"] = 81983,
},
[299438] = {
["npcID"] = 150249,
},
[444829] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[278961] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diseased Lasher",
["npcID"] = 133870,
},
[289200] = {
["npcID"] = 148488,
},
[405922] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kartoros",
["npcID"] = 202977,
},
[424352] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[114807] = {
["encounterName"] = "Brother Korloff",
["source"] = "Brother Korloff",
["encounterID"] = 1424,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59223,
},
[53824] = {
["source"] = "Undertide Deepfisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 226961,
},
[455069] = {
["source"] = "Arax'ne",
["event"] = "SPELL_CAST_START",
["npcID"] = 217465,
},
[116343] = {
["source"] = "Nahassa",
["event"] = "SPELL_CAST_START",
["npcID"] = 60203,
},
[410019] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["encounterID"] = 2693,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200913,
},
[395685] = {
["source"] = "Spellforged Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 184456,
},
[405924] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krono Sandtongue",
["npcID"] = 205622,
},
[79913] = {
["npcID"] = 25757,
},
[139498] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corpse Spider",
["npcID"] = 68248,
},
[120951] = {
["source"] = "Cho Cho the Wicked",
["event"] = "SPELL_CAST_START",
["npcID"] = 60090,
},
[387497] = {
["source"] = "Time-Lost Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187244,
},
[14034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonevault Geomancer",
["npcID"] = 4853,
},
[360875] = {
["npcID"] = 180722,
},
[321968] = {
["npcID"] = 164929,
},
[81020] = {
["source"] = "Blackscale Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 45984,
},
[320787] = {
["encounterName"] = "The Manastorms",
["encounterID"] = 2394,
["npcID"] = 164556,
},
[360876] = {
["npcID"] = 185755,
},
[115320] = {
["source"] = "Alliance Infiltrator",
["event"] = "SPELL_CAST_START",
["npcID"] = 56303,
},
[400649] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["encounterID"] = 2670,
["event"] = "SPELL_CAST_START",
["npcID"] = 198998,
},
[406792] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Magmaclaw",
["npcID"] = 202288,
},
[409261] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[118781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aiyu the Skillet",
["npcID"] = 56520,
},
[381356] = {
["source"] = "Luddy Quicksnap",
["event"] = "SPELL_CAST_START",
["npcID"] = 193292,
},
[323496] = {
["npcID"] = 165872,
},
[344496] = {
["encounterName"] = "Stone Legion Generals",
["npcID"] = 168113,
["encounterID"] = 2417,
},
[338353] = {
["npcID"] = 173016,
},
[405929] = {
["source"] = "Spellsworn Crecheguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 203368,
},
[453889] = {
["source"] = "Ren'khat",
["event"] = "SPELL_CAST_START",
["npcID"] = 222152,
},
[459171] = {
["source"] = "Val'kyr Shadowguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 227940,
},
[366288] = {
["npcID"] = 184911,
},
[381357] = {
["source"] = "Hunting Ottuk",
["event"] = "SPELL_CAST_START",
["npcID"] = 190267,
},
[335119] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 165066,
["encounterID"] = 2418,
},
[196838] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["npcID"] = 99868,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1807,
},
[395692] = {
["source"] = "Spellforged Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 184456,
},
[157931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Magus",
["npcID"] = 76263,
},
[118905] = {
["npcID"] = 61245,
},
[328117] = {
["encounterName"] = "Sire Denathrius",
["npcID"] = 167406,
["encounterID"] = 2407,
},
[201959] = {
["source"] = "Emberhusk Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 113536,
},
[340404] = {
["npcID"] = 168147,
},
[375216] = {
["source"] = "Nergazurai",
["event"] = "SPELL_CAST_START",
["npcID"] = 195895,
},
[369073] = {
["source"] = "Zaqali Dreamcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 211057,
},
[338357] = {
["npcID"] = 172981,
},
[395695] = {
["source"] = "Sleeping Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 196073,
},
[317880] = {
["npcID"] = 174843,
},
[376073] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[210150] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["encounterID"] = 1792,
["event"] = "SPELL_CAST_START",
["npcID"] = 91005,
},
[348597] = {
["npcID"] = 167744,
},
[32674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Recalled Reanimated Crusader",
["npcID"] = 226096,
},
[258181] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 130400,
},
[132763] = {
["source"] = "Ban Bearheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 62806,
},
[198888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storm Drake",
["npcID"] = 97068,
},
[285118] = {
["encounterName"] = "Stormwall Blockade",
["npcID"] = 146256,
["encounterID"] = 2280,
},
[278976] = {
["npcID"] = 142802,
},
[152814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Bone-Mender",
["npcID"] = 75713,
},
[142576] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Ka'roz the Locust",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71154,
},
[138480] = {
["encounterName"] = "Dark Animus",
["source"] = "Large Anima Golem",
["npcID"] = 69700,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[118906] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Reclaimer Zuan",
["npcID"] = 61305,
},
[362934] = {
["npcID"] = 182326,
},
[178837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cackling Pyromaniac",
["npcID"] = 79510,
},
[120442] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shek'zeer Bladesworn",
["npcID"] = 62563,
},
[46036] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Magister",
["npcID"] = 24685,
},
[387508] = {
["source"] = "Time-Lost Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187244,
},
[178412] = {
["npcID"] = 83761,
},
[450980] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2921,
},
[418225] = {
["source"] = "Vorus'arak",
["event"] = "SPELL_CAST_START",
["npcID"] = 205862,
},
[403891] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 198999,
},
[411916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Devourer",
["npcID"] = 205673,
},
[395214] = {
["source"] = "Worldcarver A'tir",
["event"] = "SPELL_CAST_START",
["npcID"] = 186859,
},
[385462] = {
["source"] = "Rellen, The Learned",
["event"] = "SPELL_CAST_START",
["npcID"] = 190949,
},
[377270] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mesmerized Healer",
["npcID"] = 195961,
},
[54850] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Colossus",
["encounterID"] = 1983,
["event"] = "SPELL_CAST_START",
["npcID"] = 29307,
},
[196242] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadlord Mendacius",
["npcID"] = 99649,
},
[374022] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[199915] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Faceless Voidcaster",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99651,
},
[364986] = {
["npcID"] = 181360,
},
[448944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Snuffercrusher",
["npcID"] = 218662,
},
[355979] = {
["npcID"] = 181044,
},
[277777] = {
["npcID"] = 142219,
},
[389560] = {
["source"] = "Obsidian Tyrant",
["event"] = "SPELL_CAST_START",
["npcID"] = 202483,
},
[309698] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Basher Tentacle",
["npcID"] = 158367,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[229608] = {
["npcID"] = 115486,
},
[152818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Bone-Mender",
["npcID"] = 75713,
},
[299460] = {
["npcID"] = 150250,
},
[49987] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defendo-tank 66D",
["npcID"] = 25758,
},
[395707] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raszageth",
["npcID"] = 199031,
},
[117372] = {
["source"] = "Muck Sifter",
["event"] = "SPELL_CAST_START",
["npcID"] = 65790,
},
[430519] = {
["isChanneled"] = true,
["source"] = "Doomshadow",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208029,
},
[432565] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifested Shadow",
["npcID"] = 211341,
},
[277776] = {
["npcID"] = 142219,
},
[118094] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60710,
},
[128123] = {
["source"] = "Oracle Hiss'ir",
["event"] = "SPELL_CAST_START",
["npcID"] = 63998,
},
[191726] = {
["source"] = "Greater Lightning Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 97022,
},
[377277] = {
["npcID"] = 192221,
},
[121468] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raigonn",
["npcID"] = 61177,
},
[389564] = {
["source"] = "Slavering Snapdragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 195668,
},
[418233] = {
["source"] = "Vorus'arak",
["event"] = "SPELL_CAST_START",
["npcID"] = 205862,
},
[319941] = {
["encounterName"] = "Echelon",
["npcID"] = 164185,
["encounterID"] = 2380,
},
[313798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abyssal Watcher",
["npcID"] = 161173,
},
[124028] = {
["source"] = "Shado-Pan Gatewatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 63564,
},
[391613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subterranean Proto-Dragon",
["npcID"] = 190404,
},
[401447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horrific Aberration",
["npcID"] = 198965,
},
[125564] = {
["isChanneled"] = true,
["source"] = "Maki Waterblade",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 64280,
},
[373184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dying Mage",
["npcID"] = 189769,
},
[392449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Elemental",
["npcID"] = 190173,
},
[229611] = {
["npcID"] = 115486,
},
[364447] = {
["encounterName"] = "Vigilant Guardian",
["npcID"] = 184522,
["encounterID"] = 2512,
},
[389567] = {
["source"] = "Slavering Snapdragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 195668,
},
[120445] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shek'zeer Bladesworn",
["npcID"] = 62563,
},
[459191] = {
["source"] = "Remembered Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 224157,
},
[412093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contaminated Titan Watcher",
["npcID"] = 203834,
},
[278990] = {
["npcID"] = 142802,
},
[394496] = {
["source"] = "Ruinous",
["event"] = "SPELL_CAST_START",
["npcID"] = 193522,
},
[418237] = {
["source"] = "Prophet Skitra",
["event"] = "SPELL_CAST_START",
["npcID"] = 208491,
},
[40877] = {
["source"] = "Dragonmaw Wind Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 23330,
},
[455932] = {
["source"] = "Old Grim",
["event"] = "SPELL_CAST_START",
["npcID"] = 213403,
},
[327474] = {
["npcID"] = 168299,
},
[75907] = {
["encounterName"] = "Lady Naz'jar",
["encounterID"] = 1045,
["npcID"] = 40633,
},
[144631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xuen",
["npcID"] = 71953,
},
[250505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten Gryphon",
["npcID"] = 193154,
},
[334282] = {
["npcID"] = 154330,
},
[147703] = {
["source"] = "Burning Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72895,
},
[342474] = {
["npcID"] = 165759,
},
[332234] = {
["npcID"] = 167967,
},
[375237] = {
["source"] = "Arcane Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 190776,
},
[88194] = {
["npcID"] = 45919,
},
[147704] = {
["source"] = "Burning Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72895,
},
[389572] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Devilsaur",
["npcID"] = 187262,
},
[146680] = {
["isChanneled"] = true,
["source"] = "Crawler Mine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72986,
},
[418241] = {
["source"] = "Prophet Skitra",
["event"] = "SPELL_CAST_START",
["npcID"] = 208491,
},
[312584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Venomweaver",
["npcID"] = 161229,
},
[124030] = {
["source"] = "Shado-Pan Gatewatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 63564,
},
[457149] = {
["source"] = "Shipwright Isaebela",
["event"] = "SPELL_CAST_START",
["npcID"] = 219801,
},
[455104] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abductor Arzda",
["npcID"] = 222836,
},
[289235] = {
["npcID"] = 148607,
},
[324046] = {
["encounterName"] = "Oryphrion",
["npcID"] = 162060,
["encounterID"] = 2358,
},
[440768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Black Blood Container",
["npcID"] = 220002,
},
[373194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windyfin Windbringer",
["npcID"] = 187432,
},
[321999] = {
["npcID"] = 164705,
},
[299474] = {
["npcID"] = 150154,
},
[191732] = {
["source"] = "Greater Lightning Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 97022,
},
[451008] = {
["source"] = "Tephratennae",
["event"] = "SPELL_CAST_START",
["npcID"] = 221126,
},
[387528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mountain Shaper",
["npcID"] = 186329,
},
[227568] = {
["encounterName"] = "Opera Hall",
["encounterID"] = 1957,
["npcID"] = 114261,
},
[317905] = {
["npcID"] = 165323,
},
[198496] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["npcID"] = 91004,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1791,
},
[140539] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Defender",
["npcID"] = 200527,
},
[198641] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Kur'talos Ravencrest",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98965,
},
[167966] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["npcID"] = 83893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[360909] = {
["npcID"] = 182150,
},
[144635] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xuen",
["npcID"] = 71953,
},
[412922] = {
["source"] = "Spurlok, Timesworn Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 205158,
},
[284362] = {
["encounterName"] = "Stormwall Blockade",
["npcID"] = 146253,
["encounterID"] = 2280,
},
[328146] = {
["encounterName"] = "Blightbone",
["encounterID"] = 2387,
["npcID"] = 164702,
},
[179091] = {
["source"] = "Nar'thalas Magister",
["event"] = "SPELL_CAST_START",
["npcID"] = 88783,
},
[174328] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulbinder Nyami",
["npcID"] = 76177,
},
[316677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Swarmkeeper",
["npcID"] = 162303,
},
[319956] = {
["npcID"] = 167055,
},
[125568] = {
["source"] = "Maki Waterblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 64280,
},
[405962] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bronogg the Bully",
["npcID"] = 203386,
},
[320772] = {
["encounterName"] = "Nalthor the Rimebinder",
["encounterID"] = 2390,
["npcID"] = 162693,
},
[319957] = {
["npcID"] = 161537,
},
[436679] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarab Captain Vul'akan",
["npcID"] = 218306,
},
[365008] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 183033,
["encounterID"] = 2546,
},
[191735] = {
["source"] = "Felsworn Myrmidon",
["event"] = "SPELL_CAST_START",
["npcID"] = 98954,
},
[125056] = {
["npcID"] = 165189,
},
[46406] = {
["npcID"] = 25756,
},
[365009] = {
["npcID"] = 184409,
},
[369921] = {
["source"] = "Lava Phoenix",
["event"] = "SPELL_CAST_START",
["npcID"] = 187932,
},
[417598] = {
["source"] = "Drest'Agath the Corrupted",
["event"] = "SPELL_CAST_START",
["npcID"] = 207925,
},
[7978] = {
["npcID"] = 46772,
},
[389583] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Manipulator",
["npcID"] = 188172,
},
[375249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jadethroat Mallard",
["npcID"] = 190708,
},
[423531] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anguished Dream Spirit",
["npcID"] = 210304,
},
[320771] = {
["encounterName"] = "Nalthor the Rimebinder",
["encounterID"] = 2390,
["npcID"] = 162693,
},
[392442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kholdeg",
["npcID"] = 194608,
},
[424087] = {
["source"] = "Zaqali Devastator",
["event"] = "SPELL_CAST_START",
["npcID"] = 207089,
},
[369107] = {
["npcID"] = 185272,
},
[173307] = {
["npcID"] = 83390,
},
[198904] = {
["npcID"] = 99358,
},
[375251] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 181861,
},
[322818] = {
["encounterName"] = "Devos, Paragon of Loyalty",
["npcID"] = 162061,
["encounterID"] = 2359,
},
[384538] = {
["source"] = "Memory of a Tuskarr Hero",
["event"] = "SPELL_CAST_START",
["npcID"] = 194731,
},
[118914] = {
["source"] = "Shado-Pan Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 61252,
},
[391634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacial Proto-Dragon",
["npcID"] = 190403,
},
[459210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Bound Despoiler",
["npcID"] = 212765,
},
[264608] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["npcID"] = 133219,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[409041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Prototype",
["npcID"] = 203927,
},
[341742] = {
["npcID"] = 174336,
},
[369110] = {
["encounterName"] = "Emberon",
["npcID"] = 184422,
["encounterID"] = 2558,
},
[40876] = {
["source"] = "Dragonmaw Wind Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 23330,
},
[401383] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[338005] = {
["npcID"] = 165415,
},
[193164] = {
["source"] = "Blade Dancer Illianna",
["event"] = "SPELL_CAST_START",
["npcID"] = 96657,
},
[107140] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Azure Serpent",
["npcID"] = 56754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1303,
},
[286619] = {
["encounterName"] = "Stormwall Blockade",
["npcID"] = 146256,
["encounterID"] = 2280,
},
[183548] = {
["source"] = "Stoneclaw Grubmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 102404,
},
[418258] = {
["source"] = "Imperial Vizier Zor'lok",
["event"] = "SPELL_CAST_START",
["npcID"] = 208500,
},
[420306] = {
["source"] = "Primalist Chainmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 211058,
},
[227575] = {
["encounterName"] = "Moroes",
["npcID"] = 114316,
["encounterID"] = 1961,
},
[412081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Draconic Golem",
["npcID"] = 203826,
},
[393686] = {
["source"] = "Turboris",
["event"] = "SPELL_CAST_START",
["npcID"] = 187886,
},
[348128] = {
["encounterName"] = "Zo'phex the Sentinel",
["npcID"] = 175616,
["encounterID"] = 2425,
},
[372562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadepaw Hunter",
["npcID"] = 186490,
},
[412117] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[279013] = {
["encounterName"] = "Mythrax",
["npcID"] = 134546,
["encounterID"] = 2135,
},
[144642] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xuen",
["npcID"] = 71953,
},
[397783] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["npcID"] = 56448,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1418,
},
[333612] = {
["npcID"] = 168374,
},
[41032] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[173311] = {
["npcID"] = 83390,
},
[451026] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[10452] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Sculptor",
["npcID"] = 7012,
},
[418262] = {
["isChanneled"] = true,
["source"] = "Treasure Wraith",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208728,
},
[389594] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horace \"Scalding\" Stern",
["npcID"] = 186430,
},
[430549] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Foul Offering",
["npcID"] = 214994,
},
[371984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[406771] = {
["source"] = "Memory of a Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 200827,
},
[412914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragment of Shadow",
["npcID"] = 205968,
},
[153544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diving Chakram Spinner",
["npcID"] = 76116,
},
[383452] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imbu Bakar",
["npcID"] = 190745,
},
[196508] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Deranged Mindflayer",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99657,
},
[417751] = {
["source"] = "Klaxxi Blade Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 207922,
},
[388340] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kalecgos",
["npcID"] = 196439,
},
[165122] = {
["encounterName"] = "Grimrail Enforcers",
["npcID"] = 80816,
["encounterID"] = 1748,
},
[344546] = {
["npcID"] = 162880,
},
[362976] = {
["npcID"] = 185944,
},
[172771] = {
["npcID"] = 86809,
},
[378886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turi Flickerflame",
["npcID"] = 199740,
},
[300687] = {
["npcID"] = 150168,
},
[374699] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[154442] = {
["encounterName"] = "Ner'zhul",
["source"] = "Ner'zhul",
["npcID"] = 76407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1682,
},
[228603] = {
["npcID"] = 114804,
},
[365026] = {
["npcID"] = 182318,
},
[201983] = {
["source"] = "Emberhusk Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 113537,
},
[381408] = {
["source"] = "Shiverweb Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 192591,
},
[408029] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Loszkeleth",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 201790,
},
[88201] = {
["npcID"] = 45919,
},
[436698] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarab Captain Vul'akan",
["npcID"] = 218306,
},
[362184] = {
["encounterName"] = "Rygelon",
["encounterID"] = 2549,
["npcID"] = 182777,
},
[393696] = {
["source"] = "Vadne Bleakheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 195764,
},
[418269] = {
["source"] = "Imperial Vizier Zor'lok",
["event"] = "SPELL_CAST_START",
["npcID"] = 208500,
},
[224510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Battle-Magus",
["npcID"] = 112671,
},
[132752] = {
["source"] = "Darkhatched Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 67255,
},
[106827] = {
["encounterName"] = "Sha of Violence",
["source"] = "Sha of Violence",
["npcID"] = 56719,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1305,
},
[40875] = {
["source"] = "Dragonmaw Wind Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 23330,
},
[129669] = {
["source"] = "Glade Singer",
["event"] = "SPELL_CAST_START",
["npcID"] = 58766,
},
[299502] = {
["npcID"] = 155094,
},
[424414] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["npcID"] = 207946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[328170] = {
["npcID"] = 162057,
},
[394479] = {
["source"] = "Primordial Hail",
["event"] = "SPELL_CAST_START",
["npcID"] = 189039,
},
[438749] = {
["encounterName"] = "The Silken Court",
["source"] = "Shattershell Scarab",
["npcID"] = 218884,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2921,
},
[326123] = {
["npcID"] = 159665,
},
[376049] = {
["encounterName"] = "Chrono-Lord Deios",
["npcID"] = 184125,
["encounterID"] = 2559,
},
[412129] = {
["source"] = "Lerai, Timesworn Maiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 205152,
},
[264603] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["npcID"] = 131318,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2111,
},
[228606] = {
["npcID"] = 114803,
},
[164102] = {
["npcID"] = 81235,
},
[360432] = {
["npcID"] = 178803,
},
[457183] = {
["source"] = "Shadowspinner Azarak",
["event"] = "SPELL_CAST_START",
["npcID"] = 222612,
},
[274213] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["npcID"] = 131383,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2112,
},
[459229] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaz'vik",
["npcID"] = 219751,
},
[111752] = {
["source"] = "Scholomance Neophyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 58823,
},
[365033] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[424419] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["npcID"] = 207946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[369129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Modak Flamespit",
["npcID"] = 186509,
},
[387559] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[128134] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ilikkax",
["npcID"] = 62833,
},
[317936] = {
["npcID"] = 163459,
},
[272888] = {
["source"] = "Ashvane Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 137517,
},
[346605] = {
["npcID"] = 182296,
},
[408811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Siegemaster",
["npcID"] = 198874,
},
[424420] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Taener Duelmal",
["npcID"] = 211289,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[260349] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ten'gor",
["npcID"] = 130713,
},
[403943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Veltrax",
["npcID"] = 200904,
},
[332272] = {
["npcID"] = 170039,
},
[424421] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Taener Duelmal",
["npcID"] = 211289,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[328177] = {
["npcID"] = 168572,
},
[420326] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamebound Sentinel",
["npcID"] = 206900,
},
[397801] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["npcID"] = 56448,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1418,
},
[451044] = {
["source"] = "Amber Honeyslime",
["event"] = "SPELL_CAST_START",
["npcID"] = 222846,
},
[334324] = {
["npcID"] = 171376,
},
[412136] = {
["source"] = "Valow, Timesworn Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 201222,
},
[414184] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[424423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sergeant Shaynemail",
["npcID"] = 211291,
},
[418280] = {
["source"] = "Uther",
["event"] = "SPELL_CAST_START",
["npcID"] = 207818,
},
[387564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conjured Lasher",
["npcID"] = 196102,
},
[162058] = {
["encounterName"] = "Skylord Tovra",
["npcID"] = 80005,
["encounterID"] = 1736,
},
[440806] = {
["encounterName"] = "Nerl'athekk the Skulking",
["source"] = "Nerl'athekk the Skulking",
["npcID"] = 219676,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2946,
},
[385517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbow Sentry",
["npcID"] = 187021,
},
[395756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Flamemuzzler",
["npcID"] = 194222,
},
[340467] = {
["npcID"] = 173756,
},
[224515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nobleborn Warpcaster",
["npcID"] = 112676,
},
[161035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frenzied Animus",
["npcID"] = 96579,
},
[136462] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Squallshaper",
["npcID"] = 71367,
},
[413147] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[317943] = {
["npcID"] = 163457,
},
[356133] = {
["npcID"] = 180015,
},
[451812] = {
["source"] = "Dogmatic Forgecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 212884,
},
[407796] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[334326] = {
["npcID"] = 171376,
},
[188053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel Hellweaver",
["npcID"] = 94806,
},
[141427] = {
["npcID"] = 183257,
},
[178442] = {
["npcID"] = 89144,
},
[451811] = {
["source"] = "Pious Disciple",
["event"] = "SPELL_CAST_START",
["npcID"] = 217464,
},
[228278] = {
["npcID"] = 114633,
},
[214278] = {
["encounterName"] = "Grand Magistrix Elisande",
["source"] = "Elisande",
["npcID"] = 106643,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1872,
},
[365044] = {
["npcID"] = 182318,
},
[276991] = {
["source"] = "Ogre Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 156676,
},
[319994] = {
["npcID"] = 168216,
},
[365805] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 181954,
["encounterID"] = 2546,
},
[459242] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nix'k the Wicked",
["npcID"] = 219749,
},
[334329] = {
["npcID"] = 171376,
},
[319995] = {
["npcID"] = 158771,
},
[387571] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[128137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ilikkax",
["npcID"] = 62833,
},
[424431] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["npcID"] = 211290,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[200969] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Tor",
["npcID"] = 97084,
},
[395763] = {
["source"] = "Qalashi Magmacrafter",
["event"] = "SPELL_CAST_START",
["npcID"] = 187867,
},
[121994] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber-Shaper Un'sok",
["encounterID"] = 1499,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62511,
},
[333861] = {
["npcID"] = 167533,
},
[319997] = {
["npcID"] = 164510,
},
[374364] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[381430] = {
["npcID"] = 190388,
},
[407097] = {
["source"] = "Earthrender Ku'siva",
["event"] = "SPELL_CAST_START",
["npcID"] = 199840,
},
[377335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kob'rok",
["npcID"] = 203462,
},
[157331] = {
["npcID"] = 77942,
},
[372441] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hyenamaster Durgun",
["npcID"] = 186515,
},
[393718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huntmaster Amaa",
["npcID"] = 188715,
},
[459246] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Broken Queen",
["npcID"] = 214368,
},
[284781] = {
["encounterName"] = "King Rastakhan",
["npcID"] = 146326,
["encounterID"] = 2272,
},
[374544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Rotsinger",
["npcID"] = 186226,
},
[372828] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudfin Shaman",
["npcID"] = 186679,
},
[418292] = {
["source"] = "Treasure Wraith",
["event"] = "SPELL_CAST_START",
["npcID"] = 208728,
},
[408805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Incorporeal Being",
["npcID"] = 204560,
},
[227592] = {
["encounterName"] = "Shade of Medivh",
["npcID"] = 114350,
["encounterID"] = 1965,
},
[382791] = {
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193944,
},
[377338] = {
["source"] = "Aqualing",
["event"] = "SPELL_CAST_START",
["npcID"] = 190406,
},
[418295] = {
["source"] = "Treasure Wraith",
["event"] = "SPELL_CAST_START",
["npcID"] = 208728,
},
[455153] = {
["source"] = "Abyssal Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 216031,
},
[116364] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["encounterID"] = 1390,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60009,
},
[394470] = {
["source"] = "Ko'jo",
["event"] = "SPELL_CAST_START",
["npcID"] = 186367,
},
[228991] = {
["encounterName"] = "Shade of Medivh",
["npcID"] = 114675,
["encounterID"] = 1965,
},
[299525] = {
["npcID"] = 150250,
},
[326146] = {
["npcID"] = 157558,
},
[385531] = {
["encounterName"] = "Gulping Goliath",
["event"] = "SPELL_CAST_START",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
},
[374743] = {
["npcID"] = 115488,
},
[403671] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[338434] = {
["npcID"] = 162875,
},
[377341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqua Rager",
["npcID"] = 190407,
},
[121484] = {
["source"] = "Wuk-Wuk",
["event"] = "SPELL_CAST_START",
["npcID"] = 56691,
},
[340482] = {
["npcID"] = 162711,
},
[430503] = {
["source"] = "Doomshadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 208029,
},
[360960] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["npcID"] = 181224,
["encounterID"] = 2540,
},
[247049] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Oenia Skyhorn",
["npcID"] = 104849,
},
[422393] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skittering Darkness",
["npcID"] = 208457,
},
[385536] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primalist Flamedancer",
["npcID"] = 190206,
},
[37965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underbog Shambler",
["npcID"] = 17871,
},
[453110] = {
["source"] = "The Puppetmaster?",
["event"] = "SPELL_CAST_START",
["npcID"] = 220507,
},
[197250] = {
["encounterName"] = "Cordana Felsong",
["source"] = "Cordana Felsong",
["npcID"] = 95888,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1818,
},
[375296] = {
["npcID"] = 187131,
},
[377344] = {
["source"] = "Territorial Eagle",
["event"] = "SPELL_CAST_START",
["npcID"] = 192329,
},
[420347] = {
["source"] = "Kaldorei Archdruid",
["event"] = "SPELL_CAST_START",
["npcID"] = 211066,
},
[324103] = {
["npcID"] = 162133,
},
[257288] = {
["encounterName"] = "Chopper Redhook",
["source"] = "Irontide Cleaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 129879,
},
[451064] = {
["source"] = "Amber Honeyslime",
["event"] = "SPELL_CAST_START",
["npcID"] = 222846,
},
[320008] = {
["encounterName"] = "The Manastorms",
["encounterID"] = 2394,
["npcID"] = 164556,
},
[227966] = {
["npcID"] = 114544,
},
[173180] = {
["source"] = "Mire Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 85694,
},
[156722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Exhumer",
["npcID"] = 77700,
},
[387585] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[390940] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarls",
["npcID"] = 197354,
},
[367108] = {
["npcID"] = 184413,
},
[125069] = {
["source"] = "Amber-Ridden Mushan",
["event"] = "SPELL_CAST_START",
["npcID"] = 63568,
},
[432638] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Ascendant",
["npcID"] = 212793,
},
[136473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Admiral Hodgson",
["npcID"] = 71327,
},
[317963] = {
["npcID"] = 163458,
},
[369157] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Tarasek",
["npcID"] = 188372,
},
[156294] = {
["source"] = "Iron Crack-Shot",
["event"] = "SPELL_CAST_START",
["npcID"] = 81315,
},
[307725] = {
["encounterName"] = "Prophet Skitra",
["source"] = "Prophet Skitra",
["npcID"] = 157238,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2334,
},
[416256] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron's Creation",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 204918,
},
[393731] = {
["source"] = "Charfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 187751,
},
[444925] = {
["source"] = "Drifting Sporebloom",
["event"] = "SPELL_CAST_START",
["npcID"] = 214961,
},
[6535] = {
["npcID"] = 3273,
},
[301583] = {
["npcID"] = 155465,
},
[406752] = {
["source"] = "Memory of a Betrayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200828,
},
[411862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animation Fluid",
["npcID"] = 203939,
},
[409313] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[386555] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
},
[200784] = {
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 98792,
},
[376727] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[394464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Piercer Gigra",
["npcID"] = 186511,
},
[40873] = {
["source"] = "Dragonmaw Sky Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 23030,
},
[196883] = {
["source"] = "Lord Etheldrin Ravencrest",
["event"] = "SPELL_CAST_START",
["npcID"] = 98521,
},
[374020] = {
["source"] = "Containment Apparatus",
["event"] = "SPELL_CAST_START",
["npcID"] = 190342,
},
[198931] = {
["source"] = "Valarjar Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 207026,
},
[383496] = {
["source"] = "Strunraan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193534,
},
[282031] = {
["encounterName"] = "Jadefire Masters",
["npcID"] = 144691,
["encounterID"] = 2285,
},
[136475] = {
["npcID"] = 23682,
},
[365067] = {
["npcID"] = 182318,
},
[195595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Elemental",
["npcID"] = 99300,
},
[39849] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[395784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raszageth",
["npcID"] = 199031,
},
[39593] = {
["source"] = "Ashtongue Searing Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 22896,
},
[407285] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Skullcrusher",
["npcID"] = 202258,
},
[76325] = {
["npcID"] = 39708,
},
[363021] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 183463,
["encounterID"] = 2546,
},
[88080] = {
["npcID"] = 47238,
},
[342544] = {
["encounterName"] = "Stone Legion Generals",
["npcID"] = 168113,
["encounterID"] = 2417,
},
[320019] = {
["npcID"] = 167022,
},
[292910] = {
["npcID"] = 181061,
},
[402983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gholna",
["npcID"] = 199853,
},
[416264] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 199000,
},
[387596] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Mystic",
["npcID"] = 195877,
},
[403978] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["npcID"] = 202375,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2689,
},
[379406] = {
["source"] = "Qalashi Lavabearer",
["event"] = "SPELL_CAST_START",
["npcID"] = 189472,
},
[455893] = {
["source"] = "Animated Azerite",
["event"] = "SPELL_CAST_START",
["npcID"] = 223952,
},
[198934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Mystic",
["npcID"] = 95834,
},
[363024] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 183671,
["encounterID"] = 2546,
},
[124048] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osul Sharphorn",
["npcID"] = 60647,
},
[172673] = {
["source"] = "Henry Garrick",
["event"] = "SPELL_CAST_START",
["npcID"] = 155197,
},
[37967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underbog Shambler",
["npcID"] = 17871,
},
[394763] = {
["event"] = "SPELL_CAST_START",
["source"] = "Private Shikzar",
["npcID"] = 193127,
},
[315927] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["npcID"] = 158041,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[449031] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Slashjaw",
["npcID"] = 218654,
},
[434697] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[258169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandana the Tempest",
["npcID"] = 193176,
},
[111762] = {
["source"] = "Scholomance Neophyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 58823,
},
[129859] = {
["source"] = "Student of Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 60603,
},
[204472] = {
["source"] = "Frozen Mist",
["event"] = "SPELL_CAST_START",
["npcID"] = 104979,
},
[321399] = {
["npcID"] = 163084,
},
[449034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Slashjaw",
["npcID"] = 218654,
},
[332313] = {
["encounterName"] = "Domina Venomblade",
["encounterID"] = 2385,
["npcID"] = 164266,
},
[385553] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Stormseeker Acolyte",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 194990,
},
[453129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caustic Bomber",
["npcID"] = 224970,
},
[424462] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Taener Duelmal",
["npcID"] = 211289,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[142623] = {
["source"] = "Hekima the Wise",
["event"] = "SPELL_CAST_START",
["npcID"] = 70544,
},
[418318] = {
["source"] = "Faceless One",
["event"] = "SPELL_CAST_START",
["npcID"] = 206463,
},
[338456] = {
["npcID"] = 172981,
},
[422414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuffling Horror",
["npcID"] = 208456,
},
[408080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kob'rok",
["npcID"] = 203462,
},
[321520] = {
["npcID"] = 166926,
},
[360538] = {
["npcID"] = 182120,
},
[315932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron-Willed Enforcer",
["npcID"] = 162718,
},
[326171] = {
["encounterName"] = "Mueh'zala",
["encounterID"] = 2396,
["npcID"] = 166608,
},
[320028] = {
["npcID"] = 161105,
},
[412177] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carcaxas",
["npcID"] = 202836,
},
[173148] = {
["npcID"] = 81279,
},
[169825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Addled Arcanomancer",
["npcID"] = 84990,
},
[393750] = {
["source"] = "Taresh",
["event"] = "SPELL_CAST_START",
["npcID"] = 188711,
},
[332318] = {
["encounterName"] = "Sludgefist",
["npcID"] = 164407,
["encounterID"] = 2399,
},
[82760] = {
["npcID"] = 44982,
},
[449038] = {
["encounterName"] = "Overseer Kaskel",
["source"] = "Overseer Kaskel",
["npcID"] = 220437,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2990,
},
[385558] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190485,
},
[161056] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frenzied Animus",
["npcID"] = 96579,
},
[178461] = {
["npcID"] = 86144,
},
[102410] = {
["encounterName"] = "Echo of Jaina",
["npcID"] = 54693,
["encounterID"] = 1883,
},
[221464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chaos Mage Beleron",
["npcID"] = 111225,
},
[444944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Light-Bathed Eagle",
["npcID"] = 223191,
},
[438801] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[428563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Flametender",
["npcID"] = 213913,
},
[428564] = {
["isChanneled"] = true,
["source"] = "Molten Scorpid",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210290,
},
[387608] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ukhel Corruptor",
["npcID"] = 195842,
},
[346654] = {
["encounterName"] = "The Council of Blood",
["npcID"] = 166969,
["encounterID"] = 2412,
},
[317985] = {
["npcID"] = 163520,
},
[393752] = {
["source"] = "Vadne Bleakheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 195764,
},
[444946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormtop Terralisk",
["npcID"] = 214581,
},
[298212] = {
["encounterName"] = "Gunker",
["encounterID"] = 2292,
["npcID"] = 150222,
},
[79176] = {
["isChanneled"] = true,
["source"] = "Azure Prickly Crawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60437,
},
[372279] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[194682] = {
["source"] = "Blazing Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 98963,
},
[453140] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[387614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ukhel Deathspeaker",
["npcID"] = 195851,
},
[388310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Protector",
["npcID"] = 198343,
},
[453144] = {
["source"] = "Tephratennae",
["event"] = "SPELL_CAST_START",
["npcID"] = 221126,
},
[278866] = {
["npcID"] = 142800,
},
[361001] = {
["encounterName"] = "Vigilant Guardian",
["npcID"] = 184522,
["encounterID"] = 2512,
},
[3110] = {
["npcID"] = 416,
},
[346657] = {
["encounterName"] = "The Council of Blood",
["npcID"] = 166969,
["encounterID"] = 2412,
},
[332329] = {
["npcID"] = 170486,
},
[30633] = {
["source"] = "Crystalline Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 26792,
},
[106646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flying Snow",
["npcID"] = 56473,
},
[387613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ukhel Corruptor",
["npcID"] = 195842,
},
[381470] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["npcID"] = 186125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[375327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subterranean Proto-Dragon",
["npcID"] = 190404,
},
[395811] = {
["source"] = "Qalashi Pillager",
["event"] = "SPELL_CAST_START",
["npcID"] = 190983,
},
[453142] = {
["event"] = "SPELL_CAST_START",
["source"] = "Web Marauder",
["npcID"] = 219034,
},
[435403] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[451098] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Sureki Militant",
["npcID"] = 213932,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[432673] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Looter",
["npcID"] = 216303,
},
[363042] = {
["npcID"] = 181958,
},
[79175] = {
["isChanneled"] = true,
["source"] = "Azure Prickly Crawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60437,
},
[11990] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Firemane Flamecaller",
["npcID"] = 4334,
},
[168227] = {
["encounterName"] = "Skulloc, Son of Gruul",
["npcID"] = 83612,
["encounterID"] = 1754,
},
[444953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xur'khun the Defiled",
["npcID"] = 221845,
},
[340057] = {
["npcID"] = 174336,
},
[435405] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["npcID"] = 217748,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[418333] = {
["source"] = "Queen Angerboda",
["event"] = "SPELL_CAST_START",
["npcID"] = 207823,
},
[227616] = {
["encounterName"] = "Moroes",
["npcID"] = 114319,
["encounterID"] = 1961,
},
[198944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Shieldmaiden",
["npcID"] = 95832,
},
[375331] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[116886] = {
["source"] = "Dook Ookem",
["event"] = "SPELL_CAST_START",
["npcID"] = 55622,
},
[387618] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primalist Infuser",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 196043,
},
[315947] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["npcID"] = 157439,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2337,
},
[228637] = {
["npcID"] = 114802,
},
[451099] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Sureki Militant",
["npcID"] = 213932,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[373972] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primalist Flamedancer",
["npcID"] = 190206,
},
[159017] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zipteq",
["npcID"] = 78734,
},
[451107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Webmage",
["npcID"] = 210966,
},
[455203] = {
["source"] = "XT-Minecrusher 8700",
["event"] = "SPELL_CAST_START",
["npcID"] = 216034,
},
[444957] = {
["event"] = "SPELL_CAST_START",
["source"] = "Light-Bathed Eagle",
["npcID"] = 223191,
},
[423117] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[330968] = {
["npcID"] = 174842,
},
[320729] = {
["encounterName"] = "Xav the Unfallen",
["npcID"] = 162329,
["encounterID"] = 2366,
},
[453149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Web Marauder",
["npcID"] = 219034,
},
[285250] = {
["npcID"] = 146553,
},
[328248] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 165763,
["encounterID"] = 2402,
},
[451102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ascendant Vis'coxria",
["npcID"] = 211261,
},
[264757] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["npcID"] = 131318,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2111,
},
[227615] = {
["encounterName"] = "Shade of Medivh",
["npcID"] = 114350,
["encounterID"] = 1965,
},
[334381] = {
["npcID"] = 171384,
},
[377384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqua Rager",
["npcID"] = 190407,
},
[453161] = {
["source"] = "Hulking Bloodguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 216338,
},
[337110] = {
["encounterName"] = "The Council of Blood",
["npcID"] = 166969,
["encounterID"] = 2412,
},
[451113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Webmage",
["npcID"] = 210966,
},
[225568] = {
["npcID"] = 99366,
},
[202019] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[332335] = {
["npcID"] = 170488,
},
[212258] = {
["encounterName"] = "Gul'dan",
["source"] = "Gul'dan",
["npcID"] = 104154,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1866,
},
[406733] = {
["source"] = "Memory of a Traitorous Sister",
["event"] = "SPELL_CAST_START",
["npcID"] = 200826,
},
[395816] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Ironskin",
["npcID"] = 191524,
},
[455201] = {
["source"] = "Corrupted Blood",
["event"] = "SPELL_CAST_START",
["npcID"] = 223951,
},
[277047] = {
["npcID"] = 136493,
},
[385578] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[141619] = {
["source"] = "Frostmane Bonechiller",
["event"] = "SPELL_CAST_START",
["npcID"] = 70465,
},
[324146] = {
["encounterName"] = "Ventunax",
["npcID"] = 162058,
["encounterID"] = 2356,
},
[375348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gusting Proto-Dragon",
["npcID"] = 190401,
},
[369197] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonbane Firebinder",
["npcID"] = 186599,
},
[412200] = {
["source"] = "Time-Lost Aerobot",
["event"] = "SPELL_CAST_START",
["npcID"] = 205723,
},
[166185] = {
["source"] = "Highmaul Conscript",
["event"] = "SPELL_CAST_START",
["npcID"] = 82519,
},
[391723] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamegullet",
["npcID"] = 197697,
},
[377389] = {
["source"] = "Alpha Eagle",
["event"] = "SPELL_CAST_START",
["npcID"] = 192333,
},
[395819] = {
["source"] = "Qalashi Scaleripper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187908,
},
[406058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tentacle",
["npcID"] = 203406,
},
[300650] = {
["npcID"] = 150169,
},
[393772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hihveer",
["npcID"] = 188717,
},
[387629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Desecrated Ohuna",
["npcID"] = 195876,
},
[438823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diabolic Imp",
["npcID"] = 219161,
},
[208165] = {
["encounterName"] = "Talixae Flamewreath",
["encounterID"] = 1869,
["npcID"] = 104217,
},
[395827] = {
["event"] = "SPELL_CAST_START",
["source"] = "Parched Broadhoof Bull",
["npcID"] = 194352,
},
[453164] = {
["source"] = "Tephratennae",
["event"] = "SPELL_CAST_START",
["npcID"] = 221126,
},
[320067] = {
["npcID"] = 160747,
},
[391726] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderhead",
["npcID"] = 197698,
},
[451117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ixkreten the Unbreakable",
["npcID"] = 211262,
},
[387631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ergburk",
["npcID"] = 194409,
},
[455877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepwater Abomination",
["npcID"] = 215654,
},
[396492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slobberclaw",
["npcID"] = 195972,
},
[79939] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zinnin Smythe",
["npcID"] = 99145,
},
[131379] = {
["source"] = "Tisse-malheur gatrul’lon",
["event"] = "SPELL_CAST_START",
["npcID"] = 66267,
},
[438826] = {
["source"] = "Atik",
["event"] = "SPELL_CAST_START",
["npcID"] = 217533,
},
[389686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Fury",
["npcID"] = 196116,
},
[123033] = {
["source"] = "Lao-Chin the Iron Belly",
["event"] = "SPELL_CAST_START",
["npcID"] = 62804,
},
[222501] = {
["npcID"] = 147827,
},
[361024] = {
["npcID"] = 181007,
},
[159021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Durag the Dominator",
["npcID"] = 77890,
},
[451114] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Darkness",
["npcID"] = 213905,
},
[435398] = {
["source"] = "Algari Expedition Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 217676,
},
[397878] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupt Living Water",
["npcID"] = 59873,
},
[301629] = {
["npcID"] = 150297,
},
[143666] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Iyyokuk the Lucid",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71160,
},
[444972] = {
["event"] = "SPELL_CAST_START",
["source"] = "Saurolisk Ambusher",
["npcID"] = 224725,
},
[463408] = {
["encounterName"] = "Researcher Ven'kex",
["source"] = "Researcher Ven'kex",
["npcID"] = 219856,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2991,
},
[412215] = {
["source"] = "Spurlok, Timesworn Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 205158,
},
[258338] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Raoul",
["npcID"] = 126847,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[338490] = {
["npcID"] = 162875,
},
[397881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupt Living Water",
["npcID"] = 59873,
},
[341200] = {
["npcID"] = 174100,
},
[393780] = {
["source"] = "Flame Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192764,
},
[163121] = {
["source"] = "Iron Taskmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 80708,
},
[131381] = {
["source"] = "Mande-flammes gatrul’lon",
["event"] = "SPELL_CAST_START",
["npcID"] = 66268,
},
[375351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacial Proto-Dragon",
["npcID"] = 190403,
},
[393781] = {
["source"] = "Flame Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192764,
},
[83780] = {
["npcID"] = 44897,
},
[275012] = {
["source"] = "Hunting Worg",
["event"] = "SPELL_CAST_START",
["npcID"] = 152998,
},
[449071] = {
["source"] = "Kobold Taskfinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 204127,
},
[328254] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 168700,
["encounterID"] = 2402,
},
[148785] = {
["source"] = "War Master Kragg",
["event"] = "SPELL_CAST_START",
["npcID"] = 73775,
},
[111772] = {
["source"] = "Scholomance Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 58757,
},
[341199] = {
["npcID"] = 174093,
},
[393783] = {
["source"] = "Iskakx",
["event"] = "SPELL_CAST_START",
["npcID"] = 192761,
},
[393787] = {
["source"] = "Iskakx",
["event"] = "SPELL_CAST_START",
["npcID"] = 192761,
},
[153905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whirling Dervish",
["npcID"] = 77605,
},
[204611] = {
["encounterName"] = "Oakheart",
["npcID"] = 103344,
["encounterID"] = 1837,
},
[377402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infuser Sariya",
["npcID"] = 190405,
},
[420405] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Caller",
["npcID"] = 207041,
},
[299588] = {
["npcID"] = 150251,
},
[404027] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[434740] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Inquisitor",
["npcID"] = 217518,
},
[395833] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mara'nar the Thunderous",
["npcID"] = 196913,
},
[340544] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spinemaw Staghorn",
["npcID"] = 167111,
},
[285255] = {
["npcID"] = 146553,
},
[118940] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glintrok Oracle",
["npcID"] = 61239,
},
[395834] = {
["source"] = "Bonebolt Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 197121,
},
[141620] = {
["source"] = "Bonechiller Barafu",
["event"] = "SPELL_CAST_START",
["npcID"] = 70468,
},
[365120] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 181954,
["encounterID"] = 2546,
},
[361023] = {
["npcID"] = 181005,
},
[169265] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[194611] = {
["source"] = "Shadow Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 98926,
},
[40102] = {
["source"] = "Aqueous Spawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 22883,
},
[320069] = {
["encounterName"] = "An Affront of Challengers",
["npcID"] = 164451,
["encounterID"] = 2391,
},
[346690] = {
["encounterName"] = "The Council of Blood",
["npcID"] = 166971,
["encounterID"] = 2412,
},
[141621] = {
["source"] = "Frost Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 70982,
},
[334404] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 165066,
["encounterID"] = 2418,
},
[46164] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Kael'thas Sunstrider",
["npcID"] = 24664,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1894,
},
[451128] = {
["source"] = "Sparking Haulbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 219497,
},
[423107] = {
["source"] = "Hymdall",
["event"] = "SPELL_CAST_START",
["npcID"] = 206644,
},
[399933] = {
["source"] = "Tukkaraq's Boat",
["event"] = "SPELL_CAST_START",
["npcID"] = 201121,
},
[412868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Karokta",
["npcID"] = 203625,
},
[111774] = {
["source"] = "Scholomance Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 58757,
},
[397886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupt Droplet",
["npcID"] = 62358,
},
[257320] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Offering",
["npcID"] = 210405,
},
[361027] = {
["npcID"] = 181093,
},
[444985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloatrot Stinger",
["npcID"] = 216065,
},
[397888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Waterspeaker",
["npcID"] = 200126,
},
[439488] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["encounterID"] = 2565,
["event"] = "SPELL_CAST_START",
["npcID"] = 190609,
},
[131385] = {
["source"] = "Démoniste de Gangrorage",
["event"] = "SPELL_CAST_START",
["npcID"] = 66270,
},
[115358] = {
["source"] = "Needle Sprite",
["event"] = "SPELL_CAST_START",
["npcID"] = 55593,
},
[133432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Domination Point Demolisher",
["npcID"] = 67671,
},
[365126] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 181548,
["encounterID"] = 2544,
},
[377411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amberfur Prowler",
["npcID"] = 187455,
},
[395841] = {
["source"] = "Bracken Warscourge",
["event"] = "SPELL_CAST_START",
["npcID"] = 197120,
},
[137528] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["npcID"] = 69712,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1573,
},
[331845] = {
["npcID"] = 165687,
},
[270929] = {
["source"] = "Harpy Boltcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 152843,
},
[140600] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cavern Burrower",
["npcID"] = 70589,
},
[111775] = {
["encounterName"] = "Lilian Voss",
["source"] = "Lilian Voss",
["encounterID"] = 1429,
["event"] = "SPELL_CAST_START",
["npcID"] = 58722,
},
[393793] = {
["source"] = "Hacklung",
["event"] = "SPELL_CAST_START",
["npcID"] = 187752,
},
[451132] = {
["source"] = "Sparking Haulbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 219497,
},
[289360] = {
["npcID"] = 148615,
},
[420419] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Caller",
["npcID"] = 207041,
},
[163126] = {
["source"] = "Iron Taskmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 80708,
},
[394436] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shas'ith",
["npcID"] = 189822,
},
[346698] = {
["encounterName"] = "The Council of Blood",
["npcID"] = 166971,
["encounterID"] = 2412,
},
[397892] = {
["source"] = "Imacu'tya",
["event"] = "SPELL_CAST_START",
["npcID"] = 104275,
},
[367176] = {
["npcID"] = 184409,
},
[393797] = {
["source"] = "Charfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 187751,
},
[428609] = {
["source"] = "Stormforged Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 207024,
},
[142650] = {
["source"] = "Proto-Drake Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 71401,
},
[78903] = {
["encounterName"] = "Ozruk",
["encounterID"] = 1058,
["npcID"] = 42188,
},
[114848] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["encounterID"] = 1425,
["event"] = "SPELL_CAST_START",
["npcID"] = 3977,
},
[371273] = {
["encounterName"] = "Hungering Destroyer",
["npcID"] = 188302,
["encounterID"] = 2383,
},
[381512] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[350796] = {
["encounterName"] = "So'leah",
["npcID"] = 177269,
["encounterID"] = 2442,
},
[287952] = {
["encounterName"] = "Mekkatorque",
["npcID"] = 144796,
["encounterID"] = 2276,
},
[121503] = {
["source"] = "Norvakess",
["event"] = "SPELL_CAST_START",
["npcID"] = 62324,
},
[326227] = {
["npcID"] = 157558,
},
[409745] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kretchenwrath",
["npcID"] = 201673,
},
[320081] = {
["npcID"] = 160747,
},
[387657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mountain Shaper",
["npcID"] = 186329,
},
[313945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Crusher",
["npcID"] = 161218,
},
[131390] = {
["source"] = "Invocateur de Gangrorage",
["event"] = "SPELL_CAST_START",
["npcID"] = 66271,
},
[377419] = {
["npcID"] = 189914,
},
[420422] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[397897] = {
["source"] = "Jazshariu",
["event"] = "SPELL_CAST_START",
["npcID"] = 104273,
},
[444998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallowbarb",
["npcID"] = 216078,
},
[393804] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whirglgurgl",
["npcID"] = 188860,
},
[326230] = {
["npcID"] = 165829,
},
[381516] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[257326] = {
["encounterName"] = "Chopper Redhook",
["source"] = "Chopper Redhook",
["encounterID"] = 2098,
["event"] = "SPELL_CAST_START",
["npcID"] = 128650,
},
[377421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nimblewing Striker",
["npcID"] = 192938,
},
[453188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cragmund",
["npcID"] = 220269,
},
[381517] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[81008] = {
["npcID"] = 42810,
},
[114849] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sha of Despair",
["npcID"] = 59651,
},
[363088] = {
["encounterName"] = "Lihuvim, Principal Architect",
["npcID"] = 182169,
["encounterID"] = 2539,
},
[373327] = {
["encounterName"] = "Eranog",
["source"] = "Primal Flame",
["npcID"] = 187593,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[159035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shaadum",
["npcID"] = 78728,
},
[257641] = {
["source"] = "Irontide Powdershot",
["event"] = "SPELL_CAST_START",
["npcID"] = 137521,
},
[332084] = {
["npcID"] = 167965,
},
[340564] = {
["npcID"] = 169206,
},
[399949] = {
["source"] = "Primal Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 200673,
},
[393806] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stoneheart",
["npcID"] = 187387,
},
[395855] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Blue Gulper",
["npcID"] = 195976,
},
[373329] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[408141] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 201788,
},
[115006] = {
["source"] = "Wuk-Wuk",
["event"] = "SPELL_CAST_START",
["npcID"] = 56691,
},
[152893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Herald of Sunrise",
["npcID"] = 78933,
},
[381521] = {
["event"] = "SPELL_CAST_START",
["source"] = "Encroaching Downpour",
["npcID"] = 191324,
},
[395857] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Stonebinder",
["npcID"] = 189834,
},
[361044] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 182305,
["encounterID"] = 2544,
},
[118434] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ik'thik Precursor",
["npcID"] = 58367,
},
[166204] = {
["source"] = "Gorian Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 82528,
},
[33624] = {
["npcID"] = 18971,
},
[397907] = {
["source"] = "Baalgar the Watchful",
["event"] = "SPELL_CAST_START",
["npcID"] = 104274,
},
[152894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Initiate of the Rising Sun",
["npcID"] = 79466,
},
[438860] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[126625] = {
["source"] = "Spirit of Violence",
["event"] = "SPELL_CAST_START",
["npcID"] = 64656,
},
[393810] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shiverweb Queen",
["npcID"] = 186064,
},
[224568] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nighthold Protector",
["npcID"] = 112665,
},
[307805] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["npcID"] = 156523,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2327,
},
[285280] = {
["npcID"] = 146552,
},
[393811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maiden of Diligence",
["npcID"] = 192718,
},
[395859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haunting Sha",
["npcID"] = 59555,
},
[381525] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[375384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Earthshaker",
["npcID"] = 190371,
},
[393812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whirglgurgl",
["npcID"] = 188860,
},
[395860] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Red Gulper",
["npcID"] = 195974,
},
[81576] = {
["npcID"] = 43537,
},
[322759] = {
["encounterName"] = "Hakkar, the Soulflayer",
["encounterID"] = 2395,
["npcID"] = 164558,
},
[393813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shiverweb Queen",
["npcID"] = 186064,
},
[387670] = {
["source"] = "Time-Lost Chieftain",
["event"] = "SPELL_CAST_START",
["npcID"] = 187266,
},
[361052] = {
["npcID"] = 180722,
},
[440912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Festering Sporemass",
["npcID"] = 217963,
},
[369241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Searing Flame Harchek",
["npcID"] = 191476,
},
[453199] = {
["source"] = "Vanishing Nightmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 224922,
},
[307809] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["npcID"] = 157439,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2337,
},
[375385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steam Reaver",
["npcID"] = 190700,
},
[328287] = {
["npcID"] = 165265,
},
[453200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cragmund",
["npcID"] = 220269,
},
[84037] = {
["encounterName"] = "Ozumat",
["encounterID"] = 1047,
["npcID"] = 40792,
},
[301667] = {
["npcID"] = 150292,
},
[287333] = {
["encounterName"] = "King Rastakhan",
["npcID"] = 145644,
["encounterID"] = 2272,
},
[382143] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reclaimer Makko",
["npcID"] = 191536,
},
[381530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Thunderfist",
["npcID"] = 193373,
},
[445021] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Summoned Acolyte",
["npcID"] = 221863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[377435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Geomancer",
["npcID"] = 187265,
},
[412247] = {
["source"] = "Agitator Zoralek",
["event"] = "SPELL_CAST_START",
["npcID"] = 199305,
},
[117924] = {
["source"] = "Orbiss",
["event"] = "SPELL_CAST_START",
["npcID"] = 60857,
},
[375388] = {
["npcID"] = 190900,
},
[262277] = {
["encounterName"] = "Fetid Devourer",
["npcID"] = 133298,
["encounterID"] = 2128,
},
[59734] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["encounterID"] = 2025,
["event"] = "SPELL_CAST_START",
["npcID"] = 23954,
},
[397914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Depraved Mistweaver",
["npcID"] = 200137,
},
[393830] = {
["source"] = "Gragza the Dragon-Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 191507,
},
[381519] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarasek Raider",
["npcID"] = 191047,
},
[161090] = {
["encounterName"] = "Rocketspark and Borka",
["npcID"] = 77816,
["encounterID"] = 1715,
},
[136521] = {
["encounterName"] = "Council of Elders",
["source"] = "Sul the Sandcrawler",
["npcID"] = 69078,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[302279] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["npcID"] = 150295,
["encounterID"] = 2291,
},
[393820] = {
["source"] = "Sturdy Gladehorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 196655,
},
[387677] = {
["source"] = "Deathling Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190214,
},
[389725] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bazual",
["npcID"] = 193532,
},
[134470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bow Fly Swarm",
["npcID"] = 68222,
},
[453212] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[396475] = {
["source"] = "Apex Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 191705,
},
[381535] = {
["npcID"] = 190388,
},
[126628] = {
["source"] = "Spirit of Violence",
["event"] = "SPELL_CAST_START",
["npcID"] = 64656,
},
[359016] = {
["encounterName"] = "Cragpie",
["source"] = "Cragpie",
["encounterID"] = 3001,
["event"] = "SPELL_CAST_START",
["npcID"] = 220008,
},
[63830] = {
["encounterName"] = "Yogg-Saron",
["encounterID"] = 1143,
["npcID"] = 33134,
},
[295536] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["npcID"] = 150190,
["encounterID"] = 2291,
},
[199674] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Bjorn",
["npcID"] = 97081,
},
[451160] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[395871] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Stonebinder",
["npcID"] = 189834,
},
[56919] = {
["source"] = "Kaz'tik the Manipulator",
["event"] = "SPELL_CAST_START",
["npcID"] = 64013,
},
[102569] = {
["encounterName"] = "Murozond",
["npcID"] = 54432,
["encounterID"] = 1271,
},
[434779] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["encounterID"] = 2907,
["event"] = "SPELL_CAST_START",
["npcID"] = 216619,
},
[395872] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Talking Fish",
["npcID"] = 59546,
},
[115878] = {
["source"] = "Silkwood Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 56070,
},
[369853] = {
["npcID"] = 184019,
},
[395878] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Talking Fish",
["npcID"] = 59546,
},
[285311] = {
["npcID"] = 146831,
},
[126117] = {
["source"] = "Slitherscale Eggdrinker",
["event"] = "SPELL_CAST_START",
["npcID"] = 63532,
},
[393832] = {
["source"] = "Sturdy Gladehorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 196655,
},
[449123] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tij'allet",
["npcID"] = 215600,
},
[387683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frozen Revenant",
["npcID"] = 187203,
},
[438877] = {
["source"] = "Nakt",
["event"] = "SPELL_CAST_START",
["npcID"] = 218324,
},
[140620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Growth",
["npcID"] = 70153,
},
[459355] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Onyxia",
["npcID"] = 221585,
},
[387684] = {
["source"] = "Earthen Spire",
["event"] = "SPELL_CAST_START",
["npcID"] = 195348,
},
[455260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathspore Lashroom",
["npcID"] = 221424,
},
[138569] = {
["encounterName"] = "Dark Animus",
["source"] = "Massive Anima Golem",
["npcID"] = 69699,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[114855] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "Scarlet Initiate",
["encounterID"] = 1425,
["event"] = "SPELL_CAST_START",
["npcID"] = 58783,
},
[62415] = {
["npcID"] = 32882,
},
[324205] = {
["encounterName"] = "Ventunax",
["npcID"] = 162058,
["encounterID"] = 2356,
},
[336499] = {
["encounterName"] = "Mistcaller",
["npcID"] = 164501,
["encounterID"] = 2392,
},
[377447] = {
["source"] = "Osoria",
["event"] = "SPELL_CAST_START",
["npcID"] = 192220,
},
[365168] = {
["npcID"] = 183398,
},
[436841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Desecrated Ohuna",
["npcID"] = 195876,
},
[301681] = {
["npcID"] = 150292,
},
[361066] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 181551,
["encounterID"] = 2544,
},
[86699] = {
["source"] = "Shado-Pan Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 61252,
},
[359028] = {
["encounterName"] = "Myza's Oasis",
["npcID"] = 176563,
["encounterID"] = 2440,
},
[167239] = {
["npcID"] = 83028,
},
[279157] = {
["encounterName"] = "Mythrax",
["npcID"] = 138324,
["encounterID"] = 2135,
},
[371306] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Elemental",
["npcID"] = 186741,
},
[393841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Web-Queen Ashkaz",
["npcID"] = 192983,
},
[391793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Furious Deluge",
["npcID"] = 197220,
},
[164168] = {
["npcID"] = 81212,
},
[140619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cavern Burrower",
["npcID"] = 70589,
},
[124071] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Osul Marauder",
["npcID"] = 60692,
},
[167240] = {
["npcID"] = 83028,
},
[320114] = {
["encounterName"] = "Xav the Unfallen",
["npcID"] = 162329,
["encounterID"] = 2366,
},
[302274] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["npcID"] = 150295,
["encounterID"] = 2291,
},
[442998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mother Aza'na",
["npcID"] = 222180,
},
[126631] = {
["source"] = "Spirit of Anger",
["event"] = "SPELL_CAST_START",
["npcID"] = 64684,
},
[316031] = {
["encounterName"] = "Shad'har the Insatiable",
["source"] = "Shad'har the Insatiable",
["npcID"] = 157231,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2335,
},
[173384] = {
["npcID"] = 83392,
},
[391799] = {
["event"] = "SPELL_CAST_START",
["source"] = "Root of Decay",
["npcID"] = 185326,
},
[142668] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Kaz'tik the Manipulator",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71156,
},
[393835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shiverweb Cloaker",
["npcID"] = 195397,
},
[449135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flickerflame Overseer",
["npcID"] = 212542,
},
[397931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minion of Doubt",
["npcID"] = 57109,
},
[285305] = {
["npcID"] = 146552,
},
[229698] = {
["npcID"] = 115417,
},
[102573] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Azure Serpent",
["npcID"] = 56754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1303,
},
[124072] = {
["source"] = "Set'thik Gustwing",
["event"] = "SPELL_CAST_START",
["npcID"] = 63592,
},
[210537] = {
["npcID"] = 177695,
},
[37979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Healer",
["npcID"] = 17730,
},
[62625] = {
["npcID"] = 33237,
},
[365169] = {
["encounterName"] = "The Jailer",
["npcID"] = 180990,
["encounterID"] = 2537,
},
[391790] = {
["source"] = "Seismic Stomps",
["event"] = "SPELL_CAST_START",
["npcID"] = 197829,
},
[434793] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Trilling Attendant",
["npcID"] = 216293,
},
[371313] = {
["npcID"] = 2734,
},
[363130] = {
["encounterName"] = "Lihuvim, Principal Architect",
["npcID"] = 182169,
["encounterID"] = 2539,
},
[391791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Furious Deluge",
["npcID"] = 197220,
},
[320120] = {
["encounterName"] = "An Affront of Challengers",
["npcID"] = 164463,
["encounterID"] = 2391,
},
[121513] = {
["isChanneled"] = true,
["source"] = "Big Gladiator Chief",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60170,
},
[116027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hopper",
["npcID"] = 59464,
},
[130728] = {
["isChanneled"] = true,
["source"] = "Rankbite Ancient",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66462,
},
[420469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Austin Huxworth",
["npcID"] = 209065,
},
[346742] = {
["encounterName"] = "Mailroom Mayhem",
["npcID"] = 175646,
["encounterID"] = 2424,
},
[455273] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Abominable Wavecrasher",
["npcID"] = 216526,
},
[449130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[410223] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[426619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torchsnarl",
["npcID"] = 212993,
},
[373364] = {
["npcID"] = 189878,
},
[277120] = {
["npcID"] = 141749,
},
[449709] = {
["source"] = "Burgle-gurgle",
["event"] = "SPELL_CAST_START",
["npcID"] = 214545,
},
[197961] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["npcID"] = 95676,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1809,
},
[455275] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shurrai",
["npcID"] = 221224,
},
[320132] = {
["encounterName"] = "The Manastorms",
["encounterID"] = 2394,
["npcID"] = 164556,
},
[385652] = {
["source"] = "Awakened Crag",
["event"] = "SPELL_CAST_START",
["npcID"] = 195243,
},
[395899] = {
["source"] = "Primalist Chillblaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 199124,
},
[360295] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 181549,
["encounterID"] = 2544,
},
[399987] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[114859] = {
["source"] = "Bored Student",
["event"] = "SPELL_CAST_START",
["npcID"] = 59614,
},
[445038] = {
["source"] = "Kobyss Trickster",
["event"] = "SPELL_CAST_START",
["npcID"] = 214343,
},
[455277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tidelord Teethwretch",
["npcID"] = 216527,
},
[318078] = {
["encounterName"] = "Shad'har the Insatiable",
["source"] = "Living Miasma",
["npcID"] = 157229,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2335,
},
[160079] = {
["source"] = "Blackrock Forge Specialist",
["event"] = "SPELL_CAST_START",
["npcID"] = 79200,
},
[395893] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[117931] = {
["source"] = "Arconiss",
["event"] = "SPELL_CAST_START",
["npcID"] = 60824,
},
[391798] = {
["source"] = "Rebel Incinerator",
["event"] = "SPELL_CAST_START",
["npcID"] = 195062,
},
[328318] = {
["npcID"] = 166875,
},
[140626] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Growth",
["npcID"] = 70153,
},
[140629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Guardian",
["npcID"] = 70586,
},
[449136] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flickerflame Overseer",
["npcID"] = 212542,
},
[434802] = {
["source"] = "Ixin",
["event"] = "SPELL_CAST_START",
["npcID"] = 217531,
},
[393859] = {
["npcID"] = 187689,
},
[373370] = {
["npcID"] = 189878,
},
[187725] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cattwen",
["npcID"] = 94618,
},
[434803] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2902,
},
[82608] = {
["npcID"] = 3255,
},
[455281] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tidelord Teethwretch",
["npcID"] = 216527,
},
[367228] = {
["npcID"] = 184767,
},
[191823] = {
["encounterName"] = "Tirathon Saltheril",
["source"] = "Tirathon Saltheril",
["encounterID"] = 1815,
["event"] = "SPELL_CAST_START",
["npcID"] = 95885,
},
[377473] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["encounterID"] = 2611,
["event"] = "SPELL_CAST_START",
["npcID"] = 189901,
},
[422518] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[375420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverbend Chomper",
["npcID"] = 190886,
},
[328322] = {
["encounterName"] = "Echelon",
["npcID"] = 164363,
["encounterID"] = 2380,
},
[140628] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Guardian",
["npcID"] = 70586,
},
[420476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crustbreaker Conduit",
["npcID"] = 207038,
},
[289420] = {
["npcID"] = 148607,
},
[442997] = {
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215597,
},
[387708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tyrhold Watcher",
["npcID"] = 192696,
},
[418430] = {
["source"] = "Empowered Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 208545,
},
[375422] = {
["source"] = "Im'bunata",
["event"] = "SPELL_CAST_START",
["npcID"] = 196199,
},
[131414] = {
["source"] = "Casseur des Flèches jumelles",
["event"] = "SPELL_CAST_START",
["npcID"] = 66273,
},
[289417] = {
["npcID"] = 148611,
},
[62042] = {
["source"] = "Recalled Thorim",
["event"] = "SPELL_CAST_START",
["npcID"] = 221923,
},
[375423] = {
["npcID"] = 181310,
},
[393864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trap-Layer Kerwal",
["npcID"] = 186516,
},
[412283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alcanon",
["npcID"] = 203515,
},
[365185] = {
["npcID"] = 184659,
},
[402050] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[342675] = {
["npcID"] = 170882,
},
[412284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Reykal",
["npcID"] = 203355,
},
[119981] = {
["encounterName"] = "Trial of the King",
["source"] = "Ming the Cunning",
["npcID"] = 61444,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1442,
},
[183633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rockbound Pelter",
["npcID"] = 91008,
},
[393855] = {
["event"] = "SPELL_CAST_START",
["source"] = "Web-Queen Ashkaz",
["npcID"] = 192983,
},
[152917] = {
["event"] = "SPELL_CAST_START",
["source"] = "Solar Magnifier",
["npcID"] = 77559,
},
[174422] = {
["source"] = "Breaker Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 86330,
},
[141663] = {
["source"] = "Earthborn Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 70822,
},
[328328] = {
["npcID"] = 167853,
},
[289421] = {
["npcID"] = 148624,
},
[381570] = {
["npcID"] = 190388,
},
[326281] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["npcID"] = 164517,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2393,
},
[443003] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Broodtwister Ovi'nax",
["npcID"] = 214506,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2919,
},
[418436] = {
["source"] = "Empowered Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 208545,
},
[260425] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muddy Riverbeast",
["npcID"] = 130757,
},
[114864] = {
["source"] = "Bored Student",
["event"] = "SPELL_CAST_START",
["npcID"] = 59614,
},
[449154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[445052] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[131424] = {
["source"] = "Dalgan",
["event"] = "SPELL_CAST_START",
["npcID"] = 66274,
},
[408193] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201934,
},
[328331] = {
["npcID"] = 168717,
},
[373395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Defender",
["npcID"] = 199717,
},
[387740] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tyrhold Watcher",
["npcID"] = 192696,
},
[122542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hawkmaster Nurong",
["npcID"] = 62574,
},
[320141] = {
["encounterName"] = "The Manastorms",
["encounterID"] = 2394,
["npcID"] = 164556,
},
[346762] = {
["encounterName"] = "The Council of Blood",
["npcID"] = 166969,
["encounterID"] = 2412,
},
[322743] = {
["npcID"] = 175089,
},
[334476] = {
["encounterName"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["npcID"] = 162689,
},
[340627] = {
["npcID"] = 173798,
},
[375439] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 181861,
},
[381575] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rustpine Immolator",
["npcID"] = 187396,
},
[143709] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Ka'roz the Locust",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71154,
},
[461989] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[328885] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 168973,
["encounterID"] = 2402,
},
[332430] = {
["npcID"] = 171179,
},
[210261] = {
["npcID"] = 104251,
},
[320144] = {
["encounterName"] = "The Manastorms",
["encounterID"] = 2394,
["npcID"] = 164555,
},
[15530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yazzai",
["npcID"] = 24561,
},
[332431] = {
["npcID"] = 171179,
},
[457354] = {
["source"] = "ELIZA",
["event"] = "SPELL_CAST_START",
["npcID"] = 224060,
},
[32863] = {
["source"] = "Shadowmoon Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 17371,
},
[346766] = {
["encounterName"] = "Hylbrande",
["npcID"] = 175663,
["encounterID"] = 2426,
},
[340623] = {
["npcID"] = 173798,
},
[424581] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[377483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadeslash Trakken",
["npcID"] = 193271,
},
[287929] = {
["encounterName"] = "Mekkatorque",
["npcID"] = 144796,
["encounterID"] = 2276,
},
[58972] = {
["source"] = "Drakkari Fire Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 29822,
},
[8858] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Excavator",
["npcID"] = 47276,
},
[328338] = {
["npcID"] = 167493,
},
[393876] = {
["source"] = "Gragza the Dragon-Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 191507,
},
[381580] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Brawler",
["npcID"] = 202248,
},
[378029] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["npcID"] = 186124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[334493] = {
["npcID"] = 164862,
},
[129711] = {
["encounterName"] = "Elegon",
["source"] = "Celestial Protector",
["encounterID"] = 1500,
["event"] = "SPELL_CAST_START",
["npcID"] = 60793,
},
[451224] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Warlock",
["npcID"] = 224271,
},
[457348] = {
["source"] = "Remembered Firelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 212088,
},
[377486] = {
["npcID"] = 184335,
},
[381592] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutal Motivator",
["npcID"] = 184453,
},
[381582] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutal Motivator",
["npcID"] = 184453,
},
[391821] = {
["source"] = "Snowhide Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 189654,
},
[434824] = {
["source"] = "Ixin",
["event"] = "SPELL_CAST_START",
["npcID"] = 217531,
},
[420490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crustbreaker Conduit",
["npcID"] = 207038,
},
[373392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Longbow",
["npcID"] = 192789,
},
[334485] = {
["encounterName"] = "Ventunax",
["npcID"] = 162058,
["encounterID"] = 2356,
},
[377488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rune Seal Keeper",
["npcID"] = 187155,
},
[157020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blinding Solar Flare",
["npcID"] = 79462,
},
[449167] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[365212] = {
["encounterName"] = "The Jailer",
["npcID"] = 180990,
["encounterID"] = 2537,
},
[118072] = {
["source"] = "The Ook of Dook",
["event"] = "SPELL_CAST_START",
["npcID"] = 60188,
},
[227672] = {
["encounterName"] = "Moroes",
["encounterID"] = 1961,
["npcID"] = 114321,
},
[260432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Tendril",
["npcID"] = 125136,
},
[445077] = {
["source"] = "Kobyss Ambusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 219715,
},
[410254] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203678,
},
[387729] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stone Infused Rock Snail",
["npcID"] = 203241,
},
[422541] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuffling Horror",
["npcID"] = 208456,
},
[391825] = {
["npcID"] = 190900,
},
[257629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unfinished Stone Golem",
["npcID"] = 201586,
},
[453258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sikran",
["npcID"] = 214503,
},
[58973] = {
["source"] = "Drakkari God Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 29820,
},
[432781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Radiating Voidstone",
["npcID"] = 212739,
},
[434829] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["encounterID"] = 2907,
["event"] = "SPELL_CAST_START",
["npcID"] = 216619,
},
[165213] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Tender",
["npcID"] = 81985,
},
[389779] = {
["npcID"] = 186150,
},
[451222] = {
["source"] = "Hollows Resident",
["event"] = "SPELL_CAST_START",
["npcID"] = 219983,
},
[337071] = {
["npcID"] = 170301,
},
[387732] = {
["npcID"] = 186150,
},
[122034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shek'zeer Clutch-Keeper",
["npcID"] = 64559,
},
[375446] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunhide Stomphoof",
["npcID"] = 187960,
},
[418449] = {
["source"] = "Druid of the Claw",
["event"] = "SPELL_CAST_START",
["npcID"] = 210684,
},
[459422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Onyxia",
["npcID"] = 221585,
},
[316072] = {
["npcID"] = 169476,
},
[277155] = {
["npcID"] = 136507,
},
[320168] = {
["encounterName"] = "The Manastorms",
["encounterID"] = 2394,
["npcID"] = 164555,
},
[330397] = {
["npcID"] = 157732,
},
[54878] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Elemental",
["encounterID"] = 1983,
["event"] = "SPELL_CAST_START",
["npcID"] = 29573,
},
[350875] = {
["encounterName"] = "So'leah",
["npcID"] = 177269,
["encounterID"] = 2442,
},
[118963] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glintrok Skulker",
["npcID"] = 61240,
},
[106681] = {
["source"] = "Fragrant Lotus",
["event"] = "SPELL_CAST_START",
["npcID"] = 56472,
},
[406165] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[457359] = {
["source"] = "Beebiter",
["event"] = "SPELL_CAST_START",
["npcID"] = 222284,
},
[418464] = {
["source"] = "Empowered Felguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 208542,
},
[395939] = {
["source"] = "Mirror Lurker Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 194666,
},
[381593] = {
["npcID"] = 184300,
},
[122547] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber-Shaper Un'sok",
["encounterID"] = 1499,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62511,
},
[164192] = {
["npcID"] = 81236,
},
[420501] = {
["source"] = "Wildfire Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 209200,
},
[455313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathspore Lashroom",
["npcID"] = 221424,
},
[391833] = {
["source"] = "Sherath",
["event"] = "SPELL_CAST_START",
["npcID"] = 188710,
},
[443027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siege Dominator",
["npcID"] = 215601,
},
[136548] = {
["encounterName"] = "Lei Shen",
["source"] = "Ball Lightning",
["npcID"] = 69232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1579,
},
[275112] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blisterhide",
["npcID"] = 197353,
},
[184675] = {
["encounterName"] = "Hellfire High Council",
["source"] = "Dia Darkwhisper",
["npcID"] = 92144,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1798,
},
[147811] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Thrall",
["encounterID"] = 1623,
["event"] = "SPELL_CAST_START",
["npcID"] = 73483,
},
[328365] = {
["npcID"] = 167493,
},
[373405] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[334498] = {
["encounterName"] = "Stone Legion Generals",
["npcID"] = 168113,
["encounterID"] = 2417,
},
[162407] = {
["encounterName"] = "Rocketspark and Borka",
["npcID"] = 77803,
["encounterID"] = 1715,
},
[412313] = {
["source"] = "Emberdusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 203664,
},
[365215] = {
["npcID"] = 178563,
},
[424600] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Podling",
["npcID"] = 211063,
},
[377502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Murloc",
["npcID"] = 190584,
},
[334509] = {
["npcID"] = 163083,
},
[143977] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Korven the Prime",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71155,
},
[391837] = {
["source"] = "Emerald Healer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207048,
},
[377503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rune Seal Keeper",
["npcID"] = 187155,
},
[377512] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lava Snail",
["npcID"] = 191628,
},
[398500] = {
["source"] = "Conflagrated Rock Cobra",
["event"] = "SPELL_CAST_START",
["npcID"] = 203328,
},
[338606] = {
["npcID"] = 167731,
},
[393886] = {
["source"] = "Aizir the Inflamed",
["event"] = "SPELL_CAST_START",
["npcID"] = 191306,
},
[395934] = {
["source"] = "Trickclaw Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 197119,
},
[174434] = {
["source"] = "Gorian High Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 86256,
},
[375457] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Juvenile Frost Proto-Dragon",
["npcID"] = 191222,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[12058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Dwarf Magus",
["npcID"] = 29979,
},
[378022] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2568,
},
[340646] = {
["npcID"] = 173802,
},
[391840] = {
["source"] = "Taresh",
["event"] = "SPELL_CAST_START",
["npcID"] = 188711,
},
[196194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steeljaw Grizzly",
["npcID"] = 96677,
},
[395936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverbeast Elder",
["npcID"] = 191687,
},
[381602] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[375459] = {
["source"] = "Thunderspine Rumbler",
["event"] = "SPELL_CAST_START",
["npcID"] = 192941,
},
[320170] = {
["encounterName"] = "Amarth, The Harvester",
["encounterID"] = 2388,
["npcID"] = 162692,
},
[330409] = {
["npcID"] = 158420,
},
[369328] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Runic Protector",
["npcID"] = 184107,
},
[391842] = {
["source"] = "Stormfang Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 187552,
},
[320171] = {
["encounterName"] = "Amarth, The Harvester",
["encounterID"] = 2388,
["npcID"] = 163157,
},
[334051] = {
["npcID"] = 168942,
},
[340655] = {
["npcID"] = 172077,
},
[17843] = {
["source"] = "Novice Timewalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 189583,
},
[160102] = {
["source"] = "Blackrock Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 79208,
},
[428703] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rock Smasher",
["npcID"] = 213954,
},
[381605] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[200289] = {
["encounterName"] = "Shade of Xavius",
["npcID"] = 99192,
["encounterID"] = 1839,
},
[393892] = {
["source"] = "Aizir the Inflamed",
["event"] = "SPELL_CAST_START",
["npcID"] = 191306,
},
[391849] = {
["npcID"] = 191406,
},
[395946] = {
["source"] = "Fetid Rotsinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 197129,
},
[330423] = {
["npcID"] = 168572,
},
[459421] = {
["source"] = "Sir Finley Mrrgglton",
["event"] = "SPELL_CAST_START",
["npcID"] = 228030,
},
[395941] = {
["source"] = "Mirror Lurker Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 194666,
},
[111801] = {
["source"] = "Risen Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 58822,
},
[408228] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203678,
},
[147817] = {
["source"] = "Crimsonscale Firestorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 72876,
},
[264892] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hakkari Ritualist",
["npcID"] = 214913,
},
[430754] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Oracle",
["npcID"] = 214439,
},
[326319] = {
["npcID"] = 164921,
},
[395948] = {
["source"] = "Spiteful Snail",
["event"] = "SPELL_CAST_START",
["npcID"] = 193943,
},
[80572] = {
["source"] = "Energized Harvest Reaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 42342,
},
[337064] = {
["npcID"] = 170301,
},
[447143] = {
["encounterName"] = "Researcher Ven'kex",
["source"] = "Researcher Ven'kex",
["npcID"] = 219856,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2991,
},
[114872] = {
["source"] = "Bored Student",
["event"] = "SPELL_CAST_START",
["npcID"] = 59614,
},
[117945] = {
["encounterName"] = "Elegon",
["source"] = "Celestial Protector",
["encounterID"] = 1500,
["event"] = "SPELL_CAST_START",
["npcID"] = 60793,
},
[406183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krono Sandtongue",
["npcID"] = 205622,
},
[142699] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Captain",
["npcID"] = 71445,
},
[371875] = {
["source"] = "Qalashi Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 189266,
},
[330417] = {
["npcID"] = 169696,
},
[211299] = {
["npcID"] = 105715,
},
[424614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Stabber",
["npcID"] = 207450,
},
[395951] = {
["source"] = "Spiteful Snail",
["event"] = "SPELL_CAST_START",
["npcID"] = 193943,
},
[346800] = {
["encounterName"] = "The Council of Blood",
["npcID"] = 166970,
["encounterID"] = 2412,
},
[174440] = {
["source"] = "Gorian High Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 86256,
},
[326824] = {
["encounterName"] = "Sire Denathrius",
["npcID"] = 167999,
["encounterID"] = 2407,
},
[324776] = {
["npcID"] = 166275,
},
[395947] = {
["source"] = "Decay Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 197124,
},
[447141] = {
["event"] = "SPELL_CAST_START",
["source"] = "Repurposed Loaderbot",
["npcID"] = 222923,
},
[396447] = {
["source"] = "Shardwing",
["event"] = "SPELL_CAST_START",
["npcID"] = 201562,
},
[114873] = {
["source"] = "Professor Slate",
["event"] = "SPELL_CAST_START",
["npcID"] = 59613,
},
[412330] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malrogg",
["npcID"] = 202606,
},
[40097] = {
["source"] = "Coilskar Soothsayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 22876,
},
[440999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venommaster Nezarox",
["npcID"] = 219006,
},
[250208] = {
["npcID"] = 161527,
},
[359587] = {
["npcID"] = 180052,
},
[68799] = {
["source"] = "Apothecary Frye",
["event"] = "SPELL_CAST_START",
["npcID"] = 36272,
},
[195944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skrog Wavecrasher",
["npcID"] = 91796,
},
[451241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Flamerender",
["npcID"] = 224240,
},
[424621] = {
["source"] = "Sergeant Shaynemail",
["event"] = "SPELL_CAST_START",
["npcID"] = 211291,
},
[174442] = {
["source"] = "Gorian High Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 86256,
},
[391855] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korthrox the Destroyer",
["npcID"] = 183422,
},
[335013] = {
["encounterName"] = "Artificer Xy'mox",
["npcID"] = 166644,
["encounterID"] = 2405,
},
[322232] = {
["encounterName"] = "Stradama Margrave",
["encounterID"] = 2386,
["npcID"] = 164267,
},
[340662] = {
["npcID"] = 170739,
},
[391856] = {
["source"] = "Tenmod",
["event"] = "SPELL_CAST_START",
["npcID"] = 194763,
},
[377522] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Raging Ember",
["encounterID"] = 2611,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192464,
},
[395952] = {
["source"] = "Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 197125,
},
[447146] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[375475] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Juvenile Frost Proto-Dragon",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191222,
},
[418478] = {
["source"] = "Druid of the Claw",
["event"] = "SPELL_CAST_START",
["npcID"] = 210684,
},
[223590] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadsoul Corruptor",
["npcID"] = 112261,
},
[400050] = {
["source"] = "Deepflayer Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 221198,
},
[451734] = {
["source"] = "Persistent Honeyslime",
["event"] = "SPELL_CAST_START",
["npcID"] = 222843,
},
[443052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siege Hopebreaker",
["npcID"] = 216019,
},
[436910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Woven Threadmancer",
["npcID"] = 218317,
},
[373429] = {
["npcID"] = 189878,
},
[334522] = {
["encounterName"] = "Hungering Destroyer",
["npcID"] = 164261,
["encounterID"] = 2383,
},
[393907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Discordant Watcher",
["npcID"] = 189149,
},
[322236] = {
["encounterName"] = "Stradama Margrave",
["encounterID"] = 2386,
["npcID"] = 165430,
},
[180327] = {
["npcID"] = 115009,
},
[163182] = {
["source"] = "Iron Smith",
["event"] = "SPELL_CAST_START",
["npcID"] = 80719,
},
[369335] = {
["npcID"] = 184107,
},
[371383] = {
["source"] = "Hailbringer Theurgist",
["event"] = "SPELL_CAST_START",
["npcID"] = 189229,
},
[373424] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[400052] = {
["source"] = "Scavenging Slicer",
["event"] = "SPELL_CAST_START",
["npcID"] = 204508,
},
[395957] = {
["source"] = "Spellforged Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 194401,
},
[453294] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggregation of Horrors",
["npcID"] = 220999,
},
[389814] = {
["npcID"] = 189955,
},
[392724] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jadzigeth",
["npcID"] = 188447,
},
[366187] = {
["npcID"] = 183499,
},
[346813] = {
["npcID"] = 152905,
},
[451732] = {
["source"] = "Swarming Cogwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 232871,
},
[367290] = {
["encounterName"] = "The Jailer",
["npcID"] = 180990,
["encounterID"] = 2537,
},
[250213] = {
["npcID"] = 161527,
},
[461487] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["encounterID"] = 2901,
["event"] = "SPELL_CAST_START",
["npcID"] = 215407,
},
[319775] = {
["npcID"] = 166872,
},
[400055] = {
["source"] = "Scavenging Slicer",
["event"] = "SPELL_CAST_START",
["npcID"] = 203384,
},
[147826] = {
["source"] = "Huolon",
["event"] = "SPELL_CAST_START",
["npcID"] = 73167,
},
[335187] = {
["npcID"] = 182282,
},
[41572] = {
["event"] = "SPELL_CAST_START",
["source"] = "Proto-Drake",
["npcID"] = 23689,
},
[131429] = {
["source"] = "Dalgan",
["event"] = "SPELL_CAST_START",
["npcID"] = 66274,
},
[426677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sootsnout",
["npcID"] = 212412,
},
[361630] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["npcID"] = 181224,
["encounterID"] = 2540,
},
[117948] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Qiang the Merciless",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60709,
},
[391866] = {
["source"] = "Brackenhide Putrifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 192057,
},
[377532] = {
["source"] = "Thunderspine Crasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 191057,
},
[400057] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcanic Deepstrider",
["npcID"] = 200808,
},
[321565] = {
["npcID"] = 165829,
},
[375485] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Dragonspawn Flamebender",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191230,
},
[320196] = {
["npcID"] = 168266,
},
[121532] = {
["source"] = "Dread Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 62307,
},
[412346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Corsair",
["npcID"] = 126928,
},
[50335] = {
["source"] = "Recalled Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 221436,
},
[147828] = {
["source"] = "Huolon",
["event"] = "SPELL_CAST_START",
["npcID"] = 73167,
},
[82625] = {
["source"] = "Reliquary Digger",
["event"] = "SPELL_CAST_START",
["npcID"] = 38997,
},
[324293] = {
["npcID"] = 165919,
},
[382787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disease Slasher",
["npcID"] = 187315,
},
[394466] = {
["source"] = "Primordial Hail",
["event"] = "SPELL_CAST_START",
["npcID"] = 189039,
},
[227365] = {
["encounterName"] = "Attumen the Huntsman",
["npcID"] = 114264,
["encounterID"] = 1960,
},
[302682] = {
["encounterName"] = "Trixie & Naeno",
["npcID"] = 150712,
["encounterID"] = 2312,
},
[457398] = {
["source"] = "Beebiter",
["event"] = "SPELL_CAST_START",
["npcID"] = 222284,
},
[212031] = {
["encounterName"] = "Patrol Captain Gerdo",
["encounterID"] = 1868,
["npcID"] = 105705,
},
[285388] = {
["encounterName"] = "Tussle Tonks",
["encounterID"] = 2257,
["npcID"] = 145185,
},
[391871] = {
["source"] = "Duskpaw Tendontearer",
["event"] = "SPELL_CAST_START",
["npcID"] = 197820,
},
[350916] = {
["encounterName"] = "Myza's Oasis",
["npcID"] = 179269,
["encounterID"] = 2440,
},
[320200] = {
["encounterName"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["npcID"] = 162689,
},
[395967] = {
["source"] = "Vicious Hyena",
["event"] = "SPELL_CAST_START",
["npcID"] = 197123,
},
[340678] = {
["npcID"] = 161455,
},
[400063] = {
["source"] = "Underlight Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 203593,
},
[393443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Veshrak of the North",
["npcID"] = 188713,
},
[72014] = {
["source"] = "Darkspear Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 38326,
},
[133496] = {
["source"] = "Shieldwall Rifleman",
["event"] = "SPELL_CAST_START",
["npcID"] = 67297,
},
[374343] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["encounterID"] = 2565,
["event"] = "SPELL_CAST_START",
["npcID"] = 190609,
},
[50276] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ilsa Direbrew",
["npcID"] = 26764,
},
[327497] = {
["encounterName"] = "The Council of Blood",
["npcID"] = 166970,
["encounterID"] = 2412,
},
[153810] = {
["encounterName"] = "Rukhran",
["source"] = "Rukhran",
["npcID"] = 76143,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1700,
},
[350919] = {
["encounterName"] = "Myza's Oasis",
["npcID"] = 176563,
["encounterID"] = 2440,
},
[459449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Onyxia",
["npcID"] = 221585,
},
[241004] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volatile Corruption",
["npcID"] = 120158,
},
[438973] = {
["source"] = "Pit Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 228574,
},
[400066] = {
["source"] = "Preying Dustmoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 201068,
},
[394838] = {
["event"] = "SPELL_CAST_START",
["source"] = "Henlare",
["npcID"] = 193229,
},
[101810] = {
["encounterName"] = "Echo of Jaina",
["npcID"] = 54445,
["encounterID"] = 1883,
},
[406210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Naturalist",
["npcID"] = 201746,
},
[395943] = {
["source"] = "Spiteful Snail",
["event"] = "SPELL_CAST_START",
["npcID"] = 193943,
},
[451261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Earthcaller",
["npcID"] = 224219,
},
[193611] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[317959] = {
["npcID"] = 163458,
},
[350922] = {
["encounterName"] = "Myza's Oasis",
["npcID"] = 179269,
["encounterID"] = 2440,
},
[356812] = {
["npcID"] = 180286,
},
[338636] = {
["npcID"] = 167731,
},
[365257] = {
["encounterName"] = "Lihuvim, Principal Architect",
["npcID"] = 182071,
["encounterID"] = 2539,
},
[119487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha of Anger",
["npcID"] = 60491,
},
[341146] = {
["npcID"] = 174194,
},
[387783] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windseeker Avash",
["npcID"] = 192045,
},
[399024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Brute",
["npcID"] = 200486,
},
[377029] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Scythid Queen",
["npcID"] = 184853,
},
[320208] = {
["encounterName"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["npcID"] = 164578,
},
[152953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Solar Familiar",
["npcID"] = 76097,
},
[427159] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[152954] = {
["encounterName"] = "Vigilant Kaathar",
["source"] = "Vigilant Kaathar",
["npcID"] = 75839,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1686,
},
[328400] = {
["npcID"] = 164737,
},
[157049] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'tash the Destructor",
["npcID"] = 77889,
},
[406215] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Diemetradon",
["npcID"] = 221883,
},
[455364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kx",
["npcID"] = 216582,
},
[33895] = {
["source"] = "Gan'arg Sapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 18827,
},
[445123] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[58980] = {
["source"] = "Drakkari Medicine Man",
["event"] = "SPELL_CAST_START",
["npcID"] = 29826,
},
[424646] = {
["source"] = "Flametouched Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210150,
},
[157053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Durag the Dominator",
["npcID"] = 77890,
},
[412360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spinmarrow",
["npcID"] = 203480,
},
[390290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infuser Sariya",
["npcID"] = 190405,
},
[120512] = {
["source"] = "Osul Veteran Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61886,
},
[451268] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbark the Unfelled",
["npcID"] = 217670,
},
[445125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cindersting",
["npcID"] = 220238,
},
[275162] = {
["npcID"] = 161528,
},
[383693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Beastmaster",
["npcID"] = 192794,
},
[164218] = {
["npcID"] = 81407,
},
[404171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vakan",
["npcID"] = 199855,
},
[332500] = {
["npcID"] = 162593,
},
[455373] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[361169] = {
["npcID"] = 182466,
},
[209495] = {
["npcID"] = 104270,
},
[162171] = {
["encounterName"] = "Rocketspark and Borka",
["npcID"] = 77803,
["encounterID"] = 1715,
},
[38759] = {
["encounterName"] = "Pandemonius",
["source"] = "Pandemonius",
["npcID"] = 18341,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1900,
},
[361170] = {
["npcID"] = 182523,
},
[167516] = {
["npcID"] = 86809,
},
[120001] = {
["encounterName"] = "Vizier Jin'bak",
["source"] = "Vizier Jin'bak",
["encounterID"] = 1465,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61567,
},
[400078] = {
["source"] = "Deeplung Glowsplasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 204013,
},
[300188] = {
["npcID"] = 150253,
},
[355477] = {
["npcID"] = 179821,
},
[157051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'tash the Destructor",
["npcID"] = 77889,
},
[349797] = {
["encounterName"] = "The Grand Menagerie",
["npcID"] = 176556,
["encounterID"] = 2441,
},
[117954] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["encounterID"] = 1500,
["event"] = "SPELL_CAST_START",
["npcID"] = 60410,
},
[445130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cindersting",
["npcID"] = 220238,
},
[451276] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbark the Unfelled",
["npcID"] = 217670,
},
[404178] = {
["event"] = "SPELL_CAST_START",
["source"] = "Veltrax",
["npcID"] = 200904,
},
[393937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Discordant Watcher",
["npcID"] = 189149,
},
[365272] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 181551,
["encounterID"] = 2544,
},
[422606] = {
["source"] = "Volgoth the Flamebringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209129,
},
[128304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Disciple",
["npcID"] = 58198,
},
[369365] = {
["npcID"] = 184132,
},
[412368] = {
["source"] = "Underlight Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 203593,
},
[322711] = {
["encounterName"] = "Halkias, the Sin-Stained Goliath",
["npcID"] = 165408,
["encounterID"] = 2401,
},
[345236] = {
["npcID"] = 170157,
},
[328411] = {
["npcID"] = 182266,
},
[161150] = {
["npcID"] = 80936,
},
[260466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow of the Darkness",
["npcID"] = 132090,
},
[269029] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["encounterID"] = 2109,
["event"] = "SPELL_CAST_START",
["npcID"] = 129208,
},
[455814] = {
["source"] = "Elemental Rift",
["event"] = "SPELL_CAST_START",
["npcID"] = 217914,
},
[455377] = {
["source"] = "Ahg'zagall",
["event"] = "SPELL_CAST_START",
["npcID"] = 214151,
},
[199034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Aspirant",
["npcID"] = 101637,
},
[229558] = {
["npcID"] = 115402,
},
[328413] = {
["npcID"] = 157463,
},
[412371] = {
["source"] = "Underlight Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 203593,
},
[332509] = {
["npcID"] = 164555,
},
[38760] = {
["encounterName"] = "Pandemonius",
["source"] = "Pandemonius",
["npcID"] = 18341,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1900,
},
[328414] = {
["npcID"] = 165270,
},
[338653] = {
["npcID"] = 173044,
},
[422611] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[334558] = {
["npcID"] = 171448,
},
[451280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbark the Unfelled",
["npcID"] = 217670,
},
[395991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Torrent",
["npcID"] = 197221,
},
[56934] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["encounterID"] = 2010,
["event"] = "SPELL_CAST_START",
["npcID"] = 26731,
},
[91335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Warrior",
["npcID"] = 61842,
},
[361180] = {
["npcID"] = 182150,
},
[202108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blightshard Shaper",
["npcID"] = 90998,
},
[406231] = {
["source"] = "Lingering Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 201758,
},
[257397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Bonesaw",
["npcID"] = 129788,
},
[381659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Augmented Flood",
["npcID"] = 192457,
},
[152962] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[430805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalescing Void Diffuser",
["npcID"] = 214421,
},
[342752] = {
["npcID"] = 173633,
},
[392332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zumakh",
["npcID"] = 194624,
},
[324323] = {
["npcID"] = 165919,
},
[111813] = {
["source"] = "Risen Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 58822,
},
[194942] = {
["encounterName"] = "Glazer",
["source"] = "Glazer",
["encounterID"] = 1817,
["event"] = "SPELL_CAST_START",
["npcID"] = 95887,
},
[330403] = {
["npcID"] = 168153,
},
[413136] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[455380] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Railbot",
["npcID"] = 218251,
},
[318181] = {
["npcID"] = 157277,
},
[385757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mender Eskros",
["npcID"] = 195303,
},
[412378] = {
["source"] = "Infinite Timebender",
["event"] = "SPELL_CAST_START",
["npcID"] = 205337,
},
[404188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Static Charge",
["npcID"] = 202847,
},
[142726] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Xaril the Poisoned Mind",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71157,
},
[320230] = {
["encounterName"] = "Dealer Xy'exa",
["encounterID"] = 2400,
["npcID"] = 164450,
},
[152964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Spawn",
["npcID"] = 75652,
},
[381663] = {
["source"] = "Apex Blazewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 193291,
},
[128708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbling Brew Alemental",
["npcID"] = 59521,
},
[459479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Onyxia",
["npcID"] = 221585,
},
[428762] = {
["source"] = "Twilight Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 46183,
},
[79050] = {
["encounterName"] = "High Priestess Azil",
["encounterID"] = 1057,
["npcID"] = 42333,
},
[391903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruby Egg Guardian",
["npcID"] = 190171,
},
[451288] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "Lost Watcher",
["npcID"] = 221667,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[3636] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jadespine Basilisk",
["npcID"] = 4863,
},
[398012] = {
["npcID"] = 191093,
},
[334567] = {
["npcID"] = 171448,
},
[449242] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["encounterID"] = 2878,
["event"] = "SPELL_CAST_START",
["npcID"] = 204188,
},
[322281] = {
["npcID"] = 159505,
},
[430812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalescing Void Diffuser",
["npcID"] = 214421,
},
[249210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Imp",
["npcID"] = 125545,
},
[361189] = {
["npcID"] = 182152,
},
[396001] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Songbird Queen",
["npcID"] = 59553,
},
[284393] = {
["encounterName"] = "Stormwall Blockade",
["npcID"] = 146253,
["encounterID"] = 2280,
},
[457434] = {
["source"] = "Riled Dirtdiver",
["event"] = "SPELL_CAST_START",
["npcID"] = 225905,
},
[455809] = {
["source"] = "Urthgrafr Riftcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 215233,
},
[249211] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feltouched Skitterer",
["npcID"] = 125547,
},
[373477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bound Shoresnapper",
["npcID"] = 190193,
},
[257402] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[320657] = {
["npcID"] = 175605,
},
[281329] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Jolly",
["npcID"] = 126845,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[360373] = {
["encounterName"] = "The Jailer",
["npcID"] = 180990,
["encounterID"] = 2537,
},
[449245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tij'allet",
["npcID"] = 215600,
},
[451295] = {
["isChanneled"] = true,
["source"] = "Hollows Resident",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219983,
},
[449246] = {
["source"] = "General Emmerich",
["event"] = "SPELL_CAST_START",
["npcID"] = 215371,
},
[102601] = {
["npcID"] = 54920,
},
[249212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hungering Stalker",
["npcID"] = 125549,
},
[328429] = {
["npcID"] = 168022,
},
[412388] = {
["source"] = "Underlight Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 203593,
},
[332525] = {
["npcID"] = 171396,
},
[391910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mordigan Ironjaw",
["npcID"] = 187353,
},
[418531] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[140682] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mist Lurker",
["npcID"] = 70594,
},
[332526] = {
["npcID"] = 171396,
},
[285428] = {
["encounterName"] = "Jadefire Masters",
["npcID"] = 144692,
["encounterID"] = 2285,
},
[341133] = {
["npcID"] = 174090,
},
[396007] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Songbird Queen",
["npcID"] = 59553,
},
[196870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Stormweaver",
["npcID"] = 91783,
},
[20791] = {
["source"] = "Lost Trainee Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 210368,
},
[391913] = {
["source"] = "Gnawbone Splintershield",
["event"] = "SPELL_CAST_START",
["npcID"] = 197847,
},
[453345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifested Shadow",
["npcID"] = 211341,
},
[373483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soggymaw Wavebringer",
["npcID"] = 187263,
},
[457441] = {
["source"] = "Remembered Firelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 212088,
},
[392455] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uurhilt",
["npcID"] = 194760,
},
[366406] = {
["npcID"] = 184908,
},
[439012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venommaster Nezarox",
["npcID"] = 219006,
},
[449251] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Threadmancer",
["npcID"] = 208244,
},
[201298] = {
["npcID"] = 100532,
},
[384134] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Warspear",
["npcID"] = 192791,
},
[328437] = {
["encounterName"] = "Artificer Xy'mox",
["npcID"] = 166644,
["encounterID"] = 2405,
},
[391915] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grounded Primalist",
["npcID"] = 187204,
},
[306319] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Dark Inquisitor Xanesh",
["npcID"] = 156575,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2328,
},
[365847] = {
["npcID"] = 183229,
},
[365295] = {
["encounterName"] = "Anduin Wrynn",
["encounterID"] = 2546,
["npcID"] = 181954,
},
[342770] = {
["npcID"] = 173604,
},
[381681] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rustpine Immolator",
["npcID"] = 187396,
},
[346866] = {
["npcID"] = 174175,
},
[113967] = {
["source"] = "Porc-épic de la clairière",
["event"] = "SPELL_CAST_START",
["npcID"] = 54896,
},
[326389] = {
["encounterName"] = "Echelon",
["npcID"] = 164185,
["encounterID"] = 2380,
},
[443111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caller of the Gloom",
["npcID"] = 216955,
},
[459496] = {
["source"] = "Remembered Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 224157,
},
[389870] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Colossal Stormfiend",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 197145,
},
[436971] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["npcID"] = 217748,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[418539] = {
["source"] = "Lord Banehollow",
["event"] = "SPELL_CAST_START",
["npcID"] = 204243,
},
[305913] = {
["source"] = "Ogre Shadowcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 153242,
},
[365298] = {
["npcID"] = 184539,
},
[457447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ixlorb the Spinner",
["npcID"] = 218426,
},
[160140] = {
["source"] = "Grom'kar Firemender",
["event"] = "SPELL_CAST_START",
["npcID"] = 87841,
},
[152973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defense Construct",
["npcID"] = 76087,
},
[365299] = {
["npcID"] = 184539,
},
[457448] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepwater Snapper",
["npcID"] = 214550,
},
[114890] = {
["source"] = "Osul Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 60455,
},
[16568] = {
["isChanneled"] = true,
["source"] = "Alliance Priest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214152,
},
[228625] = {
["npcID"] = 114796,
},
[360228] = {
["npcID"] = 178750,
},
[410351] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[387826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ukhel Beastcaller",
["npcID"] = 195878,
},
[381683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Warspear",
["npcID"] = 192791,
},
[85710] = {
["source"] = "Frostmane Snowstalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 70463,
},
[426734] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[396018] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Crybaby Hozen",
["npcID"] = 59552,
},
[396019] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Golden Beetle",
["npcID"] = 59545,
},
[285440] = {
["encounterName"] = "Machinist's Garden",
["encounterID"] = 2259,
["npcID"] = 144248,
},
[418544] = {
["source"] = "Lord Banehollow",
["event"] = "SPELL_CAST_START",
["npcID"] = 204243,
},
[9053] = {
["npcID"] = 7034,
},
[391898] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistyvale Firestarter",
["npcID"] = 193969,
},
[396020] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Golden Beetle",
["npcID"] = 59545,
},
[369399] = {
["npcID"] = 186420,
},
[412402] = {
["source"] = "Flowfy",
["event"] = "SPELL_CAST_START",
["npcID"] = 203660,
},
[199050] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Shieldmaiden",
["npcID"] = 95832,
},
[332937] = {
["encounterName"] = "Sire Denathrius",
["npcID"] = 170710,
},
[361209] = {
["npcID"] = 182466,
},
[393609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krojek The Shoreprowler",
["npcID"] = 187645,
},
[260483] = {
["source"] = "Necrogg the Darkspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 104890,
},
[401209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepbed Longwalker",
["npcID"] = 203917,
},
[404695] = {
["source"] = "First Mate Ovdah",
["event"] = "SPELL_CAST_START",
["npcID"] = 201182,
},
[215433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Mystic",
["npcID"] = 95834,
},
[357115] = {
["npcID"] = 177915,
},
[196787] = {
["source"] = "Fel-Infused Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 99956,
},
[365851] = {
["npcID"] = 183404,
},
[396023] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[194956] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["encounterID"] = 1832,
["event"] = "SPELL_CAST_START",
["npcID"] = 98542,
},
[117960] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["encounterID"] = 1500,
["event"] = "SPELL_CAST_START",
["npcID"] = 60410,
},
[377594] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[206219] = {
["encounterName"] = "Gul'dan",
["source"] = "Gul'dan",
["npcID"] = 104154,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1866,
},
[124107] = {
["source"] = "Ban Bearheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 61819,
},
[375547] = {
["npcID"] = 191286,
},
[300171] = {
["npcID"] = 150276,
},
[404216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Narlena",
["npcID"] = 202244,
},
[340207] = {
["npcID"] = 161528,
},
[457458] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siegelord Xerosh",
["npcID"] = 224311,
},
[118988] = {
["encounterName"] = "Gekkan",
["source"] = "Gekkan",
["npcID"] = 61243,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2129,
},
[412408] = {
["event"] = "SPELL_CAST_START",
["source"] = "Field Despair Bot K156",
["npcID"] = 205612,
},
[463602] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["npcID"] = 164517,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2393,
},
[120524] = {
["source"] = "Osul Veteran Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61886,
},
[402170] = {
["source"] = "Vengeful Research",
["event"] = "SPELL_CAST_START",
["npcID"] = 201490,
},
[328069] = {
["npcID"] = 168240,
},
[167092] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cackling Pyromaniac",
["npcID"] = 79510,
},
[457460] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ixlorb the Spinner",
["npcID"] = 218426,
},
[184720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkcaster Adept",
["npcID"] = 93295,
},
[445174] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "Forgotten Harbinger",
["npcID"] = 221945,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[381694] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["npcID"] = 186124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[249224] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riftworld Assistant",
["npcID"] = 125535,
},
[418554] = {
["source"] = "Lord Banehollow",
["event"] = "SPELL_CAST_START",
["npcID"] = 204243,
},
[404220] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Narlena",
["npcID"] = 202244,
},
[54431] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dojani Surveyor",
["npcID"] = 58068,
},
[307977] = {
["encounterName"] = "Prophet Skitra",
["source"] = "Prophet Skitra",
["npcID"] = 157238,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2334,
},
[369409] = {
["npcID"] = 184130,
},
[196175] = {
["encounterName"] = "Serpentrix",
["source"] = "Mak'rana Hardshell",
["npcID"] = 95947,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[332550] = {
["npcID"] = 169875,
},
[87761] = {
["npcID"] = 45928,
},
[412413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skornak",
["npcID"] = 203643,
},
[193936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frenzied Animus",
["npcID"] = 96579,
},
[41069] = {
["source"] = "Shadowmoon Deathshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 22882,
},
[209485] = {
["source"] = "Arcane Manifestation",
["event"] = "SPELL_CAST_START",
["npcID"] = 105704,
},
[369411] = {
["npcID"] = 184301,
},
[200637] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[373201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windyfin Skybasher",
["npcID"] = 187431,
},
[326409] = {
["npcID"] = 164557,
},
[418558] = {
["source"] = "Lord Banehollow",
["event"] = "SPELL_CAST_START",
["npcID"] = 204243,
},
[330884] = {
["npcID"] = 168244,
},
[463609] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nether Phantom",
["npcID"] = 218429,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[369791] = {
["encounterName"] = "The Lost Dwarves",
["npcID"] = 184582,
["encounterID"] = 2555,
},
[328458] = {
["npcID"] = 168844,
},
[387843] = {
["source"] = "Spectral Invoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 196202,
},
[439037] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ravenous Spawn",
["npcID"] = 216205,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[87762] = {
["npcID"] = 45930,
},
[392337] = {
["npcID"] = 186853,
},
[449277] = {
["source"] = "General Emmerich",
["event"] = "SPELL_CAST_START",
["npcID"] = 215371,
},
[381701] = {
["npcID"] = 190933,
},
[342794] = {
["npcID"] = 174336,
},
[418561] = {
["source"] = "Lord Banehollow",
["event"] = "SPELL_CAST_START",
["npcID"] = 204243,
},
[148888] = {
["source"] = "Kor'kron Shredder",
["event"] = "SPELL_CAST_START",
["npcID"] = 73767,
},
[320063] = {
["encounterName"] = "An Affront of Challengers",
["npcID"] = 164451,
["encounterID"] = 2391,
},
[142745] = {
["source"] = "Flame Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 70702,
},
[369416] = {
["npcID"] = 182168,
},
[376272] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Tarasek Earthreaver",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191225,
},
[68821] = {
["source"] = "Apothecary Baxter",
["event"] = "SPELL_CAST_START",
["npcID"] = 36565,
},
[241828] = {
["npcID"] = 114804,
},
[328462] = {
["npcID"] = 168845,
},
[327296] = {
["npcID"] = 158870,
},
[373513] = {
["npcID"] = 190128,
},
[173265] = {
["npcID"] = 86620,
},
[377609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obsidian Soldier",
["npcID"] = 186919,
},
[393411] = {
["source"] = "Rakkesh of the Flow",
["event"] = "SPELL_CAST_START",
["npcID"] = 193849,
},
[324368] = {
["encounterName"] = "Kin-Tara",
["npcID"] = 163077,
["encounterID"] = 2357,
},
[391944] = {
["source"] = "Gnawbone Splintershield",
["event"] = "SPELL_CAST_START",
["npcID"] = 197847,
},
[443138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Scribe",
["npcID"] = 221035,
},
[387849] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[164187] = {
["npcID"] = 81407,
},
[200084] = {
["source"] = "Ghostly Retainer",
["event"] = "SPELL_CAST_START",
["npcID"] = 98366,
},
[344847] = {
["npcID"] = 178226,
},
[396041] = {
["source"] = "Cracked Concretion",
["event"] = "SPELL_CAST_START",
["npcID"] = 197074,
},
[136985] = {
["npcID"] = 69435,
},
[122064] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Sra'thik Amber-Trapper",
["encounterID"] = 1498,
["event"] = "SPELL_CAST_START",
["npcID"] = 62405,
},
[377612] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[443507] = {
["source"] = "Royal Swarmguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 220197,
},
[414473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greaves",
["npcID"] = 207278,
},
[369423] = {
["npcID"] = 184303,
},
[371471] = {
["isChanneled"] = true,
["source"] = "Flashfrost Chillweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 187969,
},
[106797] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[194966] = {
["source"] = "Lord Etheldrin Ravencrest",
["event"] = "SPELL_CAST_START",
["npcID"] = 98521,
},
[391948] = {
["source"] = "Steam Coalescence",
["event"] = "SPELL_CAST_START",
["npcID"] = 190110,
},
[147868] = {
["source"] = "Blackfuse Engineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 73095,
},
[396044] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[174489] = {
["event"] = "SPELL_CAST_START",
["source"] = "Solar Magnifier",
["npcID"] = 77559,
},
[384161] = {
["source"] = "Qalashi Irontorch",
["event"] = "SPELL_CAST_START",
["npcID"] = 189464,
},
[7855] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mjordin Water Magus",
["npcID"] = 30632,
},
[445191] = {
["source"] = "Spitfire Charger",
["event"] = "SPELL_CAST_START",
["npcID"] = 213577,
},
[414475] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greaves",
["npcID"] = 207278,
},
[322000] = {
["npcID"] = 165008,
},
[310042] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Basher Tentacle",
["npcID"] = 158367,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[375929] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[414476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greaves",
["npcID"] = 207278,
},
[441097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Regurgitating Monstrosity",
["npcID"] = 220138,
},
[449290] = {
["source"] = "Chasm Maker",
["event"] = "SPELL_CAST_START",
["npcID"] = 233021,
},
[90325] = {
["source"] = "Hatecoil Gargantuan",
["event"] = "SPELL_CAST_START",
["npcID"] = 109154,
},
[414477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greaves",
["npcID"] = 207278,
},
[367379] = {
["npcID"] = 178778,
},
[41071] = {
["source"] = "Shadowmoon Deathshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 22882,
},
[291613] = {
["encounterName"] = "King Mechagon",
["encounterID"] = 2260,
["npcID"] = 150396,
},
[340759] = {
["npcID"] = 161455,
},
[400144] = {
["source"] = "Vraken the Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 200584,
},
[184730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slavering Hound",
["npcID"] = 93303,
},
[396856] = {
["npcID"] = 191401,
},
[406644] = {
["event"] = "SPELL_CAST_START",
["source"] = "Response Team Watcher",
["npcID"] = 202318,
},
[367381] = {
["npcID"] = 178778,
},
[324079] = {
["encounterName"] = "Mordretha",
["npcID"] = 165946,
["encounterID"] = 2404,
},
[273185] = {
["npcID"] = 150251,
},
[293670] = {
["npcID"] = 144299,
},
[257426] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Enforcer",
["npcID"] = 129602,
},
[328475] = {
["npcID"] = 164737,
},
[60781] = {
["npcID"] = 30205,
},
[373526] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shimmerwing Monarch",
["npcID"] = 210767,
},
[131733] = {
["isChanneled"] = true,
["source"] = "Plongeur hozen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66148,
},
[289572] = {
["npcID"] = 148613,
},
[28089] = {
["encounterName"] = "Thaddius",
["source"] = "Thaddius",
["encounterID"] = 1120,
["event"] = "SPELL_CAST_START",
["npcID"] = 15928,
},
[453392] = {
["source"] = "Sureki Eradicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 225408,
},
[67289] = {
["source"] = "Kaz'tik the Manipulator",
["event"] = "SPELL_CAST_START",
["npcID"] = 64013,
},
[75992] = {
["npcID"] = 40634,
},
[203163] = {
["source"] = "Felspite Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 102788,
},
[357146] = {
["npcID"] = 177938,
},
[449295] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["encounterID"] = 2878,
["event"] = "SPELL_CAST_START",
["npcID"] = 204188,
},
[369359] = {
["source"] = "Infused Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 189515,
},
[273538] = {
["encounterName"] = "Mythrax",
["npcID"] = 134546,
["encounterID"] = 2135,
},
[131492] = {
["source"] = "Mande-flammes gatrul’lon",
["event"] = "SPELL_CAST_START",
["npcID"] = 66268,
},
[391959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ganmat the Wise",
["npcID"] = 192226,
},
[426771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Bound Despoiler",
["npcID"] = 212765,
},
[113364] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["encounterID"] = 1420,
["event"] = "SPELL_CAST_START",
["npcID"] = 59150,
},
[227736] = {
["encounterName"] = "Moroes",
["npcID"] = 114312,
["encounterID"] = 1961,
},
[334625] = {
["encounterName"] = "Devos, Paragon of Loyalty",
["npcID"] = 162061,
["encounterID"] = 2359,
},
[41072] = {
["source"] = "Shadowmoon Blood Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 22945,
},
[318243] = {
["npcID"] = 170803,
},
[256405] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["npcID"] = 126969,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2095,
},
[449298] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[388211] = {
["source"] = "Skag the Thrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 193149,
},
[443500] = {
["source"] = "Royal Swarmguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 220197,
},
[375924] = {
["encounterName"] = "The Lost Dwarves",
["npcID"] = 184580,
["encounterID"] = 2555,
},
[375580] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[396751] = {
["source"] = "Moth'go Deeploom",
["event"] = "SPELL_CAST_START",
["npcID"] = 193735,
},
[455443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxx",
["npcID"] = 226267,
},
[324387] = {
["npcID"] = 165197,
},
[314149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Ritualist",
["npcID"] = 161286,
},
[82137] = {
["npcID"] = 39665,
},
[445205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drained Cinderbee",
["npcID"] = 224080,
},
[62318] = {
["npcID"] = 32883,
},
[193951] = {
["source"] = "Barbed Spiderling",
["event"] = "SPELL_CAST_START",
["npcID"] = 97677,
},
[320293] = {
["encounterName"] = "An Affront of Challengers",
["npcID"] = 164461,
["encounterID"] = 2391,
},
[330532] = {
["npcID"] = 164510,
},
[207261] = {
["encounterName"] = "Patrol Captain Gerdo",
["encounterID"] = 1868,
["npcID"] = 104215,
},
[241049] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lylth the Silent",
["npcID"] = 120808,
},
[371489] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Terrasentry",
["npcID"] = 188067,
},
[445207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Bound Howler",
["npcID"] = 221979,
},
[334967] = {
["npcID"] = 171343,
},
[300155] = {
["npcID"] = 164929,
},
[389213] = {
["source"] = "Flame Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192764,
},
[412444] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brullo the Strong",
["npcID"] = 203621,
},
[326441] = {
["npcID"] = 164557,
},
[359203] = {
["npcID"] = 181857,
},
[369442] = {
["source"] = "Infused Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 189515,
},
[404259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyrachniss",
["npcID"] = 200978,
},
[406302] = {
["source"] = "Memory of a Caster",
["event"] = "SPELL_CAST_START",
["npcID"] = 200824,
},
[439401] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[443162] = {
["source"] = "Devouring Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 217870,
},
[437019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaheti Vanguard",
["npcID"] = 218316,
},
[375591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbling Sapling",
["npcID"] = 191313,
},
[457497] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ixlorb the Spinner",
["npcID"] = 218426,
},
[396069] = {
["npcID"] = 191095,
},
[152998] = {
["encounterName"] = "High Sage Viryx",
["source"] = "Grand Defense Construct",
["npcID"] = 76145,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1701,
},
[101592] = {
["npcID"] = 54432,
},
[441116] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Regurgitating Monstrosity",
["npcID"] = 220138,
},
[402209] = {
["source"] = "Vengeful Research",
["event"] = "SPELL_CAST_START",
["npcID"] = 201490,
},
[412448] = {
["source"] = "Deepflayer Broodmatron",
["event"] = "SPELL_CAST_START",
["npcID"] = 200115,
},
[318255] = {
["npcID"] = 164143,
},
[142760] = {
["source"] = "Kor'kron Dire Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 70665,
},
[320300] = {
["encounterName"] = "An Affront of Challengers",
["npcID"] = 164461,
["encounterID"] = 2391,
},
[404258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reisa the Drowned",
["npcID"] = 200600,
},
[447261] = {
["encounterName"] = "General Umbriss",
["source"] = "General Umbriss",
["npcID"] = 39625,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1051,
},
[119511] = {
["isChanneled"] = true,
["source"] = "Tak Tak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59958,
},
[371824] = {
["npcID"] = 46859,
},
[289585] = {
["npcID"] = 148582,
},
[422691] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["npcID"] = 200927,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2824,
},
[424737] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["npcID"] = 207205,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2861,
},
[400492] = {
["source"] = "Zaqali Cindershaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 199824,
},
[76508] = {
["npcID"] = 39982,
},
[426787] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[400165] = {
["source"] = "Infinite Twilight Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 201223,
},
[330868] = {
["npcID"] = 160495,
},
[289587] = {
["npcID"] = 148614,
},
[373545] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tranquil Tideskipper",
["npcID"] = 192148,
},
[457503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cogchewer",
["npcID"] = 212617,
},
[385832] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rageclaw",
["npcID"] = 187192,
},
[445217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Worker",
["npcID"] = 215023,
},
[164426] = {
["encounterName"] = "Fleshrender Nok'gar",
["npcID"] = 81305,
["encounterID"] = 1749,
},
[396615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunscale Behemoth",
["npcID"] = 193133,
},
[396073] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Nodding Tiger",
["npcID"] = 59544,
},
[265016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chosen Blood Matron",
["npcID"] = 131436,
},
[133548] = {
["isChanneled"] = true,
["source"] = "Darkhatched Sorcerer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 67748,
},
[445541] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[303924] = {
["npcID"] = 155911,
},
[412455] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alcanon",
["npcID"] = 203515,
},
[173480] = {
["npcID"] = 83389,
},
[375596] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Tender",
["npcID"] = 196115,
},
[396075] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Torrent",
["npcID"] = 197221,
},
[420647] = {
["source"] = "Ashendir Hartwood",
["event"] = "SPELL_CAST_START",
["npcID"] = 211258,
},
[373549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dismay Fly",
["npcID"] = 193370,
},
[423015] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[451364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Brute",
["npcID"] = 224152,
},
[265019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chosen Blood Matron",
["npcID"] = 131436,
},
[392854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Scythid Queen",
["npcID"] = 184853,
},
[424744] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voracious Mikanji",
["npcID"] = 210508,
},
[373084] = {
["source"] = "Irontorch Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 189466,
},
[447270] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["npcID"] = 207946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[414506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashen Emberwing",
["npcID"] = 209098,
},
[449318] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Darkcaster",
["npcID"] = 208242,
},
[153002] = {
["encounterName"] = "Vigilant Kaathar",
["source"] = "Vigilant Kaathar",
["npcID"] = 75839,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1686,
},
[322358] = {
["encounterName"] = "Doctor Ickus",
["encounterID"] = 2384,
["npcID"] = 164967,
},
[447271] = {
["source"] = "Hulking Warshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 221103,
},
[391982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmatalon",
["npcID"] = 189538,
},
[378420] = {
["source"] = "Provoked Geode",
["event"] = "SPELL_CAST_START",
["npcID"] = 189040,
},
[396078] = {
["source"] = "Summoned Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193288,
},
[401205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carcaxas",
["npcID"] = 202836,
},
[326455] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 165805,
["encounterID"] = 2402,
},
[294180] = {
["npcID"] = 151773,
},
[189865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tidecaller Nezara",
["npcID"] = 157734,
},
[308026] = {
["npcID"] = 157824,
},
[449321] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[418605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Future Self",
["npcID"] = 208887,
},
[115418] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krik'thik Wind Shaper",
["npcID"] = 59801,
},
[316218] = {
["npcID"] = 169476,
},
[377962] = {
["source"] = "Gloomfur Sasquatch",
["event"] = "SPELL_CAST_START",
["npcID"] = 190723,
},
[394344] = {
["source"] = "Death's Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 190985,
},
[323748] = {
["npcID"] = 171381,
},
[182705] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bleeding Darkcaster",
["npcID"] = 92041,
},
[359222] = {
["encounterName"] = "Myza's Oasis",
["npcID"] = 176561,
["encounterID"] = 2440,
},
[402225] = {
["source"] = "Vengeful Research",
["event"] = "SPELL_CAST_START",
["npcID"] = 201490,
},
[200105] = {
["source"] = "Ghostly Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 98368,
},
[227925] = {
["npcID"] = 114526,
},
[375605] = {
["npcID"] = 185272,
},
[248233] = {
["encounterName"] = "Imonar the Soulhunter",
["source"] = "Imonar the Soulhunter",
["npcID"] = 124158,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2082,
},
[377658] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[130265] = {
["source"] = "Thunder Hold Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 66291,
},
[326460] = {
["npcID"] = 160654,
},
[445236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Eel",
["npcID"] = 227369,
},
[396084] = {
["npcID"] = 190933,
},
[207278] = {
["encounterName"] = "Patrol Captain Gerdo",
["encounterID"] = 1868,
["npcID"] = 104215,
},
[116] = {
["npcID"] = 188027,
},
[394037] = {
["source"] = "Unbound Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 187036,
},
[406333] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[332605] = {
["npcID"] = 170572,
},
[334653] = {
["npcID"] = 165076,
},
[369465] = {
["npcID"] = 186420,
},
[420659] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["npcID"] = 208745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2787,
},
[141746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viletongue Raider",
["npcID"] = 58737,
},
[326463] = {
["npcID"] = 165912,
},
[262983] = {
["source"] = "Nazeshi Tempest-Wielder",
["event"] = "SPELL_CAST_START",
["npcID"] = 128604,
},
[355132] = {
["npcID"] = 178141,
},
[130266] = {
["source"] = "Thunder Hold Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 66200,
},
[326464] = {
["npcID"] = 165912,
},
[262984] = {
["source"] = "Nazeshi Tempest-Wielder",
["event"] = "SPELL_CAST_START",
["npcID"] = 128604,
},
[76588] = {
["npcID"] = 39990,
},
[332608] = {
["npcID"] = 170572,
},
[142771] = {
["source"] = "Overseer Elaglo",
["event"] = "SPELL_CAST_START",
["npcID"] = 71030,
},
[451378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Overseer",
["npcID"] = 224221,
},
[322370] = {
["npcID"] = 157660,
},
[287565] = {
["encounterName"] = "Lady Jaina Proudmoore",
["npcID"] = 146409,
["encounterID"] = 2281,
},
[332612] = {
["npcID"] = 170572,
},
[451379] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Overseer",
["npcID"] = 224221,
},
[330562] = {
["npcID"] = 164506,
},
[357183] = {
["npcID"] = 177938,
},
[346947] = {
["encounterName"] = "Mailroom Mayhem",
["npcID"] = 175646,
["encounterID"] = 2424,
},
[377661] = {
["npcID"] = 198414,
},
[389951] = {
["source"] = "Strunraan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193534,
},
[389948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Zambul",
["npcID"] = 191145,
},
[205231] = {
["npcID"] = 103673,
},
[389953] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[115421] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Krik'thik Wind Shaper",
["npcID"] = 59801,
},
[389949] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Brute",
["npcID"] = 187299,
},
[91872] = {
["encounterName"] = "Siamat",
["npcID"] = 45259,
["encounterID"] = 1055,
},
[394045] = {
["source"] = "Vadne Bleakheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 195764,
},
[144821] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Garrosh Hellscream",
["encounterID"] = 1623,
["event"] = "SPELL_CAST_START",
["npcID"] = 71865,
},
[332613] = {
["npcID"] = 170577,
},
[391998] = {
["npcID"] = 191403,
},
[373573] = {
["source"] = "Unstable Faerie Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 209444,
},
[281420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Brinescale",
["npcID"] = 129600,
},
[141750] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huntmaster S'thoc",
["npcID"] = 71259,
},
[391999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Scavenger",
["npcID"] = 185445,
},
[119007] = {
["source"] = "Student of Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 60602,
},
[424771] = {
["source"] = "Harbinger of Incineration",
["event"] = "SPELL_CAST_START",
["npcID"] = 210147,
},
[357188] = {
["encounterName"] = "So'azmi",
["npcID"] = 175806,
["encounterID"] = 2437,
},
[201139] = {
["source"] = "Wrathguard Bladelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 98810,
},
[418621] = {
["source"] = "Aqir Fanatic",
["event"] = "SPELL_CAST_START",
["npcID"] = 207896,
},
[330568] = {
["npcID"] = 167484,
},
[324425] = {
["npcID"] = 182267,
},
[334664] = {
["npcID"] = 171341,
},
[418622] = {
["source"] = "Aqir Scarab",
["event"] = "SPELL_CAST_START",
["npcID"] = 207910,
},
[412479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dinn",
["npcID"] = 203646,
},
[406345] = {
["source"] = "Remnants of Sindragosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 201089,
},
[351047] = {
["npcID"] = 178392,
},
[451387] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Lavabender",
["npcID"] = 224249,
},
[342863] = {
["encounterName"] = "Shriekwing",
["npcID"] = 164406,
["encounterID"] = 2398,
},
[324427] = {
["encounterName"] = "Oryphrion",
["npcID"] = 162060,
["encounterID"] = 2358,
},
[445251] = {
["source"] = "Scavenging Stormfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 218401,
},
[418624] = {
["source"] = "Klaxxi Assassin",
["event"] = "SPELL_CAST_START",
["npcID"] = 207915,
},
[414535] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[381765] = {
["source"] = "Colossal Glacier",
["event"] = "SPELL_CAST_START",
["npcID"] = 194798,
},
[432959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Ascendant",
["npcID"] = 212793,
},
[445252] = {
["isChanneled"] = true,
["source"] = "Old Grim",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213403,
},
[115423] = {
["source"] = "Shan'ze Spiritbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 55279,
},
[199090] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angerhoof Bull",
["npcID"] = 96611,
},
[125733] = {
["source"] = "Swamp Rodent",
["event"] = "SPELL_CAST_START",
["npcID"] = 60733,
},
[303952] = {
["npcID"] = 155910,
},
[387910] = {
["source"] = "Algeth'ar Echoknight",
["event"] = "SPELL_CAST_START",
["npcID"] = 196200,
},
[162231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bladespire Sorcerer",
["npcID"] = 80071,
},
[392006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sharpfang",
["npcID"] = 192749,
},
[451391] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Corruptor",
["npcID"] = 39392,
},
[330574] = {
["npcID"] = 158040,
},
[398150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Dominator",
["npcID"] = 76446,
},
[87779] = {
["npcID"] = 45935,
},
[320336] = {
["npcID"] = 163126,
},
[346957] = {
["encounterName"] = "Hylbrande",
["npcID"] = 175667,
["encounterID"] = 2426,
},
[357196] = {
["npcID"] = 180336,
},
[209471] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Nightmare Ichor",
["encounterID"] = 1873,
["event"] = "SPELL_CAST_START",
["npcID"] = 105721,
},
[398154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defiled Spirit",
["npcID"] = 75451,
},
[412486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warchanter Ronvath",
["npcID"] = 200128,
},
[381770] = {
["encounterName"] = "Treemouth",
["source"] = "Decaying Slime",
["npcID"] = 192481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[424773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarled Reviver",
["npcID"] = 207468,
},
[435012] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["encounterID"] = 2906,
["event"] = "SPELL_CAST_START",
["npcID"] = 215405,
},
[314195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnashing Terror",
["npcID"] = 161334,
},
[406344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[432965] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[451395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Corruptor",
["npcID"] = 39392,
},
[412488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crawling Goo",
["npcID"] = 205820,
},
[373581] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infected Bear",
["npcID"] = 189318,
},
[384292] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Thunder Caller",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 194647,
},
[432967] = {
["source"] = "Sentry Stagshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 216340,
},
[396107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadeslash Trakken",
["npcID"] = 193271,
},
[394336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mordigan Ironjaw",
["npcID"] = 187353,
},
[351057] = {
["encounterName"] = "So'leah",
["npcID"] = 177269,
["encounterID"] = 2442,
},
[394060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Productive Pollinator",
["npcID"] = 193809,
},
[289625] = {
["npcID"] = 148624,
},
[381721] = {
["npcID"] = 3272,
},
[392013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbound Attendant",
["npcID"] = 187036,
},
[328533] = {
["npcID"] = 163862,
},
[360949] = {
["npcID"] = 184268,
},
[383823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Hornsounder",
["npcID"] = 192796,
},
[392014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rokzul",
["npcID"] = 194458,
},
[385812] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["npcID"] = 192934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[412492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brullo the Strong",
["npcID"] = 203621,
},
[207806] = {
["encounterName"] = "Patrol Captain Gerdo",
["encounterID"] = 1868,
["npcID"] = 104215,
},
[342869] = {
["npcID"] = 168934,
},
[169341] = {
["npcID"] = 83765,
},
[323166] = {
["encounterName"] = "Hakkar, the Soulflayer",
["encounterID"] = 2395,
["npcID"] = 164558,
},
[361300] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 181549,
["encounterID"] = 2544,
},
[131520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farraki Dervish",
["npcID"] = 66169,
},
[418637] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[291946] = {
["encounterName"] = "K.U.-J.0.",
["encounterID"] = 2258,
["npcID"] = 144246,
},
[396991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakonid Breaker",
["npcID"] = 187240,
},
[143941] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Kil'ruk the Wind-Reaver",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71161,
},
[328180] = {
["npcID"] = 168627,
},
[133702] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Broodmaster Noshi",
["npcID"] = 67264,
},
[330586] = {
["npcID"] = 169927,
},
[377950] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["npcID"] = 186125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[425048] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["npcID"] = 207205,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2861,
},
[198073] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["encounterID"] = 1834,
["event"] = "SPELL_CAST_START",
["npcID"] = 98949,
},
[80279] = {
["npcID"] = 42691,
},
[257458] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[361304] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 183421,
["encounterID"] = 2544,
},
[428879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rock Smasher",
["npcID"] = 213954,
},
[365399] = {
["npcID"] = 183748,
},
[392021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mantai",
["npcID"] = 195286,
},
[344922] = {
["npcID"] = 168148,
},
[128803] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shek'zeer Clutch-Keeper",
["npcID"] = 64559,
},
[365400] = {
["npcID"] = 184413,
},
[293729] = {
["npcID"] = 144295,
},
[76008] = {
["encounterName"] = "Lady Naz'jar",
["encounterID"] = 1045,
["npcID"] = 40586,
},
[120100] = {
["encounterName"] = "Trial of the King",
["source"] = "Ming the Cunning",
["npcID"] = 61444,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1442,
},
[68841] = {
["source"] = "Apothecary Frye",
["event"] = "SPELL_CAST_START",
["npcID"] = 36272,
},
[196027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Arcanist",
["npcID"] = 97171,
},
[361306] = {
["npcID"] = 182152,
},
[406357] = {
["source"] = "Remnants of Sindragosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 201089,
},
[324447] = {
["npcID"] = 182267,
},
[138691] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["npcID"] = 69427,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[168383] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Dulhu",
["npcID"] = 83894,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[196157] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Shadowmoon Technician",
["npcID"] = 99645,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[406358] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[342878] = {
["npcID"] = 171189,
},
[180670] = {
["npcID"] = 90215,
},
[196028] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Arcanist",
["npcID"] = 97171,
},
[166335] = {
["npcID"] = 82579,
},
[400177] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Summoner",
["npcID"] = 204826,
},
[329383] = {
["npcID"] = 167331,
},
[330593] = {
["npcID"] = 168724,
},
[116004] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Fiend",
["npcID"] = 56820,
},
[198077] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["npcID"] = 95676,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1809,
},
[385883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge-Keep Custodian",
["npcID"] = 192703,
},
[119524] = {
["source"] = "Mogu Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61345,
},
[332642] = {
["npcID"] = 170577,
},
[174529] = {
["npcID"] = 135077,
},
[451412] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
},
[412505] = {
["source"] = "Tyr's Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 205151,
},
[398171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Senegos",
["npcID"] = 199923,
},
[361313] = {
["npcID"] = 182666,
},
[443222] = {
["source"] = "Corrupted Memory of Turalyon",
["event"] = "SPELL_CAST_START",
["npcID"] = 214616,
},
[371551] = {
["source"] = "Stormfang Dustcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 187551,
},
[389981] = {
["npcID"] = 189955,
},
[359265] = {
["npcID"] = 182799,
},
[320358] = {
["encounterName"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["npcID"] = 162689,
},
[375649] = {
["isChanneled"] = true,
["source"] = "Arcane Tender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196115,
},
[357218] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Colossus",
["npcID"] = 188673,
},
[196031] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wavebinder",
["npcID"] = 97170,
},
[318312] = {
["npcID"] = 170026,
},
[297834] = {
["encounterName"] = "Gunker",
["npcID"] = 150222,
["encounterID"] = 2292,
},
[332646] = {
["npcID"] = 162872,
},
[449368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wanderer Ida",
["npcID"] = 220953,
},
[40088] = {
["source"] = "Coilskar Sea-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 22875,
},
[297835] = {
["encounterName"] = "Gunker",
["npcID"] = 150222,
["encounterID"] = 2292,
},
[406366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Nightflame",
["npcID"] = 200931,
},
[277358] = {
["npcID"] = 141267,
},
[392279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Proto-Drake",
["npcID"] = 194087,
},
[393430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge-Keep Custodian",
["npcID"] = 192703,
},
[198962] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Runecarver",
["npcID"] = 96664,
},
[198892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storm Drake",
["npcID"] = 97068,
},
[424798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infected Beast",
["npcID"] = 210478,
},
[144839] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Hisek the Swarmkeeper",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71153,
},
[341084] = {
["npcID"] = 170472,
},
[375652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Tender",
["npcID"] = 196115,
},
[289647] = {
["npcID"] = 148569,
},
[428894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Honor Guard",
["npcID"] = 214264,
},
[406369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Nightflame",
["npcID"] = 200931,
},
[375653] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Drakonid Stormbringer",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191232,
},
[369754] = {
["encounterName"] = "Bromach",
["npcID"] = 184018,
["encounterID"] = 2556,
},
[161222] = {
["source"] = "Twilight Prowler",
["event"] = "SPELL_CAST_START",
["npcID"] = 145736,
},
[384823] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[314942] = {
["npcID"] = 166869,
},
[289649] = {
["npcID"] = 148625,
},
[330604] = {
["npcID"] = 168724,
},
[369751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Djaradin",
["npcID"] = 188296,
},
[383846] = {
["source"] = "Destructive Fire Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 194179,
},
[337556] = {
["npcID"] = 162853,
},
[283507] = {
["encounterName"] = "Opulence",
["npcID"] = 145273,
["encounterID"] = 2271,
},
[357226] = {
["npcID"] = 180429,
},
[328558] = {
["npcID"] = 159027,
},
[451423] = {
["source"] = "Xeph'itik",
["event"] = "SPELL_CAST_START",
["npcID"] = 219984,
},
[64156] = {
["encounterName"] = "Yogg-Saron",
["encounterID"] = 1143,
["npcID"] = 33985,
},
[162248] = {
["source"] = "Twilight Prowler",
["event"] = "SPELL_CAST_START",
["npcID"] = 145736,
},
[310129] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["npcID"] = 156523,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2327,
},
[227776] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114251,
["encounterID"] = 1957,
},
[396370] = {
["source"] = "Rimebound Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195836,
},
[283509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Helmet Missingway",
["npcID"] = 193263,
},
[408422] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[131532] = {
["source"] = "Sha Shooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 66928,
},
[389999] = {
["npcID"] = 189955,
},
[141771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viletongue Raider",
["npcID"] = 58737,
},
[191941] = {
["encounterName"] = "Tirathon Saltheril",
["source"] = "Tirathon Saltheril",
["encounterID"] = 1815,
["event"] = "SPELL_CAST_START",
["npcID"] = 95885,
},
[204344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktalon Assassin",
["npcID"] = 186634,
},
[265081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chosen Blood Matron",
["npcID"] = 131436,
},
[332657] = {
["npcID"] = 164587,
},
[330611] = {
["npcID"] = 155795,
},
[173514] = {
["npcID"] = 83389,
},
[371565] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ohn'ir Windcaller",
["npcID"] = 191244,
},
[79085] = {
["source"] = "Osul Mist-Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 60697,
},
[128232] = {
["source"] = "Scarlet Evangelist",
["event"] = "SPELL_CAST_START",
["npcID"] = 58685,
},
[451428] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Xeph'itik",
["npcID"] = 219984,
},
[202181] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rockback Gnasher",
["npcID"] = 91006,
},
[373614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Destroyer",
["npcID"] = 190034,
},
[130791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garrosh'ar Grunt",
["npcID"] = 66398,
},
[131534] = {
["source"] = "Rothek",
["event"] = "SPELL_CAST_START",
["npcID"] = 62581,
},
[265084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Blood Priest",
["npcID"] = 131492,
},
[425037] = {
["source"] = "Ancient Core Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 210288,
},
[334708] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 171557,
["encounterID"] = 2418,
},
[125160] = {
["source"] = "Alliance Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 214167,
},
[169418] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Abomination",
["npcID"] = 84767,
},
[227779] = {
["encounterName"] = "Shade of Medivh",
["npcID"] = 114350,
["encounterID"] = 1965,
},
[359282] = {
["npcID"] = 185415,
},
[320376] = {
["encounterName"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["npcID"] = 164578,
},
[330614] = {
["npcID"] = 163086,
},
[365426] = {
["npcID"] = 184413,
},
[433002] = {
["source"] = "Bloodstained Assistant",
["event"] = "SPELL_CAST_START",
["npcID"] = 216333,
},
[225732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Velandras Ravencrest",
["npcID"] = 98538,
},
[299432] = {
["npcID"] = 151640,
},
[373618] = {
["npcID"] = 190174,
},
[449385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wanderer Ida",
["npcID"] = 220953,
},
[426860] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[428908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Meredy Huntswell",
["npcID"] = 209059,
},
[384474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Icegnaw Mantacorn",
["npcID"] = 187826,
},
[392272] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rumbling Blackpaw",
["npcID"] = 191665,
},
[351096] = {
["encounterName"] = "So'leah",
["npcID"] = 177269,
["encounterID"] = 2442,
},
[265089] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Blood Priest",
["npcID"] = 131492,
},
[357238] = {
["npcID"] = 180429,
},
[212423] = {
["npcID"] = 99541,
},
[451435] = {
["source"] = "Voidwraith",
["event"] = "SPELL_CAST_START",
["npcID"] = 224466,
},
[387955] = {
["source"] = "Ethereal Restorer",
["event"] = "SPELL_CAST_START",
["npcID"] = 196203,
},
[128233] = {
["source"] = "Scarlet Evangelist",
["event"] = "SPELL_CAST_START",
["npcID"] = 58685,
},
[191946] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 91784,
},
[265091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Blood Priest",
["npcID"] = 131492,
},
[273282] = {
["encounterName"] = "Mythrax",
["npcID"] = 134546,
["encounterID"] = 2135,
},
[283422] = {
["encounterName"] = "Tussle Tonks",
["encounterID"] = 2257,
["npcID"] = 145185,
},
[277597] = {
["npcID"] = 140599,
},
[443247] = {
["source"] = "Corrupted Memory of Turalyon",
["event"] = "SPELL_CAST_START",
["npcID"] = 214616,
},
[322429] = {
["npcID"] = 162057,
},
[174541] = {
["source"] = "Councilor Daglat",
["event"] = "SPELL_CAST_START",
["npcID"] = 81810,
},
[375671] = {
["npcID"] = 190900,
},
[168398] = {
["encounterName"] = "Skulloc, Son of Gruul",
["npcID"] = 84215,
["encounterID"] = 1754,
},
[211401] = {
["npcID"] = 104295,
},
[227783] = {
["encounterName"] = "Opera Hall",
["encounterID"] = 1957,
["npcID"] = 114260,
},
[367481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cruel Bonecrusher",
["npcID"] = 186206,
},
[394102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terillod the Devout",
["npcID"] = 193171,
},
[355057] = {
["npcID"] = 178139,
},
[357243] = {
["npcID"] = 180433,
},
[383864] = {
["npcID"] = 191403,
},
[385912] = {
["source"] = "Shiverweb Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 192591,
},
[387960] = {
["source"] = "Caldera Stomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187919,
},
[332671] = {
["npcID"] = 170480,
},
[265088] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["npcID"] = 133219,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[41084] = {
["source"] = "Shadowmoon Houndmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 23018,
},
[428916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Priest",
["npcID"] = 206697,
},
[124139] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Gatewatcher",
["npcID"] = 63564,
},
[367484] = {
["event"] = "SPELL_CAST_START",
["source"] = "Claw Fighter",
["npcID"] = 185508,
},
[426869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flickerflame Enforcer",
["npcID"] = 212548,
},
[185806] = {
["source"] = "Contracted Engineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 93813,
},
[365649] = {
["npcID"] = 184734,
},
[367485] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Claw Fighter",
["npcID"] = 185508,
},
[357197] = {
["npcID"] = 180336,
},
[361343] = {
["npcID"] = 178963,
},
[324483] = {
["npcID"] = 182267,
},
[257478] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Mastiff",
["npcID"] = 128551,
},
[385916] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["npcID"] = 186616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[392007] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadepaw Bruiser",
["npcID"] = 183343,
},
[260550] = {
["source"] = "Uul'gyneth",
["event"] = "SPELL_CAST_START",
["npcID"] = 126001,
},
[399086] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[265721] = {
["source"] = "Terrorachna",
["event"] = "SPELL_CAST_START",
["npcID"] = 200349,
},
[387965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Bladewing",
["npcID"] = 187232,
},
[124140] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Gatewatcher",
["npcID"] = 63564,
},
[397112] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Proto-Dragon",
["npcID"] = 189798,
},
[320390] = {
["npcID"] = 174095,
},
[117485] = {
["encounterName"] = "Will of the Emperor",
["source"] = "Emperor's Courage",
["encounterID"] = 1407,
["event"] = "SPELL_CAST_START",
["npcID"] = 60398,
},
[260654] = {
["source"] = "Karkinus the Capsizer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200907,
},
[105762] = {
["source"] = "Grookin Wildtail",
["event"] = "SPELL_CAST_START",
["npcID"] = 56309,
},
[398206] = {
["event"] = "SPELL_CAST_START",
["source"] = "Exhumed Spirit",
["npcID"] = 75979,
},
[40317] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Spearman",
["npcID"] = 17729,
},
[111854] = {
["source"] = "Instructor Chillheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 58633,
},
[383872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swelling Fire Elemental",
["npcID"] = 188667,
},
[159290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Solar Familiar",
["npcID"] = 76097,
},
[396159] = {
["source"] = "Worldcarver Wurmling",
["event"] = "SPELL_CAST_START",
["npcID"] = 187366,
},
[211406] = {
["npcID"] = 104295,
},
[391051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uurtus",
["npcID"] = 193724,
},
[377608] = {
["npcID"] = 190938,
},
[387049] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Proto-Drake",
["npcID"] = 194087,
},
[406399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Arcanist",
["npcID"] = 201736,
},
[334929] = {
["encounterName"] = "Stone Legion Generals",
["npcID"] = 168112,
["encounterID"] = 2417,
},
[227789] = {
["encounterName"] = "Maiden of Virtue",
["npcID"] = 113971,
["encounterID"] = 1954,
},
[131545] = {
["isChanneled"] = true,
["source"] = "Seething Hatred",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66940,
},
[324490] = {
["encounterName"] = "Globgrog",
["encounterID"] = 2382,
["npcID"] = 164255,
},
[118510] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ahgunoss",
["npcID"] = 62765,
},
[377732] = {
["npcID"] = 184319,
},
[385383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge-Keep Overseer",
["npcID"] = 192699,
},
[336277] = {
["npcID"] = 172265,
},
[326952] = {
["npcID"] = 168058,
},
[396360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ritual Guardian",
["npcID"] = 186787,
},
[319906] = {
["npcID"] = 181614,
},
[340874] = {
["npcID"] = 162657,
},
[383866] = {
["npcID"] = 194526,
},
[445311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strange Shore Crawler",
["npcID"] = 219365,
},
[363400] = {
["npcID"] = 178159,
},
[275347] = {
["source"] = "Zarizz",
["event"] = "SPELL_CAST_START",
["npcID"] = 193140,
},
[375687] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Totem",
["npcID"] = 190426,
},
[344971] = {
["npcID"] = 170301,
},
[387974] = {
["isChanneled"] = true,
["source"] = "Spellbound Scepter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196202,
},
[355641] = {
["npcID"] = 179841,
},
[392283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Proto-Drake",
["npcID"] = 191413,
},
[334926] = {
["npcID"] = 168878,
},
[34930] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Darkcaster",
["npcID"] = 18331,
},
[406405] = {
["source"] = "Calibrating Scent Matrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 203606,
},
[372296] = {
["source"] = "Irontorch Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 189466,
},
[426883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Taskworker",
["npcID"] = 212383,
},
[95826] = {
["npcID"] = 68,
},
[357260] = {
["npcID"] = 180431,
},
[340446] = {
["npcID"] = 167898,
},
[406407] = {
["source"] = "Calibrating Scent Matrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 203606,
},
[433029] = {
["encounterName"] = "Mirror Master Murkna",
["source"] = "Mirror Master Murkna",
["encounterID"] = 2999,
["event"] = "SPELL_CAST_START",
["npcID"] = 219763,
},
[20801] = {
["source"] = "Diablotin serviteur",
["event"] = "SPELL_CAST_START",
["npcID"] = 12922,
},
[29120] = {
["source"] = "Honor Hold Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 16896,
},
[344975] = {
["npcID"] = 175331,
},
[322450] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["npcID"] = 164517,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2393,
},
[328781] = {
["source"] = "Vault Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199126,
},
[351119] = {
["encounterName"] = "So'leah",
["npcID"] = 177716,
["encounterID"] = 2442,
},
[404796] = {
["source"] = "Baine Bloodhoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 203204,
},
[453507] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Quartermaster Ze'erik",
["npcID"] = 215988,
},
[367502] = {
["npcID"] = 181059,
},
[392075] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arkhuu",
["npcID"] = 195300,
},
[80117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Groundbreaker Brojai",
["npcID"] = 58224,
},
[359313] = {
["npcID"] = 182350,
},
[435263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Ravager",
["npcID"] = 217557,
},
[367503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Speaker",
["npcID"] = 186191,
},
[15585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Healer",
["npcID"] = 17730,
},
[453509] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Royal Quartermaster Ze'erik",
["npcID"] = 215988,
},
[404364] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 202789,
},
[277403] = {
["npcID"] = 140594,
},
[116977] = {
["source"] = "Stone Quilen",
["event"] = "SPELL_CAST_START",
["npcID"] = 60576,
},
[420746] = {
["source"] = "Kaldorei Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 207117,
},
[412737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Silver Golem",
["npcID"] = 198946,
},
[367505] = {
["npcID"] = 181059,
},
[327995] = {
["npcID"] = 168574,
},
[192050] = {
["encounterName"] = "Serpentrix",
["source"] = "Serpentrix",
["npcID"] = 91808,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[365458] = {
["npcID"] = 184651,
},
[351124] = {
["encounterName"] = "So'leah",
["npcID"] = 177269,
["encounterID"] = 2442,
},
[121073] = {
["source"] = "Malevolent Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 61333,
},
[201176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
[130288] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sha of Despair",
["npcID"] = 59651,
},
[392080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mature Riverbeast",
["npcID"] = 194145,
},
[373051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudfin Salamancer",
["npcID"] = 186669,
},
[325386] = {
["npcID"] = 167119,
},
[329172] = {
["encounterName"] = "Lord Chamberlain",
["npcID"] = 165737,
["encounterID"] = 2381,
},
[426893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quartermaster Koratite",
["npcID"] = 209801,
},
[192985] = {
["encounterName"] = "Wrath of Azshara",
["source"] = "Wrath of Azshara",
["npcID"] = 96028,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1814,
},
[408466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drogbar Crystal-collector",
["npcID"] = 204407,
},
[283551] = {
["encounterName"] = "King Mechagon",
["encounterID"] = 2260,
["npcID"] = 144249,
},
[102132] = {
["npcID"] = 54552,
},
[131553] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farraki Sand-Stormer",
["npcID"] = 63673,
},
[114419] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stonebound Colossus",
["npcID"] = 56595,
},
[195037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Oracle",
["npcID"] = 95861,
},
[396180] = {
["source"] = "Worldcarver Wurmling",
["event"] = "SPELL_CAST_START",
["npcID"] = 187366,
},
[287648] = {
["encounterName"] = "Opulence",
["npcID"] = 145273,
["encounterID"] = 2271,
},
[461880] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[131640] = {
["source"] = "Ik'thik Whisperer",
["event"] = "SPELL_CAST_START",
["npcID"] = 64622,
},
[334747] = {
["npcID"] = 166302,
},
[332705] = {
["npcID"] = 170490,
},
[355225] = {
["npcID"] = 178142,
},
[174558] = {
["source"] = "Councilor Magknor",
["event"] = "SPELL_CAST_START",
["npcID"] = 81808,
},
[200154] = {
["source"] = "Understone Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 102253,
},
[400279] = {
["source"] = "Zaqali Flamewalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199826,
},
[273316] = {
["encounterName"] = "Zul",
["npcID"] = 139051,
["encounterID"] = 2145,
},
[324513] = {
["event"] = "SPELL_CAST_START",
["source"] = "Experimental Misstep",
["npcID"] = 199859,
},
[186846] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contracted Engineer",
["npcID"] = 93813,
},
[410516] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[120052] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Adolescent Mushan",
["npcID"] = 56239,
},
[141794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Champion Sithiss",
["npcID"] = 59632,
},
[392087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queasy Hornswog",
["npcID"] = 194003,
},
[40064] = {
["source"] = "Shadowmoon Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 17414,
},
[130803] = {
["source"] = "Charognard hozen",
["event"] = "SPELL_CAST_START",
["npcID"] = 66153,
},
[227800] = {
["encounterName"] = "Maiden of Virtue",
["npcID"] = 113971,
["encounterID"] = 1954,
},
[40832] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[369563] = {
["encounterName"] = "The Lost Dwarves",
["npcID"] = 184581,
["encounterID"] = 2555,
},
[189917] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Enforcer",
["npcID"] = 95632,
},
[20802] = {
["source"] = "Brackenhide Putrifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 186363,
},
[142819] = {
["source"] = "Summit Guster",
["event"] = "SPELL_CAST_START",
["npcID"] = 71277,
},
[451474] = {
["source"] = "Purgle-lurgle",
["event"] = "SPELL_CAST_START",
["npcID"] = 214544,
},
[322470] = {
["npcID"] = 166875,
},
[349087] = {
["npcID"] = 176705,
},
[171570] = {
["source"] = "Iron Dockworker",
["event"] = "SPELL_CAST_START",
["npcID"] = 84841,
},
[332708] = {
["npcID"] = 167532,
},
[392451] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Channeler",
["npcID"] = 197985,
},
[332706] = {
["npcID"] = 170490,
},
[328773] = {
["source"] = "Vault Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 200375,
},
[175665] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gorian Enforcer",
["npcID"] = 86275,
},
[256551] = {
["encounterName"] = "Ring of Booty",
["source"] = "Sawtooth Shark",
["npcID"] = 129359,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2095,
},
[373662] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spiteful Shade",
["npcID"] = 186420,
},
[400283] = {
["source"] = "Zaqali Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 199972,
},
[385950] = {
["source"] = "Deathwingurlugull",
["event"] = "SPELL_CAST_START",
["npcID"] = 195314,
},
[396189] = {
["source"] = "Fetid Rotsinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 197129,
},
[357281] = {
["npcID"] = 180432,
},
[334757] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 169457,
["encounterID"] = 2418,
},
[76026] = {
["encounterName"] = "Commander Ulthok",
["encounterID"] = 1044,
["npcID"] = 40765,
},
[355234] = {
["npcID"] = 178142,
},
[367521] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonebolt Hunter",
["npcID"] = 185534,
},
[310184] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Psychus",
["npcID"] = 158376,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[131559] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Frostweaver",
["npcID"] = 66707,
},
[289906] = {
["encounterName"] = "Opulence",
["npcID"] = 145274,
["encounterID"] = 2271,
},
[388000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bertinuat",
["npcID"] = 196288,
},
[367522] = {
["npcID"] = 181059,
},
[118518] = {
["source"] = "Mutated Silkworm",
["event"] = "SPELL_CAST_START",
["npcID"] = 59002,
},
[371618] = {
["source"] = "Cindershard Igniter",
["event"] = "SPELL_CAST_START",
["npcID"] = 198382,
},
[357284] = {
["npcID"] = 180432,
},
[398394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deep Krolusk",
["npcID"] = 202738,
},
[429110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgebound Mender",
["npcID"] = 213338,
},
[388001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bertinuat",
["npcID"] = 196288,
},
[277424] = {
["npcID"] = 140594,
},
[400288] = {
["source"] = "Unstable Pain",
["event"] = "SPELL_CAST_START",
["npcID"] = 201290,
},
[336809] = {
["npcID"] = 162873,
},
[388002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bertinuat",
["npcID"] = 196288,
},
[365477] = {
["npcID"] = 181797,
},
[433053] = {
["source"] = "Old Grim",
["event"] = "SPELL_CAST_START",
["npcID"] = 213403,
},
[443292] = {
["source"] = "Devouring Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 217870,
},
[51584] = {
["source"] = "Ice Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 26283,
},
[392097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diluu",
["npcID"] = 195431,
},
[332650] = {
["npcID"] = 165007,
},
[377765] = {
["npcID"] = 189205,
},
[169445] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Abomination",
["npcID"] = 84767,
},
[439198] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venommaster Nezarox",
["npcID"] = 219006,
},
[345002] = {
["npcID"] = 168977,
},
[114935] = {
["source"] = "Grummle Trail Guide",
["event"] = "SPELL_CAST_START",
["npcID"] = 59593,
},
[375719] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steam Reaver",
["npcID"] = 190700,
},
[318383] = {
["encounterName"] = "Il'gynoth, Corruption Reborn",
["source"] = "Clotted Corruption",
["npcID"] = 163678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2345,
},
[408483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Magma Serpent",
["npcID"] = 203846,
},
[385958] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["encounterID"] = 2562,
["event"] = "SPELL_CAST_START",
["npcID"] = 194181,
},
[404388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatching Egg",
["npcID"] = 202897,
},
[392105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haleh",
["npcID"] = 199370,
},
[326574] = {
["encounterName"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["npcID"] = 162689,
},
[385959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defense Orb",
["npcID"] = 195184,
},
[209378] = {
["npcID"] = 104275,
},
[324527] = {
["encounterName"] = "Globgrog",
["encounterID"] = 2382,
["npcID"] = 164255,
},
[400296] = {
["source"] = "Zaqali Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 199972,
},
[40066] = {
["source"] = "Coilskar Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 22877,
},
[428963] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Burning Colossus",
["npcID"] = 207796,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[365627] = {
["npcID"] = 184954,
},
[227809] = {
["encounterName"] = "Maiden of Virtue",
["npcID"] = 113971,
["encounterID"] = 1954,
},
[320576] = {
["npcID"] = 168886,
},
[359483] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["npcID"] = 181224,
["encounterID"] = 2540,
},
[57984] = {
["npcID"] = 61029,
},
[116472] = {
["isChanneled"] = true,
["source"] = "Angry Monkey Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60370,
},
[64145] = {
["encounterName"] = "Yogg-Saron",
["encounterID"] = 1143,
["npcID"] = 33966,
},
[289859] = {
["npcID"] = 148442,
},
[447395] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[441252] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horrid Effusia",
["npcID"] = 211866,
},
[131565] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farraki Assassin",
["npcID"] = 66570,
},
[377912] = {
["source"] = "Guardian Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 192680,
},
[102173] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["npcID"] = 54544,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1884,
},
[449444] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[410537] = {
["source"] = "Scalecommander Sarkareth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199984,
},
[153067] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[455588] = {
["source"] = "Bloodscar",
["event"] = "SPELL_CAST_START",
["npcID"] = 223955,
},
[420776] = {
["isChanneled"] = true,
["source"] = "Dreadfire Shalewing",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208662,
},
[373678] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[420777] = {
["isChanneled"] = true,
["source"] = "Dreadfire Shalewing",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208662,
},
[362849] = {
["encounterName"] = "Artificer Xy'mox",
["npcID"] = 183501,
["encounterID"] = 2553,
},
[375727] = {
["encounterName"] = "Chrono-Lord Deios",
["npcID"] = 184125,
["encounterID"] = 2559,
},
[420778] = {
["isChanneled"] = true,
["source"] = "Dreadfire Shalewing",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208662,
},
[322486] = {
["npcID"] = 164929,
},
[373680] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2609,
},
[449447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Roskarrag",
["npcID"] = 221071,
},
[422961] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2709,
},
[396206] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Apprentice",
["npcID"] = 200948,
},
[398254] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winterpelt Defender",
["npcID"] = 200362,
},
[392111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shiverweb Crusher",
["npcID"] = 185814,
},
[328940] = {
["npcID"] = 162586,
},
[365678] = {
["npcID"] = 184734,
},
[388008] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["npcID"] = 186737,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2583,
},
[396208] = {
["source"] = "Rotbow Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 197126,
},
[289725] = {
["npcID"] = 148613,
},
[157165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Zealot",
["npcID"] = 77132,
},
[166380] = {
["npcID"] = 82597,
},
[408495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Magma Serpent",
["npcID"] = 203846,
},
[76031] = {
["encounterName"] = "Beauty",
["npcID"] = 39700,
["encounterID"] = 1037,
},
[404400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyrachniss",
["npcID"] = 200978,
},
[345145] = {
["npcID"] = 170303,
},
[449451] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[451501] = {
["source"] = "Burgle-gurgle",
["event"] = "SPELL_CAST_START",
["npcID"] = 214545,
},
[289727] = {
["npcID"] = 148442,
},
[128249] = {
["source"] = "Scarlet Evoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 58756,
},
[424879] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["encounterID"] = 2854,
["event"] = "SPELL_CAST_START",
["npcID"] = 210108,
},
[324667] = {
["encounterName"] = "Globgrog",
["encounterID"] = 2382,
["npcID"] = 164255,
},
[129785] = {
["source"] = "Mistblade Scale-Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 63179,
},
[131570] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Champion",
["npcID"] = 66261,
},
[449453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Roskarrag",
["npcID"] = 221071,
},
[304063] = {
["npcID"] = 155909,
},
[404403] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[199146] = {
["source"] = "Gildedfur Stag",
["event"] = "SPELL_CAST_START",
["npcID"] = 96609,
},
[172588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Melded Berserker",
["npcID"] = 86372,
},
[385974] = {
["encounterName"] = "Vexamus",
["source"] = "Professor Maxdormu",
["encounterID"] = 2562,
["event"] = "SPELL_CAST_START",
["npcID"] = 189668,
},
[461741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sir Finley Mrrgglton",
["npcID"] = 228030,
},
[126202] = {
["source"] = "Shao-Tien Soul-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 63611,
},
[449455] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghastly Voidsoul",
["npcID"] = 212453,
},
[36996] = {
["source"] = "Mercurial Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 67833,
},
[314304] = {
["npcID"] = 154638,
},
[47747] = {
["encounterName"] = "Anomalus",
["source"] = "Anomalus",
["isChanneled"] = true,
["encounterID"] = 2009,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26763,
},
[293827] = {
["npcID"] = 144294,
},
[394167] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cygenoth",
["npcID"] = 185660,
},
[273350] = {
["encounterName"] = "Zul",
["npcID"] = 139057,
["encounterID"] = 2145,
},
[316353] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arathi Avenger",
["npcID"] = 221980,
},
[138739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farraki Sand Conjurer",
["npcID"] = 69899,
},
[404394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reisa the Drowned",
["npcID"] = 200600,
},
[334765] = {
["encounterName"] = "Stone Legion Generals",
["npcID"] = 168112,
["encounterID"] = 2417,
},
[422837] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[172818] = {
["npcID"] = 184073,
},
[227817] = {
["encounterName"] = "Maiden of Virtue",
["npcID"] = 113971,
["encounterID"] = 1954,
},
[355381] = {
["npcID"] = 184185,
},
[373692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Destroyer",
["npcID"] = 190034,
},
[28099] = {
["source"] = "Tesla Coil",
["event"] = "SPELL_CAST_START",
["npcID"] = 16218,
},
[404409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reisa the Drowned",
["npcID"] = 200600,
},
[157170] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Soulbinder",
["npcID"] = 77812,
},
[373693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Destroyer",
["npcID"] = 190034,
},
[316244] = {
["npcID"] = 162056,
},
[112893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zouchin Archer",
["npcID"] = 62247,
},
[52611] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Dalronn the Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 24201,
},
[32330] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lykul Wasp",
["npcID"] = 17732,
},
[424888] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2854,
},
[441385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hollow Frostweaver",
["npcID"] = 222193,
},
[289737] = {
["npcID"] = 148443,
},
[118519] = {
["isChanneled"] = true,
["source"] = "Mutated Silkmoth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 57422,
},
[318406] = {
["encounterName"] = "Gorechop",
["npcID"] = 162317,
["encounterID"] = 2365,
},
[166341] = {
["npcID"] = 82579,
},
[112894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zouchin Archer",
["npcID"] = 62247,
},
[441384] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216649,
},
[118525] = {
["source"] = "Enraged Tideweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 59181,
},
[287691] = {
["encounterName"] = "Mekkatorque",
["npcID"] = 144796,
["encounterID"] = 2276,
},
[397043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cyclas",
["npcID"] = 199029,
},
[414652] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[408509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Portalkeeper Cimbra",
["npcID"] = 202613,
},
[193008] = {
["isChanneled"] = true,
["source"] = "Huln Highmountain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 104825,
},
[322614] = {
["encounterName"] = "Tred'ova",
["npcID"] = 164517,
["encounterID"] = 2393,
},
[373698] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Shaper",
["npcID"] = 186220,
},
[318409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shath'Yar Scribe",
["npcID"] = 163690,
},
[41093] = {
["source"] = "Shadowmoon Houndmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 23018,
},
[404415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Damned Warrior",
["npcID"] = 202922,
},
[256489] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["npcID"] = 126969,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2095,
},
[334792] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 165066,
["encounterID"] = 2418,
},
[116990] = {
["isChanneled"] = true,
["source"] = "Stone Quilen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60576,
},
[330697] = {
["npcID"] = 170690,
},
[392130] = {
["source"] = "Professor Maxdormu",
["event"] = "SPELL_CAST_START",
["npcID"] = 189668,
},
[326602] = {
["npcID"] = 165400,
},
[197105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Arcanist",
["npcID"] = 97171,
},
[314316] = {
["npcID"] = 161370,
},
[426943] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["npcID"] = 208747,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2788,
},
[269266] = {
["encounterName"] = "Viq'Goth",
["source"] = "Demolishing Terror",
["encounterID"] = 2100,
["event"] = "SPELL_CAST_START",
["npcID"] = 137614,
},
[328651] = {
["npcID"] = 167493,
},
[259562] = {
["source"] = "Tidemistress Nazesh",
["event"] = "SPELL_CAST_START",
["npcID"] = 128712,
},
[273359] = {
["encounterName"] = "Zul",
["npcID"] = 138967,
["encounterID"] = 2145,
},
[457660] = {
["event"] = "SPELL_CAST_START",
["source"] = "Recalled Enormos",
["npcID"] = 225274,
},
[408767] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ritualmaster Skarna",
["npcID"] = 202274,
},
[328756] = {
["encounterName"] = "Ingra Maloch",
["npcID"] = 164567,
["encounterID"] = 2397,
},
[283598] = {
["encounterName"] = "Champion of the Light",
["npcID"] = 144683,
["encounterID"] = 2265,
},
[435136] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[320462] = {
["npcID"] = 163128,
},
[461757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reno Jackson",
["npcID"] = 228044,
},
[227823] = {
["encounterName"] = "Maiden of Virtue",
["npcID"] = 113971,
["encounterID"] = 1954,
},
[334797] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 169457,
["encounterID"] = 2418,
},
[320463] = {
["npcID"] = 167078,
},
[112896] = {
["source"] = "Frostmane Flesh-Eater",
["event"] = "SPELL_CAST_START",
["npcID"] = 70746,
},
[330703] = {
["npcID"] = 174210,
},
[326607] = {
["npcID"] = 167612,
},
[435138] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[314321] = {
["npcID"] = 161371,
},
[441381] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Nx",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216648,
},
[289743] = {
["npcID"] = 149556,
},
[320465] = {
["npcID"] = 167078,
},
[412614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viridian King",
["npcID"] = 201029,
},
[283606] = {
["encounterName"] = "Opulence",
["npcID"] = 145273,
["encounterID"] = 2271,
},
[199151] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angerhoof Bull",
["npcID"] = 96611,
},
[331574] = {
["npcID"] = 170217,
},
[32903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jungle Skitterer",
["npcID"] = 58067,
},
[304075] = {
["npcID"] = 155812,
},
[359374] = {
["npcID"] = 181862,
},
[139772] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shan'ze Celestial Shaper",
["npcID"] = 70240,
},
[119552] = {
["source"] = "Subetai the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 61427,
},
[256494] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["npcID"] = 126969,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2095,
},
[424903] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2854,
},
[157173] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felguard",
["npcID"] = 79507,
},
[385359] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[201488] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Deranged Mindflayer",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99657,
},
[377140] = {
["event"] = "SPELL_CAST_START",
["source"] = "River Hornswog",
["npcID"] = 191618,
},
[131575] = {
["source"] = "Monk Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 66947,
},
[314326] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crushing Tendril",
["npcID"] = 161312,
},
[118297] = {
["npcID"] = 61029,
},
[343086] = {
["encounterName"] = "Stone Legion Generals",
["npcID"] = 168112,
["encounterID"] = 2417,
},
[195108] = {
["source"] = "Hatecoil Stormweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 91783,
},
[347091] = {
["npcID"] = 164047,
},
[429091] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priest Aemya",
["npcID"] = 212827,
},
[118529] = {
["source"] = "Mogu'shan Secret-Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 61131,
},
[189944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mystic Velruun",
["npcID"] = 95602,
},
[119553] = {
["source"] = "Subetai the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 61427,
},
[387473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brinetooth Bruiser",
["npcID"] = 187285,
},
[441289] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[449481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Roskarrag",
["npcID"] = 221071,
},
[121601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harthak Stormcaller",
["npcID"] = 61946,
},
[404517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vakan",
["npcID"] = 199855,
},
[383953] = {
["source"] = "Bakar Companion",
["event"] = "SPELL_CAST_START",
["npcID"] = 194255,
},
[228852] = {
["encounterName"] = "Attumen the Huntsman",
["npcID"] = 114262,
["encounterID"] = 1960,
},
[123649] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kargesh Ribcrusher",
["npcID"] = 61947,
},
[371812] = {
["npcID"] = 46859,
},
[325205] = {
["npcID"] = 166936,
},
[435148] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Footman",
["npcID"] = 212835,
},
[396325] = {
["source"] = "Disease Slasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 197138,
},
[126209] = {
["source"] = "Shao-Tien Soul-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 63611,
},
[293854] = {
["npcID"] = 144294,
},
[271329] = {
["source"] = "Pathfinder Tacha",
["event"] = "SPELL_CAST_START",
["npcID"] = 200263,
},
[119554] = {
["source"] = "Subetai the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 61427,
},
[166397] = {
["npcID"] = 82590,
},
[326619] = {
["npcID"] = 166873,
},
[328667] = {
["npcID"] = 163126,
},
[314333] = {
["npcID"] = 154638,
},
[137729] = {
["encounterName"] = "Megaera",
["source"] = "Flaming Head",
["npcID"] = 70212,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[193018] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["npcID"] = 91797,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1812,
},
[336859] = {
["npcID"] = 162873,
},
[420817] = {
["source"] = "Kaldorei Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 207117,
},
[400333] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cliffkeeper Bouldani",
["npcID"] = 202612,
},
[200185] = {
["encounterName"] = "Shade of Xavius",
["npcID"] = 99192,
["encounterID"] = 1839,
},
[330716] = {
["npcID"] = 167998,
},
[369703] = {
["encounterName"] = "Bromach",
["npcID"] = 184018,
["encounterID"] = 2556,
},
[447439] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["npcID"] = 207946,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2847,
},
[412366] = {
["source"] = "Subterrax",
["event"] = "SPELL_CAST_START",
["npcID"] = 203662,
},
[156963] = {
["encounterName"] = "Teron'gor",
["source"] = "Teron'gor",
["npcID"] = 77734,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1714,
},
[400430] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[394275] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cygenoth",
["npcID"] = 185660,
},
[343005] = {
["encounterName"] = "Shriekwing",
["npcID"] = 164406,
["encounterID"] = 2398,
},
[369602] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Olaf",
["npcID"] = 184580,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2555,
},
[314337] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["npcID"] = 156523,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2327,
},
[154113] = {
["encounterName"] = "Araknath",
["source"] = "Araknath",
["npcID"] = 76141,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1699,
},
[375770] = {
["source"] = "Frozion",
["event"] = "SPELL_CAST_START",
["npcID"] = 193655,
},
[426964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arathi Footman",
["npcID"] = 206705,
},
[406481] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 198999,
},
[33417] = {
["npcID"] = 18949,
},
[293861] = {
["npcID"] = 151613,
},
[420895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[347094] = {
["encounterName"] = "Hylbrande",
["npcID"] = 175663,
["encounterID"] = 2426,
},
[193941] = {
["source"] = "Embershard Scorpion",
["event"] = "SPELL_CAST_START",
["npcID"] = 98406,
},
[304093] = {
["npcID"] = 155908,
},
[128283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuffling Mistlurker",
["npcID"] = 65404,
},
[119556] = {
["source"] = "Weeping Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 57649,
},
[386012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormcaller Boroo",
["npcID"] = 194317,
},
[404442] = {
["source"] = "Vraken the Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 200584,
},
[209404] = {
["source"] = "Duskwatch Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 104247,
},
[388060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stinkbreath",
["npcID"] = 187033,
},
[318534] = {
["event"] = "SPELL_CAST_START",
["source"] = "Umbral Gatekeeper",
["npcID"] = 163708,
},
[392239] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plainswalker Mammoth",
["npcID"] = 187938,
},
[398296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shambling Infester",
["npcID"] = 200387,
},
[123652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kargesh Ribcrusher",
["npcID"] = 61947,
},
[283626] = {
["encounterName"] = "Champion of the Light",
["npcID"] = 147895,
["encounterID"] = 2265,
},
[386015] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Stormspeaker",
["npcID"] = 194894,
},
[336868] = {
["npcID"] = 184606,
},
[461781] = {
["source"] = "Seacurse",
["event"] = "SPELL_CAST_START",
["npcID"] = 220762,
},
[390111] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["encounterID"] = 2617,
["event"] = "SPELL_CAST_START",
["npcID"] = 189727,
},
[102151] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["npcID"] = 54544,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1884,
},
[451543] = {
["source"] = "Hollows Resident",
["event"] = "SPELL_CAST_START",
["npcID"] = 219983,
},
[453591] = {
["source"] = "Congealed Slime",
["event"] = "SPELL_CAST_START",
["npcID"] = 225494,
},
[283628] = {
["npcID"] = 147895,
},
[392159] = {
["event"] = "SPELL_CAST_START",
["source"] = "Norbett",
["npcID"] = 190968,
},
[443353] = {
["source"] = "Infesting Cindermite",
["event"] = "SPELL_CAST_START",
["npcID"] = 222276,
},
[369193] = {
["source"] = "Qalashi Dusttwister",
["event"] = "SPELL_CAST_START",
["npcID"] = 192371,
},
[336947] = {
["npcID"] = 162853,
},
[359459] = {
["npcID"] = 182392,
},
[265376] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fanatical Headhunter",
["npcID"] = 133663,
},
[139771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan'ze Celestial Shaper",
["npcID"] = 70240,
},
[394337] = {
["source"] = "Morchok",
["event"] = "SPELL_CAST_START",
["npcID"] = 187306,
},
[443433] = {
["source"] = "Herald of Ansurek",
["event"] = "SPELL_CAST_START",
["npcID"] = 220196,
},
[406493] = {
["source"] = "Spinmarrow",
["event"] = "SPELL_CAST_START",
["npcID"] = 203480,
},
[461785] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargassum Guardian",
["npcID"] = 212582,
},
[396317] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loamas",
["npcID"] = 199030,
},
[299475] = {
["npcID"] = 150254,
},
[435165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sir Braunpyke",
["npcID"] = 217658,
},
[373733] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[390115] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sarana",
["npcID"] = 190161,
},
[361447] = {
["npcID"] = 185510,
},
[418784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Supreme General Pa'valak",
["npcID"] = 208211,
},
[396316] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Huntmaster",
["npcID"] = 185353,
},
[186883] = {
["encounterName"] = "Hellfire Assault",
["source"] = "Felfire Flamebelcher",
["npcID"] = 90432,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1778,
},
[163334] = {
["encounterName"] = "Grimrail Enforcers",
["npcID"] = 80808,
["encounterID"] = 1748,
},
[361448] = {
["npcID"] = 182368,
},
[123654] = {
["encounterName"] = "Trial of the King",
["source"] = "Ming the Cunning",
["npcID"] = 61444,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1442,
},
[324589] = {
["encounterName"] = "Mordretha",
["npcID"] = 166524,
["encounterID"] = 2404,
},
[192003] = {
["encounterName"] = "Serpentrix",
["source"] = "Blazing Hydra Spawn",
["npcID"] = 97259,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[328740] = {
["npcID"] = 168992,
},
[355306] = {
["npcID"] = 179778,
},
[445407] = {
["source"] = "Wandering Gutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 214551,
},
[383975] = {
["source"] = "Raging Windlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 200390,
},
[13860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Priest of Sseratus",
["npcID"] = 28035,
},
[265206] = {
["encounterName"] = "Vectis",
["npcID"] = 135016,
["encounterID"] = 2134,
},
[115015] = {
["source"] = "Terracotta Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 59758,
},
[328687] = {
["npcID"] = 166079,
},
[209410] = {
["source"] = "Duskwatch Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 104247,
},
[271443] = {
["source"] = "Toadstool Danner",
["event"] = "SPELL_CAST_START",
["npcID"] = 200260,
},
[455649] = {
["source"] = "Bloodscar",
["event"] = "SPELL_CAST_START",
["npcID"] = 223955,
},
[138763] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["npcID"] = 69427,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[361452] = {
["npcID"] = 179006,
},
[416743] = {
["source"] = "Hungering Ghoul",
["event"] = "SPELL_CAST_START",
["npcID"] = 206016,
},
[199172] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimguard",
["npcID"] = 99728,
},
[192005] = {
["encounterName"] = "Serpentrix",
["source"] = "Arcane Hydra Spawn",
["npcID"] = 97260,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[443363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riled Sandtwister",
["npcID"] = 225900,
},
[404456] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[330786] = {
["npcID"] = 169861,
},
[441316] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frenzied Leaper",
["npcID"] = 222214,
},
[418791] = {
["source"] = "Supreme General Pa'valak",
["event"] = "SPELL_CAST_START",
["npcID"] = 208211,
},
[445412] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowcrested Snapper",
["npcID"] = 216963,
},
[373960] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[118535] = {
["source"] = "Orachi",
["event"] = "SPELL_CAST_START",
["npcID"] = 59180,
},
[386028] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Thunderbeast",
["npcID"] = 195696,
},
[291878] = {
["encounterName"] = "King Mechagon",
["encounterID"] = 2260,
["npcID"] = 150396,
},
[122120] = {
["source"] = "Dreadling",
["event"] = "SPELL_CAST_START",
["npcID"] = 62306,
},
[383981] = {
["source"] = "Rising Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 194575,
},
[373742] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[374038] = {
["encounterName"] = "The Primal Council",
["source"] = "Embar Firepath",
["npcID"] = 187767,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[332788] = {
["npcID"] = 165566,
},
[393539] = {
["event"] = "SPELL_CAST_START",
["source"] = "Champion Choruk",
["npcID"] = 186592,
},
[209413] = {
["npcID"] = 104270,
},
[322550] = {
["encounterName"] = "Tred'ova",
["npcID"] = 164517,
["encounterID"] = 2393,
},
[365596] = {
["npcID"] = 180917,
},
[132644] = {
["source"] = "Darkhatched Flesh-hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 67259,
},
[443510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Executor",
["npcID"] = 217516,
},
[453607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shurrai",
["npcID"] = 221224,
},
[455655] = {
["source"] = "Bloodscar",
["event"] = "SPELL_CAST_START",
["npcID"] = 223955,
},
[269310] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Titan Keeper Hezrel",
["npcID"] = 134419,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2123,
},
[418796] = {
["event"] = "SPELL_CAST_START",
["source"] = "Supreme General Pa'valak",
["npcID"] = 208211,
},
[396346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warmonger Kharad",
["npcID"] = 190932,
},
[56969] = {
["source"] = "Azure Scale-Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 26735,
},
[228868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kvaldir Tide Witch",
["npcID"] = 114813,
},
[345078] = {
["npcID"] = 170026,
},
[445457] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["npcID"] = 207207,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2836,
},
[199176] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["npcID"] = 91005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1792,
},
[326046] = {
["npcID"] = 167111,
},
[76047] = {
["encounterName"] = "Commander Ulthok",
["encounterID"] = 1044,
["npcID"] = 40765,
},
[338936] = {
["npcID"] = 168216,
},
[386096] = {
["source"] = "Screechflight Witherer",
["event"] = "SPELL_CAST_START",
["npcID"] = 183954,
},
[416751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vargul Mystic",
["npcID"] = 207805,
},
[377844] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["npcID"] = 186122,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[404465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galakhad",
["npcID"] = 200717,
},
[332792] = {
["npcID"] = 165566,
},
[330782] = {
["npcID"] = 177729,
},
[330958] = {
["npcID"] = 177729,
},
[400335] = {
["source"] = "Vraken the Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 200584,
},
[211464] = {
["npcID"] = 104278,
},
[130900] = {
["source"] = "Ga’trul",
["event"] = "SPELL_CAST_START",
["npcID"] = 66276,
},
[340975] = {
["npcID"] = 165344,
},
[338939] = {
["npcID"] = 167055,
},
[394261] = {
["source"] = "Gurblbrblr the Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 197211,
},
[124690] = {
["source"] = "Seething Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 61054,
},
[201226] = {
["npcID"] = 100531,
},
[9573] = {
["source"] = "Incendosaur",
["event"] = "SPELL_CAST_START",
["npcID"] = 9318,
},
[406516] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[334988] = {
["npcID"] = 171596,
},
[336893] = {
["npcID"] = 162873,
},
[461836] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flickerflame Candleflyer",
["npcID"] = 219341,
},
[320614] = {
["encounterName"] = "Blightbone",
["encounterID"] = 2387,
["npcID"] = 164702,
},
[295939] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["npcID"] = 150190,
["encounterID"] = 2291,
},
[40076] = {
["source"] = "Coilskar Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 22877,
},
[412661] = {
["source"] = "Invoq",
["event"] = "SPELL_CAST_START",
["npcID"] = 203627,
},
[324608] = {
["encounterName"] = "Oryphrion",
["npcID"] = 162060,
["encounterID"] = 2358,
},
[445492] = {
["source"] = "Wandering Gutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 214551,
},
[10277] = {
["npcID"] = 18970,
},
[200205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reaves",
["npcID"] = 101462,
},
[324609] = {
["npcID"] = 166396,
},
[449522] = {
["source"] = "Drone Abductor",
["event"] = "SPELL_CAST_START",
["npcID"] = 219655,
},
[361469] = {
["npcID"] = 185800,
},
[404472] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[320517] = {
["npcID"] = 163894,
},
[102158] = {
["npcID"] = 54553,
},
[287751] = {
["encounterName"] = "Mekkatorque",
["npcID"] = 144796,
["encounterID"] = 2276,
},
[404473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galakhad",
["npcID"] = 200717,
},
[174608] = {
["source"] = "Councilor Gorluk",
["event"] = "SPELL_CAST_START",
["npcID"] = 81809,
},
[310277] = {
["encounterName"] = "Drest'agath",
["source"] = "Drest'agath",
["npcID"] = 157602,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2343,
},
[328707] = {
["npcID"] = 168992,
},
[330755] = {
["npcID"] = 182690,
},
[139797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manchu",
["npcID"] = 70202,
},
[171537] = {
["source"] = "Iron Cleaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 84859,
},
[377854] = {
["source"] = "Sky Vixen Shokhari",
["event"] = "SPELL_CAST_START",
["npcID"] = 190761,
},
[387504] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[102156] = {
["npcID"] = 54553,
},
[334852] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 169458,
["encounterID"] = 2418,
},
[427001] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[421059] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[227851] = {
["encounterName"] = "Moroes",
["npcID"] = 114312,
["encounterID"] = 1961,
},
[196111] = {
["source"] = "Seaspray Crab",
["event"] = "SPELL_CAST_START",
["npcID"] = 91793,
},
[326745] = {
["npcID"] = 170016,
},
[461814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Daughter of Alizabal",
["npcID"] = 214142,
},
[445422] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[453616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomguard",
["npcID"] = 225493,
},
[357508] = {
["npcID"] = 180495,
},
[265231] = {
["encounterName"] = "Zek'voz",
["npcID"] = 134445,
["encounterID"] = 2136,
},
[211470] = {
["npcID"] = 104300,
},
[200248] = {
["source"] = "Risen Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 98280,
},
[287757] = {
["encounterName"] = "Mekkatorque",
["npcID"] = 144796,
["encounterID"] = 2276,
},
[125716] = {
["source"] = "Set'thik Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 64358,
},
[365572] = {
["npcID"] = 184733,
},
[75539] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["npcID"] = 39665,
["encounterID"] = 1040,
},
[396304] = {
["source"] = "Vile Rothexer",
["event"] = "SPELL_CAST_START",
["npcID"] = 197135,
},
[404480] = {
["source"] = "Ebon Lieutenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 201647,
},
[59019] = {
["source"] = "Spitting Cobra",
["event"] = "SPELL_CAST_START",
["npcID"] = 29774,
},
[424958] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["npcID"] = 207205,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2861,
},
[197137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wrangler",
["npcID"] = 100216,
},
[408576] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[355349] = {
["npcID"] = 184185,
},
[192018] = {
["encounterName"] = "Hyrja",
["source"] = "Hyrja",
["npcID"] = 95833,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1806,
},
[112911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragment of Hatred",
["npcID"] = 58810,
},
[130317] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osul Spitfire",
["npcID"] = 66289,
},
[154135] = {
["encounterName"] = "Araknath",
["source"] = "Araknath",
["npcID"] = 76141,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1699,
},
[160274] = {
["event"] = "SPELL_CAST_START",
["source"] = "Initiate of the Rising Sun",
["npcID"] = 79466,
},
[463956] = {
["source"] = "Magma Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 215770,
},
[338955] = {
["npcID"] = 165427,
},
[338914] = {
["npcID"] = 177628,
},
[441343] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frenzied Leaper",
["npcID"] = 222214,
},
[336910] = {
["npcID"] = 162872,
},
[40078] = {
["source"] = "Leviathan",
["event"] = "SPELL_CAST_START",
["npcID"] = 22884,
},
[390150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmeater",
["npcID"] = 186612,
},
[410629] = {
["source"] = "Scalecommander Sarkareth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199984,
},
[312336] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Dark Inquisitor Xanesh",
["npcID"] = 156575,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2328,
},
[404209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Veltrax",
["npcID"] = 200904,
},
[390151] = {
["npcID"] = 189955,
},
[369675] = {
["npcID"] = 184022,
},
[427011] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["npcID"] = 208747,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2788,
},
[347149] = {
["encounterName"] = "Timecap'n Hooktail",
["npcID"] = 175546,
["encounterID"] = 2419,
},
[20297] = {
["source"] = "Dmong Naruuk",
["event"] = "SPELL_CAST_START",
["npcID"] = 60683,
},
[363533] = {
["encounterName"] = "Rygelon",
["encounterID"] = 2549,
["npcID"] = 182777,
},
[320529] = {
["npcID"] = 168886,
},
[338959] = {
["npcID"] = 162114,
},
[267288] = {
["npcID"] = 135671,
},
[347151] = {
["encounterName"] = "Timecap'n Hooktail",
["encounterID"] = 2419,
["npcID"] = 175546,
},
[259597] = {
["npcID"] = 158110,
},
[265241] = {
["npcID"] = 135190,
},
[59020] = {
["source"] = "Spitting Cobra",
["event"] = "SPELL_CAST_START",
["npcID"] = 29774,
},
[197141] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wrangler",
["npcID"] = 100216,
},
[369677] = {
["encounterName"] = "The Lost Dwarves",
["npcID"] = 184580,
["encounterID"] = 2555,
},
[211473] = {
["source"] = "Shadow Mistress",
["event"] = "SPELL_CAST_START",
["npcID"] = 104300,
},
[461817] = {
["event"] = "SPELL_CAST_START",
["source"] = "Daughter of Alizabal",
["npcID"] = 214142,
},
[443436] = {
["source"] = "Herald of Ansurek",
["event"] = "SPELL_CAST_START",
["npcID"] = 220196,
},
[443397] = {
["source"] = "Sureki Venomblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 220193,
},
[336888] = {
["npcID"] = 168233,
},
[412669] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klakatak",
["npcID"] = 203618,
},
[33919] = {
["encounterName"] = "Tavarok",
["source"] = "Tavarok",
["npcID"] = 18343,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1901,
},
[386059] = {
["source"] = "Basrikron",
["event"] = "SPELL_CAST_START",
["npcID"] = 193535,
},
[451605] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[291865] = {
["encounterName"] = "King Mechagon",
["encounterID"] = 2260,
["npcID"] = 150396,
},
[384014] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[412678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klakatak",
["npcID"] = 203618,
},
[139803] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manchu",
["npcID"] = 70202,
},
[211477] = {
["source"] = "Legion Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 104277,
},
[343060] = {
["encounterName"] = "Stone Legion Generals",
["npcID"] = 168113,
["encounterID"] = 2417,
},
[386063] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["npcID"] = 186338,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[396302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Geothermus",
["npcID"] = 217416,
},
[369674] = {
["npcID"] = 184022,
},
[392207] = {
["source"] = "Zenet Avis",
["event"] = "SPELL_CAST_START",
["npcID"] = 193209,
},
[40079] = {
["source"] = "Leviathan",
["event"] = "SPELL_CAST_START",
["npcID"] = 22884,
},
[365682] = {
["encounterName"] = "Artificer Xy'mox",
["npcID"] = 184140,
["encounterID"] = 2553,
},
[410625] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201754,
},
[310298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sinister Soulcarver",
["npcID"] = 162717,
},
[197144] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wrangler",
["npcID"] = 100216,
},
[265248] = {
["encounterName"] = "Zek'voz",
["npcID"] = 134445,
["encounterID"] = 2136,
},
[193826] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["npcID"] = 95675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1808,
},
[75543] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["npcID"] = 39665,
["encounterID"] = 1040,
},
[117010] = {
["source"] = "Dread Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 62307,
},
[404496] = {
["source"] = "Sabellian",
["event"] = "SPELL_CAST_START",
["npcID"] = 201383,
},
[406581] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Lava Elemental",
["npcID"] = 202264,
},
[126737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kz'Kzik",
["npcID"] = 62832,
},
[386026] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Squall",
["npcID"] = 194895,
},
[271310] = {
["source"] = "Pathfinder Tacha",
["event"] = "SPELL_CAST_START",
["npcID"] = 200263,
},
[199193] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[271371] = {
["source"] = "Ogre Taskmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 156986,
},
[225814] = {
["source"] = "Blade Dancer Illianna",
["event"] = "SPELL_CAST_START",
["npcID"] = 96657,
},
[136737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan'ze Gravekeeper",
["npcID"] = 69235,
},
[322554] = {
["encounterName"] = "Executor Tarvold",
["npcID"] = 162103,
["encounterID"] = 2361,
},
[320512] = {
["npcID"] = 163892,
},
[355118] = {
["npcID"] = 178133,
},
[420881] = {
["source"] = "Zaqali Ashwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 208659,
},
[322557] = {
["npcID"] = 172991,
},
[200218] = {
["npcID"] = 101462,
},
[427025] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["npcID"] = 208747,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2788,
},
[347163] = {
["npcID"] = 170157,
},
[275492] = {
["npcID"] = 140853,
},
[277540] = {
["npcID"] = 141266,
},
[394262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cygenoth",
["npcID"] = 185660,
},
[314400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Living Blood",
["npcID"] = 159312,
},
[328288] = {
["npcID"] = 168718,
},
[318449] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["npcID"] = 158041,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[386072] = {
["source"] = "Professor Intinosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 195354,
},
[412693] = {
["source"] = "Magtembo",
["event"] = "SPELL_CAST_START",
["npcID"] = 200111,
},
[198595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Thundercaller",
["npcID"] = 95842,
},
[375834] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[394264] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hyenamaster Durgun",
["npcID"] = 186515,
},
[330784] = {
["npcID"] = 174197,
},
[390169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmaclaw Raider",
["npcID"] = 187218,
},
[142883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maragor",
["npcID"] = 71492,
},
[87622] = {
["encounterName"] = "Asaad",
["npcID"] = 43875,
["encounterID"] = 1042,
},
[396313] = {
["npcID"] = 189542,
},
[126227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjunct Ek'vem",
["npcID"] = 62073,
},
[126739] = {
["source"] = "Korvexxis",
["event"] = "SPELL_CAST_START",
["npcID"] = 62579,
},
[271401] = {
["npcID"] = 161456,
},
[461842] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[408551] = {
["source"] = "Crystalline Walker",
["event"] = "SPELL_CAST_START",
["npcID"] = 201063,
},
[142884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maragor",
["npcID"] = 71492,
},
[353312] = {
["encounterName"] = "Hylbrande",
["npcID"] = 175663,
["encounterID"] = 2426,
},
[396315] = {
["source"] = "Nokhud Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 201686,
},
[386024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Stormspeaker",
["npcID"] = 194894,
},
[61326] = {
["source"] = "Azure Scale-Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 26735,
},
[114965] = {
["isChanneled"] = true,
["source"] = "Tortue nacrée",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59084,
},
[132646] = {
["source"] = "Darkhatched Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 67256,
},
[332836] = {
["npcID"] = 169927,
},
[124692] = {
["source"] = "Spiteful Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 63839,
},
[386078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo of Loss",
["npcID"] = 190259,
},
[298025] = {
["npcID"] = 158160,
},
[142894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Admiral Hodgson",
["npcID"] = 71327,
},
[196127] = {
["encounterName"] = "Serpentrix",
["source"] = "Mak'rana Siltwalker",
["npcID"] = 91790,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[330037] = {
["npcID"] = 168361,
},
[412700] = {
["source"] = "Magtembo",
["event"] = "SPELL_CAST_START",
["npcID"] = 200111,
},
[398300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shambling Infester",
["npcID"] = 200387,
},
[408605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Devastator",
["npcID"] = 198869,
},
[451608] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Shadeshaper",
["npcID"] = 215653,
},
[159085] = {
["npcID"] = 85775,
},
[32197] = {
["source"] = "Tisse-malheur gatrul’lon",
["event"] = "SPELL_CAST_START",
["npcID"] = 66267,
},
[373729] = {
["npcID"] = 190128,
},
[32914] = {
["npcID"] = 57422,
},
[360845] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 181551,
["encounterID"] = 2544,
},
[273470] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["encounterID"] = 2109,
["event"] = "SPELL_CAST_START",
["npcID"] = 129208,
},
[453588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Monstrosity",
["npcID"] = 220266,
},
[410655] = {
["source"] = "Scalecommander Sarkareth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199984,
},
[391553] = {
["event"] = "SPELL_CAST_START",
["source"] = "Andantenormu",
["npcID"] = 199609,
},
[123648] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harthak Stormcaller",
["npcID"] = 61946,
},
[336834] = {
["npcID"] = 184606,
},
[139816] = {
["encounterName"] = "Megaera",
["source"] = "Frozen Head",
["npcID"] = 70235,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[461850] = {
["source"] = "The Ringing Death",
["event"] = "SPELL_CAST_START",
["npcID"] = 214162,
},
[398370] = {
["event"] = "SPELL_CAST_START",
["source"] = "Calcifying Crawler",
["npcID"] = 203342,
},
[263144] = {
["npcID"] = 127869,
},
[451612] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Destroyer",
["npcID"] = 224609,
},
[361016] = {
["npcID"] = 183983,
},
[323683] = {
["encounterName"] = "Mordretha",
["npcID"] = 165946,
["encounterID"] = 2404,
},
[310329] = {
["encounterName"] = "Drest'agath",
["source"] = "Drest'agath",
["npcID"] = 157602,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2343,
},
[271411] = {
["source"] = "Block Warden Carmine",
["event"] = "SPELL_CAST_START",
["npcID"] = 124024,
},
[265268] = {
["encounterName"] = "Zek'voz",
["npcID"] = 134445,
["encounterID"] = 2136,
},
[124182] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Battat",
["npcID"] = 60728,
},
[412626] = {
["event"] = "SPELL_CAST_START",
["source"] = "General Zskorro",
["npcID"] = 203592,
},
[361513] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["npcID"] = 181224,
["encounterID"] = 2540,
},
[76572] = {
["npcID"] = 39980,
},
[316463] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Mindgate",
["npcID"] = 158374,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[449567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunless Tidemarshal",
["npcID"] = 219602,
},
[131627] = {
["source"] = "Hantise sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 66423,
},
[119575] = {
["source"] = "Ookin Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 59435,
},
[330711] = {
["encounterName"] = "Shriekwing",
["npcID"] = 164406,
["encounterID"] = 2398,
},
[449568] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["npcID"] = 221896,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2877,
},
[388046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stinkbreath",
["npcID"] = 187033,
},
[396327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacias",
["npcID"] = 199028,
},
[406566] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Lava Elemental",
["npcID"] = 202264,
},
[408614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Devastator",
["npcID"] = 198869,
},
[287797] = {
["encounterName"] = "Mekkatorque",
["npcID"] = 144796,
["encounterID"] = 2276,
},
[132652] = {
["source"] = "Darkhatched Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 67255,
},
[373803] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Infused Whelp",
["npcID"] = 189893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[424997] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208459,
},
[443427] = {
["source"] = "Sureki Silkbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 220195,
},
[306228] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Flayed Soul",
["npcID"] = 157005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2328,
},
[195109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Stormweaver",
["npcID"] = 91783,
},
[118552] = {
["source"] = "Mogu'shan Secret-Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 61131,
},
[377900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Scavenger",
["npcID"] = 191833,
},
[396330] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Sentry",
["npcID"] = 185357,
},
[378003] = {
["source"] = "Guardian Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 192680,
},
[326707] = {
["encounterName"] = "Sire Denathrius",
["npcID"] = 167406,
["encounterID"] = 2407,
},
[320464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zolramus Sorcerer",
["npcID"] = 163128,
},
[201203] = {
["source"] = "Necrodark Greysworn",
["event"] = "SPELL_CAST_START",
["npcID"] = 104565,
},
[300087] = {
["npcID"] = 150251,
},
[334899] = {
["npcID"] = 174802,
},
[443430] = {
["source"] = "Sureki Silkbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 220195,
},
[392106] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diluu",
["npcID"] = 195431,
},
[199143] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[330699] = {
["npcID"] = 168402,
},
[142840] = {
["source"] = "Echo of Y'Shaarj",
["event"] = "SPELL_CAST_START",
["npcID"] = 71123,
},
[125720] = {
["source"] = "Osul Mist-Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 60697,
},
[265168] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["npcID"] = 133219,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[408620] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Obsidian Guard",
["npcID"] = 200836,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[424891] = {
["source"] = "Fungal Speartender",
["event"] = "SPELL_CAST_START",
["npcID"] = 207456,
},
[119577] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildscale Herbalist",
["npcID"] = 58216,
},
[196078] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["encounterID"] = 1832,
["event"] = "SPELL_CAST_START",
["npcID"] = 98542,
},
[16102] = {
["source"] = "Shadowmoon Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 17395,
},
[80158] = {
["npcID"] = 42696,
},
[48530] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Sentinel",
["npcID"] = 27162,
},
[385980] = {
["source"] = "Strunraan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193534,
},
[326712] = {
["npcID"] = 167956,
},
[394288] = {
["source"] = "Gurblbrblr the Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 197211,
},
[16588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krasari Runekeeper",
["npcID"] = 65598,
},
[382002] = {
["source"] = "Apex Blazewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 193291,
},
[420782] = {
["isChanneled"] = true,
["source"] = "Zaqali Lavatongue",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208661,
},
[42131] = {
["source"] = "Guard Lasiter",
["event"] = "SPELL_CAST_START",
["npcID"] = 4973,
},
[136752] = {
["encounterName"] = "Twin Empyreans",
["source"] = "Lu'lin",
["npcID"] = 68905,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1560,
},
[398385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blaze Hound Matron",
["npcID"] = 204378,
},
[382179] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Manipulator Tharohn",
["npcID"] = 188171,
},
[320571] = {
["npcID"] = 163128,
},
[404529] = {
["source"] = "Baine Bloodhoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 203204,
},
[439341] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[327887] = {
["encounterName"] = "Artificer Xy'mox",
["npcID"] = 166644,
["encounterID"] = 2405,
},
[121114] = {
["source"] = "Sik'thik Amber-Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 61929,
},
[259618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vicious Diemetradon",
["npcID"] = 130756,
},
[362316] = {
["npcID"] = 184425,
},
[318525] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shath'Yar Scribe",
["npcID"] = 163690,
},
[386101] = {
["source"] = "Screechflight Bellower",
["event"] = "SPELL_CAST_START",
["npcID"] = 187124,
},
[115997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dappled Moth",
["npcID"] = 57232,
},
[199210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Marksman",
["npcID"] = 96640,
},
[447400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queen Rickiticka",
["npcID"] = 215772,
},
[404396] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyrachniss",
["npcID"] = 200978,
},
[369400] = {
["npcID"] = 184132,
},
[277813] = {
["npcID"] = 142207,
},
[293954] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eclipsing Grasp",
["npcID"] = 218693,
},
[131635] = {
["source"] = "Morgus Grimhatchet",
["event"] = "SPELL_CAST_START",
["npcID"] = 65880,
},
[461870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xal'atath",
["npcID"] = 229227,
},
[128282] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shek'zeer Clutch-Keeper",
["npcID"] = 64559,
},
[449584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunless Tidemarshal",
["npcID"] = 219602,
},
[336958] = {
["npcID"] = 162853,
},
[314433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Living Blood",
["npcID"] = 159312,
},
[422964] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[163376] = {
["encounterName"] = "Grimrail Enforcers",
["encounterID"] = 1748,
["npcID"] = 80808,
},
[361387] = {
["npcID"] = 182466,
},
[330816] = {
["npcID"] = 169861,
},
[345004] = {
["npcID"] = 175347,
},
[441395] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[193069] = {
["source"] = "Felsworn Infester",
["event"] = "SPELL_CAST_START",
["npcID"] = 96587,
},
[429109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgebound Mender",
["npcID"] = 213338,
},
[385955] = {
["source"] = "Professor Intinosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 195354,
},
[343104] = {
["npcID"] = 170208,
},
[386107] = {
["source"] = "Screechflight Hexclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 183995,
},
[453683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nexus-Princess Ky'veza",
["npcID"] = 217748,
},
[300102] = {
["npcID"] = 152009,
},
[369573] = {
["encounterName"] = "The Lost Dwarves",
["npcID"] = 184581,
["encounterID"] = 2555,
},
[375716] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Primalist Mage",
["npcID"] = 191206,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[347045] = {
["npcID"] = 176131,
},
[359334] = {
["npcID"] = 181862,
},
[375870] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[328772] = {
["source"] = "Vault Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 200375,
},
[396348] = {
["source"] = "Gutchewer Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 197134,
},
[365632] = {
["npcID"] = 184742,
},
[375871] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[125212] = {
["source"] = "Initiate Oman",
["event"] = "SPELL_CAST_START",
["npcID"] = 205818,
},
[396349] = {
["source"] = "Fleshripper Vulture",
["event"] = "SPELL_CAST_START",
["npcID"] = 197133,
},
[398397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmaclaw Supplicant",
["npcID"] = 203933,
},
[163379] = {
["encounterName"] = "Grimrail Enforcers",
["npcID"] = 80875,
["encounterID"] = 1748,
},
[336804] = {
["npcID"] = 184606,
},
[396350] = {
["source"] = "Fleshripper Vulture",
["event"] = "SPELL_CAST_START",
["npcID"] = 197133,
},
[408476] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Erratic Remnant",
["npcID"] = 202824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[334918] = {
["npcID"] = 162047,
},
[316322] = {
["source"] = "Foreman Magrok",
["event"] = "SPELL_CAST_START",
["npcID"] = 145978,
},
[461879] = {
["source"] = "Waxy Globule",
["event"] = "SPELL_CAST_START",
["npcID"] = 213873,
},
[398399] = {
["source"] = "Chittering Acidclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 201093,
},
[196144] = {
["encounterName"] = "Serpentrix",
["source"] = "Mak'rana Siltwalker",
["npcID"] = 91790,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[336967] = {
["npcID"] = 168093,
},
[420925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[433040] = {
["source"] = "Kobyss Trickster",
["event"] = "SPELL_CAST_START",
["npcID"] = 214343,
},
[392257] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broadhoof Bull",
["npcID"] = 193385,
},
[377923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lava Fury",
["npcID"] = 186161,
},
[334748] = {
["npcID"] = 166302,
},
[390210] = {
["source"] = "Mudgatu",
["event"] = "SPELL_CAST_START",
["npcID"] = 197346,
},
[118558] = {
["source"] = "Unga Fish-Getter",
["event"] = "SPELL_CAST_START",
["npcID"] = 60299,
},
[278934] = {
["npcID"] = 142801,
},
[443232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Lookout",
["npcID"] = 217485,
},
[16033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Injured Warsong Shaman",
["npcID"] = 27108,
},
[457787] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wickbreaker",
["npcID"] = 215077,
},
[382101] = {
["source"] = "Echo of Loss",
["event"] = "SPELL_CAST_START",
["npcID"] = 190259,
},
[396355] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ritual Guardian",
["npcID"] = 186787,
},
[122142] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Borokhula the Destroyer",
["npcID"] = 58739,
},
[169851] = {
["encounterName"] = "Archmage Sol",
["source"] = "Addled Arcanomancer",
["npcID"] = 84990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[131642] = {
["source"] = "Gyro-Mechanic Lavenderp",
["event"] = "SPELL_CAST_START",
["npcID"] = 65883,
},
[375694] = {
["npcID"] = 181310,
},
[88308] = {
["encounterName"] = "Altairus",
["npcID"] = 43873,
["encounterID"] = 1041,
},
[167385] = {
["npcID"] = 174491,
},
[377927] = {
["source"] = "Smoldering Feather",
["event"] = "SPELL_CAST_START",
["npcID"] = 192690,
},
[367500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bracken Warscourge",
["npcID"] = 185529,
},
[260651] = {
["source"] = "Karkinus the Capsizer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200907,
},
[310352] = {
["encounterName"] = "Drest'agath",
["source"] = "Maw of Drest'agath",
["npcID"] = 157613,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2343,
},
[381834] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["npcID"] = 186122,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[63891] = {
["encounterName"] = "Yogg-Saron",
["encounterID"] = 1143,
["npcID"] = 33134,
},
[124654] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Spirit",
["npcID"] = 63519,
},
[425027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Infused Golem",
["npcID"] = 210109,
},
[160312] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Cleric",
["npcID"] = 77134,
},
[333997] = {
["npcID"] = 165206,
},
[40598] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[420737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sister Sylasta",
["npcID"] = 210642,
},
[332683] = {
["encounterName"] = "Stone Legion Generals",
["npcID"] = 169835,
["encounterID"] = 2417,
},
[420933] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[407332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Dustmoth",
["npcID"] = 202316,
},
[406378] = {
["source"] = "Remnants of Sindragosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 201089,
},
[328880] = {
["encounterName"] = "Artificer Xy'mox",
["npcID"] = 166644,
["encounterID"] = 2405,
},
[373636] = {
["event"] = "SPELL_CAST_START",
["source"] = "Konkhular",
["npcID"] = 194544,
},
[49241] = {
["source"] = "Ruby Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 27542,
},
[425030] = {
["source"] = "Zaqali Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 210172,
},
[373279] = {
["npcID"] = 189988,
},
[314452] = {
["event"] = "SPELL_CAST_START",
["source"] = "Leeching Parasite",
["npcID"] = 159309,
},
[365646] = {
["npcID"] = 184651,
},
[302166] = {
["npcID"] = 150190,
},
[320596] = {
["encounterName"] = "Blightbone",
["encounterID"] = 2387,
["npcID"] = 162691,
},
[422776] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2709,
},
[291928] = {
["encounterName"] = "King Mechagon",
["encounterID"] = 2260,
["npcID"] = 150396,
},
[369072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Olphis the Molten",
["npcID"] = 181875,
},
[371584] = {
["npcID"] = 46859,
},
[327891] = {
["encounterName"] = "Mueh'zala",
["encounterID"] = 2396,
["npcID"] = 169506,
},
[385824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rageclaw",
["npcID"] = 187192,
},
[425033] = {
["source"] = "Ignit the Firebranded",
["event"] = "SPELL_CAST_START",
["npcID"] = 209620,
},
[328789] = {
["encounterName"] = "Artificer Xy'mox",
["npcID"] = 169062,
["encounterID"] = 2405,
},
[298073] = {
["npcID"] = 153451,
},
[118049] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60710,
},
[322433] = {
["npcID"] = 162057,
},
[139838] = {
["encounterName"] = "Megaera",
["source"] = "Venomous Head",
["npcID"] = 70247,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[396366] = {
["source"] = "Rimetalon Spellflinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 195756,
},
[390223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Tarasek",
["npcID"] = 187089,
},
[425035] = {
["source"] = "Ancient Core Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 210288,
},
[328791] = {
["encounterName"] = "Lord Chamberlain",
["npcID"] = 164218,
["encounterID"] = 2381,
},
[396367] = {
["source"] = "Decayed Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 197142,
},
[443640] = {
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215475,
},
[130848] = {
["source"] = "Ga’trul",
["event"] = "SPELL_CAST_START",
["npcID"] = 66276,
},
[361556] = {
["npcID"] = 181685,
},
[114646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haunting Sha",
["npcID"] = 59555,
},
[431180] = {
["source"] = "Dripear the Waxy",
["event"] = "SPELL_CAST_START",
["npcID"] = 213883,
},
[392273] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ergburk",
["npcID"] = 194409,
},
[459849] = {
["source"] = "Queensguard An'Jak Shabtir",
["event"] = "SPELL_CAST_START",
["npcID"] = 219665,
},
[387950] = {
["source"] = "Caldera Stomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187919,
},
[195129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Crusher",
["npcID"] = 91782,
},
[171580] = {
["source"] = "Iron Mauler",
["event"] = "SPELL_CAST_START",
["npcID"] = 85748,
},
[459850] = {
["event"] = "SPELL_CAST_START",
["source"] = "Exalted Priest",
["npcID"] = 222368,
},
[119586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha of Anger",
["npcID"] = 60491,
},
[227777] = {
["encounterName"] = "Opera Hall",
["encounterID"] = 1957,
["npcID"] = 114260,
},
[52118] = {
["source"] = "Iceshatter",
["event"] = "SPELL_CAST_START",
["npcID"] = 27007,
},
[369750] = {
["source"] = "Qalashi Scaleripper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187908,
},
[363607] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["npcID"] = 181244,
["encounterID"] = 2540,
},
[154175] = {
["encounterName"] = "Bonemaw",
["source"] = "Bonemaw",
["npcID"] = 75452,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1679,
},
[163390] = {
["encounterName"] = "Grimrail Enforcers",
["npcID"] = 80808,
["encounterID"] = 1748,
},
[139841] = {
["encounterName"] = "Megaera",
["source"] = "Frozen Head",
["npcID"] = 70235,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[453709] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kelpmire",
["npcID"] = 220287,
},
[331274] = {
["npcID"] = 167923,
},
[378012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lavacaller Primalist",
["npcID"] = 186823,
},
[240006] = {
["npcID"] = 182863,
},
[76584] = {
["npcID"] = 39990,
},
[300129] = {
["npcID"] = 152009,
},
[293986] = {
["npcID"] = 151476,
},
[310969] = {
["npcID"] = 159011,
},
[133542] = {
["source"] = "Vol'jin",
["event"] = "SPELL_CAST_START",
["npcID"] = 67414,
},
[91263] = {
["encounterName"] = "General Husam",
["npcID"] = 44577,
["encounterID"] = 1052,
},
[334942] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 165067,
["encounterID"] = 2418,
},
[328799] = {
["npcID"] = 182268,
},
[346980] = {
["encounterName"] = "Hylbrande",
["npcID"] = 176551,
["encounterID"] = 2426,
},
[131524] = {
["source"] = "Farraki Sand-Stormer",
["event"] = "SPELL_CAST_START",
["npcID"] = 63673,
},
[155201] = {
["encounterName"] = "Blast Furnace",
["source"] = "Furnace Engineer",
["encounterID"] = 1690,
["event"] = "SPELL_CAST_START",
["npcID"] = 88820,
},
[398172] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stellagosa",
["npcID"] = 200099,
},
[461904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orb of Ascendance",
["npcID"] = 229296,
},
[166464] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[392281] = {
["source"] = "Frostdrake",
["event"] = "SPELL_CAST_START",
["npcID"] = 188804,
},
[143939] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Kil'ruk the Wind-Reaver",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71161,
},
[331248] = {
["npcID"] = 171745,
},
[365661] = {
["npcID"] = 184651,
},
[245303] = {
["encounterName"] = "The Coven of Shivarra",
["source"] = "Asara, Mother of Night",
["npcID"] = 122467,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2073,
},
[435366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eratus, the Unwoven Paradox",
["npcID"] = 217190,
},
[445524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrillwing Hunter En'kilah",
["npcID"] = 222038,
},
[166465] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[384092] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timetender Athekk",
["npcID"] = 193042,
},
[257459] = {
["encounterName"] = "Chopper Redhook",
["source"] = "Chopper Redhook",
["event"] = "SPELL_CAST_START",
["npcID"] = 128650,
},
[412761] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[393432] = {
["source"] = "Refti Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 190340,
},
[392284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravenous Proto-Drake",
["npcID"] = 193145,
},
[361568] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 181546,
["encounterID"] = 2544,
},
[383651] = {
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193944,
},
[275563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowstarved Bullfrog",
["npcID"] = 214406,
},
[412889] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zakajz",
["npcID"] = 198953,
},
[336996] = {
["npcID"] = 162744,
},
[424704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Gutter",
["npcID"] = 207454,
},
[275564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowstarved Bullfrog",
["npcID"] = 214406,
},
[384095] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ohuna Companion",
["npcID"] = 194254,
},
[394334] = {
["source"] = "Matriarch Avethyra",
["event"] = "SPELL_CAST_START",
["npcID"] = 184847,
},
[111398] = {
["isChanneled"] = true,
["source"] = "Scarlet Evangelist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 58685,
},
[396859] = {
["npcID"] = 191105,
},
[388374] = {
["event"] = "SPELL_CAST_START",
["source"] = "Towering Deepstrider",
["npcID"] = 203786,
},
[140220] = {
["npcID"] = 69405,
},
[194112] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["npcID"] = 95675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1808,
},
[122149] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Zar'thik Battle-Mender",
["encounterID"] = 1498,
["event"] = "SPELL_CAST_START",
["npcID"] = 62408,
},
[375630] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Drakonid Stormbringer",
["npcID"] = 191232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[443482] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Shadeguard",
["npcID"] = 217519,
},
[355429] = {
["npcID"] = 178165,
},
[413151] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["npcID"] = 43878,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1043,
},
[200256] = {
["source"] = "Arcane Minion",
["event"] = "SPELL_CAST_START",
["npcID"] = 101549,
},
[386146] = {
["source"] = "Professor Intinosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 195354,
},
[177731] = {
["encounterName"] = "Witherbark",
["source"] = "Enchanted Waters",
["npcID"] = 88862,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1746,
},
[275568] = {
["npcID"] = 157728,
},
[42870] = {
["source"] = "Dragonflayer Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 24051,
},
[131657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ik'thik Vanguard",
["npcID"] = 58368,
},
[396386] = {
["event"] = "SPELL_CAST_START",
["source"] = "Melter Igneous",
["npcID"] = 188226,
},
[275569] = {
["npcID"] = 157728,
},
[365385] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 184622,
},
[385862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murloc Hopper",
["npcID"] = 195218,
},
[122078] = {
["source"] = "Dreadling",
["event"] = "SPELL_CAST_START",
["npcID"] = 62306,
},
[449339] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["encounterID"] = 2878,
["event"] = "SPELL_CAST_START",
["npcID"] = 204188,
},
[131512] = {
["source"] = "Ordo Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 65928,
},
[455480] = {
["event"] = "SPELL_CAST_START",
["source"] = "Take",
["npcID"] = 226272,
},
[396388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacias",
["npcID"] = 199028,
},
[390245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Embertooth Spearhunter",
["npcID"] = 188725,
},
[412474] = {
["isChanneled"] = true,
["source"] = "Colossian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204093,
},
[13608] = {
["source"] = "Recalled Silverbrook Lumberjack",
["event"] = "SPELL_CAST_START",
["npcID"] = 226197,
},
[144969] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Garrosh Hellscream",
["encounterID"] = 1623,
["event"] = "SPELL_CAST_START",
["npcID"] = 71865,
},
[423010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zealous Dryad",
["npcID"] = 210813,
},
[330565] = {
["npcID"] = 164506,
},
[389947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warmonger Kharad",
["npcID"] = 190932,
},
[55704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Warder",
["npcID"] = 29981,
},
[324417] = {
["npcID"] = 162133,
},
[408677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Scaleguard",
["npcID"] = 198871,
},
[193092] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["npcID"] = 94960,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1805,
},
[38618] = {
["npcID"] = 182155,
},
[424750] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Rotcaster",
["npcID"] = 207459,
},
[423051] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[41114] = {
["source"] = "Ashtongue Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 22845,
},
[396392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dueling Student",
["npcID"] = 199377,
},
[365676] = {
["npcID"] = 184734,
},
[294195] = {
["npcID"] = 144298,
},
[193093] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["npcID"] = 91797,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1812,
},
[355438] = {
["encounterName"] = "Myza's Oasis",
["npcID"] = 176563,
["encounterID"] = 2440,
},
[340788] = {
["encounterName"] = "Artificer Xy'mox",
["npcID"] = 166644,
["encounterID"] = 2405,
},
[425062] = {
["source"] = "Zaqali Steelshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 210173,
},
[410728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sabellian",
["npcID"] = 201411,
},
[360412] = {
["encounterName"] = "Vigilant Guardian",
["npcID"] = 180773,
["encounterID"] = 2512,
},
[373869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scorchling",
["npcID"] = 190205,
},
[200261] = {
["source"] = "Soul-Torn Champion",
["event"] = "SPELL_CAST_START",
["npcID"] = 98243,
},
[326450] = {
["npcID"] = 164562,
},
[347249] = {
["encounterName"] = "So'azmi",
["npcID"] = 175806,
["encounterID"] = 2437,
},
[138668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Frost Warden",
["npcID"] = 69910,
},
[80195] = {
["npcID"] = 42692,
},
[394348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mordigan Ironjaw",
["npcID"] = 187353,
},
[453733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shurrai",
["npcID"] = 221224,
},
[396071] = {
["source"] = "Decayed Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 197142,
},
[375919] = {
["npcID"] = 182008,
},
[209477] = {
["npcID"] = 105703,
},
[289914] = {
["npcID"] = 148673,
},
[373872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Decay",
["npcID"] = 186227,
},
[359538] = {
["npcID"] = 181961,
},
[320631] = {
["encounterName"] = "Blightbone",
["encounterID"] = 2387,
["npcID"] = 164702,
},
[385827] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rageclaw",
["npcID"] = 187192,
},
[64152] = {
["encounterName"] = "Yogg-Saron",
["encounterID"] = 1143,
["npcID"] = 33985,
},
[324394] = {
["npcID"] = 165197,
},
[40091] = {
["source"] = "Coilskar Sea-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 22875,
},
[445210] = {
["source"] = "Spitfire Charger",
["event"] = "SPELL_CAST_START",
["npcID"] = 213577,
},
[390256] = {
["source"] = "Kaighan Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 190680,
},
[392304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Khomuur",
["npcID"] = 194438,
},
[406304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Defender",
["npcID"] = 200527,
},
[396400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacias",
["npcID"] = 199028,
},
[406639] = {
["event"] = "SPELL_CAST_START",
["source"] = "Response Team Watcher",
["npcID"] = 202318,
},
[289578] = {
["npcID"] = 148614,
},
[377971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spawning Thresher",
["npcID"] = 194342,
},
[368984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Flameshatter",
["npcID"] = 191136,
},
[191900] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["npcID"] = 91784,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[441452] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[369781] = {
["encounterName"] = "The Lost Dwarves",
["npcID"] = 184582,
["encounterID"] = 2555,
},
[86830] = {
["npcID"] = 43391,
},
[365686] = {
["npcID"] = 184533,
},
[294015] = {
["npcID"] = 151476,
},
[394355] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frigidpelt Matriarch",
["npcID"] = 193063,
},
[330875] = {
["npcID"] = 169893,
},
[300159] = {
["npcID"] = 150276,
},
[334971] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 165067,
["encounterID"] = 2418,
},
[320637] = {
["encounterName"] = "Blightbone",
["encounterID"] = 2387,
["npcID"] = 162691,
},
[391958] = {
["event"] = "SPELL_CAST_START",
["source"] = "Relentless Gust",
["npcID"] = 194159,
},
[375575] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Dragonspawn Flamebender",
["npcID"] = 191230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[64877] = {
["npcID"] = 34190,
},
[336666] = {
["npcID"] = 158891,
},
[366701] = {
["npcID"] = 185268,
},
[38556] = {
["source"] = "Kaskala Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 25764,
},
[385170] = {
["source"] = "Wind Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 191645,
},
[208279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Igrul the Scalebane",
["npcID"] = 105159,
},
[256401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow-Blind Weaver",
["npcID"] = 206096,
},
[64153] = {
["encounterName"] = "Yogg-Saron",
["encounterID"] = 1143,
["npcID"] = 33985,
},
[359547] = {
["npcID"] = 182392,
},
[176718] = {
["npcID"] = 149591,
},
[139178] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goda",
["npcID"] = 69998,
},
[310041] = {
["npcID"] = 166071,
},
[374112] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Frostbreath Arachnid",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 189234,
},
[287877] = {
["encounterName"] = "Mekkatorque",
["npcID"] = 148450,
["encounterID"] = 2276,
},
[123691] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kang Bramblestaff",
["npcID"] = 58206,
},
[291973] = {
["encounterName"] = "K.U.-J.0.",
["encounterID"] = 2258,
["npcID"] = 144246,
},
[449285] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shyalude",
["npcID"] = 223834,
},
[369788] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Djaradin",
["npcID"] = 195032,
},
[324372] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Monstrosity",
["npcID"] = 165197,
},
[367375] = {
["npcID"] = 178778,
},
[406282] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Naturalist",
["npcID"] = 201746,
},
[394362] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rasnar the War Ender",
["npcID"] = 193232,
},
[404601] = {
["source"] = "Jamoku",
["event"] = "SPELL_CAST_START",
["npcID"] = 199914,
},
[137427] = {
["npcID"] = 32969,
},
[359960] = {
["encounterName"] = "Lords of Dread",
["encounterID"] = 2543,
["npcID"] = 181398,
},
[320644] = {
["encounterName"] = "Xav the Unfallen",
["npcID"] = 162329,
["encounterID"] = 2366,
},
[184724] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowheart Fiend",
["npcID"] = 93298,
},
[364942] = {
["encounterName"] = "The Jailer",
["npcID"] = 180990,
["encounterID"] = 2537,
},
[391939] = {
["npcID"] = 189206,
},
[386173] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["encounterID"] = 2562,
["event"] = "SPELL_CAST_START",
["npcID"] = 194181,
},
[453749] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kelpmire",
["npcID"] = 220287,
},
[118990] = {
["source"] = "Mortbreath Skulker",
["event"] = "SPELL_CAST_START",
["npcID"] = 60202,
},
[392317] = {
["event"] = "SPELL_CAST_START",
["source"] = "Khomuur",
["npcID"] = 194438,
},
[287882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Princess Talanji",
["npcID"] = 148407,
},
[445559] = {
["source"] = "Queensguard Zirix",
["event"] = "SPELL_CAST_START",
["npcID"] = 211858,
},
[38557] = {
["npcID"] = 41175,
},
[392318] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ohn'ir Initiate",
["npcID"] = 193985,
},
[397093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Kelp Elemental",
["npcID"] = 196809,
},
[265358] = {
["encounterName"] = "Zek'voz",
["npcID"] = 135129,
["encounterID"] = 2136,
},
[143765] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Kaz'tik the Manipulator",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71156,
},
[375937] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[394367] = {
["source"] = "Morchok",
["event"] = "SPELL_CAST_START",
["npcID"] = 187306,
},
[396415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galestrike Proto-Dragon",
["npcID"] = 187211,
},
[398463] = {
["source"] = "Magma Burster",
["event"] = "SPELL_CAST_START",
["npcID"] = 200801,
},
[76682] = {
["npcID"] = 40017,
},
[334488] = {
["encounterName"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["npcID"] = 162689,
},
[388225] = {
["source"] = "Frostfist",
["event"] = "SPELL_CAST_START",
["npcID"] = 192030,
},
[398464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carcaxas",
["npcID"] = 202836,
},
[269456] = {
["encounterName"] = "Viq'Goth",
["source"] = "Viq'Goth",
["encounterID"] = 2100,
["event"] = "SPELL_CAST_START",
["npcID"] = 128652,
},
[356942] = {
["npcID"] = 179837,
},
[63479] = {
["encounterName"] = "The Assembly of Iron",
["encounterID"] = 1140,
["npcID"] = 32857,
},
[227917] = {
["npcID"] = 114526,
},
[326794] = {
["npcID"] = 167876,
},
[412275] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Reykal",
["npcID"] = 203355,
},
[356602] = {
["npcID"] = 180164,
},
[457450] = {
["event"] = "SPELL_CAST_START",
["source"] = "Recalled Orinoko Tuskbreaker",
["npcID"] = 221719,
},
[384132] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[404207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Narlena",
["npcID"] = 202244,
},
[355464] = {
["npcID"] = 178165,
},
[357512] = {
["npcID"] = 180495,
},
[260480] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Tendril",
["npcID"] = 125136,
},
[418540] = {
["source"] = "Lord Banehollow",
["event"] = "SPELL_CAST_START",
["npcID"] = 204243,
},
[289937] = {
["npcID"] = 148667,
},
[341131] = {
["npcID"] = 174194,
},
[375943] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[377991] = {
["source"] = "Guardian Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 192680,
},
[144985] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Garrosh Hellscream",
["encounterID"] = 1623,
["event"] = "SPELL_CAST_START",
["npcID"] = 71865,
},
[300177] = {
["npcID"] = 150276,
},
[102193] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["npcID"] = 54544,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1884,
},
[320655] = {
["encounterName"] = "Blightbone",
["encounterID"] = 2387,
["npcID"] = 162691,
},
[355048] = {
["npcID"] = 178139,
},
[373897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayed Elder",
["npcID"] = 189531,
},
[375945] = {
["npcID"] = 188292,
},
[112944] = {
["encounterName"] = "Hoptallus",
["source"] = "Hoptallus",
["npcID"] = 56717,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1413,
},
[396423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galestrike Proto-Dragon",
["npcID"] = 187211,
},
[398471] = {
["source"] = "Nimbulatus, Storm's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199667,
},
[371358] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Curator",
["npcID"] = 187154,
},
[49309] = {
["npcID"] = 2718,
},
[412806] = {
["source"] = "Risen Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 205804,
},
[256589] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Raoul",
["npcID"] = 126847,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[277655] = {
["npcID"] = 142004,
},
[412383] = {
["source"] = "Colossian",
["event"] = "SPELL_CAST_START",
["npcID"] = 204093,
},
[142727] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Xaril the Poisoned Mind",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71157,
},
[227463] = {
["encounterName"] = "Moroes",
["npcID"] = 114320,
["encounterID"] = 1961,
},
[457858] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepfiend Azellix",
["npcID"] = 218458,
},
[410760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Vortex",
["npcID"] = 45912,
},
[46184] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Zelfan",
["npcID"] = 24556,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1895,
},
[285319] = {
["npcID"] = 146831,
},
[414425] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2709,
},
[369806] = {
["npcID"] = 184020,
},
[275175] = {
["npcID"] = 138794,
},
[455812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Cabbage Smacker",
["npcID"] = 206514,
},
[375950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Icecaller",
["npcID"] = 190377,
},
[447187] = {
["encounterName"] = "Researcher Ven'kex",
["source"] = "Researcher Ven'kex",
["npcID"] = 219856,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2991,
},
[355473] = {
["npcID"] = 179821,
},
[323393] = {
["encounterName"] = "Lord Chamberlain",
["encounterID"] = 2381,
["npcID"] = 164218,
},
[342751] = {
["npcID"] = 171596,
},
[394381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Root of Decay",
["npcID"] = 185326,
},
[322274] = {
["encounterName"] = "Nalthor the Rimebinder",
["encounterID"] = 2390,
["npcID"] = 164815,
},
[126256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amani Outrider",
["npcID"] = 64639,
},
[377559] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[127280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viletongue Skirmisher",
["npcID"] = 58738,
},
[396430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Golem",
["npcID"] = 190779,
},
[455815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Cabbage Smacker",
["npcID"] = 206514,
},
[372027] = {
["encounterName"] = "The Primal Council",
["source"] = "Embar Firepath",
["npcID"] = 187767,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[406227] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[445577] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrillwing Hunter En'kilah",
["npcID"] = 222038,
},
[365715] = {
["npcID"] = 184659,
},
[392336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uncontrolled Guardian",
["npcID"] = 181775,
},
[369811] = {
["npcID"] = 184020,
},
[396432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Proto-Dragon",
["npcID"] = 189798,
},
[116018] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["encounterID"] = 1390,
["event"] = "SPELL_CAST_START",
["npcID"] = 60009,
},
[441483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathpetal",
["npcID"] = 206184,
},
[328857] = {
["encounterName"] = "Shriekwing",
["npcID"] = 164406,
["encounterID"] = 2398,
},
[265377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fanatical Headhunter",
["npcID"] = 133663,
},
[126257] = {
["source"] = "Amani Outrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 64639,
},
[342741] = {
["encounterName"] = "Stone Legion Generals",
["npcID"] = 172858,
["encounterID"] = 2417,
},
[369813] = {
["source"] = "Summoned Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193288,
},
[355479] = {
["npcID"] = 179821,
},
[341145] = {
["npcID"] = 174090,
},
[198959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Runecarver",
["npcID"] = 96664,
},
[403890] = {
["source"] = "Duzalgor",
["event"] = "SPELL_CAST_START",
["npcID"] = 200610,
},
[188046] = {
["npcID"] = 198489,
},
[398483] = {
["source"] = "Nimbulatus, Storm's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199667,
},
[83877] = {
["npcID"] = 44926,
},
[438976] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[172649] = {
["npcID"] = 81432,
},
[382102] = {
["source"] = "Rebel Conjurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 195063,
},
[392341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Khuumog",
["npcID"] = 194761,
},
[162066] = {
["encounterName"] = "Skylord Tovra",
["npcID"] = 80005,
["encounterID"] = 1736,
},
[413133] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Kraglin",
["npcID"] = 201625,
},
[373912] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[258199] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 130400,
},
[51219] = {
["npcID"] = 46859,
},
[265511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit Drain Totem",
["npcID"] = 135169,
},
[64157] = {
["encounterName"] = "Yogg-Saron",
["encounterID"] = 1143,
["npcID"] = 33985,
},
[334534] = {
["npcID"] = 171805,
},
[369818] = {
["npcID"] = 184020,
},
[309961] = {
["encounterName"] = "Il'gynoth, Corruption Reborn",
["source"] = "Il'gynoth",
["npcID"] = 158328,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2345,
},
[406678] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["npcID"] = 202375,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2689,
},
[457872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepfiend Azellix",
["npcID"] = 218458,
},
[394392] = {
["source"] = "Echo of Loss",
["event"] = "SPELL_CAST_START",
["npcID"] = 190259,
},
[421013] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[373915] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2569,
},
[157043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Ritualist",
["npcID"] = 77130,
},
[427157] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["npcID"] = 208747,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2788,
},
[412823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neltharion",
["npcID"] = 198968,
},
[423062] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[187998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowfel Warden",
["npcID"] = 93968,
},
[410776] = {
["source"] = "Infinite Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 204658,
},
[126139] = {
["source"] = "Sha Harbinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 66426,
},
[373917] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2569,
},
[142948] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Hisek the Swarmkeeper",
["encounterID"] = 1593,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71153,
},
[459923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Exalted Priest",
["npcID"] = 222368,
},
[138609] = {
["encounterName"] = "Dark Animus",
["source"] = "Massive Anima Golem",
["npcID"] = 69699,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[387668] = {
["source"] = "Awakened Crag",
["event"] = "SPELL_CAST_START",
["npcID"] = 195243,
},
[225635] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lunar Archer",
["npcID"] = 120721,
},
[369823] = {
["npcID"] = 184023,
},
[115509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Warden",
["npcID"] = 59751,
},
[387748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Zambul",
["npcID"] = 191145,
},
[392349] = {
["event"] = "SPELL_CAST_START",
["source"] = "Khuumog",
["npcID"] = 194761,
},
[459925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Palace Guardian",
["npcID"] = 222305,
},
[404636] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Narlena",
["npcID"] = 202244,
},
[63134] = {
["encounterName"] = "Yogg-Saron",
["encounterID"] = 1143,
["npcID"] = 33134,
},
[449687] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[427162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[114874] = {
["source"] = "Professor Slate",
["event"] = "SPELL_CAST_START",
["npcID"] = 59613,
},
[398494] = {
["source"] = "Zaqali Shalewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 207090,
},
[400542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kalecgos",
["npcID"] = 193460,
},
[143974] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Korven the Prime",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71155,
},
[330919] = {
["npcID"] = 169912,
},
[406686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Magmashaper",
["npcID"] = 202257,
},
[457880] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Mystic",
["npcID"] = 203878,
},
[106807] = {
["encounterName"] = "Ook-Ook",
["event"] = "SPELL_CAST_START",
["source"] = "Ook-Ook",
["npcID"] = 56637,
},
[115510] = {
["source"] = "Shan'ze Spiritclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 55291,
},
[138607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amani'shi Flame Chanter",
["npcID"] = 69909,
},
[457881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zekvir",
["npcID"] = 227471,
},
[369828] = {
["npcID"] = 184023,
},
[418474] = {
["source"] = "Empowered Felhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 208791,
},
[398497] = {
["source"] = "Quartzite Sporebat",
["event"] = "SPELL_CAST_START",
["npcID"] = 201306,
},
[389804] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Curator",
["npcID"] = 187154,
},
[428711] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[363686] = {
["npcID"] = 179043,
},
[85692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomguard",
["npcID"] = 11859,
},
[326827] = {
["npcID"] = 162040,
},
[125623] = {
["npcID"] = 50783,
},
[147818] = {
["source"] = "Crimsonscale Firestorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 72876,
},
[300207] = {
["npcID"] = 150253,
},
[294064] = {
["npcID"] = 151658,
},
[114999] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["npcID"] = 56884,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1306,
},
[298160] = {
["npcID"] = 153451,
},
[341163] = {
["npcID"] = 171396,
},
[326829] = {
["npcID"] = 167876,
},
[427169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[412835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nozdormu",
["npcID"] = 198971,
},
[398501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hunting Rock Viper",
["npcID"] = 203783,
},
[326830] = {
["npcID"] = 165398,
},
[86331] = {
["encounterName"] = "Grand Vizier Ertan",
["npcID"] = 43878,
["encounterID"] = 1043,
},
[41058] = {
["source"] = "Whirling Blade",
["event"] = "SPELL_CAST_START",
["npcID"] = 23369,
},
[147815] = {
["source"] = "Thrall",
["event"] = "SPELL_CAST_START",
["npcID"] = 73483,
},
[200291] = {
["source"] = "Risen Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 98691,
},
[357029] = {
["npcID"] = 180335,
},
[322736] = {
["encounterName"] = "Hakkar, the Soulflayer",
["encounterID"] = 2395,
["npcID"] = 164558,
},
[195172] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Crusher",
["npcID"] = 91782,
},
[453271] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggregation of Horrors",
["npcID"] = 220999,
},
[361644] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["npcID"] = 181224,
["encounterID"] = 2540,
},
[340642] = {
["npcID"] = 172076,
},
[398504] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sulfurous Viper",
["npcID"] = 203900,
},
[285878] = {
["encounterName"] = "Conclave of the Chosen",
["npcID"] = 144941,
["encounterID"] = 2268,
},
[377500] = {
["npcID"] = 184335,
},
[339120] = {
["npcID"] = 173240,
},
[373932] = {
["encounterName"] = "Azureblade",
["source"] = "Draconic Image",
["npcID"] = 190187,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[124085] = {
["source"] = "Set'thik Zephyrian",
["event"] = "SPELL_CAST_START",
["npcID"] = 63593,
},
[459938] = {
["source"] = "Dripear the Waxy",
["event"] = "SPELL_CAST_START",
["npcID"] = 213883,
},
[275110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodbeak the Ravenous",
["npcID"] = 201535,
},
[340631] = {
["npcID"] = 173800,
},
[377490] = {
["source"] = "Thunderspine Crasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 191057,
},
[427175] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[381585] = {
["source"] = "Brutal Motivator",
["event"] = "SPELL_CAST_START",
["npcID"] = 184453,
},
[395694] = {
["source"] = "Primalist Shocktrooper",
["event"] = "SPELL_CAST_START",
["npcID"] = 199037,
},
[441510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deadly Sprout",
["npcID"] = 220316,
},
[427176] = {
["encounterName"] = "The Darkness",
["source"] = "Wriggling Darkspawn",
["npcID"] = 213008,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2788,
},
[31664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frenzied Gargoyle",
["npcID"] = 27691,
},
[365744] = {
["npcID"] = 184651,
},
[326837] = {
["npcID"] = 162040,
},
[345267] = {
["npcID"] = 162937,
},
[404652] = {
["source"] = "Jamoku",
["event"] = "SPELL_CAST_START",
["npcID"] = 199914,
},
[373936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wilted Oak",
["npcID"] = 186229,
},
[392366] = {
["source"] = "Awakened Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 197793,
},
[386223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Stormshield",
["npcID"] = 194896,
},
[437417] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[308409] = {
["npcID"] = 154330,
},
[441513] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathpetal",
["npcID"] = 206184,
},
[320696] = {
["npcID"] = 163121,
},
[404654] = {
["source"] = "Grugoth the Hullcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200721,
},
[154221] = {
["encounterName"] = "Azzakel, Vanguard of the Legion",
["source"] = "Cackling Pyromaniac",
["npcID"] = 76260,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1678,
},
[340622] = {
["npcID"] = 173798,
},
[115002] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["npcID"] = 56884,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1306,
},
[322745] = {
["npcID"] = 159030,
},
[373939] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Rotburst Totem",
["npcID"] = 190381,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[392369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Elemental",
["npcID"] = 190173,
},
[125241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'nas Nightsavage",
["npcID"] = 50338,
},
[243299] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Council Warlock",
["npcID"] = 117776,
},
[41053] = {
["source"] = "Shadowmoon Champion",
["event"] = "SPELL_CAST_START",
["npcID"] = 22880,
},
[375988] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snowypelt Slyvern",
["npcID"] = 193438,
},
[156270] = {
["source"] = "Iron Crack-Shot",
["event"] = "SPELL_CAST_START",
["npcID"] = 81315,
},
[455287] = {
["encounterName"] = "Rasha'nan",
["source"] = "Infested Spawn",
["npcID"] = 219739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[390323] = {
["npcID"] = 189933,
},
[367798] = {
["npcID"] = 181249,
},
[410234] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203678,
},
[243300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Council Warlock",
["npcID"] = 117776,
},
[373942] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[285889] = {
["encounterName"] = "Conclave of the Chosen",
["npcID"] = 144767,
["encounterID"] = 2268,
},
[115003] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["encounterID"] = 1414,
["event"] = "SPELL_CAST_START",
["npcID"] = 59479,
},
[330940] = {
["npcID"] = 168244,
},
[373943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wilted Oak",
["npcID"] = 186229,
},
[302272] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["npcID"] = 150190,
["encounterID"] = 2291,
},
[451758] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Shadeshaper",
["npcID"] = 215653,
},
[84799] = {
["encounterName"] = "Lockmaw",
["npcID"] = 45379,
["encounterID"] = 1054,
},
[406708] = {
["source"] = "Sindragosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 201094,
},
[457902] = {
["source"] = "Beledar's Spawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 207802,
},
[362405] = {
["encounterName"] = "Anduin Wrynn",
["encounterID"] = 2546,
["npcID"] = 181954,
},
[410225] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2677,
},
[126633] = {
["source"] = "Spirit of Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 64742,
},
[326847] = {
["npcID"] = 167876,
},
[394423] = {
["source"] = "Rohzor Forgesmash",
["event"] = "SPELL_CAST_START",
["npcID"] = 187598,
},
[443001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maddened Hierophant",
["npcID"] = 214398,
},
[203371] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hill Ettin",
["npcID"] = 102886,
},
[326848] = {
["npcID"] = 165398,
},
[459952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Palace Guardian",
["npcID"] = 233401,
},
[123707] = {
["encounterName"] = "Grand Empress Shek'zeer",
["source"] = "Grand Empress Shek'zeer",
["encounterID"] = 1501,
["event"] = "SPELL_CAST_START",
["npcID"] = 62837,
},
[373947] = {
["source"] = "Skaara",
["event"] = "SPELL_CAST_START",
["npcID"] = 192949,
},
[449714] = {
["source"] = "Magma Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 215770,
},
[427189] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[412262] = {
["source"] = "Time-Lost Rocketeer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205727,
},
[434786] = {
["source"] = "Trilling Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 216293,
},
[400569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haleh",
["npcID"] = 199370,
},
[394426] = {
["event"] = "SPELL_CAST_START",
["source"] = "Council Flamecaller",
["npcID"] = 198503,
},
[388283] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["npcID"] = 186616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[392686] = {
["source"] = "Boolk",
["event"] = "SPELL_CAST_START",
["npcID"] = 191450,
},
[326851] = {
["encounterName"] = "Sire Denathrius",
["npcID"] = 167406,
["encounterID"] = 2407,
},
[44196] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Phoenix",
["npcID"] = 24674,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1894,
},
[322756] = {
["npcID"] = 165137,
},
[227646] = {
["encounterName"] = "Moroes",
["encounterID"] = 1961,
["npcID"] = 114318,
},
[367807] = {
["source"] = "Worldbreaker Escapee",
["event"] = "SPELL_CAST_START",
["npcID"] = 185626,
},
[451765] = {
["event"] = "SPELL_CAST_START",
["source"] = "[DNT]Teleport Bunny Prime",
["npcID"] = 224528,
},
[414303] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["encounterID"] = 2667,
["event"] = "SPELL_CAST_START",
["npcID"] = 198996,
},
[157001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Durag the Dominator",
["npcID"] = 77890,
},
[381537] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vicious Ice Borer",
["npcID"] = 186392,
},
[445016] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "Lost Watcher",
["npcID"] = 221667,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[131402] = {
["source"] = "Nécrogarde des Flèches jumelles",
["event"] = "SPELL_CAST_START",
["npcID"] = 66272,
},
[63138] = {
["encounterName"] = "Yogg-Saron",
["encounterID"] = 1143,
["npcID"] = 33134,
},
[341969] = {
["npcID"] = 174210,
},
[394430] = {
["source"] = "Primordial Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 190579,
},
[55715] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Elite",
["npcID"] = 29980,
},
[256616] = {
["source"] = "Scrimshaw Gutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 133990,
},
[257640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unfinished Stone Golem",
["npcID"] = 201586,
},
[425149] = {
["source"] = "Zaqali Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 210172,
},
[115363] = {
["source"] = "Puckish Sprite",
["event"] = "SPELL_CAST_START",
["npcID"] = 56349,
},
[227638] = {
["encounterName"] = "Attumen the Huntsman",
["npcID"] = 114262,
["encounterID"] = 1960,
},
[196208] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Shadowmoon Warlock",
["npcID"] = 99704,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[139895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul-Fed Construct",
["npcID"] = 70308,
},
[397904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha-Touched Guardian",
["npcID"] = 200131,
},
[316618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Swarmkeeper",
["npcID"] = 162303,
},
[384194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Cinderweaver",
["npcID"] = 190207,
},
[277085] = {
["npcID"] = 136510,
},
[330953] = {
["npcID"] = 161531,
},
[6358] = {
["source"] = "Mirlia",
["event"] = "SPELL_CAST_START",
["npcID"] = 1863,
},
[397899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha-Touched Guardian",
["npcID"] = 200131,
},
[412233] = {
["source"] = "Time-Lost Rocketeer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205727,
},
[393803] = {
["source"] = "Trakhan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193783,
},
[333002] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 165763,
["encounterID"] = 2402,
},
[387652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frozen Revenant",
["npcID"] = 187203,
},
[320716] = {
["npcID"] = 160415,
},
[33111] = {
["source"] = "Shadowmoon Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 17371,
},
[196916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Velandras Ravencrest",
["npcID"] = 98538,
},
[198963] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["npcID"] = 91005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1792,
},
[427200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[275027] = {
["npcID"] = 140393,
},
[412226] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sluggish Slug",
["npcID"] = 205754,
},
[327130] = {
["npcID"] = 165872,
},
[76100] = {
["encounterName"] = "Commander Ulthok",
["encounterID"] = 1044,
["npcID"] = 40765,
},
[397889] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Waterspeaker",
["npcID"] = 200126,
},
[236142] = {
["encounterName"] = "The Desolate Host",
["source"] = "Engine of Souls",
["npcID"] = 118460,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2054,
},
[163447] = {
["encounterName"] = "Skylord Tovra",
["source"] = "Skylord Tovra",
["npcID"] = 80005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1736,
},
[369865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonhunter Igordan",
["npcID"] = 191611,
},
[322767] = {
["npcID"] = 164921,
},
[64163] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Yogg-Saron",
["npcID"] = 33288,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1143,
},
[403601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warden Entrix",
["npcID"] = 200960,
},
[394439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Acequian",
["npcID"] = 187617,
},
[388296] = {
["source"] = "Crust Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 192626,
},
[356929] = {
["npcID"] = 179837,
},
[336451] = {
["npcID"] = 163862,
},
[394440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dihar the Unyielding",
["npcID"] = 192225,
},
[404679] = {
["source"] = "Mad-Eye Carrey",
["event"] = "SPELL_CAST_START",
["npcID"] = 201181,
},
[423109] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["npcID"] = 208743,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2826,
},
[359629] = {
["npcID"] = 181359,
},
[451778] = {
["source"] = "Dogmatic Machine Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 212878,
},
[265433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodsworn Defiler",
["npcID"] = 133912,
},
[211571] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felsworn Chaos-Mage",
["npcID"] = 113012,
},
[392394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamegullet",
["npcID"] = 197697,
},
[86340] = {
["encounterName"] = "Grand Vizier Ertan",
["npcID"] = 43878,
["encounterID"] = 1043,
},
[306389] = {
["source"] = "Darkmaul Centurion",
["event"] = "SPELL_CAST_START",
["npcID"] = 156825,
},
[455875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glintwick",
["npcID"] = 219797,
},
[392395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderhead",
["npcID"] = 197698,
},
[394443] = {
["source"] = "Primordial Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 190579,
},
[451119] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathscreamer Iken'tak",
["npcID"] = 211263,
},
[431303] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Shadowmage",
["npcID"] = 213892,
},
[257315] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Irontide Grenadier",
["npcID"] = 129758,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[115009] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shado-Pan Stormbringer",
["npcID"] = 59808,
},
[388301] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadeslash Trakken",
["npcID"] = 193271,
},
[431304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifested Shadow",
["npcID"] = 211341,
},
[449734] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[457266] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greenhorn Extra",
["npcID"] = 228307,
},
[388302] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[303678] = {
["npcID"] = 155793,
},
[392398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Thundercloud",
["npcID"] = 197509,
},
[435401] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[198263] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["npcID"] = 95676,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1809,
},
[455879] = {
["source"] = "Fragmented Core",
["event"] = "SPELL_CAST_START",
["npcID"] = 223953,
},
[294107] = {
["npcID"] = 150254,
},
[258672] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crackshot",
["npcID"] = 126918,
},
[15254] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Ethereal Beacon",
["npcID"] = 18431,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1899,
},
[141612] = {
["isChanneled"] = true,
["source"] = "Fiery Anger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 70824,
},
[376200] = {
["source"] = "Forgewrought Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 194816,
},
[115010] = {
["encounterName"] = "Taran Zhu",
["source"] = "Gripping Hatred",
["npcID"] = 59804,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1306,
},
[388305] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacial Giantess",
["npcID"] = 193075,
},
[455881] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Glintwick",
["npcID"] = 219797,
},
[79174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Prickly Crawler",
["npcID"] = 60437,
},
[130198] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heavy Mook",
["npcID"] = 67399,
},
[434722] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["encounterID"] = 2907,
["event"] = "SPELL_CAST_START",
["npcID"] = 216619,
},
[431309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Shadowmage",
["npcID"] = 213892,
},
[377383] = {
["source"] = "Alpha Eagle",
["event"] = "SPELL_CAST_START",
["npcID"] = 192333,
},
[34984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fen Ray",
["npcID"] = 17731,
},
[103236] = {
["isChanneled"] = true,
["source"] = "Jade Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 55236,
},
[406737] = {
["source"] = "Memory of a Betrayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200828,
},
[418335] = {
["source"] = "Queen Angerboda",
["event"] = "SPELL_CAST_START",
["npcID"] = 207823,
},
[121154] = {
["source"] = "Shado-Pan Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 62220,
},
[249114] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garothi Worldbreaker",
["npcID"] = 122450,
},
[426524] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208459,
},
[386259] = {
["source"] = "Basrikron",
["event"] = "SPELL_CAST_START",
["npcID"] = 193535,
},
[389364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Timekeeper",
["npcID"] = 192516,
},
[385574] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[256627] = {
["source"] = "Scrimshaw Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 129374,
},
[438807] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Colossal Spider",
["npcID"] = 219045,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2919,
},
[418329] = {
["source"] = "Queen Angerboda",
["event"] = "SPELL_CAST_START",
["npcID"] = 207823,
},
[265445] = {
["npcID"] = 161527,
},
[451097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Militant",
["npcID"] = 213932,
},
[392406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storm Warrior",
["npcID"] = 197982,
},
[385569] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[412884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ysera",
["npcID"] = 198970,
},
[39592] = {
["source"] = "Summoned Searing Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 22895,
},
[294115] = {
["npcID"] = 151684,
},
[410837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ritualmaster Skarna",
["npcID"] = 202274,
},
[396503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loamas",
["npcID"] = 199030,
},
[439506] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["encounterID"] = 2906,
["event"] = "SPELL_CAST_START",
["npcID"] = 215405,
},
[40872] = {
["source"] = "Dragonmaw Sky Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 23030,
},
[451793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Al'haggro",
["npcID"] = 216560,
},
[206459] = {
["encounterName"] = "Cordana Felsong",
["source"] = "Avatar of Shadow",
["encounterID"] = 1818,
["event"] = "SPELL_CAST_START",
["npcID"] = 104293,
},
[390361] = {
["npcID"] = 190070,
},
[134788] = {
["source"] = "Dalan Nightbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 68318,
},
[404821] = {
["source"] = "Water Echo",
["event"] = "SPELL_CAST_START",
["npcID"] = 203051,
},
[329711] = {
["encounterName"] = "Sire Denathrius",
["npcID"] = 169196,
},
[319547] = {
["npcID"] = 165706,
},
[457938] = {
["source"] = "Beledar's Spawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 207802,
},
[459986] = {
["event"] = "SPELL_CAST_START",
["source"] = "Palace Guardian",
["npcID"] = 222305,
},
[412888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ysera",
["npcID"] = 198970,
},
[133765] = {
["encounterName"] = "Durumu the Forgotten",
["source"] = "Durumu the Forgotten",
["npcID"] = 68036,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1572,
},
[382593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cruel Bonecrusher",
["npcID"] = 186206,
},
[406760] = {
["source"] = "Memory of a Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 200827,
},
[388316] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oppressive Artificer",
["npcID"] = 184444,
},
[329808] = {
["encounterName"] = "Stone Legion Generals",
["npcID"] = 168113,
["encounterID"] = 2417,
},
[385551] = {
["encounterName"] = "Gulping Goliath",
["event"] = "SPELL_CAST_START",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
},
[115013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Borokhula the Destroyer",
["npcID"] = 58739,
},
[23337] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gadgetzan Bruiser",
["npcID"] = 9460,
},
[308455] = {
["encounterName"] = "Tunk",
["source"] = "Tunk",
["encounterID"] = 2325,
["event"] = "SPELL_CAST_START",
["npcID"] = 157300,
},
[300525] = {
["npcID"] = 150142,
},
[410843] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Awakened Shards",
["npcID"] = 205218,
},
[314599] = {
["source"] = "Foreman Magrok",
["event"] = "SPELL_CAST_START",
["npcID"] = 145978,
},
[385157] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greenbelt Riverbeast",
["npcID"] = 192834,
},
[384223] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[41188] = {
["source"] = "Ashtongue Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 68096,
},
[132743] = {
["source"] = "Darkhatched Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 67256,
},
[423131] = {
["source"] = "Wrathion",
["event"] = "SPELL_CAST_START",
["npcID"] = 210077,
},
[257656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unfinished Stone Golem",
["npcID"] = 201586,
},
[193152] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["npcID"] = 91797,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1812,
},
[372719] = {
["encounterName"] = "Sentinel Talondras",
["npcID"] = 184124,
["encounterID"] = 2557,
},
[328206] = {
["encounterName"] = "Echelon",
["npcID"] = 164185,
["encounterID"] = 2380,
},
[408798] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spitfire Totem",
["npcID"] = 204548,
},
[106823] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[168929] = {
["encounterName"] = "Skulloc, Son of Gruul",
["npcID"] = 83612,
["encounterID"] = 1754,
},
[391081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tserasor the Preserver",
["npcID"] = 190598,
},
[407775] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[312674] = {
["npcID"] = 161388,
},
[412895] = {
["source"] = "Forgemaster Algrin",
["event"] = "SPELL_CAST_START",
["npcID"] = 203709,
},
[227965] = {
["npcID"] = 114544,
},
[449021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tij'allet",
["npcID"] = 215600,
},
[410848] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neltharion",
["npcID"] = 201668,
},
[119622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha of Anger",
["npcID"] = 60491,
},
[414944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Gutter",
["npcID"] = 207454,
},
[381444] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["npcID"] = 186122,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[195284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Restless Tides",
["npcID"] = 97173,
},
[113479] = {
["source"] = "Master Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 59175,
},
[414945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Rotcaster",
["npcID"] = 207459,
},
[457948] = {
["source"] = "Vek'kix",
["event"] = "SPELL_CAST_START",
["npcID"] = 225425,
},
[337131] = {
["npcID"] = 162872,
},
[412156] = {
["source"] = "Time-Lost Aerobot",
["event"] = "SPELL_CAST_START",
["npcID"] = 205723,
},
[455901] = {
["source"] = "Sharpscale the Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 215252,
},
[381438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Serene Fallingwater",
["npcID"] = 196467,
},
[135818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Footman",
["npcID"] = 67901,
},
[16006] = {
["encounterName"] = "Revelosh",
["source"] = "Revelosh",
["npcID"] = 6910,
["event"] = "SPELL_CAST_START",
["encounterID"] = 547,
},
[294491] = {
["source"] = "Timeling",
["event"] = "SPELL_CAST_START",
["npcID"] = 186479,
},
[343276] = {
["npcID"] = 173178,
},
[197251] = {
["encounterName"] = "Cordana Felsong",
["source"] = "Cordana Felsong",
["npcID"] = 95888,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1818,
},
[412900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zakajz",
["npcID"] = 198953,
},
[409921] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[416996] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2709,
},
[401248] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["encounterID"] = 2670,
["event"] = "SPELL_CAST_START",
["npcID"] = 198998,
},
[335114] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 165066,
["encounterID"] = 2418,
},
[455904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oozemodius",
["npcID"] = 220410,
},
[367851] = {
["encounterName"] = "The Jailer",
["npcID"] = 180990,
["encounterID"] = 2537,
},
[172679] = {
["source"] = "Drywind Bonepicker",
["event"] = "SPELL_CAST_START",
["npcID"] = 81207,
},
[396520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rumbling Proto-Dragon",
["npcID"] = 187212,
},
[323640] = {
["npcID"] = 165473,
},
[411809] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pahi'rys",
["npcID"] = 205540,
},
[331634] = {
["encounterName"] = "The Council of Blood",
["npcID"] = 166970,
["encounterID"] = 2412,
},
[80015] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackmane Tracker",
["npcID"] = 60434,
},
[431333] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Nightfall Darkcaster",
["npcID"] = 213893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[414192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Partially Teleported Murloc",
["npcID"] = 226666,
},
[369901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Feather",
["npcID"] = 186965,
},
[404713] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[455907] = {
["source"] = "Tefferty Ulreth",
["event"] = "SPELL_CAST_START",
["npcID"] = 219189,
},
[241280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felguard Invader",
["npcID"] = 119742,
},
[44202] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Phoenix",
["npcID"] = 24674,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1894,
},
[388332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kalecgos",
["npcID"] = 196439,
},
[455908] = {
["source"] = "Tefferty Ulreth",
["event"] = "SPELL_CAST_START",
["npcID"] = 219189,
},
[449765] = {
["source"] = "Magma Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 215770,
},
[106826] = {
["encounterName"] = "Sha of Violence",
["source"] = "Sha of Violence",
["npcID"] = 56719,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1305,
},
[82765] = {
["npcID"] = 44982,
},
[256639] = {
["source"] = "Blacktar Bomber",
["event"] = "SPELL_CAST_START",
["npcID"] = 129372,
},
[192135] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Hatecoil Shellbreaker",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 97264,
},
[114571] = {
["encounterName"] = "Lorewalker Stonestep",
["source"] = "Strife",
["npcID"] = 59051,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1417,
},
[145037] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Garrosh Hellscream",
["encounterID"] = 1623,
["event"] = "SPELL_CAST_START",
["npcID"] = 71865,
},
[316663] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Aqir Swarmkeeper",
["npcID"] = 162303,
},
[356843] = {
["npcID"] = 179388,
},
[46153] = {
["encounterName"] = "Selin Fireheart",
["source"] = "Selin Fireheart",
["npcID"] = 24723,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1897,
},
[388335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Runebinder",
["npcID"] = 186354,
},
[366309] = {
["npcID"] = 180917,
},
[457959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Geothermus",
["npcID"] = 217416,
},
[419052] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Future Self",
["npcID"] = 208959,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[121673] = {
["event"] = "SPELL_CAST_START",
["source"] = "Salyin Skirmisher",
["npcID"] = 62350,
},
[397134] = {
["encounterName"] = "The Primal Council",
["source"] = "Opalfang",
["npcID"] = 187772,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[359668] = {
["npcID"] = 181484,
},
[156301] = {
["npcID"] = 80935,
},
[290045] = {
["npcID"] = 147495,
},
[147702] = {
["source"] = "Burning Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72895,
},
[343287] = {
["npcID"] = 173633,
},
[411837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragment of Fire",
["npcID"] = 205971,
},
[371956] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Terrasentry",
["npcID"] = 188011,
},
[414959] = {
["source"] = "Talthonei Ashwhisper",
["event"] = "SPELL_CAST_START",
["npcID"] = 209902,
},
[418024] = {
["source"] = "Hand of the Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 207386,
},
[221830] = {
["source"] = "Kelorn Nightblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 111361,
},
[364495] = {
["npcID"] = 181625,
},
[169823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spore Image",
["npcID"] = 84983,
},
[192138] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Hatecoil Crestrider",
["npcID"] = 97269,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[451820] = {
["source"] = "Gargantuan Honeyslime",
["event"] = "SPELL_CAST_START",
["npcID"] = 222960,
},
[169613] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[418265] = {
["source"] = "Uther",
["event"] = "SPELL_CAST_START",
["npcID"] = 207818,
},
[61353] = {
["npcID"] = 96779,
},
[260879] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["npcID"] = 131318,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2111,
},
[355577] = {
["npcID"] = 178171,
},
[390389] = {
["source"] = "Taranthiza",
["event"] = "SPELL_CAST_START",
["npcID"] = 196970,
},
[326909] = {
["npcID"] = 165398,
},
[394485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hypoxicron",
["npcID"] = 186334,
},
[136850] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["npcID"] = 68397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1579,
},
[272609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Corruptor",
["npcID"] = 138281,
},
[407504] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 198999,
},
[409975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[63913] = {
["npcID"] = 33819,
},
[166543] = {
["encounterName"] = "Nitrogg Thundertower",
["npcID"] = 82721,
["encounterID"] = 1732,
},
[124546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apothecary Cheng",
["npcID"] = 63812,
},
[394487] = {
["source"] = "Death's Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 190985,
},
[50092] = {
["source"] = "Shek'zeer Needler",
["event"] = "SPELL_CAST_START",
["npcID"] = 64714,
},
[199726] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Ranulf",
["npcID"] = 97083,
},
[400631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampant Tide",
["npcID"] = 201463,
},
[410870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Vortex",
["npcID"] = 45912,
},
[401867] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Obsidian Guard",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 200836,
},
[385068] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Colossal Stormfiend",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 197145,
},
[241287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowsworn Invader",
["npcID"] = 121021,
},
[59395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Torturer",
["npcID"] = 202555,
},
[153234] = {
["encounterName"] = "Azzakel, Vanguard of the Legion",
["source"] = "Azzakel",
["npcID"] = 75927,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1678,
},
[431349] = {
["source"] = "Nightfall Dark Architect",
["event"] = "SPELL_CAST_START",
["npcID"] = 213885,
},
[10733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Mechano-Tank",
["npcID"] = 213785,
},
[443636] = {
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215475,
},
[453875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shurrai",
["npcID"] = 221224,
},
[103555] = {
["isChanneled"] = true,
["source"] = "Widow Greenpaw",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 55368,
},
[129502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lupello",
["npcID"] = 56357,
},
[410873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gust Soldier",
["npcID"] = 45477,
},
[355584] = {
["npcID"] = 178171,
},
[406778] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Blaze Hound",
["npcID"] = 202279,
},
[415436] = {
["source"] = "Coalesced Moment",
["event"] = "SPELL_CAST_START",
["npcID"] = 206064,
},
[294884] = {
["npcID"] = 152009,
},
[388349] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepwater Eel",
["npcID"] = 215680,
},
[300296] = {
["npcID"] = 150143,
},
[376063] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Smoldering Hellion",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 191510,
},
[394493] = {
["source"] = "Ko'jo",
["event"] = "SPELL_CAST_START",
["npcID"] = 186367,
},
[404732] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[365825] = {
["npcID"] = 181884,
},
[413387] = {
["event"] = "SPELL_CAST_START",
["source"] = "Executor of the Caliph",
["npcID"] = 45928,
},
[378112] = {
["source"] = "Encroaching Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 189314,
},
[453879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand Overspinner Antourix",
["npcID"] = 225263,
},
[80003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Ripflesh",
["npcID"] = 60767,
},
[277773] = {
["npcID"] = 142219,
},
[121165] = {
["encounterName"] = "Gekkan",
["event"] = "SPELL_CAST_START",
["source"] = "Harthak Flameseeker",
["npcID"] = 61392,
},
[265487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodsworn Defiler",
["npcID"] = 133912,
},
[113998] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Maw of Despair",
["npcID"] = 59237,
},
[277774] = {
["npcID"] = 142149,
},
[427260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursed Rooktender",
["npcID"] = 207199,
},
[363780] = {
["npcID"] = 184043,
},
[406783] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[175763] = {
["event"] = "SPELL_CAST_START",
["source"] = "Night-Twisted Brute",
["npcID"] = 85241,
},
[360213] = {
["npcID"] = 178750,
},
[404736] = {
["source"] = "Baine Bloodhoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 203204,
},
[227981] = {
["npcID"] = 114541,
},
[400641] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["encounterID"] = 2670,
["event"] = "SPELL_CAST_START",
["npcID"] = 198998,
},
[369925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Dreadsquall",
["npcID"] = 191901,
},
[412928] = {
["source"] = "Forgemaster Algrin",
["event"] = "SPELL_CAST_START",
["npcID"] = 203709,
},
[391610] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gusting Proto-Dragon",
["npcID"] = 190401,
},
[159382] = {
["encounterName"] = "Rukhran",
["source"] = "Rukhran",
["npcID"] = 76143,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1700,
},
[396877] = {
["source"] = "Enraged Air Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 196155,
},
[105296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Miss Fanny",
["npcID"] = 56192,
},
[113999] = {
["encounterName"] = "Rattlegore",
["source"] = "Rattlegore",
["encounterID"] = 1428,
["event"] = "SPELL_CAST_START",
["npcID"] = 59153,
},
[359688] = {
["npcID"] = 181626,
},
[405016] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[404739] = {
["source"] = "First Mate Ovdah",
["event"] = "SPELL_CAST_START",
["npcID"] = 201182,
},
[418226] = {
["source"] = "Vorus'arak",
["event"] = "SPELL_CAST_START",
["npcID"] = 205862,
},
[323825] = {
["encounterName"] = "Mordretha",
["npcID"] = 165994,
["encounterID"] = 2404,
},
[157652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Auchenai Magus",
["npcID"] = 77694,
},
[371976] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[63147] = {
["encounterName"] = "Yogg-Saron",
["encounterID"] = 1143,
["npcID"] = 33134,
},
[334266] = {
["encounterName"] = "Hungering Destroyer",
["npcID"] = 164261,
["encounterID"] = 2383,
},
[378120] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Rock",
["npcID"] = 192799,
},
[347404] = {
["npcID"] = 181782,
},
[463272] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caustic Skyrazor",
["npcID"] = 229918,
},
[433410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chittering Fearmonger",
["npcID"] = 216583,
},
[443649] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Scribe",
["npcID"] = 221035,
},
[129656] = {
["source"] = "Glade Singer",
["event"] = "SPELL_CAST_START",
["npcID"] = 58766,
},
[365835] = {
["npcID"] = 183407,
},
[433411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Darkcaster",
["npcID"] = 208242,
},
[115024] = {
["source"] = "Terracotta Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 59758,
},
[396552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmas",
["npcID"] = 199027,
},
[431364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Ritualist",
["npcID"] = 214761,
},
[294165] = {
["npcID"] = 182296,
},
[418025] = {
["source"] = "Hand of the Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 207386,
},
[404744] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[227985] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114328,
["encounterID"] = 1957,
},
[261773] = {
["npcID"] = 136596,
},
[451843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormguard Gorren",
["npcID"] = 207205,
},
[63038] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Guardian of Yogg-Saron",
["npcID"] = 33136,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[352347] = {
["encounterName"] = "Hylbrande",
["npcID"] = 176551,
["encounterID"] = 2426,
},
[118903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glintrok Hexxer",
["npcID"] = 61216,
},
[320788] = {
["encounterName"] = "Nalthor the Rimebinder",
["encounterID"] = 2390,
["npcID"] = 162693,
},
[263502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Offering",
["npcID"] = 210405,
},
[88186] = {
["npcID"] = 45922,
},
[369061] = {
["encounterName"] = "Emberon",
["npcID"] = 184422,
["encounterID"] = 2558,
},
[410890] = {
["source"] = "Infinite Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 205259,
},
[380174] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[439559] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[43270] = {
["source"] = "Iron Rune Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 23796,
},
[394509] = {
["source"] = "Ruinous",
["event"] = "SPELL_CAST_START",
["npcID"] = 193522,
},
[453894] = {
["source"] = "Ren'khat",
["event"] = "SPELL_CAST_START",
["npcID"] = 222152,
},
[227987] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114328,
["encounterID"] = 1957,
},
[31704] = {
["encounterName"] = "The Black Stalker",
["source"] = "The Black Stalker",
["npcID"] = 17882,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1948,
},
[205462] = {
["npcID"] = 166137,
},
[306457] = {
["isChanneled"] = true,
["source"] = "Ogre Brute",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157328,
},
[418200] = {
["source"] = "Infinite Riftmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 208698,
},
[438677] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[130163] = {
["isChanneled"] = true,
["source"] = "Gunship Turret",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66183,
},
[396559] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raszageth",
["npcID"] = 199031,
},
[383385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Filth Caller",
["npcID"] = 185656,
},
[405908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kartoros",
["npcID"] = 202977,
},
[394512] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Spawn",
["npcID"] = 75652,
},
[347414] = {
["encounterName"] = "So'azmi",
["npcID"] = 175806,
["encounterID"] = 2437,
},
[232084] = {
["npcID"] = 116549,
},
[457993] = {
["event"] = "SPELL_CAST_START",
["source"] = "Croakit",
["npcID"] = 214757,
},
[405905] = {
["source"] = "Failed Experiment",
["event"] = "SPELL_CAST_START",
["npcID"] = 203007,
},
[363797] = {
["npcID"] = 184043,
},
[319821] = {
["npcID"] = 161529,
},
[196249] = {
["source"] = "Dreadlord Mendacius",
["event"] = "SPELL_CAST_START",
["npcID"] = 99649,
},
[328986] = {
["npcID"] = 169159,
},
[404753] = {
["source"] = "Baine Bloodhoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 203204,
},
[414992] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Flamewhisperer",
["npcID"] = 209236,
},
[193376] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["npcID"] = 91004,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1791,
},
[337178] = {
["npcID"] = 170838,
},
[404754] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Null Glimmer",
["npcID"] = 202971,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[414993] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raelas Firewind",
["npcID"] = 209152,
},
[359704] = {
["npcID"] = 181626,
},
[331152] = {
["npcID"] = 167164,
},
[417683] = {
["source"] = "Fury of N'zoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 205307,
},
[316711] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Psychus",
["npcID"] = 158376,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[382795] = {
["isChanneled"] = true,
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 193944,
},
[271652] = {
["npcID"] = 161874,
},
[404756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Flamespinner",
["npcID"] = 203686,
},
[390422] = {
["npcID"] = 189933,
},
[120431] = {
["source"] = "Needlebottom",
["event"] = "SPELL_CAST_START",
["npcID"] = 61818,
},
[111728] = {
["encounterName"] = "Raigonn",
["source"] = "Raigonn",
["npcID"] = 56877,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1419,
},
[404757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Manaweaver",
["npcID"] = 202246,
},
[365850] = {
["npcID"] = 181652,
},
[392471] = {
["source"] = "Galnmor",
["event"] = "SPELL_CAST_START",
["npcID"] = 193853,
},
[369946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonhunter Igordan",
["npcID"] = 191611,
},
[105301] = {
["event"] = "SPELL_CAST_START",
["source"] = "Miss Fanny",
["npcID"] = 56192,
},
[382233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Batak",
["npcID"] = 193462,
},
[114516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grummle Trail Guide",
["npcID"] = 59578,
},
[172703] = {
["npcID"] = 81432,
},
[314658] = {
["source"] = "Henry Garrick",
["event"] = "SPELL_CAST_START",
["npcID"] = 161504,
},
[409756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[335143] = {
["npcID"] = 165222,
},
[452985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siege Marshal Tekhzok",
["npcID"] = 215987,
},
[407125] = {
["source"] = "Horde Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 207969,
},
[403057] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[426240] = {
["event"] = "SPELL_CAST_START",
["source"] = "Austin Huxworth",
["npcID"] = 209065,
},
[410904] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 199000,
},
[120429] = {
["source"] = "Agitated Seedstealer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61302,
},
[128339] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Sha",
["npcID"] = 65414,
},
[192158] = {
["encounterName"] = "Hyrja",
["source"] = "Olmyr the Enlightened",
["npcID"] = 97202,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1806,
},
[320804] = {
["encounterName"] = "The Manastorms",
["encounterID"] = 2394,
["npcID"] = 164561,
},
[393597] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kraunot",
["npcID"] = 186401,
},
[14030] = {
["source"] = "Officer Pomeroy",
["event"] = "SPELL_CAST_START",
["npcID"] = 14438,
},
[387452] = {
["isChanneled"] = true,
["source"] = "Arcane Commander",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190776,
},
[320805] = {
["npcID"] = 166867,
},
[445718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sparklit Rust Crusher",
["npcID"] = 212597,
},
[384577] = {
["encounterName"] = "Gutshot",
["source"] = "Rotfang Hyena",
["npcID"] = 194745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[75610] = {
["npcID"] = 39679,
},
[378143] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthshatter Primalist",
["npcID"] = 187173,
},
[331045] = {
["npcID"] = 170860,
},
[439576] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["npcID"] = 217748,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[449815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandres the Relicbearer",
["npcID"] = 217534,
},
[227529] = {
["encounterName"] = "The Curator",
["npcID"] = 114334,
["encounterID"] = 1964,
},
[388383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iskaara Defender",
["npcID"] = 186478,
},
[120149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirror Image",
["npcID"] = 194853,
},
[241306] = {
["source"] = "Razorjaw Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 117154,
},
[260793] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["npcID"] = 131817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2118,
},
[153794] = {
["encounterName"] = "Rukhran",
["source"] = "Rukhran",
["npcID"] = 76143,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1700,
},
[195232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wavebinder",
["npcID"] = 97170,
},
[441626] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[353573] = {
["npcID"] = 182324,
},
[32369] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Ethereal Apprentice",
["npcID"] = 18430,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1899,
},
[111723] = {
["encounterName"] = "Raigonn",
["source"] = "Raigonn",
["npcID"] = 56877,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1419,
},
[403203] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[460057] = {
["source"] = "Queensguard An'Jak Shabtir",
["event"] = "SPELL_CAST_START",
["npcID"] = 219665,
},
[113503] = {
["source"] = "Tomb Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 60912,
},
[418122] = {
["source"] = "Lord Thassarian",
["event"] = "SPELL_CAST_START",
["npcID"] = 207822,
},
[204448] = {
["encounterName"] = "Skorpyron",
["source"] = "Skorpyron",
["npcID"] = 102263,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1849,
},
[394530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Acequian",
["npcID"] = 187617,
},
[322943] = {
["encounterName"] = "Halkias, the Sin-Stained Goliath",
["npcID"] = 165408,
["encounterID"] = 2401,
},
[166565] = {
["encounterName"] = "Nitrogg Thundertower",
["npcID"] = 79548,
["encounterID"] = 1732,
},
[277809] = {
["npcID"] = 142150,
},
[121174] = {
["encounterName"] = "Gekkan",
["event"] = "SPELL_CAST_START",
["source"] = "Harthak Flameseeker",
["npcID"] = 61392,
},
[265523] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodsworn Defiler",
["npcID"] = 133912,
},
[130389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osul Spitfire",
["npcID"] = 66289,
},
[441630] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaheti Vanguard",
["npcID"] = 218316,
},
[378150] = {
["npcID"] = 191376,
},
[214688] = {
["npcID"] = 107435,
},
[324909] = {
["npcID"] = 164926,
},
[207816] = {
["source"] = "Necrodark Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 104888,
},
[417899] = {
["source"] = "Risen Adventurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205992,
},
[404772] = {
["source"] = "Grugoth the Hullcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200721,
},
[227999] = {
["npcID"] = 114542,
},
[277812] = {
["npcID"] = 142150,
},
[451871] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Earthcaller",
["npcID"] = 224219,
},
[171886] = {
["source"] = "Modgud",
["event"] = "SPELL_CAST_START",
["npcID"] = 214869,
},
[215234] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Dominator Tentacle",
["encounterID"] = 1873,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 105304,
},
[384296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ayanga",
["npcID"] = 192961,
},
[271670] = {
["event"] = "SPELL_CAST_START",
["source"] = "Princess Talanji",
["npcID"] = 146180,
},
[388392] = {
["source"] = "Unruly Textbook",
["event"] = "SPELL_CAST_START",
["npcID"] = 196044,
},
[382249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trickclaw Mystic",
["npcID"] = 185528,
},
[138923] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["npcID"] = 69712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1573,
},
[106841] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[214690] = {
["npcID"] = 107435,
},
[133804] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broodmaster Noshi",
["npcID"] = 67264,
},
[125030] = {
["source"] = "Hei Feng",
["event"] = "SPELL_CAST_START",
["npcID"] = 63920,
},
[378155] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["npcID"] = 186125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[274802] = {
["npcID"] = 136495,
},
[324914] = {
["npcID"] = 166299,
},
[318771] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Psychophage",
["npcID"] = 163947,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[88170] = {
["npcID"] = 45924,
},
[116838] = {
["source"] = "Subjugator Gormal",
["event"] = "SPELL_CAST_START",
["npcID"] = 55016,
},
[365870] = {
["npcID"] = 183404,
},
[364900] = {
["npcID"] = 183737,
},
[147652] = {
["source"] = "Primal Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72805,
},
[404778] = {
["source"] = "Baine Bloodhoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 203204,
},
[126903] = {
["source"] = "Shao-Tien Fist",
["event"] = "SPELL_CAST_START",
["npcID"] = 65134,
},
[318773] = {
["npcID"] = 167431,
},
[230050] = {
["npcID"] = 115765,
},
[214692] = {
["npcID"] = 107435,
},
[365872] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 181954,
["encounterID"] = 2546,
},
[433448] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Webspinner",
["npcID"] = 216621,
},
[320822] = {
["npcID"] = 165222,
},
[115754] = {
["isChanneled"] = true,
["source"] = "Tian Pupil",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54944,
},
[118105] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60710,
},
[449831] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Battlefront Hauler",
["npcID"] = 223789,
},
[320823] = {
["encounterName"] = "The Manastorms",
["encounterID"] = 2394,
["npcID"] = 164555,
},
[317791] = {
["npcID"] = 163366,
},
[455975] = {
["source"] = "Reconstructed Skardyn",
["event"] = "SPELL_CAST_START",
["npcID"] = 219245,
},
[397386] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["npcID"] = 199703,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[353588] = {
["npcID"] = 182426,
},
[259744] = {
["npcID"] = 159022,
},
[374066] = {
["source"] = "Primalist Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190345,
},
[168040] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["npcID"] = 83893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[320825] = {
["encounterName"] = "The Manastorms",
["encounterID"] = 2394,
["npcID"] = 164568,
},
[355637] = {
["npcID"] = 179840,
},
[131071] = {
["source"] = "Strongarm Airman",
["event"] = "SPELL_CAST_START",
["npcID"] = 65840,
},
[359733] = {
["npcID"] = 181349,
},
[334162] = {
["npcID"] = 166908,
},
[331065] = {
["npcID"] = 159192,
},
[118106] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60710,
},
[359734] = {
["npcID"] = 185755,
},
[427342] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arathi Footman",
["npcID"] = 206705,
},
[386757] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["npcID"] = 189727,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2617,
},
[324923] = {
["npcID"] = 164926,
},
[372568] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 188067,
},
[114272] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha Remnant",
["npcID"] = 59434,
},
[136881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Water-Binder",
["npcID"] = 69455,
},
[382261] = {
["source"] = "Amalgam of Desperation",
["event"] = "SPELL_CAST_START",
["npcID"] = 199423,
},
[425264] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[46035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Magister",
["npcID"] = 24685,
},
[107356] = {
["encounterName"] = "Taran Zhu",
["source"] = "Corrupted Taran Zhu",
["npcID"] = 56884,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1306,
},
[349498] = {
["encounterName"] = "The Grand Menagerie",
["npcID"] = 176556,
["encounterID"] = 2441,
},
[360775] = {
["npcID"] = 185511,
},
[198833] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Latosius",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[355642] = {
["npcID"] = 179841,
},
[187052] = {
["encounterName"] = "Hellfire Assault",
["source"] = "Contracted Engineer",
["npcID"] = 93881,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1778,
},
[55218] = {
["encounterName"] = "Gal'darah",
["source"] = "Gal'darah",
["encounterID"] = 1981,
["event"] = "SPELL_CAST_START",
["npcID"] = 29306,
},
[221864] = {
["encounterName"] = "Grand Magistrix Elisande",
["source"] = "Recursive Elemental",
["npcID"] = 105299,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1872,
},
[419595] = {
["source"] = "Molten General",
["event"] = "SPELL_CAST_START",
["npcID"] = 207941,
},
[374073] = {
["source"] = "Primalist Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190345,
},
[120667] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Marksman",
["npcID"] = 61968,
},
[114087] = {
["encounterName"] = "Houndmaster Braun",
["source"] = "Houndmaster Braun",
["encounterID"] = 1422,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59303,
},
[396599] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rapid Wooly Ewe",
["npcID"] = 197200,
},
[365883] = {
["npcID"] = 181045,
},
[130906] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ga'trul",
["npcID"] = 66276,
},
[454535] = {
["source"] = "Mai'Zoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 210252,
},
[107357] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["npcID"] = 56884,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1306,
},
[49843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Shade",
["npcID"] = 24872,
},
[389435] = {
["source"] = "Wither Biter",
["event"] = "SPELL_CAST_START",
["npcID"] = 197136,
},
[451890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonehead Koboldcrusher",
["npcID"] = 220792,
},
[388410] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[55811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Sentinel",
["npcID"] = 29984,
},
[407640] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201774,
},
[271689] = {
["event"] = "SPELL_CAST_START",
["source"] = "Princess Talanji",
["npcID"] = 146180,
},
[118228] = {
["source"] = "Osul Veteran Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61886,
},
[199341] = {
["source"] = "Valarjar Trapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 96934,
},
[384316] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["npcID"] = 186615,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[389040] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thondrozus",
["npcID"] = 192769,
},
[440622] = {
["source"] = "Ragefin Shadowcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 213405,
},
[365887] = {
["npcID"] = 184878,
},
[399666] = {
["source"] = "Spellsworn Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 200598,
},
[368042] = {
["npcID"] = 178508,
},
[287037] = {
["encounterName"] = "Opulence",
["npcID"] = 145261,
["encounterID"] = 2271,
},
[365888] = {
["npcID"] = 184879,
},
[316951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrosive Digester",
["npcID"] = 162828,
},
[402748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Crusher",
["npcID"] = 202284,
},
[396605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rapid Wooly Ewe",
["npcID"] = 197200,
},
[228011] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114522,
["encounterID"] = 1957,
},
[31707] = {
["npcID"] = 78116,
},
[205486] = {
["encounterName"] = "Star Augur Etraeus",
["source"] = "Star Augur Etraeus",
["npcID"] = 103758,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1863,
},
[444648] = {
["source"] = "Riftwalker Nilara",
["event"] = "SPELL_CAST_START",
["npcID"] = 214644,
},
[390463] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[32011] = {
["source"] = "Spitescale Siren",
["event"] = "SPELL_CAST_START",
["npcID"] = 38301,
},
[427323] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidrider",
["npcID"] = 212786,
},
[128086] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kz'Kzik",
["npcID"] = 62832,
},
[228012] = {
["encounterName"] = "Odyn",
["source"] = "Hymdall",
["npcID"] = 114361,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1958,
},
[396774] = {
["npcID"] = 191105,
},
[345414] = {
["npcID"] = 162114,
},
[131067] = {
["source"] = "Strongarm Medic",
["event"] = "SPELL_CAST_START",
["npcID"] = 65842,
},
[191524] = {
["source"] = "Blade Dancer Illianna",
["event"] = "SPELL_CAST_START",
["npcID"] = 96657,
},
[215754] = {
["npcID"] = 108655,
},
[117702] = {
["source"] = "Widow Greenpaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 55368,
},
[120810] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tormented Spirit",
["npcID"] = 60825,
},
[102998] = {
["source"] = "Xiao",
["event"] = "SPELL_CAST_START",
["npcID"] = 54926,
},
[194437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crawliac Cinderwitch",
["npcID"] = 95174,
},
[17501] = {
["source"] = "Crimson Cannon",
["event"] = "SPELL_CAST_START",
["npcID"] = 11199,
},
[305236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Venomweaver",
["npcID"] = 161229,
},
[199345] = {
["encounterName"] = "Dresaron",
["npcID"] = 99200,
["encounterID"] = 1838,
},
[120670] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Fire-Dancer",
["npcID"] = 60402,
},
[451900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonehead Koboldcrusher",
["npcID"] = 220792,
},
[322892] = {
["npcID"] = 168853,
},
[365895] = {
["npcID"] = 184535,
},
[411439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Siegemaster",
["npcID"] = 198874,
},
[460092] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spinemaw Staghorn",
["npcID"] = 167111,
},
[444698] = {
["source"] = "Riftwalker Nilara",
["event"] = "SPELL_CAST_START",
["npcID"] = 214644,
},
[406851] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[224943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felsworn Chaos-Mage",
["npcID"] = 113012,
},
[153764] = {
["encounterName"] = "Azzakel, Vanguard of the Legion",
["source"] = "Azzakel",
["npcID"] = 75927,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1678,
},
[396613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunscale Behemoth",
["npcID"] = 193133,
},
[390470] = {
["npcID"] = 189933,
},
[102241] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["npcID"] = 54544,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1884,
},
[111667] = {
["source"] = "Scarlet Evoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 58756,
},
[206514] = {
["encounterName"] = "Gul'dan",
["source"] = "Gul'dan",
["npcID"] = 104154,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1866,
},
[365898] = {
["npcID"] = 184627,
},
[408901] = {
["source"] = "Animated Contaminant",
["event"] = "SPELL_CAST_START",
["npcID"] = 202270,
},
[112992] = {
["encounterName"] = "Hoptallus",
["source"] = "Hoptallus",
["npcID"] = 56717,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1413,
},
[388424] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[406854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Arcanist",
["npcID"] = 201736,
},
[130910] = {
["source"] = "Ga’trul",
["event"] = "SPELL_CAST_START",
["npcID"] = 66276,
},
[402759] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Crusher",
["npcID"] = 202284,
},
[453953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broodtwister Ovi'nax",
["npcID"] = 214506,
},
[184476] = {
["encounterName"] = "Hellfire High Council",
["source"] = "Dia Darkwhisper",
["npcID"] = 92144,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1798,
},
[17174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Ripflesh",
["npcID"] = 60767,
},
[76133] = {
["encounterName"] = "Ozumat",
["encounterID"] = 1047,
["npcID"] = 40792,
},
[412999] = {
["source"] = "Winglord Dezran",
["event"] = "SPELL_CAST_START",
["npcID"] = 201677,
},
[365901] = {
["npcID"] = 185346,
},
[125900] = {
["isChanneled"] = true,
["source"] = "Kor'thik Warsinger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 64458,
},
[110945] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Gu Cloudstrike",
["npcID"] = 56747,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1303,
},
[372045] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Caustic Spiderling",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 189233,
},
[120160] = {
["encounterName"] = "Trial of the King",
["source"] = "Haiyan the Unstoppable",
["npcID"] = 61445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1442,
},
[411763] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Infinite Keeper",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 205212,
},
[419144] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[169657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Abomination",
["npcID"] = 84767,
},
[195254] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["encounterID"] = 1832,
["event"] = "SPELL_CAST_START",
["npcID"] = 98542,
},
[310614] = {
["encounterName"] = "Drest'agath",
["source"] = "Tentacle of Drest'agath",
["npcID"] = 157614,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2343,
},
[460100] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slatefang",
["npcID"] = 228439,
},
[372047] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[223923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Totem",
["npcID"] = 112474,
},
[326997] = {
["npcID"] = 167607,
},
[311045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shath'Yar Scribe",
["npcID"] = 163690,
},
[138187] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightning Guardian",
["npcID"] = 69834,
},
[228019] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114522,
["encounterID"] = 1957,
},
[317292] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["npcID"] = 162480,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[460102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slatefang",
["npcID"] = 228439,
},
[322903] = {
["encounterName"] = "General Kaal",
["npcID"] = 162099,
["encounterID"] = 2363,
},
[232115] = {
["npcID"] = 116549,
},
[384336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Plainstomper",
["npcID"] = 191847,
},
[201399] = {
["npcID"] = 100527,
},
[453960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broodtwister Ovi'nax",
["npcID"] = 214506,
},
[147544] = {
["source"] = "Golganarr",
["event"] = "SPELL_CAST_START",
["npcID"] = 72970,
},
[130912] = {
["source"] = "Ga’trul",
["event"] = "SPELL_CAST_START",
["npcID"] = 66276,
},
[106851] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stout Brew Alemental",
["npcID"] = 59519,
},
[265568] = {
["event"] = "SPELL_CAST_START",
["source"] = "Befouled Spirit",
["npcID"] = 133685,
},
[125365] = {
["source"] = "Scritch",
["event"] = "SPELL_CAST_START",
["npcID"] = 50831,
},
[126958] = {
["source"] = "Mogu'shan Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 64061,
},
[425492] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[396625] = {
["event"] = "SPELL_CAST_START",
["source"] = "Toxic Swogmother",
["npcID"] = 197774,
},
[333145] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 167566,
["encounterID"] = 2402,
},
[392530] = {
["source"] = "Quarry Infuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 197799,
},
[460106] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slatefang",
["npcID"] = 228439,
},
[413008] = {
["source"] = "Highmountain Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 201578,
},
[390483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dammed Beaver",
["npcID"] = 197914,
},
[79886] = {
["source"] = "Ordo Warbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 60127,
},
[361815] = {
["encounterName"] = "Anduin Wrynn",
["encounterID"] = 2546,
["npcID"] = 181954,
},
[404818] = {
["source"] = "Shukoro Rapidstamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 198917,
},
[389376] = {
["source"] = "Grizzlerock",
["event"] = "SPELL_CAST_START",
["npcID"] = 193652,
},
[155327] = {
["encounterName"] = "Soulbinder Nyami",
["event"] = "SPELL_CAST_START",
["source"] = "Soulbinder Nyami",
["npcID"] = 76177,
},
[213688] = {
["npcID"] = 107024,
},
[107938] = {
["source"] = "Wascally Wirmen",
["event"] = "SPELL_CAST_START",
["npcID"] = 59655,
},
[308575] = {
["npcID"] = 158161,
},
[389245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktalon Assassin",
["npcID"] = 190111,
},
[402772] = {
["source"] = "Contaminated Deepstrider Alpha",
["event"] = "SPELL_CAST_START",
["npcID"] = 204308,
},
[396629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Territorial Coastling",
["npcID"] = 193163,
},
[398677] = {
["source"] = "Irontide Cutthroat",
["event"] = "SPELL_CAST_START",
["npcID"] = 200849,
},
[270474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Thornweaver",
["npcID"] = 221745,
},
[427346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Priest",
["npcID"] = 206697,
},
[355675] = {
["npcID"] = 176705,
},
[446415] = {
["source"] = "Summoned Visage",
["event"] = "SPELL_CAST_START",
["npcID"] = 213686,
},
[384344] = {
["source"] = "Humid Drizzle",
["event"] = "SPELL_CAST_START",
["npcID"] = 194068,
},
[146556] = {
["source"] = "Kor'thik Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 72954,
},
[413013] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["encounterID"] = 2666,
["event"] = "SPELL_CAST_START",
["npcID"] = 198995,
},
[57381] = {
["encounterName"] = "The Four Horsemen",
["source"] = "Lady Blaumeux",
["encounterID"] = 1121,
["event"] = "SPELL_CAST_START",
["npcID"] = 16065,
},
[130914] = {
["source"] = "Terrorling",
["event"] = "SPELL_CAST_START",
["npcID"] = 66597,
},
[106853] = {
["encounterName"] = "Master Snowdrift",
["source"] = "Master Snowdrift",
["npcID"] = 56541,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1304,
},
[360075] = {
["npcID"] = 182210,
},
[113141] = {
["encounterName"] = "Darkmaster Gandling",
["source"] = "Darkmaster Gandling",
["encounterID"] = 1430,
["event"] = "SPELL_CAST_START",
["npcID"] = 59080,
},
[15232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Oracle",
["npcID"] = 17771,
},
[125865] = {
["source"] = "Zar'thik Augurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 64454,
},
[387186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Ravager",
["npcID"] = 217557,
},
[228025] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114329,
["encounterID"] = 1957,
},
[125002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjunct Tzikzi",
["npcID"] = 62076,
},
[337249] = {
["encounterName"] = "Tred'ova",
["npcID"] = 164517,
["encounterID"] = 2393,
},
[189554] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Adjutant",
["npcID"] = 95636,
},
[439637] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Echoing Shade",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 219675,
},
[79721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Ripflesh",
["npcID"] = 60767,
},
[164973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Tender",
["npcID"] = 81985,
},
[445781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sparklit Rust Crusher",
["npcID"] = 212597,
},
[406874] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contaminated Krolusk",
["npcID"] = 204310,
},
[458068] = {
["event"] = "SPELL_CAST_START",
["source"] = "Croakit",
["npcID"] = 214757,
},
[445808] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heelripper",
["npcID"] = 216555,
},
[331108] = {
["npcID"] = 160048,
},
[423257] = {
["source"] = "Druid of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 210686,
},
[319644] = {
["npcID"] = 161529,
},
[319733] = {
["encounterName"] = "Echelon",
["npcID"] = 164185,
["encounterID"] = 2380,
},
[396637] = {
["source"] = "Harat the Ancient",
["event"] = "SPELL_CAST_START",
["npcID"] = 196246,
},
[382303] = {
["encounterName"] = "Bromach",
["npcID"] = 184018,
["encounterID"] = 2556,
},
[384351] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[353635] = {
["encounterName"] = "So'leah",
["npcID"] = 177269,
["encounterID"] = 2442,
},
[209027] = {
["npcID"] = 104246,
},
[341349] = {
["npcID"] = 173973,
},
[430051] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Screaming Soul",
["npcID"] = 214608,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[112998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Residual Hatred",
["npcID"] = 58803,
},
[404830] = {
["source"] = "Shukoro Rapidstamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 198917,
},
[423260] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[384353] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[427356] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Priest",
["npcID"] = 206697,
},
[396640] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Ancient Branch",
["encounterID"] = 2563,
["event"] = "SPELL_CAST_START",
["npcID"] = 196548,
},
[116070] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gormali Raider",
["npcID"] = 54702,
},
[408927] = {
["source"] = "Animated Contaminant",
["event"] = "SPELL_CAST_START",
["npcID"] = 202270,
},
[427357] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Priest",
["npcID"] = 206697,
},
[136904] = {
["encounterName"] = "Council of Elders",
["source"] = "Frost King Malakk",
["npcID"] = 69131,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[187074] = {
["encounterName"] = "Hellfire Assault",
["source"] = "Hulking Berserker",
["npcID"] = 92911,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1778,
},
[26262] = {
["source"] = "Void Tendril",
["event"] = "SPELL_CAST_START",
["npcID"] = 65282,
},
[59575] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Dalronn the Controller",
["encounterID"] = 2024,
["event"] = "SPELL_CAST_START",
["npcID"] = 24201,
},
[173764] = {
["npcID"] = 86215,
},
[199361] = {
["source"] = "Valarjar Trapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 96934,
},
[128869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qi'tar the Deathcaller",
["npcID"] = 62863,
},
[427359] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arathi Footman",
["npcID"] = 206705,
},
[363879] = {
["npcID"] = 183747,
},
[439646] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["npcID"] = 216658,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2909,
},
[196290] = {
["encounterName"] = "Serpentrix",
["source"] = "Stormwake Hydra",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 91792,
},
[410978] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Dragonhunter",
["npcID"] = 202108,
},
[395060] = {
["source"] = "Im'bunata",
["event"] = "SPELL_CAST_START",
["npcID"] = 196199,
},
[423265] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[440162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boskroot Guardener",
["npcID"] = 212697,
},
[396739] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Red Gulper",
["npcID"] = 195974,
},
[396645] = {
["source"] = "Harat the Ancient",
["event"] = "SPELL_CAST_START",
["npcID"] = 196246,
},
[276710] = {
["npcID"] = 142243,
},
[126822] = {
["npcID"] = 70334,
},
[394598] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shade of Grief",
["npcID"] = 187559,
},
[396646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loamas",
["npcID"] = 199030,
},
[116162] = {
["source"] = "Fizzy Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59520,
},
[425315] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[201411] = {
["npcID"] = 100527,
},
[235638] = {
["source"] = "Roottender Treant",
["event"] = "SPELL_CAST_START",
["npcID"] = 209280,
},
[406886] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 198997,
},
[458080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Croakit",
["npcID"] = 214757,
},
[451937] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grand Gluttony",
["npcID"] = 217747,
},
[463052] = {
["source"] = "Awakened Phalanx",
["event"] = "SPELL_CAST_START",
["npcID"] = 229782,
},
[139228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari High Priest",
["npcID"] = 69906,
},
[376171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Icecaller",
["npcID"] = 190377,
},
[386410] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[384993] = {
["source"] = "Zenet Avis",
["event"] = "SPELL_CAST_START",
["npcID"] = 193209,
},
[389327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malsiran",
["npcID"] = 188141,
},
[123791] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["encounterID"] = 1507,
["event"] = "SPELL_CAST_START",
["npcID"] = 62980,
},
[451939] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Destroyer",
["npcID"] = 224609,
},
[322931] = {
["npcID"] = 166930,
},
[390834] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sarana",
["npcID"] = 190161,
},
[409359] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 199659,
},
[253038] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Felblade Shocktrooper",
["npcID"] = 127725,
},
[137045] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["npcID"] = 68397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1579,
},
[374126] = {
["event"] = "SPELL_CAST_START",
["source"] = "Parched Broadhoof",
["npcID"] = 194351,
},
[400747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Damaged Titan Matrix",
["npcID"] = 201441,
},
[378222] = {
["source"] = "Reservoir Spadefoot",
["event"] = "SPELL_CAST_START",
["npcID"] = 196571,
},
[82797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blisterpaw Hyena",
["npcID"] = 5426,
},
[15536] = {
["source"] = "Bataari Flamecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 59021,
},
[241345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defensive Countermeasure",
["npcID"] = 120449,
},
[125288] = {
["source"] = "Kor'thik Timberhusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 61355,
},
[101809] = {
["encounterName"] = "Echo of Jaina",
["npcID"] = 54445,
["encounterID"] = 1883,
},
[138196] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightning Guardian",
["npcID"] = 69834,
},
[116725] = {
["source"] = "Husshun",
["event"] = "SPELL_CAST_START",
["npcID"] = 54925,
},
[124946] = {
["source"] = "Jonn-Dar",
["event"] = "SPELL_CAST_START",
["npcID"] = 50351,
},
[129018] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dojani Enforcer",
["npcID"] = 65626,
},
[390511] = {
["npcID"] = 189954,
},
[128872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qi'tar the Deathcaller",
["npcID"] = 62863,
},
[394607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Lancer",
["npcID"] = 193198,
},
[404846] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[440506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stream Skipper",
["npcID"] = 213700,
},
[196296] = {
["source"] = "Stormwake Hydra",
["event"] = "SPELL_CAST_START",
["npcID"] = 91792,
},
[415556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Margosh the Smoker",
["npcID"] = 207592,
},
[387261] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[417691] = {
["source"] = "Fury of N'zoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 205307,
},
[400752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Travard",
["npcID"] = 198947,
},
[125289] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bataari Flamecaller",
["npcID"] = 63526,
},
[322938] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drust Harvester",
["npcID"] = 164921,
},
[324986] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Stalker",
["npcID"] = 166301,
},
[397109] = {
["npcID"] = 190008,
},
[382576] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earthen Guardian",
["npcID"] = 184131,
},
[429422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Stoneshaper",
["npcID"] = 214066,
},
[324987] = {
["npcID"] = 166301,
},
[136990] = {
["encounterName"] = "Council of Elders",
["source"] = "Frost King Malakk",
["npcID"] = 69131,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[378229] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["npcID"] = 186124,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2570,
},
[136913] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["npcID"] = 68397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1579,
},
[76686] = {
["npcID"] = 40019,
},
[433519] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[417243] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Glorious Alliance Lieutenant",
["npcID"] = 207581,
},
[372087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[374135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravaged Bruffalon",
["npcID"] = 193429,
},
[400756] = {
["source"] = "Remembered Lazy Peon",
["event"] = "SPELL_CAST_START",
["npcID"] = 221895,
},
[221059] = {
["source"] = "Gelatinized Decay",
["event"] = "SPELL_CAST_START",
["npcID"] = 111004,
},
[331133] = {
["npcID"] = 160048,
},
[28297] = {
["source"] = "Lightning Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 16385,
},
[430109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursed Thunderer",
["npcID"] = 207198,
},
[127338] = {
["source"] = "Sha of Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 62541,
},
[413044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grotesque Horror",
["npcID"] = 138187,
},
[374137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Parched Broadhoof Bull",
["npcID"] = 194352,
},
[257732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Enforcer",
["npcID"] = 129602,
},
[184065] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorebound Corruptor",
["npcID"] = 94604,
},
[429427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Stoneshaper",
["npcID"] = 214066,
},
[232153] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114328,
["encounterID"] = 1957,
},
[376186] = {
["source"] = "Overseer Lahar",
["event"] = "SPELL_CAST_START",
["npcID"] = 189235,
},
[402807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glittering Shard Construct",
["npcID"] = 202326,
},
[429428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Burst Totem",
["npcID"] = 214287,
},
[464240] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priest Aemya",
["npcID"] = 212827,
},
[392569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamegullet",
["npcID"] = 197697,
},
[410999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Armored Mistral",
["npcID"] = 45915,
},
[437620] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["npcID"] = 217748,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[384933] = {
["isChanneled"] = true,
["source"] = "Flashfrost Chillweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188067,
},
[335233] = {
["npcID"] = 181108,
},
[427382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Engine Speaker",
["npcID"] = 212764,
},
[372093] = {
["source"] = "Flame Blister",
["event"] = "SPELL_CAST_START",
["npcID"] = 197413,
},
[442526] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Broodtwister Ovi'nax",
["npcID"] = 214506,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2919,
},
[430238] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Fragment",
["npcID"] = 207202,
},
[411001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lurking Tempest",
["npcID"] = 45704,
},
[445813] = {
["source"] = "Unstable Test Subject",
["event"] = "SPELL_CAST_START",
["npcID"] = 216328,
},
[440207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidstone Monstrosity",
["npcID"] = 207207,
},
[125877] = {
["source"] = "Set'thik Windblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 64453,
},
[411002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cloud Prince",
["npcID"] = 45917,
},
[456851] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spore-infused Shalewing",
["npcID"] = 221217,
},
[300424] = {
["npcID"] = 150160,
},
[338079] = {
["npcID"] = 164737,
},
[125292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bataari Flamecaller",
["npcID"] = 63526,
},
[126973] = {
["source"] = "Mogu'shan Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 64063,
},
[244665] = {
["source"] = "Ember of Azzinoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 122712,
},
[138966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowed Voodoo Spirit",
["npcID"] = 70060,
},
[180945] = {
["encounterName"] = "Hellfire Assault",
["source"] = "Felfire Demolisher",
["npcID"] = 91103,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1778,
},
[181969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjunct Kuroh",
["npcID"] = 91520,
},
[241680] = {
["encounterName"] = "Harjatan",
["source"] = "Mistress Sassz'ine",
["encounterID"] = 2036,
["event"] = "SPELL_CAST_START",
["npcID"] = 121184,
},
[257736] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Stormcaller",
["npcID"] = 126919,
},
[421616] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[427760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Envoy of Winter",
["npcID"] = 209929,
},
[450697] = {
["source"] = "Cinderbee Worker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215023,
},
[384385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prowling Frigidpelt",
["npcID"] = 193062,
},
[115054] = {
["isChanneled"] = true,
["source"] = "Engorged Crocolisk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56183,
},
[331927] = {
["npcID"] = 167962,
},
[406911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Champion",
["npcID"] = 201288,
},
[408959] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[176127] = {
["npcID"] = 80935,
},
[445819] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashen Stonestalker",
["npcID"] = 217624,
},
[56063] = {
["source"] = "Naxxramas Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 15981,
},
[188114] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rokmora",
["npcID"] = 91003,
},
[456835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hungerer of the Deeps",
["npcID"] = 221199,
},
[396674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ripsaw the Stalker",
["npcID"] = 193153,
},
[365958] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 181954,
["encounterID"] = 2546,
},
[392579] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Quarry Stonebreaker",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 197831,
},
[370054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Olphis the Molten",
["npcID"] = 181875,
},
[396675] = {
["source"] = "Nergazurai",
["event"] = "SPELL_CAST_START",
["npcID"] = 195895,
},
[130413] = {
["source"] = "Strongarm Ace",
["event"] = "SPELL_CAST_START",
["npcID"] = 66000,
},
[130925] = {
["source"] = "Ga’trul",
["event"] = "SPELL_CAST_START",
["npcID"] = 66276,
},
[451965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Giant",
["npcID"] = 40166,
},
[372529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadepaw Bruiser",
["npcID"] = 183343,
},
[232142] = {
["encounterName"] = "Opera Hall",
["npcID"] = 116574,
["encounterID"] = 1957,
},
[257739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktooth Scrapper",
["npcID"] = 129529,
},
[193235] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["npcID"] = 94960,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1805,
},
[413059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Canister",
["npcID"] = 206019,
},
[365961] = {
["npcID"] = 183406,
},
[294290] = {
["npcID"] = 144293,
},
[411012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Young Storm Dragon",
["npcID"] = 45919,
},
[413060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fire Canister",
["npcID"] = 206022,
},
[300434] = {
["npcID"] = 150160,
},
[448634] = {
["encounterName"] = "Under-Lord Vik'tis",
["source"] = "Under-Lord Vik'tis",
["npcID"] = 220158,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2989,
},
[105519] = {
["event"] = "SPELL_CAST_START",
["source"] = "Miss Fanny",
["npcID"] = 56192,
},
[37367] = {
["source"] = "Gurubashi Worshipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 64642,
},
[431491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Commander",
["npcID"] = 214762,
},
[122735] = {
["encounterName"] = "Garalon",
["source"] = "Garalon",
["encounterID"] = 1463,
["event"] = "SPELL_CAST_START",
["npcID"] = 62164,
},
[329104] = {
["encounterName"] = "Lord Chamberlain",
["npcID"] = 164218,
["encounterID"] = 2381,
},
[74613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverblade Pathstalker",
["npcID"] = 58858,
},
[300436] = {
["npcID"] = 150146,
},
[200404] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[193237] = {
["isChanneled"] = true,
["source"] = "Huln Highmountain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 104825,
},
[397431] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["npcID"] = 192934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[431493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Curseblade",
["npcID"] = 213894,
},
[400777] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[451971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Giant",
["npcID"] = 40166,
},
[132829] = {
["source"] = "Southsea Lookout",
["event"] = "SPELL_CAST_START",
["npcID"] = 73718,
},
[431494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Tactician",
["npcID"] = 213934,
},
[408969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Mud",
["npcID"] = 192519,
},
[329107] = {
["encounterName"] = "Artificer Xy'mox",
["npcID"] = 169219,
["encounterID"] = 2405,
},
[169689] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diving Chakram Spinner",
["npcID"] = 76116,
},
[374158] = {
["source"] = "Remembered Creeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 221664,
},
[408970] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Preserver",
["npcID"] = 198870,
},
[456198] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scary Sticker",
["npcID"] = 216948,
},
[445830] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Deepflayer",
["npcID"] = 218657,
},
[341395] = {
["npcID"] = 174012,
},
[448341] = {
["source"] = "Kobold Taskfinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 204127,
},
[137227] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["npcID"] = 68081,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1559,
},
[169690] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diving Chakram Spinner",
["npcID"] = 76116,
},
[376943] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[376208] = {
["encounterName"] = "Chrono-Lord Deios",
["npcID"] = 184125,
["encounterID"] = 2559,
},
[427402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursed Rookguard",
["npcID"] = 207197,
},
[222932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Gorroc",
["npcID"] = 111856,
},
[128368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'thik Battlesinger",
["npcID"] = 62758,
},
[456468] = {
["source"] = "Skardyn Husk",
["event"] = "SPELL_CAST_START",
["npcID"] = 213566,
},
[258768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten Gryphon",
["npcID"] = 193154,
},
[421260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[429545] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turned Speaker",
["npcID"] = 214350,
},
[124284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Urang",
["npcID"] = 60725,
},
[427404] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidrider",
["npcID"] = 212786,
},
[462216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Flamerender",
["npcID"] = 224240,
},
[448162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enormous Kelp-Snaggler",
["npcID"] = 221061,
},
[408975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Edgelord",
["npcID"] = 198873,
},
[345495] = {
["npcID"] = 175519,
},
[396689] = {
["source"] = "Worldcarver A'tir",
["event"] = "SPELL_CAST_START",
["npcID"] = 186859,
},
[439692] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Nx",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216648,
},
[392594] = {
["event"] = "SPELL_CAST_START",
["source"] = "Meatgrinder Sotok",
["npcID"] = 186777,
},
[427406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Austin Huxworth",
["npcID"] = 209065,
},
[396690] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dismay Fly",
["npcID"] = 193367,
},
[28293] = {
["source"] = "Living Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 16021,
},
[162602] = {
["source"] = "Thunderlord Beast-Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 80423,
},
[432036] = {
["source"] = "Hairless the Menace",
["event"] = "SPELL_CAST_START",
["npcID"] = 213550,
},
[147354] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironfur Herdling",
["npcID"] = 72842,
},
[390548] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[163550] = {
["encounterName"] = "Nitrogg Thundertower",
["npcID"] = 79545,
["encounterID"] = 1732,
},
[427616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unruly Stormrook",
["npcID"] = 207186,
},
[430168] = {
["source"] = "Invading Hurler",
["event"] = "SPELL_CAST_START",
["npcID"] = 214677,
},
[430013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unruly Stormrook",
["npcID"] = 207186,
},
[448443] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["npcID"] = 221896,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2877,
},
[370072] = {
["npcID"] = 186854,
},
[450628] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quartermaster Koratite",
["npcID"] = 209801,
},
[341404] = {
["npcID"] = 174017,
},
[438355] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[180178] = {
["event"] = "SPELL_CAST_START",
["source"] = "Salivating Bloodthirster",
["npcID"] = 92038,
},
[391026] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[162672] = {
["source"] = "Stubborn Ironhoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 80526,
},
[448347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diu'mik",
["npcID"] = 211564,
},
[394647] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodhorn",
["npcID"] = 192003,
},
[427583] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["npcID"] = 211290,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[406934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Lavamancer",
["npcID"] = 202256,
},
[449937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmaw",
["npcID"] = 219264,
},
[419221] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cho'gall",
["npcID"] = 208212,
},
[450176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Slasher",
["npcID"] = 208243,
},
[446000] = {
["source"] = "Deeps Larva",
["event"] = "SPELL_CAST_START",
["npcID"] = 215733,
},
[441747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Web Acolyte",
["npcID"] = 218320,
},
[432068] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flickerflame Enforcer",
["npcID"] = 212548,
},
[432116] = {
["source"] = "Candleclaw Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 213833,
},
[390554] = {
["isChanneled"] = true,
["source"] = "Inferna the Bound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186735,
},
[449939] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["npcID"] = 40484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1049,
},
[419223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cho'gall",
["npcID"] = 208212,
},
[119668] = {
["source"] = "Unga Treasure-Hider",
["event"] = "SPELL_CAST_START",
["npcID"] = 60357,
},
[316836] = {
["npcID"] = 174843,
},
[162777] = {
["source"] = "Iron Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 80422,
},
[44224] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Kael'thas Sunstrider",
["npcID"] = 24664,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1894,
},
[153315] = {
["encounterName"] = "Ranjit",
["source"] = "Ranjit",
["npcID"] = 75964,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1698,
},
[275882] = {
["source"] = "Eratin the Barber",
["event"] = "SPELL_CAST_START",
["npcID"] = 199947,
},
[294312] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rioting Speaker",
["npcID"] = 147779,
},
[323552] = {
["encounterName"] = "High Adjudicator Aleez",
["npcID"] = 165410,
["encounterID"] = 2403,
},
[222939] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Gorroc",
["npcID"] = 111856,
},
[446430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Kelp",
["npcID"] = 215702,
},
[449942] = {
["source"] = "Emperor Pitfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 219265,
},
[427417] = {
["source"] = "Prophet of the Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 207315,
},
[446300] = {
["encounterName"] = "Undersea Abomination",
["source"] = "Undersea Abomination",
["encounterID"] = 2895,
["event"] = "SPELL_CAST_START",
["npcID"] = 214348,
},
[398749] = {
["source"] = "Irontide Bulwark",
["event"] = "SPELL_CAST_START",
["npcID"] = 200850,
},
[229083] = {
["encounterName"] = "Viz'aduum the Watcher",
["npcID"] = 114790,
["encounterID"] = 2017,
},
[452164] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swarm-Maven Donmiss",
["npcID"] = 216578,
},
[372129] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[204802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Lurker",
["npcID"] = 105069,
},
[175842] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorian Sorcerer",
["npcID"] = 85225,
},
[446328] = {
["source"] = "Fog Form",
["event"] = "SPELL_CAST_START",
["npcID"] = 213953,
},
[456362] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boneseer Hookjaw",
["npcID"] = 213805,
},
[390560] = {
["event"] = "SPELL_CAST_START",
["source"] = "Norbett",
["npcID"] = 190968,
},
[445984] = {
["source"] = "Burrowing Jawcrawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 229821,
},
[419229] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cho'gall",
["npcID"] = 208212,
},
[421277] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["npcID"] = 208745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2787,
},
[415253] = {
["source"] = "Invasive Sporecap",
["event"] = "SPELL_CAST_START",
["npcID"] = 207482,
},
[193585] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Rockbound Trapper",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 102232,
},
[258777] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Oarsman",
["npcID"] = 127111,
},
[404896] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[452651] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oath-Eater",
["npcID"] = 206844,
},
[368037] = {
["npcID"] = 185677,
},
[458634] = {
["source"] = "Awakened Flamecoil Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 225895,
},
[59839] = {
["encounterName"] = "Slad'ran",
["source"] = "Slad'ran",
["event"] = "SPELL_CAST_START",
["npcID"] = 29304,
},
[433766] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["encounterID"] = 2906,
["event"] = "SPELL_CAST_START",
["npcID"] = 215405,
},
[417184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eviscerator Kintara",
["npcID"] = 207596,
},
[451996] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[421665] = {
["encounterName"] = "Ol' Waxbeard",
["source"] = "Ol' Waxbeard",
["npcID"] = 210149,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2829,
},
[333227] = {
["npcID"] = 169905,
},
[425536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lowly Moleherd",
["npcID"] = 210818,
},
[394660] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bluescale",
["npcID"] = 188723,
},
[431552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Webspinner",
["npcID"] = 224149,
},
[288836] = {
["npcID"] = 147835,
},
[200418] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[353706] = {
["encounterName"] = "Myza's Oasis",
["npcID"] = 176562,
["encounterID"] = 2440,
},
[396709] = {
["source"] = "Gutchewer Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 197134,
},
[315454] = {
["npcID"] = 183266,
},
[430037] = {
["source"] = "Kobyss Spearfisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 214338,
},
[394662] = {
["source"] = "Sky Vixen Shokhari",
["event"] = "SPELL_CAST_START",
["npcID"] = 190761,
},
[282036] = {
["encounterName"] = "Jadefire Masters",
["npcID"] = 144692,
["encounterID"] = 2285,
},
[146479] = {
["isChanneled"] = true,
["source"] = "Goro'dan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72964,
},
[241374] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defensive Countermeasure",
["npcID"] = 120449,
},
[391006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blisterhide",
["npcID"] = 197353,
},
[446405] = {
["encounterName"] = "Undersea Abomination",
["source"] = "Undersea Abomination",
["encounterID"] = 2895,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214348,
},
[252637] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slobbering Fiend",
["npcID"] = 127810,
},
[343470] = {
["npcID"] = 165919,
},
[427428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greedy Gessie",
["npcID"] = 209936,
},
[123767] = {
["source"] = "Sha-Infested Yaungol",
["event"] = "SPELL_CAST_START",
["npcID"] = 68241,
},
[450597] = {
["encounterName"] = "Zekvir",
["source"] = "Egg Cocoon",
["npcID"] = 224077,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2987,
},
[75645] = {
["npcID"] = 39679,
},
[200700] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[118657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snagtooth Hooligan",
["npcID"] = 56462,
},
[386700] = {
["source"] = "Hailbringer Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 189228,
},
[106923] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Azure Serpent",
["npcID"] = 56754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1303,
},
[446477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepwater Sludger",
["npcID"] = 216515,
},
[445860] = {
["encounterName"] = "Mirror Master Murkna",
["source"] = "Mirror Master Murkna",
["encounterID"] = 2999,
["event"] = "SPELL_CAST_START",
["npcID"] = 219763,
},
[93655] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boiling Springbubble",
["npcID"] = 48768,
},
[175848] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorian Sorcerer",
["npcID"] = 85225,
},
[113017] = {
["encounterName"] = "Lorewalker Stonestep",
["source"] = "Zao Sunseeker",
["encounterID"] = 1417,
["event"] = "SPELL_CAST_START",
["npcID"] = 58826,
},
[431544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalwart Hauler",
["npcID"] = 214935,
},
[447909] = {
["source"] = "Master Machinist Dunstan",
["event"] = "SPELL_CAST_START",
["npcID"] = 217353,
},
[359856] = {
["encounterName"] = "The Jailer",
["npcID"] = 180990,
["encounterID"] = 2537,
},
[427432] = {
["source"] = "Prophet of the Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 207315,
},
[386993] = {
["source"] = "Cascade Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 194939,
},
[22883] = {
["source"] = "Novice Timewalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 189583,
},
[120770] = {
["isChanneled"] = true,
["source"] = "Needle Sprite",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 55593,
},
[345523] = {
["npcID"] = 156203,
},
[396717] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cyclas",
["npcID"] = 199029,
},
[316855] = {
["npcID"] = 165267,
},
[450424] = {
["event"] = "SPELL_CAST_START",
["source"] = "Congealed Wax-hulk",
["npcID"] = 223206,
},
[450435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Y'tekhi",
["npcID"] = 215660,
},
[322999] = {
["encounterName"] = "Devos, Paragon of Loyalty",
["npcID"] = 162061,
["encounterID"] = 2359,
},
[452127] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[449960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepwater Kobyss",
["npcID"] = 215750,
},
[88445] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Marksman",
["npcID"] = 8338,
},
[462802] = {
["source"] = "Corrupted Machinist",
["event"] = "SPELL_CAST_START",
["npcID"] = 229695,
},
[323150] = {
["encounterName"] = "Lord Chamberlain",
["npcID"] = 165737,
["encounterID"] = 2381,
},
[425388] = {
["source"] = "Flamewaker Infernoguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 210295,
},
[452009] = {
["source"] = "Earthenwork Ironstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 213951,
},
[445866] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Swarm-Maven Donmiss",
["npcID"] = 216578,
},
[79881] = {
["source"] = "Enraged Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 60995,
},
[124793] = {
["source"] = "Shado-Pan Wu Kao",
["event"] = "SPELL_CAST_START",
["npcID"] = 63846,
},
[192307] = {
["encounterName"] = "Hyrja",
["source"] = "Hyrja",
["npcID"] = 95833,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1806,
},
[434137] = {
["source"] = "Royal Venomshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 220730,
},
[333241] = {
["npcID"] = 170850,
},
[441772] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[268260] = {
["source"] = "Ashvane Cannoneer",
["event"] = "SPELL_CAST_START",
["npcID"] = 138465,
},
[384847] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fishface",
["npcID"] = 191926,
},
[398770] = {
["source"] = "Vemormu",
["event"] = "SPELL_CAST_START",
["npcID"] = 200701,
},
[294335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Furious Raptari Druid",
["npcID"] = 147901,
},
[272422] = {
["source"] = "Ashvane Spotter",
["event"] = "SPELL_CAST_START",
["npcID"] = 138255,
},
[429487] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["npcID"] = 207207,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2836,
},
[406962] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Axe Thrower",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203799,
},
[449965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vileroot",
["npcID"] = 214783,
},
[394676] = {
["event"] = "SPELL_CAST_START",
["source"] = "Council Icecaller",
["npcID"] = 198501,
},
[372151] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gutchewer Bear",
["npcID"] = 186284,
},
[448179] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Abomination",
["npcID"] = 219454,
},
[442052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Ironweaver",
["npcID"] = 220551,
},
[452014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless One",
["npcID"] = 223119,
},
[404916] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 198999,
},
[450400] = {
["source"] = "Supervisor Radlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 220897,
},
[425394] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["npcID"] = 208743,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2826,
},
[405332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gahz'raxes",
["npcID"] = 200537,
},
[388535] = {
["source"] = "Gnawbone Chainchewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 196521,
},
[390583] = {
["event"] = "SPELL_CAST_START",
["source"] = "Norbett",
["npcID"] = 190968,
},
[276068] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "Hadal Darkfathom",
["encounterID"] = 2099,
["event"] = "SPELL_CAST_START",
["npcID"] = 128651,
},
[440222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark-Crazed Harvester",
["npcID"] = 206067,
},
[88959] = {
["npcID"] = 45935,
},
[447921] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cascade Guardian",
["npcID"] = 214594,
},
[458160] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skulldunk",
["npcID"] = 221310,
},
[106877] = {
["encounterName"] = "Sha of Violence",
["source"] = "Sha of Violence",
["npcID"] = 56719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1305,
},
[388537] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["encounterID"] = 2562,
["event"] = "SPELL_CAST_START",
["npcID"] = 194181,
},
[124283] = {
["encounterName"] = "General Pa'valak",
["source"] = "General Pa'valak",
["encounterID"] = 1447,
["event"] = "SPELL_CAST_START",
["npcID"] = 61485,
},
[294341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irate Pa'kura Priest",
["npcID"] = 147900,
},
[386490] = {
["encounterName"] = "Granyth",
["source"] = "Nokhud Saboteur",
["npcID"] = 195820,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[363965] = {
["npcID"] = 183747,
},
[329740] = {
["npcID"] = 158290,
},
[409016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summitshaper Lorac",
["npcID"] = 201522,
},
[450519] = {
["encounterName"] = "Zekvir",
["source"] = "Zekvir",
["npcID"] = 225204,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2987,
},
[450134] = {
["source"] = "Aspirant Kiipka",
["event"] = "SPELL_CAST_START",
["npcID"] = 220781,
},
[341441] = {
["npcID"] = 174069,
},
[104318] = {
["npcID"] = 55659,
},
[333831] = {
["npcID"] = 171109,
},
[363967] = {
["npcID"] = 184109,
},
[275914] = {
["npcID"] = 140853,
},
[441782] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[123260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anduin Wrynn",
["npcID"] = 59608,
},
[329168] = {
["encounterName"] = "Lord Chamberlain",
["npcID"] = 165737,
["encounterID"] = 2381,
},
[447926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galvanized Lurker",
["npcID"] = 224779,
},
[417210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Glorious Alliance Lieutenant",
["npcID"] = 207581,
},
[320966] = {
["encounterName"] = "Kin-Tara",
["npcID"] = 162059,
["encounterID"] = 2357,
},
[169714] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarlroot",
["npcID"] = 81984,
},
[154356] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Soulpriest",
["npcID"] = 76595,
},
[323177] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Droman Oulfarran",
["npcID"] = 164804,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2397,
},
[246505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fanatical Pyromancer",
["npcID"] = 127724,
},
[439873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Whisperer",
["npcID"] = 219723,
},
[398782] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Hunter",
["npcID"] = 200484,
},
[376257] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Tarasek Earthreaver",
["npcID"] = 191225,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[361923] = {
["encounterName"] = "Lords of Dread",
["encounterID"] = 2543,
["npcID"] = 183138,
},
[388544] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["encounterID"] = 2563,
["event"] = "SPELL_CAST_START",
["npcID"] = 196482,
},
[438200] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[392640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderhead",
["npcID"] = 197698,
},
[49348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fordragon High Priest",
["npcID"] = 27677,
},
[462264] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blood Drainer",
["npcID"] = 229399,
},
[268274] = {
["encounterName"] = "Ring of Booty",
["source"] = "Booty Fanatic",
["encounterID"] = 2095,
["event"] = "SPELL_CAST_START",
["npcID"] = 136539,
},
[294349] = {
["npcID"] = 144301,
},
[144119] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Amber",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71407,
},
[355782] = {
["npcID"] = 179842,
},
[431549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venombane Spitter",
["npcID"] = 216192,
},
[417215] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Horde Reaver",
["npcID"] = 207585,
},
[470588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Witherer",
["npcID"] = 214251,
},
[396738] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Blue Gulper",
["npcID"] = 195976,
},
[128381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'thik Resonator",
["npcID"] = 62755,
},
[284406] = {
["encounterName"] = "Stormwall Blockade",
["npcID"] = 146436,
["encounterID"] = 2280,
},
[443837] = {
["encounterName"] = "Reformed Fury",
["source"] = "Speaker Davenruth",
["npcID"] = 218022,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2998,
},
[136953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Water-Binder",
["npcID"] = 69455,
},
[406978] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contamination Guard",
["npcID"] = 202319,
},
[261866] = {
["npcID"] = 144213,
},
[312782] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["npcID"] = 158041,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2344,
},
[450483] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[456125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Scorpid",
["npcID"] = 215830,
},
[441791] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[288210] = {
["npcID"] = 163032,
},
[136954] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["npcID"] = 69427,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[40936] = {
["isChanneled"] = true,
["source"] = "Illidari Fearbringer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 22954,
},
[286163] = {
["encounterName"] = "Jadefire Masters",
["npcID"] = 144692,
["encounterID"] = 2285,
},
[39671] = {
["isChanneled"] = true,
["source"] = "Illidari Defiler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 22853,
},
[448105] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Valiona",
["npcID"] = 40320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[41184] = {
["source"] = "Ashtongue Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 22846,
},
[163752] = {
["source"] = "Grom'kar Man-at-Arms",
["event"] = "SPELL_CAST_START",
["npcID"] = 78832,
},
[256969] = {
["encounterName"] = "Chopper Redhook",
["source"] = "Snarling Dockhound",
["npcID"] = 129640,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2098,
},
[40946] = {
["isChanneled"] = true,
["source"] = "Illidari Fearbringer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 22954,
},
[226070] = {
["source"] = "Screeching Spiderling",
["event"] = "SPELL_CAST_START",
["npcID"] = 112039,
},
[294356] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prelate Kaj'ra",
["npcID"] = 147452,
},
[443842] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[339407] = {
["npcID"] = 173280,
},
[275927] = {
["npcID"] = 182728,
},
[449986] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[402888] = {
["source"] = "Bonesifter Marwak",
["event"] = "SPELL_CAST_START",
["npcID"] = 200681,
},
[437700] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[431612] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venombane Spitter",
["npcID"] = 216192,
},
[327122] = {
["encounterName"] = "Sire Denathrius",
["npcID"] = 168158,
["encounterID"] = 2407,
},
[197365] = {
["encounterName"] = "Wrath of Azshara",
["source"] = "Wrath of Azshara",
["encounterID"] = 1814,
["event"] = "SPELL_CAST_START",
["npcID"] = 96028,
},
[214771] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Faceless Voidcaster",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99651,
},
[448219] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Titan Orb",
["npcID"] = 221730,
},
[400842] = {
["source"] = "Zaqali Blazestalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199828,
},
[345553] = {
["npcID"] = 174843,
},
[129919] = {
["source"] = "Student of Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 60601,
},
[450100] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["npcID"] = 40484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1049,
},
[125825] = {
["source"] = "Sik'thik Venomspitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 62575,
},
},
}
PlaterLanguage = {
["language"] = "enUS",
["version"] = 1,
}
PlaterLogs = {
["_general_logs"] = {
"2024-10-12 08:31:37 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | enUS | Yükimp",
"2024-10-11 10:05:29 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | enUS | Yükikstarter",
"2024-10-11 08:57:33 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | enUS | Yükimp",
"2024-10-10 14:35:05 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | enUS | Yükimp",
"2024-10-10 13:53:26 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
"2024-10-09 17:39:25 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
"2024-10-09 17:16:06 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
"2024-10-09 17:02:57 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
"2024-10-09 08:56:36 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
"2024-10-09 08:25:45 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
"2024-10-08 17:24:46 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
"2024-10-08 16:52:43 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
"2024-10-08 10:46:35 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
"2024-10-07 20:42:37 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
"2024-10-07 20:35:03 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
"2024-10-07 20:33:32 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükisan",
"2024-10-07 16:07:26 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
"2024-10-04 16:32:31 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
"2024-10-04 15:39:18 | INIT | Plater-v589-Retail | Framework v571 | 11.0.2 | enUS | Yükimp",
},
["_error_logs"] = {
},
}
PlaterBackup = {
}
